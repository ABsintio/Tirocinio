
#ifndef TRANSMISSIONLINEEQUATIONS_N_80_PERTHREAD_SYSTEMDEFINITION_H
#define TRANSMISSIONLINEEQUATIONS_N_80_PERTHREAD_SYSTEMDEFINITION_H

#include <fstream>
#include <iostream>
#include <string>
#include "Functions.cuh"


template<class Precision> __forceinline__ __device__ void PerThread_OdeFunction(
	int tid, int NT, \
	Precision*    F, Precision*    X, Precision     T, \
	Precision* cPAR, Precision* sPAR, int*      sPARi, Precision* ACC, int* ACCi  		
) {
    ACC[1]=((-(X[158])) / -50.04948046732858);
    ACC[0]=(T > 0.0 ? 1.0 : 0.0);
    F[78]=((3162055.335968379 * (X[157] - X[158])) - (3952569.169960474 * (sPAR[6] * X[78])));
    F[77]=((3162055.335968379 * (X[156] - X[157])) - (3952569.169960474 * (sPAR[6] * X[77])));
    F[157]=(7920792079.207921 * (X[77] - X[78]));
    F[76]=((3162055.335968379 * (X[155] - X[156])) - (3952569.169960474 * (sPAR[6] * X[76])));
    F[156]=(7920792079.207921 * (X[76] - X[77]));
    F[75]=((3162055.335968379 * (X[154] - X[155])) - (3952569.169960474 * (sPAR[6] * X[75])));
    F[155]=(7920792079.207921 * (X[75] - X[76]));
    F[74]=((3162055.335968379 * (X[153] - X[154])) - (3952569.169960474 * (sPAR[6] * X[74])));
    F[154]=(7920792079.207921 * (X[74] - X[75]));
    F[73]=((3162055.335968379 * (X[152] - X[153])) - (3952569.169960474 * (sPAR[6] * X[73])));
    F[153]=(7920792079.207921 * (X[73] - X[74]));
    F[72]=((3162055.335968379 * (X[151] - X[152])) - (3952569.169960474 * (sPAR[6] * X[72])));
    F[152]=(7920792079.207921 * (X[72] - X[73]));
    F[71]=((3162055.335968379 * (X[150] - X[151])) - (3952569.169960474 * (sPAR[6] * X[71])));
    F[151]=(7920792079.207921 * (X[71] - X[72]));
    F[70]=((3162055.335968379 * (X[149] - X[150])) - (3952569.169960474 * (sPAR[6] * X[70])));
    F[150]=(7920792079.207921 * (X[70] - X[71]));
    F[69]=((3162055.335968379 * (X[148] - X[149])) - (3952569.169960474 * (sPAR[6] * X[69])));
    F[149]=(7920792079.207921 * (X[69] - X[70]));
    F[68]=((3162055.335968379 * (X[147] - X[148])) - (3952569.169960474 * (sPAR[6] * X[68])));
    F[148]=(7920792079.207921 * (X[68] - X[69]));
    F[67]=((3162055.335968379 * (X[146] - X[147])) - (3952569.169960474 * (sPAR[6] * X[67])));
    F[147]=(7920792079.207921 * (X[67] - X[68]));
    F[66]=((3162055.335968379 * (X[145] - X[146])) - (3952569.169960474 * (sPAR[6] * X[66])));
    F[146]=(7920792079.207921 * (X[66] - X[67]));
    F[65]=((3162055.335968379 * (X[144] - X[145])) - (3952569.169960474 * (sPAR[6] * X[65])));
    F[145]=(7920792079.207921 * (X[65] - X[66]));
    F[64]=((3162055.335968379 * (X[143] - X[144])) - (3952569.169960474 * (sPAR[6] * X[64])));
    F[144]=(7920792079.207921 * (X[64] - X[65]));
    F[63]=((3162055.335968379 * (X[142] - X[143])) - (3952569.169960474 * (sPAR[6] * X[63])));
    F[143]=(7920792079.207921 * (X[63] - X[64]));
    F[62]=((3162055.335968379 * (X[141] - X[142])) - (3952569.169960474 * (sPAR[6] * X[62])));
    F[142]=(7920792079.207921 * (X[62] - X[63]));
    F[61]=((3162055.335968379 * (X[140] - X[141])) - (3952569.169960474 * (sPAR[6] * X[61])));
    F[141]=(7920792079.207921 * (X[61] - X[62]));
    F[60]=((3162055.335968379 * (X[139] - X[140])) - (3952569.169960474 * (sPAR[6] * X[60])));
    F[140]=(7920792079.207921 * (X[60] - X[61]));
    F[59]=((3162055.335968379 * (X[138] - X[139])) - (3952569.169960474 * (sPAR[6] * X[59])));
    F[139]=(7920792079.207921 * (X[59] - X[60]));
    F[58]=((3162055.335968379 * (X[137] - X[138])) - (3952569.169960474 * (sPAR[6] * X[58])));
    F[138]=(7920792079.207921 * (X[58] - X[59]));
    F[57]=((3162055.335968379 * (X[136] - X[137])) - (3952569.169960474 * (sPAR[6] * X[57])));
    F[137]=(7920792079.207921 * (X[57] - X[58]));
    F[56]=((3162055.335968379 * (X[135] - X[136])) - (3952569.169960474 * (sPAR[6] * X[56])));
    F[136]=(7920792079.207921 * (X[56] - X[57]));
    F[55]=((3162055.335968379 * (X[134] - X[135])) - (3952569.169960474 * (sPAR[6] * X[55])));
    F[135]=(7920792079.207921 * (X[55] - X[56]));
    F[54]=((3162055.335968379 * (X[133] - X[134])) - (3952569.169960474 * (sPAR[6] * X[54])));
    F[134]=(7920792079.207921 * (X[54] - X[55]));
    F[53]=((3162055.335968379 * (X[132] - X[133])) - (3952569.169960474 * (sPAR[6] * X[53])));
    F[133]=(7920792079.207921 * (X[53] - X[54]));
    F[52]=((3162055.335968379 * (X[131] - X[132])) - (3952569.169960474 * (sPAR[6] * X[52])));
    F[132]=(7920792079.207921 * (X[52] - X[53]));
    F[51]=((3162055.335968379 * (X[130] - X[131])) - (3952569.169960474 * (sPAR[6] * X[51])));
    F[131]=(7920792079.207921 * (X[51] - X[52]));
    F[50]=((3162055.335968379 * (X[129] - X[130])) - (3952569.169960474 * (sPAR[6] * X[50])));
    F[130]=(7920792079.207921 * (X[50] - X[51]));
    F[49]=((3162055.335968379 * (X[128] - X[129])) - (3952569.169960474 * (sPAR[6] * X[49])));
    F[129]=(7920792079.207921 * (X[49] - X[50]));
    F[48]=((3162055.335968379 * (X[127] - X[128])) - (3952569.169960474 * (sPAR[6] * X[48])));
    F[128]=(7920792079.207921 * (X[48] - X[49]));
    F[47]=((3162055.335968379 * (X[126] - X[127])) - (3952569.169960474 * (sPAR[6] * X[47])));
    F[127]=(7920792079.207921 * (X[47] - X[48]));
    F[46]=((3162055.335968379 * (X[125] - X[126])) - (3952569.169960474 * (sPAR[6] * X[46])));
    F[126]=(7920792079.207921 * (X[46] - X[47]));
    F[45]=((3162055.335968379 * (X[124] - X[125])) - (3952569.169960474 * (sPAR[6] * X[45])));
    F[125]=(7920792079.207921 * (X[45] - X[46]));
    F[44]=((3162055.335968379 * (X[123] - X[124])) - (3952569.169960474 * (sPAR[6] * X[44])));
    F[124]=(7920792079.207921 * (X[44] - X[45]));
    F[43]=((3162055.335968379 * (X[122] - X[123])) - (3952569.169960474 * (sPAR[6] * X[43])));
    F[123]=(7920792079.207921 * (X[43] - X[44]));
    F[42]=((3162055.335968379 * (X[121] - X[122])) - (3952569.169960474 * (sPAR[6] * X[42])));
    F[122]=(7920792079.207921 * (X[42] - X[43]));
    F[41]=((3162055.335968379 * (X[120] - X[121])) - (3952569.169960474 * (sPAR[6] * X[41])));
    F[121]=(7920792079.207921 * (X[41] - X[42]));
    F[40]=((3162055.335968379 * (X[119] - X[120])) - (3952569.169960474 * (sPAR[6] * X[40])));
    F[120]=(7920792079.207921 * (X[40] - X[41]));
    F[39]=((3162055.335968379 * (X[118] - X[119])) - (3952569.169960474 * (sPAR[6] * X[39])));
    F[119]=(7920792079.207921 * (X[39] - X[40]));
    F[38]=((3162055.335968379 * (X[117] - X[118])) - (3952569.169960474 * (sPAR[6] * X[38])));
    F[118]=(7920792079.207921 * (X[38] - X[39]));
    F[37]=((3162055.335968379 * (X[116] - X[117])) - (3952569.169960474 * (sPAR[6] * X[37])));
    F[117]=(7920792079.207921 * (X[37] - X[38]));
    F[36]=((3162055.335968379 * (X[115] - X[116])) - (3952569.169960474 * (sPAR[6] * X[36])));
    F[116]=(7920792079.207921 * (X[36] - X[37]));
    F[35]=((3162055.335968379 * (X[114] - X[115])) - (3952569.169960474 * (sPAR[6] * X[35])));
    F[115]=(7920792079.207921 * (X[35] - X[36]));
    F[34]=((3162055.335968379 * (X[113] - X[114])) - (3952569.169960474 * (sPAR[6] * X[34])));
    F[114]=(7920792079.207921 * (X[34] - X[35]));
    F[33]=((3162055.335968379 * (X[112] - X[113])) - (3952569.169960474 * (sPAR[6] * X[33])));
    F[113]=(7920792079.207921 * (X[33] - X[34]));
    F[32]=((3162055.335968379 * (X[111] - X[112])) - (3952569.169960474 * (sPAR[6] * X[32])));
    F[112]=(7920792079.207921 * (X[32] - X[33]));
    F[31]=((3162055.335968379 * (X[110] - X[111])) - (3952569.169960474 * (sPAR[6] * X[31])));
    F[111]=(7920792079.207921 * (X[31] - X[32]));
    F[30]=((3162055.335968379 * (X[109] - X[110])) - (3952569.169960474 * (sPAR[6] * X[30])));
    F[110]=(7920792079.207921 * (X[30] - X[31]));
    F[29]=((3162055.335968379 * (X[108] - X[109])) - (3952569.169960474 * (sPAR[6] * X[29])));
    F[109]=(7920792079.207921 * (X[29] - X[30]));
    F[28]=((3162055.335968379 * (X[107] - X[108])) - (3952569.169960474 * (sPAR[6] * X[28])));
    F[108]=(7920792079.207921 * (X[28] - X[29]));
    F[27]=((3162055.335968379 * (X[106] - X[107])) - (3952569.169960474 * (sPAR[6] * X[27])));
    F[107]=(7920792079.207921 * (X[27] - X[28]));
    F[26]=((3162055.335968379 * (X[105] - X[106])) - (3952569.169960474 * (sPAR[6] * X[26])));
    F[106]=(7920792079.207921 * (X[26] - X[27]));
    F[25]=((3162055.335968379 * (X[104] - X[105])) - (3952569.169960474 * (sPAR[6] * X[25])));
    F[105]=(7920792079.207921 * (X[25] - X[26]));
    F[24]=((3162055.335968379 * (X[103] - X[104])) - (3952569.169960474 * (sPAR[6] * X[24])));
    F[104]=(7920792079.207921 * (X[24] - X[25]));
    F[23]=((3162055.335968379 * (X[102] - X[103])) - (3952569.169960474 * (sPAR[6] * X[23])));
    F[103]=(7920792079.207921 * (X[23] - X[24]));
    F[22]=((3162055.335968379 * (X[101] - X[102])) - (3952569.169960474 * (sPAR[6] * X[22])));
    F[102]=(7920792079.207921 * (X[22] - X[23]));
    F[21]=((3162055.335968379 * (X[100] - X[101])) - (3952569.169960474 * (sPAR[6] * X[21])));
    F[101]=(7920792079.207921 * (X[21] - X[22]));
    F[20]=((3162055.335968379 * (X[99] - X[100])) - (3952569.169960474 * (sPAR[6] * X[20])));
    F[100]=(7920792079.207921 * (X[20] - X[21]));
    F[19]=((3162055.335968379 * (X[98] - X[99])) - (3952569.169960474 * (sPAR[6] * X[19])));
    F[99]=(7920792079.207921 * (X[19] - X[20]));
    F[18]=((3162055.335968379 * (X[97] - X[98])) - (3952569.169960474 * (sPAR[6] * X[18])));
    F[98]=(7920792079.207921 * (X[18] - X[19]));
    F[17]=((3162055.335968379 * (X[96] - X[97])) - (3952569.169960474 * (sPAR[6] * X[17])));
    F[97]=(7920792079.207921 * (X[17] - X[18]));
    F[16]=((3162055.335968379 * (X[95] - X[96])) - (3952569.169960474 * (sPAR[6] * X[16])));
    F[96]=(7920792079.207921 * (X[16] - X[17]));
    F[15]=((3162055.335968379 * (X[94] - X[95])) - (3952569.169960474 * (sPAR[6] * X[15])));
    F[95]=(7920792079.207921 * (X[15] - X[16]));
    F[14]=((3162055.335968379 * (X[93] - X[94])) - (3952569.169960474 * (sPAR[6] * X[14])));
    F[94]=(7920792079.207921 * (X[14] - X[15]));
    F[13]=((3162055.335968379 * (X[92] - X[93])) - (3952569.169960474 * (sPAR[6] * X[13])));
    F[93]=(7920792079.207921 * (X[13] - X[14]));
    F[12]=((3162055.335968379 * (X[91] - X[92])) - (3952569.169960474 * (sPAR[6] * X[12])));
    F[92]=(7920792079.207921 * (X[12] - X[13]));
    F[11]=((3162055.335968379 * (X[90] - X[91])) - (3952569.169960474 * (sPAR[6] * X[11])));
    F[91]=(7920792079.207921 * (X[11] - X[12]));
    F[10]=((3162055.335968379 * (X[89] - X[90])) - (3952569.169960474 * (sPAR[6] * X[10])));
    F[90]=(7920792079.207921 * (X[10] - X[11]));
    F[9]=((3162055.335968379 * (X[88] - X[89])) - (3952569.169960474 * (sPAR[6] * X[9])));
    F[89]=(7920792079.207921 * (X[9] - X[10]));
    F[8]=((3162055.335968379 * (X[87] - X[88])) - (3952569.169960474 * (sPAR[6] * X[8])));
    F[88]=(7920792079.207921 * (X[8] - X[9]));
    F[7]=((3162055.335968379 * (X[86] - X[87])) - (3952569.169960474 * (sPAR[6] * X[7])));
    F[87]=(7920792079.207921 * (X[7] - X[8]));
    F[6]=((3162055.335968379 * (X[85] - X[86])) - (3952569.169960474 * (sPAR[6] * X[6])));
    F[86]=(7920792079.207921 * (X[6] - X[7]));
    F[5]=((3162055.335968379 * (X[84] - X[85])) - (3952569.169960474 * (sPAR[6] * X[5])));
    F[85]=(7920792079.207921 * (X[5] - X[6]));
    F[4]=((3162055.335968379 * (X[83] - X[84])) - (3952569.169960474 * (sPAR[6] * X[4])));
    F[84]=(7920792079.207921 * (X[4] - X[5]));
    F[3]=((3162055.335968379 * (X[82] - X[83])) - (3952569.169960474 * (sPAR[6] * X[3])));
    F[83]=(7920792079.207921 * (X[3] - X[4]));
    F[2]=((3162055.335968379 * (X[81] - X[82])) - (3952569.169960474 * (sPAR[6] * X[2])));
    F[82]=(7920792079.207921 * (X[2] - X[3]));
    F[1]=((3162055.335968379 * (X[80] - X[81])) - (3952569.169960474 * (sPAR[6] * X[1])));
    F[81]=(7920792079.207921 * (X[1] - X[2]));
    F[0]=((3162055.335968379 * (X[79] - X[80])) - (3952569.169960474 * (sPAR[6] * X[0])));
    F[80]=(7920792079.207921 * (X[0] - X[1]));
    F[158]=(7920792079.207921 * (X[78] - ACC[1]));
    F[79]=X[159];
    F[159]=((ACC[0] - (X[79] + (2.0 * (X[159] / sPAR[8])))) * pow(sPAR[8],2.0));

}

template<class Precision> __forceinline__ __device__ void PerThread_EventFunction(
	int tid, int NT, Precision*	  EF, \
	Precision     T, Precision    dT, Precision*    TD, Precision*	X, \
	Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi  		
) {
    

}

template<class Precision> __forceinline__ __device__ void PerThread_ActionAfterEventDetection(
    int tid, int NT, int IDX, int& UDT, \
    Precision    &T, Precision   &dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi
) {
    
}

template<class Precision> __forceinline__ __device__ void PerThread_ActionAfterSuccessfulTimeStep(
    int tid, int NT, int& UDT, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi
) {
    
}

template<class Precision> __forceinline__ __device__ void PerThread_Initialization(
    int tid, int NT, int& DOIDX, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR,       int* sPARi, Precision* ACC, int* ACCi
) {
    T     = TD[0];
    DOIDX = 0;
    ACC[0]=0.0; //Vstep
    ACC[1]=0.0; //cur[80]
    sPAR[0]=100.0; //L
    sPAR[1]=50.04948046732858; //RL
    sPAR[2]=5.054997527200187e-07; //TD
    sPAR[3]=1.01e-10; //cap
    sPAR[4]=2.53e-07; //ind
    sPAR[5]=1.25; //l
    sPAR[6]=4.8e-05; //res
    sPAR[7]=197824033.4677019; //v
    sPAR[8]=5000000.0; //w
    sPARi[0]=80; //N
    X[0]=0.0; //cur[1]
    X[1]=0.0; //cur[2]
    X[2]=0.0; //cur[3]
    X[3]=0.0; //cur[4]
    X[4]=0.0; //cur[5]
    X[5]=0.0; //cur[6]
    X[6]=0.0; //cur[7]
    X[7]=0.0; //cur[8]
    X[8]=0.0; //cur[9]
    X[9]=0.0; //cur[10]
    X[10]=0.0; //cur[11]
    X[11]=0.0; //cur[12]
    X[12]=0.0; //cur[13]
    X[13]=0.0; //cur[14]
    X[14]=0.0; //cur[15]
    X[15]=0.0; //cur[16]
    X[16]=0.0; //cur[17]
    X[17]=0.0; //cur[18]
    X[18]=0.0; //cur[19]
    X[19]=0.0; //cur[20]
    X[20]=0.0; //cur[21]
    X[21]=0.0; //cur[22]
    X[22]=0.0; //cur[23]
    X[23]=0.0; //cur[24]
    X[24]=0.0; //cur[25]
    X[25]=0.0; //cur[26]
    X[26]=0.0; //cur[27]
    X[27]=0.0; //cur[28]
    X[28]=0.0; //cur[29]
    X[29]=0.0; //cur[30]
    X[30]=0.0; //cur[31]
    X[31]=0.0; //cur[32]
    X[32]=0.0; //cur[33]
    X[33]=0.0; //cur[34]
    X[34]=0.0; //cur[35]
    X[35]=0.0; //cur[36]
    X[36]=0.0; //cur[37]
    X[37]=0.0; //cur[38]
    X[38]=0.0; //cur[39]
    X[39]=0.0; //cur[40]
    X[40]=0.0; //cur[41]
    X[41]=0.0; //cur[42]
    X[42]=0.0; //cur[43]
    X[43]=0.0; //cur[44]
    X[44]=0.0; //cur[45]
    X[45]=0.0; //cur[46]
    X[46]=0.0; //cur[47]
    X[47]=0.0; //cur[48]
    X[48]=0.0; //cur[49]
    X[49]=0.0; //cur[50]
    X[50]=0.0; //cur[51]
    X[51]=0.0; //cur[52]
    X[52]=0.0; //cur[53]
    X[53]=0.0; //cur[54]
    X[54]=0.0; //cur[55]
    X[55]=0.0; //cur[56]
    X[56]=0.0; //cur[57]
    X[57]=0.0; //cur[58]
    X[58]=0.0; //cur[59]
    X[59]=0.0; //cur[60]
    X[60]=0.0; //cur[61]
    X[61]=0.0; //cur[62]
    X[62]=0.0; //cur[63]
    X[63]=0.0; //cur[64]
    X[64]=0.0; //cur[65]
    X[65]=0.0; //cur[66]
    X[66]=0.0; //cur[67]
    X[67]=0.0; //cur[68]
    X[68]=0.0; //cur[69]
    X[69]=0.0; //cur[70]
    X[70]=0.0; //cur[71]
    X[71]=0.0; //cur[72]
    X[72]=0.0; //cur[73]
    X[73]=0.0; //cur[74]
    X[74]=0.0; //cur[75]
    X[75]=0.0; //cur[76]
    X[76]=0.0; //cur[77]
    X[77]=0.0; //cur[78]
    X[78]=0.0; //cur[79]
    X[79]=0.0; //vol[1]
    X[80]=0.0; //vol[2]
    X[81]=0.0; //vol[3]
    X[82]=0.0; //vol[4]
    X[83]=0.0; //vol[5]
    X[84]=0.0; //vol[6]
    X[85]=0.0; //vol[7]
    X[86]=0.0; //vol[8]
    X[87]=0.0; //vol[9]
    X[88]=0.0; //vol[10]
    X[89]=0.0; //vol[11]
    X[90]=0.0; //vol[12]
    X[91]=0.0; //vol[13]
    X[92]=0.0; //vol[14]
    X[93]=0.0; //vol[15]
    X[94]=0.0; //vol[16]
    X[95]=0.0; //vol[17]
    X[96]=0.0; //vol[18]
    X[97]=0.0; //vol[19]
    X[98]=0.0; //vol[20]
    X[99]=0.0; //vol[21]
    X[100]=0.0; //vol[22]
    X[101]=0.0; //vol[23]
    X[102]=0.0; //vol[24]
    X[103]=0.0; //vol[25]
    X[104]=0.0; //vol[26]
    X[105]=0.0; //vol[27]
    X[106]=0.0; //vol[28]
    X[107]=0.0; //vol[29]
    X[108]=0.0; //vol[30]
    X[109]=0.0; //vol[31]
    X[110]=0.0; //vol[32]
    X[111]=0.0; //vol[33]
    X[112]=0.0; //vol[34]
    X[113]=0.0; //vol[35]
    X[114]=0.0; //vol[36]
    X[115]=0.0; //vol[37]
    X[116]=0.0; //vol[38]
    X[117]=0.0; //vol[39]
    X[118]=0.0; //vol[40]
    X[119]=0.0; //vol[41]
    X[120]=0.0; //vol[42]
    X[121]=0.0; //vol[43]
    X[122]=0.0; //vol[44]
    X[123]=0.0; //vol[45]
    X[124]=0.0; //vol[46]
    X[125]=0.0; //vol[47]
    X[126]=0.0; //vol[48]
    X[127]=0.0; //vol[49]
    X[128]=0.0; //vol[50]
    X[129]=0.0; //vol[51]
    X[130]=0.0; //vol[52]
    X[131]=0.0; //vol[53]
    X[132]=0.0; //vol[54]
    X[133]=0.0; //vol[55]
    X[134]=0.0; //vol[56]
    X[135]=0.0; //vol[57]
    X[136]=0.0; //vol[58]
    X[137]=0.0; //vol[59]
    X[138]=0.0; //vol[60]
    X[139]=0.0; //vol[61]
    X[140]=0.0; //vol[62]
    X[141]=0.0; //vol[63]
    X[142]=0.0; //vol[64]
    X[143]=0.0; //vol[65]
    X[144]=0.0; //vol[66]
    X[145]=0.0; //vol[67]
    X[146]=0.0; //vol[68]
    X[147]=0.0; //vol[69]
    X[148]=0.0; //vol[70]
    X[149]=0.0; //vol[71]
    X[150]=0.0; //vol[72]
    X[151]=0.0; //vol[73]
    X[152]=0.0; //vol[74]
    X[153]=0.0; //vol[75]
    X[154]=0.0; //vol[76]
    X[155]=0.0; //vol[77]
    X[156]=0.0; //vol[78]
    X[157]=0.0; //vol[79]
    X[158]=0.0; //vol[80]
    X[159]=0.0; //vvol

}

template <class Precision> __forceinline__ __device__ void PerThread_Finalization(
    int tid, int NT, int& DOIDX, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR,       int* sPARi, Precision* ACC, int* ACCi
) {
	
}


#endif
