
#ifndef HARMONICOSCILLATOR_N_400_PERTHREAD_SYSTEMDEFINITION_H
#define HARMONICOSCILLATOR_N_400_PERTHREAD_SYSTEMDEFINITION_H

#include <fstream>
#include <iostream>
#include <string>
#include "Functions.cuh"


template<class Precision> __forceinline__ __device__ void PerThread_OdeFunction(
	int tid, int NT, \
	Precision*    F, Precision*    X, Precision     T, \
	Precision* cPAR, Precision* sPAR, int*      sPARi, Precision* ACC, int* ACCi  		
) {
    F[399]=((sPAR[0] * (X[798] - X[799])) / sPAR[1]);
    F[398]=((sPAR[0] * (X[797] + ((-2.0 * X[798]) + X[799]))) / sPAR[1]);
    F[397]=((sPAR[0] * (X[796] + ((-2.0 * X[797]) + X[798]))) / sPAR[1]);
    F[396]=((sPAR[0] * (X[795] + ((-2.0 * X[796]) + X[797]))) / sPAR[1]);
    F[395]=((sPAR[0] * (X[794] + ((-2.0 * X[795]) + X[796]))) / sPAR[1]);
    F[394]=((sPAR[0] * (X[793] + ((-2.0 * X[794]) + X[795]))) / sPAR[1]);
    F[393]=((sPAR[0] * (X[792] + ((-2.0 * X[793]) + X[794]))) / sPAR[1]);
    F[392]=((sPAR[0] * (X[791] + ((-2.0 * X[792]) + X[793]))) / sPAR[1]);
    F[391]=((sPAR[0] * (X[790] + ((-2.0 * X[791]) + X[792]))) / sPAR[1]);
    F[390]=((sPAR[0] * (X[789] + ((-2.0 * X[790]) + X[791]))) / sPAR[1]);
    F[389]=((sPAR[0] * (X[788] + ((-2.0 * X[789]) + X[790]))) / sPAR[1]);
    F[388]=((sPAR[0] * (X[787] + ((-2.0 * X[788]) + X[789]))) / sPAR[1]);
    F[387]=((sPAR[0] * (X[786] + ((-2.0 * X[787]) + X[788]))) / sPAR[1]);
    F[386]=((sPAR[0] * (X[785] + ((-2.0 * X[786]) + X[787]))) / sPAR[1]);
    F[385]=((sPAR[0] * (X[784] + ((-2.0 * X[785]) + X[786]))) / sPAR[1]);
    F[384]=((sPAR[0] * (X[783] + ((-2.0 * X[784]) + X[785]))) / sPAR[1]);
    F[383]=((sPAR[0] * (X[782] + ((-2.0 * X[783]) + X[784]))) / sPAR[1]);
    F[382]=((sPAR[0] * (X[781] + ((-2.0 * X[782]) + X[783]))) / sPAR[1]);
    F[381]=((sPAR[0] * (X[780] + ((-2.0 * X[781]) + X[782]))) / sPAR[1]);
    F[380]=((sPAR[0] * (X[779] + ((-2.0 * X[780]) + X[781]))) / sPAR[1]);
    F[379]=((sPAR[0] * (X[778] + ((-2.0 * X[779]) + X[780]))) / sPAR[1]);
    F[378]=((sPAR[0] * (X[777] + ((-2.0 * X[778]) + X[779]))) / sPAR[1]);
    F[377]=((sPAR[0] * (X[776] + ((-2.0 * X[777]) + X[778]))) / sPAR[1]);
    F[376]=((sPAR[0] * (X[775] + ((-2.0 * X[776]) + X[777]))) / sPAR[1]);
    F[375]=((sPAR[0] * (X[774] + ((-2.0 * X[775]) + X[776]))) / sPAR[1]);
    F[374]=((sPAR[0] * (X[773] + ((-2.0 * X[774]) + X[775]))) / sPAR[1]);
    F[373]=((sPAR[0] * (X[772] + ((-2.0 * X[773]) + X[774]))) / sPAR[1]);
    F[372]=((sPAR[0] * (X[771] + ((-2.0 * X[772]) + X[773]))) / sPAR[1]);
    F[371]=((sPAR[0] * (X[770] + ((-2.0 * X[771]) + X[772]))) / sPAR[1]);
    F[370]=((sPAR[0] * (X[769] + ((-2.0 * X[770]) + X[771]))) / sPAR[1]);
    F[369]=((sPAR[0] * (X[768] + ((-2.0 * X[769]) + X[770]))) / sPAR[1]);
    F[368]=((sPAR[0] * (X[767] + ((-2.0 * X[768]) + X[769]))) / sPAR[1]);
    F[367]=((sPAR[0] * (X[766] + ((-2.0 * X[767]) + X[768]))) / sPAR[1]);
    F[366]=((sPAR[0] * (X[765] + ((-2.0 * X[766]) + X[767]))) / sPAR[1]);
    F[365]=((sPAR[0] * (X[764] + ((-2.0 * X[765]) + X[766]))) / sPAR[1]);
    F[364]=((sPAR[0] * (X[763] + ((-2.0 * X[764]) + X[765]))) / sPAR[1]);
    F[363]=((sPAR[0] * (X[762] + ((-2.0 * X[763]) + X[764]))) / sPAR[1]);
    F[362]=((sPAR[0] * (X[761] + ((-2.0 * X[762]) + X[763]))) / sPAR[1]);
    F[361]=((sPAR[0] * (X[760] + ((-2.0 * X[761]) + X[762]))) / sPAR[1]);
    F[360]=((sPAR[0] * (X[759] + ((-2.0 * X[760]) + X[761]))) / sPAR[1]);
    F[359]=((sPAR[0] * (X[758] + ((-2.0 * X[759]) + X[760]))) / sPAR[1]);
    F[358]=((sPAR[0] * (X[757] + ((-2.0 * X[758]) + X[759]))) / sPAR[1]);
    F[357]=((sPAR[0] * (X[756] + ((-2.0 * X[757]) + X[758]))) / sPAR[1]);
    F[356]=((sPAR[0] * (X[755] + ((-2.0 * X[756]) + X[757]))) / sPAR[1]);
    F[355]=((sPAR[0] * (X[754] + ((-2.0 * X[755]) + X[756]))) / sPAR[1]);
    F[354]=((sPAR[0] * (X[753] + ((-2.0 * X[754]) + X[755]))) / sPAR[1]);
    F[353]=((sPAR[0] * (X[752] + ((-2.0 * X[753]) + X[754]))) / sPAR[1]);
    F[352]=((sPAR[0] * (X[751] + ((-2.0 * X[752]) + X[753]))) / sPAR[1]);
    F[351]=((sPAR[0] * (X[750] + ((-2.0 * X[751]) + X[752]))) / sPAR[1]);
    F[350]=((sPAR[0] * (X[749] + ((-2.0 * X[750]) + X[751]))) / sPAR[1]);
    F[349]=((sPAR[0] * (X[748] + ((-2.0 * X[749]) + X[750]))) / sPAR[1]);
    F[348]=((sPAR[0] * (X[747] + ((-2.0 * X[748]) + X[749]))) / sPAR[1]);
    F[347]=((sPAR[0] * (X[746] + ((-2.0 * X[747]) + X[748]))) / sPAR[1]);
    F[346]=((sPAR[0] * (X[745] + ((-2.0 * X[746]) + X[747]))) / sPAR[1]);
    F[345]=((sPAR[0] * (X[744] + ((-2.0 * X[745]) + X[746]))) / sPAR[1]);
    F[344]=((sPAR[0] * (X[743] + ((-2.0 * X[744]) + X[745]))) / sPAR[1]);
    F[343]=((sPAR[0] * (X[742] + ((-2.0 * X[743]) + X[744]))) / sPAR[1]);
    F[342]=((sPAR[0] * (X[741] + ((-2.0 * X[742]) + X[743]))) / sPAR[1]);
    F[341]=((sPAR[0] * (X[740] + ((-2.0 * X[741]) + X[742]))) / sPAR[1]);
    F[340]=((sPAR[0] * (X[739] + ((-2.0 * X[740]) + X[741]))) / sPAR[1]);
    F[339]=((sPAR[0] * (X[738] + ((-2.0 * X[739]) + X[740]))) / sPAR[1]);
    F[338]=((sPAR[0] * (X[737] + ((-2.0 * X[738]) + X[739]))) / sPAR[1]);
    F[337]=((sPAR[0] * (X[736] + ((-2.0 * X[737]) + X[738]))) / sPAR[1]);
    F[336]=((sPAR[0] * (X[735] + ((-2.0 * X[736]) + X[737]))) / sPAR[1]);
    F[335]=((sPAR[0] * (X[734] + ((-2.0 * X[735]) + X[736]))) / sPAR[1]);
    F[334]=((sPAR[0] * (X[733] + ((-2.0 * X[734]) + X[735]))) / sPAR[1]);
    F[333]=((sPAR[0] * (X[732] + ((-2.0 * X[733]) + X[734]))) / sPAR[1]);
    F[332]=((sPAR[0] * (X[731] + ((-2.0 * X[732]) + X[733]))) / sPAR[1]);
    F[331]=((sPAR[0] * (X[730] + ((-2.0 * X[731]) + X[732]))) / sPAR[1]);
    F[330]=((sPAR[0] * (X[729] + ((-2.0 * X[730]) + X[731]))) / sPAR[1]);
    F[329]=((sPAR[0] * (X[728] + ((-2.0 * X[729]) + X[730]))) / sPAR[1]);
    F[328]=((sPAR[0] * (X[727] + ((-2.0 * X[728]) + X[729]))) / sPAR[1]);
    F[327]=((sPAR[0] * (X[726] + ((-2.0 * X[727]) + X[728]))) / sPAR[1]);
    F[326]=((sPAR[0] * (X[725] + ((-2.0 * X[726]) + X[727]))) / sPAR[1]);
    F[325]=((sPAR[0] * (X[724] + ((-2.0 * X[725]) + X[726]))) / sPAR[1]);
    F[324]=((sPAR[0] * (X[723] + ((-2.0 * X[724]) + X[725]))) / sPAR[1]);
    F[323]=((sPAR[0] * (X[722] + ((-2.0 * X[723]) + X[724]))) / sPAR[1]);
    F[322]=((sPAR[0] * (X[721] + ((-2.0 * X[722]) + X[723]))) / sPAR[1]);
    F[321]=((sPAR[0] * (X[720] + ((-2.0 * X[721]) + X[722]))) / sPAR[1]);
    F[320]=((sPAR[0] * (X[719] + ((-2.0 * X[720]) + X[721]))) / sPAR[1]);
    F[319]=((sPAR[0] * (X[718] + ((-2.0 * X[719]) + X[720]))) / sPAR[1]);
    F[318]=((sPAR[0] * (X[717] + ((-2.0 * X[718]) + X[719]))) / sPAR[1]);
    F[317]=((sPAR[0] * (X[716] + ((-2.0 * X[717]) + X[718]))) / sPAR[1]);
    F[316]=((sPAR[0] * (X[715] + ((-2.0 * X[716]) + X[717]))) / sPAR[1]);
    F[315]=((sPAR[0] * (X[714] + ((-2.0 * X[715]) + X[716]))) / sPAR[1]);
    F[314]=((sPAR[0] * (X[713] + ((-2.0 * X[714]) + X[715]))) / sPAR[1]);
    F[313]=((sPAR[0] * (X[712] + ((-2.0 * X[713]) + X[714]))) / sPAR[1]);
    F[312]=((sPAR[0] * (X[711] + ((-2.0 * X[712]) + X[713]))) / sPAR[1]);
    F[311]=((sPAR[0] * (X[710] + ((-2.0 * X[711]) + X[712]))) / sPAR[1]);
    F[310]=((sPAR[0] * (X[709] + ((-2.0 * X[710]) + X[711]))) / sPAR[1]);
    F[309]=((sPAR[0] * (X[708] + ((-2.0 * X[709]) + X[710]))) / sPAR[1]);
    F[308]=((sPAR[0] * (X[707] + ((-2.0 * X[708]) + X[709]))) / sPAR[1]);
    F[307]=((sPAR[0] * (X[706] + ((-2.0 * X[707]) + X[708]))) / sPAR[1]);
    F[306]=((sPAR[0] * (X[705] + ((-2.0 * X[706]) + X[707]))) / sPAR[1]);
    F[305]=((sPAR[0] * (X[704] + ((-2.0 * X[705]) + X[706]))) / sPAR[1]);
    F[304]=((sPAR[0] * (X[703] + ((-2.0 * X[704]) + X[705]))) / sPAR[1]);
    F[303]=((sPAR[0] * (X[702] + ((-2.0 * X[703]) + X[704]))) / sPAR[1]);
    F[302]=((sPAR[0] * (X[701] + ((-2.0 * X[702]) + X[703]))) / sPAR[1]);
    F[301]=((sPAR[0] * (X[700] + ((-2.0 * X[701]) + X[702]))) / sPAR[1]);
    F[300]=((sPAR[0] * (X[699] + ((-2.0 * X[700]) + X[701]))) / sPAR[1]);
    F[299]=((sPAR[0] * (X[698] + ((-2.0 * X[699]) + X[700]))) / sPAR[1]);
    F[298]=((sPAR[0] * (X[697] + ((-2.0 * X[698]) + X[699]))) / sPAR[1]);
    F[297]=((sPAR[0] * (X[696] + ((-2.0 * X[697]) + X[698]))) / sPAR[1]);
    F[296]=((sPAR[0] * (X[695] + ((-2.0 * X[696]) + X[697]))) / sPAR[1]);
    F[295]=((sPAR[0] * (X[694] + ((-2.0 * X[695]) + X[696]))) / sPAR[1]);
    F[294]=((sPAR[0] * (X[693] + ((-2.0 * X[694]) + X[695]))) / sPAR[1]);
    F[293]=((sPAR[0] * (X[692] + ((-2.0 * X[693]) + X[694]))) / sPAR[1]);
    F[292]=((sPAR[0] * (X[691] + ((-2.0 * X[692]) + X[693]))) / sPAR[1]);
    F[291]=((sPAR[0] * (X[690] + ((-2.0 * X[691]) + X[692]))) / sPAR[1]);
    F[290]=((sPAR[0] * (X[689] + ((-2.0 * X[690]) + X[691]))) / sPAR[1]);
    F[289]=((sPAR[0] * (X[688] + ((-2.0 * X[689]) + X[690]))) / sPAR[1]);
    F[288]=((sPAR[0] * (X[687] + ((-2.0 * X[688]) + X[689]))) / sPAR[1]);
    F[287]=((sPAR[0] * (X[686] + ((-2.0 * X[687]) + X[688]))) / sPAR[1]);
    F[286]=((sPAR[0] * (X[685] + ((-2.0 * X[686]) + X[687]))) / sPAR[1]);
    F[285]=((sPAR[0] * (X[684] + ((-2.0 * X[685]) + X[686]))) / sPAR[1]);
    F[284]=((sPAR[0] * (X[683] + ((-2.0 * X[684]) + X[685]))) / sPAR[1]);
    F[283]=((sPAR[0] * (X[682] + ((-2.0 * X[683]) + X[684]))) / sPAR[1]);
    F[282]=((sPAR[0] * (X[681] + ((-2.0 * X[682]) + X[683]))) / sPAR[1]);
    F[281]=((sPAR[0] * (X[680] + ((-2.0 * X[681]) + X[682]))) / sPAR[1]);
    F[280]=((sPAR[0] * (X[679] + ((-2.0 * X[680]) + X[681]))) / sPAR[1]);
    F[279]=((sPAR[0] * (X[678] + ((-2.0 * X[679]) + X[680]))) / sPAR[1]);
    F[278]=((sPAR[0] * (X[677] + ((-2.0 * X[678]) + X[679]))) / sPAR[1]);
    F[277]=((sPAR[0] * (X[676] + ((-2.0 * X[677]) + X[678]))) / sPAR[1]);
    F[276]=((sPAR[0] * (X[675] + ((-2.0 * X[676]) + X[677]))) / sPAR[1]);
    F[275]=((sPAR[0] * (X[674] + ((-2.0 * X[675]) + X[676]))) / sPAR[1]);
    F[274]=((sPAR[0] * (X[673] + ((-2.0 * X[674]) + X[675]))) / sPAR[1]);
    F[273]=((sPAR[0] * (X[672] + ((-2.0 * X[673]) + X[674]))) / sPAR[1]);
    F[272]=((sPAR[0] * (X[671] + ((-2.0 * X[672]) + X[673]))) / sPAR[1]);
    F[271]=((sPAR[0] * (X[670] + ((-2.0 * X[671]) + X[672]))) / sPAR[1]);
    F[270]=((sPAR[0] * (X[669] + ((-2.0 * X[670]) + X[671]))) / sPAR[1]);
    F[269]=((sPAR[0] * (X[668] + ((-2.0 * X[669]) + X[670]))) / sPAR[1]);
    F[268]=((sPAR[0] * (X[667] + ((-2.0 * X[668]) + X[669]))) / sPAR[1]);
    F[267]=((sPAR[0] * (X[666] + ((-2.0 * X[667]) + X[668]))) / sPAR[1]);
    F[266]=((sPAR[0] * (X[665] + ((-2.0 * X[666]) + X[667]))) / sPAR[1]);
    F[265]=((sPAR[0] * (X[664] + ((-2.0 * X[665]) + X[666]))) / sPAR[1]);
    F[264]=((sPAR[0] * (X[663] + ((-2.0 * X[664]) + X[665]))) / sPAR[1]);
    F[263]=((sPAR[0] * (X[662] + ((-2.0 * X[663]) + X[664]))) / sPAR[1]);
    F[262]=((sPAR[0] * (X[661] + ((-2.0 * X[662]) + X[663]))) / sPAR[1]);
    F[261]=((sPAR[0] * (X[660] + ((-2.0 * X[661]) + X[662]))) / sPAR[1]);
    F[260]=((sPAR[0] * (X[659] + ((-2.0 * X[660]) + X[661]))) / sPAR[1]);
    F[259]=((sPAR[0] * (X[658] + ((-2.0 * X[659]) + X[660]))) / sPAR[1]);
    F[258]=((sPAR[0] * (X[657] + ((-2.0 * X[658]) + X[659]))) / sPAR[1]);
    F[257]=((sPAR[0] * (X[656] + ((-2.0 * X[657]) + X[658]))) / sPAR[1]);
    F[256]=((sPAR[0] * (X[655] + ((-2.0 * X[656]) + X[657]))) / sPAR[1]);
    F[255]=((sPAR[0] * (X[654] + ((-2.0 * X[655]) + X[656]))) / sPAR[1]);
    F[254]=((sPAR[0] * (X[653] + ((-2.0 * X[654]) + X[655]))) / sPAR[1]);
    F[253]=((sPAR[0] * (X[652] + ((-2.0 * X[653]) + X[654]))) / sPAR[1]);
    F[252]=((sPAR[0] * (X[651] + ((-2.0 * X[652]) + X[653]))) / sPAR[1]);
    F[251]=((sPAR[0] * (X[650] + ((-2.0 * X[651]) + X[652]))) / sPAR[1]);
    F[250]=((sPAR[0] * (X[649] + ((-2.0 * X[650]) + X[651]))) / sPAR[1]);
    F[249]=((sPAR[0] * (X[648] + ((-2.0 * X[649]) + X[650]))) / sPAR[1]);
    F[248]=((sPAR[0] * (X[647] + ((-2.0 * X[648]) + X[649]))) / sPAR[1]);
    F[247]=((sPAR[0] * (X[646] + ((-2.0 * X[647]) + X[648]))) / sPAR[1]);
    F[246]=((sPAR[0] * (X[645] + ((-2.0 * X[646]) + X[647]))) / sPAR[1]);
    F[245]=((sPAR[0] * (X[644] + ((-2.0 * X[645]) + X[646]))) / sPAR[1]);
    F[244]=((sPAR[0] * (X[643] + ((-2.0 * X[644]) + X[645]))) / sPAR[1]);
    F[243]=((sPAR[0] * (X[642] + ((-2.0 * X[643]) + X[644]))) / sPAR[1]);
    F[242]=((sPAR[0] * (X[641] + ((-2.0 * X[642]) + X[643]))) / sPAR[1]);
    F[241]=((sPAR[0] * (X[640] + ((-2.0 * X[641]) + X[642]))) / sPAR[1]);
    F[240]=((sPAR[0] * (X[639] + ((-2.0 * X[640]) + X[641]))) / sPAR[1]);
    F[239]=((sPAR[0] * (X[638] + ((-2.0 * X[639]) + X[640]))) / sPAR[1]);
    F[238]=((sPAR[0] * (X[637] + ((-2.0 * X[638]) + X[639]))) / sPAR[1]);
    F[237]=((sPAR[0] * (X[636] + ((-2.0 * X[637]) + X[638]))) / sPAR[1]);
    F[236]=((sPAR[0] * (X[635] + ((-2.0 * X[636]) + X[637]))) / sPAR[1]);
    F[235]=((sPAR[0] * (X[634] + ((-2.0 * X[635]) + X[636]))) / sPAR[1]);
    F[234]=((sPAR[0] * (X[633] + ((-2.0 * X[634]) + X[635]))) / sPAR[1]);
    F[233]=((sPAR[0] * (X[632] + ((-2.0 * X[633]) + X[634]))) / sPAR[1]);
    F[232]=((sPAR[0] * (X[631] + ((-2.0 * X[632]) + X[633]))) / sPAR[1]);
    F[231]=((sPAR[0] * (X[630] + ((-2.0 * X[631]) + X[632]))) / sPAR[1]);
    F[230]=((sPAR[0] * (X[629] + ((-2.0 * X[630]) + X[631]))) / sPAR[1]);
    F[229]=((sPAR[0] * (X[628] + ((-2.0 * X[629]) + X[630]))) / sPAR[1]);
    F[228]=((sPAR[0] * (X[627] + ((-2.0 * X[628]) + X[629]))) / sPAR[1]);
    F[227]=((sPAR[0] * (X[626] + ((-2.0 * X[627]) + X[628]))) / sPAR[1]);
    F[226]=((sPAR[0] * (X[625] + ((-2.0 * X[626]) + X[627]))) / sPAR[1]);
    F[225]=((sPAR[0] * (X[624] + ((-2.0 * X[625]) + X[626]))) / sPAR[1]);
    F[224]=((sPAR[0] * (X[623] + ((-2.0 * X[624]) + X[625]))) / sPAR[1]);
    F[223]=((sPAR[0] * (X[622] + ((-2.0 * X[623]) + X[624]))) / sPAR[1]);
    F[222]=((sPAR[0] * (X[621] + ((-2.0 * X[622]) + X[623]))) / sPAR[1]);
    F[221]=((sPAR[0] * (X[620] + ((-2.0 * X[621]) + X[622]))) / sPAR[1]);
    F[220]=((sPAR[0] * (X[619] + ((-2.0 * X[620]) + X[621]))) / sPAR[1]);
    F[219]=((sPAR[0] * (X[618] + ((-2.0 * X[619]) + X[620]))) / sPAR[1]);
    F[218]=((sPAR[0] * (X[617] + ((-2.0 * X[618]) + X[619]))) / sPAR[1]);
    F[217]=((sPAR[0] * (X[616] + ((-2.0 * X[617]) + X[618]))) / sPAR[1]);
    F[216]=((sPAR[0] * (X[615] + ((-2.0 * X[616]) + X[617]))) / sPAR[1]);
    F[215]=((sPAR[0] * (X[614] + ((-2.0 * X[615]) + X[616]))) / sPAR[1]);
    F[214]=((sPAR[0] * (X[613] + ((-2.0 * X[614]) + X[615]))) / sPAR[1]);
    F[213]=((sPAR[0] * (X[612] + ((-2.0 * X[613]) + X[614]))) / sPAR[1]);
    F[212]=((sPAR[0] * (X[611] + ((-2.0 * X[612]) + X[613]))) / sPAR[1]);
    F[211]=((sPAR[0] * (X[610] + ((-2.0 * X[611]) + X[612]))) / sPAR[1]);
    F[210]=((sPAR[0] * (X[609] + ((-2.0 * X[610]) + X[611]))) / sPAR[1]);
    F[209]=((sPAR[0] * (X[608] + ((-2.0 * X[609]) + X[610]))) / sPAR[1]);
    F[208]=((sPAR[0] * (X[607] + ((-2.0 * X[608]) + X[609]))) / sPAR[1]);
    F[207]=((sPAR[0] * (X[606] + ((-2.0 * X[607]) + X[608]))) / sPAR[1]);
    F[206]=((sPAR[0] * (X[605] + ((-2.0 * X[606]) + X[607]))) / sPAR[1]);
    F[205]=((sPAR[0] * (X[604] + ((-2.0 * X[605]) + X[606]))) / sPAR[1]);
    F[204]=((sPAR[0] * (X[603] + ((-2.0 * X[604]) + X[605]))) / sPAR[1]);
    F[203]=((sPAR[0] * (X[602] + ((-2.0 * X[603]) + X[604]))) / sPAR[1]);
    F[202]=((sPAR[0] * (X[601] + ((-2.0 * X[602]) + X[603]))) / sPAR[1]);
    F[201]=((sPAR[0] * (X[600] + ((-2.0 * X[601]) + X[602]))) / sPAR[1]);
    F[200]=((sPAR[0] * (X[599] + ((-2.0 * X[600]) + X[601]))) / sPAR[1]);
    F[199]=((sPAR[0] * (X[598] + ((-2.0 * X[599]) + X[600]))) / sPAR[1]);
    F[198]=((sPAR[0] * (X[597] + ((-2.0 * X[598]) + X[599]))) / sPAR[1]);
    F[197]=((sPAR[0] * (X[596] + ((-2.0 * X[597]) + X[598]))) / sPAR[1]);
    F[196]=((sPAR[0] * (X[595] + ((-2.0 * X[596]) + X[597]))) / sPAR[1]);
    F[195]=((sPAR[0] * (X[594] + ((-2.0 * X[595]) + X[596]))) / sPAR[1]);
    F[194]=((sPAR[0] * (X[593] + ((-2.0 * X[594]) + X[595]))) / sPAR[1]);
    F[193]=((sPAR[0] * (X[592] + ((-2.0 * X[593]) + X[594]))) / sPAR[1]);
    F[192]=((sPAR[0] * (X[591] + ((-2.0 * X[592]) + X[593]))) / sPAR[1]);
    F[191]=((sPAR[0] * (X[590] + ((-2.0 * X[591]) + X[592]))) / sPAR[1]);
    F[190]=((sPAR[0] * (X[589] + ((-2.0 * X[590]) + X[591]))) / sPAR[1]);
    F[189]=((sPAR[0] * (X[588] + ((-2.0 * X[589]) + X[590]))) / sPAR[1]);
    F[188]=((sPAR[0] * (X[587] + ((-2.0 * X[588]) + X[589]))) / sPAR[1]);
    F[187]=((sPAR[0] * (X[586] + ((-2.0 * X[587]) + X[588]))) / sPAR[1]);
    F[186]=((sPAR[0] * (X[585] + ((-2.0 * X[586]) + X[587]))) / sPAR[1]);
    F[185]=((sPAR[0] * (X[584] + ((-2.0 * X[585]) + X[586]))) / sPAR[1]);
    F[184]=((sPAR[0] * (X[583] + ((-2.0 * X[584]) + X[585]))) / sPAR[1]);
    F[183]=((sPAR[0] * (X[582] + ((-2.0 * X[583]) + X[584]))) / sPAR[1]);
    F[182]=((sPAR[0] * (X[581] + ((-2.0 * X[582]) + X[583]))) / sPAR[1]);
    F[181]=((sPAR[0] * (X[580] + ((-2.0 * X[581]) + X[582]))) / sPAR[1]);
    F[180]=((sPAR[0] * (X[579] + ((-2.0 * X[580]) + X[581]))) / sPAR[1]);
    F[179]=((sPAR[0] * (X[578] + ((-2.0 * X[579]) + X[580]))) / sPAR[1]);
    F[178]=((sPAR[0] * (X[577] + ((-2.0 * X[578]) + X[579]))) / sPAR[1]);
    F[177]=((sPAR[0] * (X[576] + ((-2.0 * X[577]) + X[578]))) / sPAR[1]);
    F[176]=((sPAR[0] * (X[575] + ((-2.0 * X[576]) + X[577]))) / sPAR[1]);
    F[175]=((sPAR[0] * (X[574] + ((-2.0 * X[575]) + X[576]))) / sPAR[1]);
    F[174]=((sPAR[0] * (X[573] + ((-2.0 * X[574]) + X[575]))) / sPAR[1]);
    F[173]=((sPAR[0] * (X[572] + ((-2.0 * X[573]) + X[574]))) / sPAR[1]);
    F[172]=((sPAR[0] * (X[571] + ((-2.0 * X[572]) + X[573]))) / sPAR[1]);
    F[171]=((sPAR[0] * (X[570] + ((-2.0 * X[571]) + X[572]))) / sPAR[1]);
    F[170]=((sPAR[0] * (X[569] + ((-2.0 * X[570]) + X[571]))) / sPAR[1]);
    F[169]=((sPAR[0] * (X[568] + ((-2.0 * X[569]) + X[570]))) / sPAR[1]);
    F[168]=((sPAR[0] * (X[567] + ((-2.0 * X[568]) + X[569]))) / sPAR[1]);
    F[167]=((sPAR[0] * (X[566] + ((-2.0 * X[567]) + X[568]))) / sPAR[1]);
    F[166]=((sPAR[0] * (X[565] + ((-2.0 * X[566]) + X[567]))) / sPAR[1]);
    F[165]=((sPAR[0] * (X[564] + ((-2.0 * X[565]) + X[566]))) / sPAR[1]);
    F[164]=((sPAR[0] * (X[563] + ((-2.0 * X[564]) + X[565]))) / sPAR[1]);
    F[163]=((sPAR[0] * (X[562] + ((-2.0 * X[563]) + X[564]))) / sPAR[1]);
    F[162]=((sPAR[0] * (X[561] + ((-2.0 * X[562]) + X[563]))) / sPAR[1]);
    F[161]=((sPAR[0] * (X[560] + ((-2.0 * X[561]) + X[562]))) / sPAR[1]);
    F[160]=((sPAR[0] * (X[559] + ((-2.0 * X[560]) + X[561]))) / sPAR[1]);
    F[159]=((sPAR[0] * (X[558] + ((-2.0 * X[559]) + X[560]))) / sPAR[1]);
    F[158]=((sPAR[0] * (X[557] + ((-2.0 * X[558]) + X[559]))) / sPAR[1]);
    F[157]=((sPAR[0] * (X[556] + ((-2.0 * X[557]) + X[558]))) / sPAR[1]);
    F[156]=((sPAR[0] * (X[555] + ((-2.0 * X[556]) + X[557]))) / sPAR[1]);
    F[155]=((sPAR[0] * (X[554] + ((-2.0 * X[555]) + X[556]))) / sPAR[1]);
    F[154]=((sPAR[0] * (X[553] + ((-2.0 * X[554]) + X[555]))) / sPAR[1]);
    F[153]=((sPAR[0] * (X[552] + ((-2.0 * X[553]) + X[554]))) / sPAR[1]);
    F[152]=((sPAR[0] * (X[551] + ((-2.0 * X[552]) + X[553]))) / sPAR[1]);
    F[151]=((sPAR[0] * (X[550] + ((-2.0 * X[551]) + X[552]))) / sPAR[1]);
    F[150]=((sPAR[0] * (X[549] + ((-2.0 * X[550]) + X[551]))) / sPAR[1]);
    F[149]=((sPAR[0] * (X[548] + ((-2.0 * X[549]) + X[550]))) / sPAR[1]);
    F[148]=((sPAR[0] * (X[547] + ((-2.0 * X[548]) + X[549]))) / sPAR[1]);
    F[147]=((sPAR[0] * (X[546] + ((-2.0 * X[547]) + X[548]))) / sPAR[1]);
    F[146]=((sPAR[0] * (X[545] + ((-2.0 * X[546]) + X[547]))) / sPAR[1]);
    F[145]=((sPAR[0] * (X[544] + ((-2.0 * X[545]) + X[546]))) / sPAR[1]);
    F[144]=((sPAR[0] * (X[543] + ((-2.0 * X[544]) + X[545]))) / sPAR[1]);
    F[143]=((sPAR[0] * (X[542] + ((-2.0 * X[543]) + X[544]))) / sPAR[1]);
    F[142]=((sPAR[0] * (X[541] + ((-2.0 * X[542]) + X[543]))) / sPAR[1]);
    F[141]=((sPAR[0] * (X[540] + ((-2.0 * X[541]) + X[542]))) / sPAR[1]);
    F[140]=((sPAR[0] * (X[539] + ((-2.0 * X[540]) + X[541]))) / sPAR[1]);
    F[139]=((sPAR[0] * (X[538] + ((-2.0 * X[539]) + X[540]))) / sPAR[1]);
    F[138]=((sPAR[0] * (X[537] + ((-2.0 * X[538]) + X[539]))) / sPAR[1]);
    F[137]=((sPAR[0] * (X[536] + ((-2.0 * X[537]) + X[538]))) / sPAR[1]);
    F[136]=((sPAR[0] * (X[535] + ((-2.0 * X[536]) + X[537]))) / sPAR[1]);
    F[135]=((sPAR[0] * (X[534] + ((-2.0 * X[535]) + X[536]))) / sPAR[1]);
    F[134]=((sPAR[0] * (X[533] + ((-2.0 * X[534]) + X[535]))) / sPAR[1]);
    F[133]=((sPAR[0] * (X[532] + ((-2.0 * X[533]) + X[534]))) / sPAR[1]);
    F[132]=((sPAR[0] * (X[531] + ((-2.0 * X[532]) + X[533]))) / sPAR[1]);
    F[131]=((sPAR[0] * (X[530] + ((-2.0 * X[531]) + X[532]))) / sPAR[1]);
    F[130]=((sPAR[0] * (X[529] + ((-2.0 * X[530]) + X[531]))) / sPAR[1]);
    F[129]=((sPAR[0] * (X[528] + ((-2.0 * X[529]) + X[530]))) / sPAR[1]);
    F[128]=((sPAR[0] * (X[527] + ((-2.0 * X[528]) + X[529]))) / sPAR[1]);
    F[127]=((sPAR[0] * (X[526] + ((-2.0 * X[527]) + X[528]))) / sPAR[1]);
    F[126]=((sPAR[0] * (X[525] + ((-2.0 * X[526]) + X[527]))) / sPAR[1]);
    F[125]=((sPAR[0] * (X[524] + ((-2.0 * X[525]) + X[526]))) / sPAR[1]);
    F[124]=((sPAR[0] * (X[523] + ((-2.0 * X[524]) + X[525]))) / sPAR[1]);
    F[123]=((sPAR[0] * (X[522] + ((-2.0 * X[523]) + X[524]))) / sPAR[1]);
    F[122]=((sPAR[0] * (X[521] + ((-2.0 * X[522]) + X[523]))) / sPAR[1]);
    F[121]=((sPAR[0] * (X[520] + ((-2.0 * X[521]) + X[522]))) / sPAR[1]);
    F[120]=((sPAR[0] * (X[519] + ((-2.0 * X[520]) + X[521]))) / sPAR[1]);
    F[119]=((sPAR[0] * (X[518] + ((-2.0 * X[519]) + X[520]))) / sPAR[1]);
    F[118]=((sPAR[0] * (X[517] + ((-2.0 * X[518]) + X[519]))) / sPAR[1]);
    F[117]=((sPAR[0] * (X[516] + ((-2.0 * X[517]) + X[518]))) / sPAR[1]);
    F[116]=((sPAR[0] * (X[515] + ((-2.0 * X[516]) + X[517]))) / sPAR[1]);
    F[115]=((sPAR[0] * (X[514] + ((-2.0 * X[515]) + X[516]))) / sPAR[1]);
    F[114]=((sPAR[0] * (X[513] + ((-2.0 * X[514]) + X[515]))) / sPAR[1]);
    F[113]=((sPAR[0] * (X[512] + ((-2.0 * X[513]) + X[514]))) / sPAR[1]);
    F[112]=((sPAR[0] * (X[511] + ((-2.0 * X[512]) + X[513]))) / sPAR[1]);
    F[111]=((sPAR[0] * (X[510] + ((-2.0 * X[511]) + X[512]))) / sPAR[1]);
    F[110]=((sPAR[0] * (X[509] + ((-2.0 * X[510]) + X[511]))) / sPAR[1]);
    F[109]=((sPAR[0] * (X[508] + ((-2.0 * X[509]) + X[510]))) / sPAR[1]);
    F[108]=((sPAR[0] * (X[507] + ((-2.0 * X[508]) + X[509]))) / sPAR[1]);
    F[107]=((sPAR[0] * (X[506] + ((-2.0 * X[507]) + X[508]))) / sPAR[1]);
    F[106]=((sPAR[0] * (X[505] + ((-2.0 * X[506]) + X[507]))) / sPAR[1]);
    F[105]=((sPAR[0] * (X[504] + ((-2.0 * X[505]) + X[506]))) / sPAR[1]);
    F[104]=((sPAR[0] * (X[503] + ((-2.0 * X[504]) + X[505]))) / sPAR[1]);
    F[103]=((sPAR[0] * (X[502] + ((-2.0 * X[503]) + X[504]))) / sPAR[1]);
    F[102]=((sPAR[0] * (X[501] + ((-2.0 * X[502]) + X[503]))) / sPAR[1]);
    F[101]=((sPAR[0] * (X[500] + ((-2.0 * X[501]) + X[502]))) / sPAR[1]);
    F[100]=((sPAR[0] * (X[499] + ((-2.0 * X[500]) + X[501]))) / sPAR[1]);
    F[99]=((sPAR[0] * (X[498] + ((-2.0 * X[499]) + X[500]))) / sPAR[1]);
    F[98]=((sPAR[0] * (X[497] + ((-2.0 * X[498]) + X[499]))) / sPAR[1]);
    F[97]=((sPAR[0] * (X[496] + ((-2.0 * X[497]) + X[498]))) / sPAR[1]);
    F[96]=((sPAR[0] * (X[495] + ((-2.0 * X[496]) + X[497]))) / sPAR[1]);
    F[95]=((sPAR[0] * (X[494] + ((-2.0 * X[495]) + X[496]))) / sPAR[1]);
    F[94]=((sPAR[0] * (X[493] + ((-2.0 * X[494]) + X[495]))) / sPAR[1]);
    F[93]=((sPAR[0] * (X[492] + ((-2.0 * X[493]) + X[494]))) / sPAR[1]);
    F[92]=((sPAR[0] * (X[491] + ((-2.0 * X[492]) + X[493]))) / sPAR[1]);
    F[91]=((sPAR[0] * (X[490] + ((-2.0 * X[491]) + X[492]))) / sPAR[1]);
    F[90]=((sPAR[0] * (X[489] + ((-2.0 * X[490]) + X[491]))) / sPAR[1]);
    F[89]=((sPAR[0] * (X[488] + ((-2.0 * X[489]) + X[490]))) / sPAR[1]);
    F[88]=((sPAR[0] * (X[487] + ((-2.0 * X[488]) + X[489]))) / sPAR[1]);
    F[87]=((sPAR[0] * (X[486] + ((-2.0 * X[487]) + X[488]))) / sPAR[1]);
    F[86]=((sPAR[0] * (X[485] + ((-2.0 * X[486]) + X[487]))) / sPAR[1]);
    F[85]=((sPAR[0] * (X[484] + ((-2.0 * X[485]) + X[486]))) / sPAR[1]);
    F[84]=((sPAR[0] * (X[483] + ((-2.0 * X[484]) + X[485]))) / sPAR[1]);
    F[83]=((sPAR[0] * (X[482] + ((-2.0 * X[483]) + X[484]))) / sPAR[1]);
    F[82]=((sPAR[0] * (X[481] + ((-2.0 * X[482]) + X[483]))) / sPAR[1]);
    F[81]=((sPAR[0] * (X[480] + ((-2.0 * X[481]) + X[482]))) / sPAR[1]);
    F[80]=((sPAR[0] * (X[479] + ((-2.0 * X[480]) + X[481]))) / sPAR[1]);
    F[79]=((sPAR[0] * (X[478] + ((-2.0 * X[479]) + X[480]))) / sPAR[1]);
    F[78]=((sPAR[0] * (X[477] + ((-2.0 * X[478]) + X[479]))) / sPAR[1]);
    F[77]=((sPAR[0] * (X[476] + ((-2.0 * X[477]) + X[478]))) / sPAR[1]);
    F[76]=((sPAR[0] * (X[475] + ((-2.0 * X[476]) + X[477]))) / sPAR[1]);
    F[75]=((sPAR[0] * (X[474] + ((-2.0 * X[475]) + X[476]))) / sPAR[1]);
    F[74]=((sPAR[0] * (X[473] + ((-2.0 * X[474]) + X[475]))) / sPAR[1]);
    F[73]=((sPAR[0] * (X[472] + ((-2.0 * X[473]) + X[474]))) / sPAR[1]);
    F[72]=((sPAR[0] * (X[471] + ((-2.0 * X[472]) + X[473]))) / sPAR[1]);
    F[71]=((sPAR[0] * (X[470] + ((-2.0 * X[471]) + X[472]))) / sPAR[1]);
    F[70]=((sPAR[0] * (X[469] + ((-2.0 * X[470]) + X[471]))) / sPAR[1]);
    F[69]=((sPAR[0] * (X[468] + ((-2.0 * X[469]) + X[470]))) / sPAR[1]);
    F[68]=((sPAR[0] * (X[467] + ((-2.0 * X[468]) + X[469]))) / sPAR[1]);
    F[67]=((sPAR[0] * (X[466] + ((-2.0 * X[467]) + X[468]))) / sPAR[1]);
    F[66]=((sPAR[0] * (X[465] + ((-2.0 * X[466]) + X[467]))) / sPAR[1]);
    F[65]=((sPAR[0] * (X[464] + ((-2.0 * X[465]) + X[466]))) / sPAR[1]);
    F[64]=((sPAR[0] * (X[463] + ((-2.0 * X[464]) + X[465]))) / sPAR[1]);
    F[63]=((sPAR[0] * (X[462] + ((-2.0 * X[463]) + X[464]))) / sPAR[1]);
    F[62]=((sPAR[0] * (X[461] + ((-2.0 * X[462]) + X[463]))) / sPAR[1]);
    F[61]=((sPAR[0] * (X[460] + ((-2.0 * X[461]) + X[462]))) / sPAR[1]);
    F[60]=((sPAR[0] * (X[459] + ((-2.0 * X[460]) + X[461]))) / sPAR[1]);
    F[59]=((sPAR[0] * (X[458] + ((-2.0 * X[459]) + X[460]))) / sPAR[1]);
    F[58]=((sPAR[0] * (X[457] + ((-2.0 * X[458]) + X[459]))) / sPAR[1]);
    F[57]=((sPAR[0] * (X[456] + ((-2.0 * X[457]) + X[458]))) / sPAR[1]);
    F[56]=((sPAR[0] * (X[455] + ((-2.0 * X[456]) + X[457]))) / sPAR[1]);
    F[55]=((sPAR[0] * (X[454] + ((-2.0 * X[455]) + X[456]))) / sPAR[1]);
    F[54]=((sPAR[0] * (X[453] + ((-2.0 * X[454]) + X[455]))) / sPAR[1]);
    F[53]=((sPAR[0] * (X[452] + ((-2.0 * X[453]) + X[454]))) / sPAR[1]);
    F[52]=((sPAR[0] * (X[451] + ((-2.0 * X[452]) + X[453]))) / sPAR[1]);
    F[51]=((sPAR[0] * (X[450] + ((-2.0 * X[451]) + X[452]))) / sPAR[1]);
    F[50]=((sPAR[0] * (X[449] + ((-2.0 * X[450]) + X[451]))) / sPAR[1]);
    F[49]=((sPAR[0] * (X[448] + ((-2.0 * X[449]) + X[450]))) / sPAR[1]);
    F[48]=((sPAR[0] * (X[447] + ((-2.0 * X[448]) + X[449]))) / sPAR[1]);
    F[47]=((sPAR[0] * (X[446] + ((-2.0 * X[447]) + X[448]))) / sPAR[1]);
    F[46]=((sPAR[0] * (X[445] + ((-2.0 * X[446]) + X[447]))) / sPAR[1]);
    F[45]=((sPAR[0] * (X[444] + ((-2.0 * X[445]) + X[446]))) / sPAR[1]);
    F[44]=((sPAR[0] * (X[443] + ((-2.0 * X[444]) + X[445]))) / sPAR[1]);
    F[43]=((sPAR[0] * (X[442] + ((-2.0 * X[443]) + X[444]))) / sPAR[1]);
    F[42]=((sPAR[0] * (X[441] + ((-2.0 * X[442]) + X[443]))) / sPAR[1]);
    F[41]=((sPAR[0] * (X[440] + ((-2.0 * X[441]) + X[442]))) / sPAR[1]);
    F[40]=((sPAR[0] * (X[439] + ((-2.0 * X[440]) + X[441]))) / sPAR[1]);
    F[39]=((sPAR[0] * (X[438] + ((-2.0 * X[439]) + X[440]))) / sPAR[1]);
    F[38]=((sPAR[0] * (X[437] + ((-2.0 * X[438]) + X[439]))) / sPAR[1]);
    F[37]=((sPAR[0] * (X[436] + ((-2.0 * X[437]) + X[438]))) / sPAR[1]);
    F[36]=((sPAR[0] * (X[435] + ((-2.0 * X[436]) + X[437]))) / sPAR[1]);
    F[35]=((sPAR[0] * (X[434] + ((-2.0 * X[435]) + X[436]))) / sPAR[1]);
    F[34]=((sPAR[0] * (X[433] + ((-2.0 * X[434]) + X[435]))) / sPAR[1]);
    F[33]=((sPAR[0] * (X[432] + ((-2.0 * X[433]) + X[434]))) / sPAR[1]);
    F[32]=((sPAR[0] * (X[431] + ((-2.0 * X[432]) + X[433]))) / sPAR[1]);
    F[31]=((sPAR[0] * (X[430] + ((-2.0 * X[431]) + X[432]))) / sPAR[1]);
    F[30]=((sPAR[0] * (X[429] + ((-2.0 * X[430]) + X[431]))) / sPAR[1]);
    F[29]=((sPAR[0] * (X[428] + ((-2.0 * X[429]) + X[430]))) / sPAR[1]);
    F[28]=((sPAR[0] * (X[427] + ((-2.0 * X[428]) + X[429]))) / sPAR[1]);
    F[27]=((sPAR[0] * (X[426] + ((-2.0 * X[427]) + X[428]))) / sPAR[1]);
    F[26]=((sPAR[0] * (X[425] + ((-2.0 * X[426]) + X[427]))) / sPAR[1]);
    F[25]=((sPAR[0] * (X[424] + ((-2.0 * X[425]) + X[426]))) / sPAR[1]);
    F[24]=((sPAR[0] * (X[423] + ((-2.0 * X[424]) + X[425]))) / sPAR[1]);
    F[23]=((sPAR[0] * (X[422] + ((-2.0 * X[423]) + X[424]))) / sPAR[1]);
    F[22]=((sPAR[0] * (X[421] + ((-2.0 * X[422]) + X[423]))) / sPAR[1]);
    F[21]=((sPAR[0] * (X[420] + ((-2.0 * X[421]) + X[422]))) / sPAR[1]);
    F[20]=((sPAR[0] * (X[419] + ((-2.0 * X[420]) + X[421]))) / sPAR[1]);
    F[19]=((sPAR[0] * (X[418] + ((-2.0 * X[419]) + X[420]))) / sPAR[1]);
    F[18]=((sPAR[0] * (X[417] + ((-2.0 * X[418]) + X[419]))) / sPAR[1]);
    F[17]=((sPAR[0] * (X[416] + ((-2.0 * X[417]) + X[418]))) / sPAR[1]);
    F[16]=((sPAR[0] * (X[415] + ((-2.0 * X[416]) + X[417]))) / sPAR[1]);
    F[15]=((sPAR[0] * (X[414] + ((-2.0 * X[415]) + X[416]))) / sPAR[1]);
    F[14]=((sPAR[0] * (X[413] + ((-2.0 * X[414]) + X[415]))) / sPAR[1]);
    F[13]=((sPAR[0] * (X[412] + ((-2.0 * X[413]) + X[414]))) / sPAR[1]);
    F[12]=((sPAR[0] * (X[411] + ((-2.0 * X[412]) + X[413]))) / sPAR[1]);
    F[11]=((sPAR[0] * (X[410] + ((-2.0 * X[411]) + X[412]))) / sPAR[1]);
    F[10]=((sPAR[0] * (X[409] + ((-2.0 * X[410]) + X[411]))) / sPAR[1]);
    F[9]=((sPAR[0] * (X[408] + ((-2.0 * X[409]) + X[410]))) / sPAR[1]);
    F[8]=((sPAR[0] * (X[407] + ((-2.0 * X[408]) + X[409]))) / sPAR[1]);
    F[7]=((sPAR[0] * (X[406] + ((-2.0 * X[407]) + X[408]))) / sPAR[1]);
    F[6]=((sPAR[0] * (X[405] + ((-2.0 * X[406]) + X[407]))) / sPAR[1]);
    F[5]=((sPAR[0] * (X[404] + ((-2.0 * X[405]) + X[406]))) / sPAR[1]);
    F[4]=((sPAR[0] * (X[403] + ((-2.0 * X[404]) + X[405]))) / sPAR[1]);
    F[3]=((sPAR[0] * (X[402] + ((-2.0 * X[403]) + X[404]))) / sPAR[1]);
    F[2]=((sPAR[0] * (X[401] + ((-2.0 * X[402]) + X[403]))) / sPAR[1]);
    F[1]=((sPAR[0] * (X[400] + ((-2.0 * X[401]) + X[402]))) / sPAR[1]);
    F[0]=((sPAR[0] * (X[401] - X[400])) / sPAR[1]);
    F[799]=X[399];
    F[798]=X[398];
    F[797]=X[397];
    F[796]=X[396];
    F[795]=X[395];
    F[794]=X[394];
    F[793]=X[393];
    F[792]=X[392];
    F[791]=X[391];
    F[790]=X[390];
    F[789]=X[389];
    F[788]=X[388];
    F[787]=X[387];
    F[786]=X[386];
    F[785]=X[385];
    F[784]=X[384];
    F[783]=X[383];
    F[782]=X[382];
    F[781]=X[381];
    F[780]=X[380];
    F[779]=X[379];
    F[778]=X[378];
    F[777]=X[377];
    F[776]=X[376];
    F[775]=X[375];
    F[774]=X[374];
    F[773]=X[373];
    F[772]=X[372];
    F[771]=X[371];
    F[770]=X[370];
    F[769]=X[369];
    F[768]=X[368];
    F[767]=X[367];
    F[766]=X[366];
    F[765]=X[365];
    F[764]=X[364];
    F[763]=X[363];
    F[762]=X[362];
    F[761]=X[361];
    F[760]=X[360];
    F[759]=X[359];
    F[758]=X[358];
    F[757]=X[357];
    F[756]=X[356];
    F[755]=X[355];
    F[754]=X[354];
    F[753]=X[353];
    F[752]=X[352];
    F[751]=X[351];
    F[750]=X[350];
    F[749]=X[349];
    F[748]=X[348];
    F[747]=X[347];
    F[746]=X[346];
    F[745]=X[345];
    F[744]=X[344];
    F[743]=X[343];
    F[742]=X[342];
    F[741]=X[341];
    F[740]=X[340];
    F[739]=X[339];
    F[738]=X[338];
    F[737]=X[337];
    F[736]=X[336];
    F[735]=X[335];
    F[734]=X[334];
    F[733]=X[333];
    F[732]=X[332];
    F[731]=X[331];
    F[730]=X[330];
    F[729]=X[329];
    F[728]=X[328];
    F[727]=X[327];
    F[726]=X[326];
    F[725]=X[325];
    F[724]=X[324];
    F[723]=X[323];
    F[722]=X[322];
    F[721]=X[321];
    F[720]=X[320];
    F[719]=X[319];
    F[718]=X[318];
    F[717]=X[317];
    F[716]=X[316];
    F[715]=X[315];
    F[714]=X[314];
    F[713]=X[313];
    F[712]=X[312];
    F[711]=X[311];
    F[710]=X[310];
    F[709]=X[309];
    F[708]=X[308];
    F[707]=X[307];
    F[706]=X[306];
    F[705]=X[305];
    F[704]=X[304];
    F[703]=X[303];
    F[702]=X[302];
    F[701]=X[301];
    F[700]=X[300];
    F[699]=X[299];
    F[698]=X[298];
    F[697]=X[297];
    F[696]=X[296];
    F[695]=X[295];
    F[694]=X[294];
    F[693]=X[293];
    F[692]=X[292];
    F[691]=X[291];
    F[690]=X[290];
    F[689]=X[289];
    F[688]=X[288];
    F[687]=X[287];
    F[686]=X[286];
    F[685]=X[285];
    F[684]=X[284];
    F[683]=X[283];
    F[682]=X[282];
    F[681]=X[281];
    F[680]=X[280];
    F[679]=X[279];
    F[678]=X[278];
    F[677]=X[277];
    F[676]=X[276];
    F[675]=X[275];
    F[674]=X[274];
    F[673]=X[273];
    F[672]=X[272];
    F[671]=X[271];
    F[670]=X[270];
    F[669]=X[269];
    F[668]=X[268];
    F[667]=X[267];
    F[666]=X[266];
    F[665]=X[265];
    F[664]=X[264];
    F[663]=X[263];
    F[662]=X[262];
    F[661]=X[261];
    F[660]=X[260];
    F[659]=X[259];
    F[658]=X[258];
    F[657]=X[257];
    F[656]=X[256];
    F[655]=X[255];
    F[654]=X[254];
    F[653]=X[253];
    F[652]=X[252];
    F[651]=X[251];
    F[650]=X[250];
    F[649]=X[249];
    F[648]=X[248];
    F[647]=X[247];
    F[646]=X[246];
    F[645]=X[245];
    F[644]=X[244];
    F[643]=X[243];
    F[642]=X[242];
    F[641]=X[241];
    F[640]=X[240];
    F[639]=X[239];
    F[638]=X[238];
    F[637]=X[237];
    F[636]=X[236];
    F[635]=X[235];
    F[634]=X[234];
    F[633]=X[233];
    F[632]=X[232];
    F[631]=X[231];
    F[630]=X[230];
    F[629]=X[229];
    F[628]=X[228];
    F[627]=X[227];
    F[626]=X[226];
    F[625]=X[225];
    F[624]=X[224];
    F[623]=X[223];
    F[622]=X[222];
    F[621]=X[221];
    F[620]=X[220];
    F[619]=X[219];
    F[618]=X[218];
    F[617]=X[217];
    F[616]=X[216];
    F[615]=X[215];
    F[614]=X[214];
    F[613]=X[213];
    F[612]=X[212];
    F[611]=X[211];
    F[610]=X[210];
    F[609]=X[209];
    F[608]=X[208];
    F[607]=X[207];
    F[606]=X[206];
    F[605]=X[205];
    F[604]=X[204];
    F[603]=X[203];
    F[602]=X[202];
    F[601]=X[201];
    F[600]=X[200];
    F[599]=X[199];
    F[598]=X[198];
    F[597]=X[197];
    F[596]=X[196];
    F[595]=X[195];
    F[594]=X[194];
    F[593]=X[193];
    F[592]=X[192];
    F[591]=X[191];
    F[590]=X[190];
    F[589]=X[189];
    F[588]=X[188];
    F[587]=X[187];
    F[586]=X[186];
    F[585]=X[185];
    F[584]=X[184];
    F[583]=X[183];
    F[582]=X[182];
    F[581]=X[181];
    F[580]=X[180];
    F[579]=X[179];
    F[578]=X[178];
    F[577]=X[177];
    F[576]=X[176];
    F[575]=X[175];
    F[574]=X[174];
    F[573]=X[173];
    F[572]=X[172];
    F[571]=X[171];
    F[570]=X[170];
    F[569]=X[169];
    F[568]=X[168];
    F[567]=X[167];
    F[566]=X[166];
    F[565]=X[165];
    F[564]=X[164];
    F[563]=X[163];
    F[562]=X[162];
    F[561]=X[161];
    F[560]=X[160];
    F[559]=X[159];
    F[558]=X[158];
    F[557]=X[157];
    F[556]=X[156];
    F[555]=X[155];
    F[554]=X[154];
    F[553]=X[153];
    F[552]=X[152];
    F[551]=X[151];
    F[550]=X[150];
    F[549]=X[149];
    F[548]=X[148];
    F[547]=X[147];
    F[546]=X[146];
    F[545]=X[145];
    F[544]=X[144];
    F[543]=X[143];
    F[542]=X[142];
    F[541]=X[141];
    F[540]=X[140];
    F[539]=X[139];
    F[538]=X[138];
    F[537]=X[137];
    F[536]=X[136];
    F[535]=X[135];
    F[534]=X[134];
    F[533]=X[133];
    F[532]=X[132];
    F[531]=X[131];
    F[530]=X[130];
    F[529]=X[129];
    F[528]=X[128];
    F[527]=X[127];
    F[526]=X[126];
    F[525]=X[125];
    F[524]=X[124];
    F[523]=X[123];
    F[522]=X[122];
    F[521]=X[121];
    F[520]=X[120];
    F[519]=X[119];
    F[518]=X[118];
    F[517]=X[117];
    F[516]=X[116];
    F[515]=X[115];
    F[514]=X[114];
    F[513]=X[113];
    F[512]=X[112];
    F[511]=X[111];
    F[510]=X[110];
    F[509]=X[109];
    F[508]=X[108];
    F[507]=X[107];
    F[506]=X[106];
    F[505]=X[105];
    F[504]=X[104];
    F[503]=X[103];
    F[502]=X[102];
    F[501]=X[101];
    F[500]=X[100];
    F[499]=X[99];
    F[498]=X[98];
    F[497]=X[97];
    F[496]=X[96];
    F[495]=X[95];
    F[494]=X[94];
    F[493]=X[93];
    F[492]=X[92];
    F[491]=X[91];
    F[490]=X[90];
    F[489]=X[89];
    F[488]=X[88];
    F[487]=X[87];
    F[486]=X[86];
    F[485]=X[85];
    F[484]=X[84];
    F[483]=X[83];
    F[482]=X[82];
    F[481]=X[81];
    F[480]=X[80];
    F[479]=X[79];
    F[478]=X[78];
    F[477]=X[77];
    F[476]=X[76];
    F[475]=X[75];
    F[474]=X[74];
    F[473]=X[73];
    F[472]=X[72];
    F[471]=X[71];
    F[470]=X[70];
    F[469]=X[69];
    F[468]=X[68];
    F[467]=X[67];
    F[466]=X[66];
    F[465]=X[65];
    F[464]=X[64];
    F[463]=X[63];
    F[462]=X[62];
    F[461]=X[61];
    F[460]=X[60];
    F[459]=X[59];
    F[458]=X[58];
    F[457]=X[57];
    F[456]=X[56];
    F[455]=X[55];
    F[454]=X[54];
    F[453]=X[53];
    F[452]=X[52];
    F[451]=X[51];
    F[450]=X[50];
    F[449]=X[49];
    F[448]=X[48];
    F[447]=X[47];
    F[446]=X[46];
    F[445]=X[45];
    F[444]=X[44];
    F[443]=X[43];
    F[442]=X[42];
    F[441]=X[41];
    F[440]=X[40];
    F[439]=X[39];
    F[438]=X[38];
    F[437]=X[37];
    F[436]=X[36];
    F[435]=X[35];
    F[434]=X[34];
    F[433]=X[33];
    F[432]=X[32];
    F[431]=X[31];
    F[430]=X[30];
    F[429]=X[29];
    F[428]=X[28];
    F[427]=X[27];
    F[426]=X[26];
    F[425]=X[25];
    F[424]=X[24];
    F[423]=X[23];
    F[422]=X[22];
    F[421]=X[21];
    F[420]=X[20];
    F[419]=X[19];
    F[418]=X[18];
    F[417]=X[17];
    F[416]=X[16];
    F[415]=X[15];
    F[414]=X[14];
    F[413]=X[13];
    F[412]=X[12];
    F[411]=X[11];
    F[410]=X[10];
    F[409]=X[9];
    F[408]=X[8];
    F[407]=X[7];
    F[406]=X[6];
    F[405]=X[5];
    F[404]=X[4];
    F[403]=X[3];
    F[402]=X[2];
    F[401]=X[1];
    F[400]=X[0];

}

template<class Precision> __forceinline__ __device__ void PerThread_EventFunction(
	int tid, int NT, Precision*	  EF, \
	Precision     T, Precision    dT, Precision*    TD, Precision*	X, \
	Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi  		
) {
    

}

template<class Precision> __forceinline__ __device__ void PerThread_ActionAfterEventDetection(
    int tid, int NT, int IDX, int& UDT, \
    Precision    &T, Precision   &dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi
) {
    
}

template<class Precision> __forceinline__ __device__ void PerThread_ActionAfterSuccessfulTimeStep(
    int tid, int NT, int& UDT, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi
) {
    
}

template<class Precision> __forceinline__ __device__ void PerThread_Initialization(
    int tid, int NT, int& DOIDX, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR,       int* sPARi, Precision* ACC, int* ACCi
) {
    T     = TD[0];
    DOIDX = 0;
    sPAR[0]=10.0; //k
    sPAR[1]=1.0; //m
    sPARi[0]=400; //N
    X[0]=0.0; //v[1]
    X[1]=0.0; //v[2]
    X[2]=0.0; //v[3]
    X[3]=0.0; //v[4]
    X[4]=0.0; //v[5]
    X[5]=0.0; //v[6]
    X[6]=0.0; //v[7]
    X[7]=0.0; //v[8]
    X[8]=0.0; //v[9]
    X[9]=0.0; //v[10]
    X[10]=0.0; //v[11]
    X[11]=0.0; //v[12]
    X[12]=0.0; //v[13]
    X[13]=0.0; //v[14]
    X[14]=0.0; //v[15]
    X[15]=0.0; //v[16]
    X[16]=0.0; //v[17]
    X[17]=0.0; //v[18]
    X[18]=0.0; //v[19]
    X[19]=0.0; //v[20]
    X[20]=0.0; //v[21]
    X[21]=0.0; //v[22]
    X[22]=0.0; //v[23]
    X[23]=0.0; //v[24]
    X[24]=0.0; //v[25]
    X[25]=0.0; //v[26]
    X[26]=0.0; //v[27]
    X[27]=0.0; //v[28]
    X[28]=0.0; //v[29]
    X[29]=0.0; //v[30]
    X[30]=0.0; //v[31]
    X[31]=0.0; //v[32]
    X[32]=0.0; //v[33]
    X[33]=0.0; //v[34]
    X[34]=0.0; //v[35]
    X[35]=0.0; //v[36]
    X[36]=0.0; //v[37]
    X[37]=0.0; //v[38]
    X[38]=0.0; //v[39]
    X[39]=0.0; //v[40]
    X[40]=0.0; //v[41]
    X[41]=0.0; //v[42]
    X[42]=0.0; //v[43]
    X[43]=0.0; //v[44]
    X[44]=0.0; //v[45]
    X[45]=0.0; //v[46]
    X[46]=0.0; //v[47]
    X[47]=0.0; //v[48]
    X[48]=0.0; //v[49]
    X[49]=0.0; //v[50]
    X[50]=0.0; //v[51]
    X[51]=0.0; //v[52]
    X[52]=0.0; //v[53]
    X[53]=0.0; //v[54]
    X[54]=0.0; //v[55]
    X[55]=0.0; //v[56]
    X[56]=0.0; //v[57]
    X[57]=0.0; //v[58]
    X[58]=0.0; //v[59]
    X[59]=0.0; //v[60]
    X[60]=0.0; //v[61]
    X[61]=0.0; //v[62]
    X[62]=0.0; //v[63]
    X[63]=0.0; //v[64]
    X[64]=0.0; //v[65]
    X[65]=0.0; //v[66]
    X[66]=0.0; //v[67]
    X[67]=0.0; //v[68]
    X[68]=0.0; //v[69]
    X[69]=0.0; //v[70]
    X[70]=0.0; //v[71]
    X[71]=0.0; //v[72]
    X[72]=0.0; //v[73]
    X[73]=0.0; //v[74]
    X[74]=0.0; //v[75]
    X[75]=0.0; //v[76]
    X[76]=0.0; //v[77]
    X[77]=0.0; //v[78]
    X[78]=0.0; //v[79]
    X[79]=0.0; //v[80]
    X[80]=0.0; //v[81]
    X[81]=0.0; //v[82]
    X[82]=0.0; //v[83]
    X[83]=0.0; //v[84]
    X[84]=0.0; //v[85]
    X[85]=0.0; //v[86]
    X[86]=0.0; //v[87]
    X[87]=0.0; //v[88]
    X[88]=0.0; //v[89]
    X[89]=0.0; //v[90]
    X[90]=0.0; //v[91]
    X[91]=0.0; //v[92]
    X[92]=0.0; //v[93]
    X[93]=0.0; //v[94]
    X[94]=0.0; //v[95]
    X[95]=0.0; //v[96]
    X[96]=0.0; //v[97]
    X[97]=0.0; //v[98]
    X[98]=0.0; //v[99]
    X[99]=0.0; //v[100]
    X[100]=0.0; //v[101]
    X[101]=0.0; //v[102]
    X[102]=0.0; //v[103]
    X[103]=0.0; //v[104]
    X[104]=0.0; //v[105]
    X[105]=0.0; //v[106]
    X[106]=0.0; //v[107]
    X[107]=0.0; //v[108]
    X[108]=0.0; //v[109]
    X[109]=0.0; //v[110]
    X[110]=0.0; //v[111]
    X[111]=0.0; //v[112]
    X[112]=0.0; //v[113]
    X[113]=0.0; //v[114]
    X[114]=0.0; //v[115]
    X[115]=0.0; //v[116]
    X[116]=0.0; //v[117]
    X[117]=0.0; //v[118]
    X[118]=0.0; //v[119]
    X[119]=0.0; //v[120]
    X[120]=0.0; //v[121]
    X[121]=0.0; //v[122]
    X[122]=0.0; //v[123]
    X[123]=0.0; //v[124]
    X[124]=0.0; //v[125]
    X[125]=0.0; //v[126]
    X[126]=0.0; //v[127]
    X[127]=0.0; //v[128]
    X[128]=0.0; //v[129]
    X[129]=0.0; //v[130]
    X[130]=0.0; //v[131]
    X[131]=0.0; //v[132]
    X[132]=0.0; //v[133]
    X[133]=0.0; //v[134]
    X[134]=0.0; //v[135]
    X[135]=0.0; //v[136]
    X[136]=0.0; //v[137]
    X[137]=0.0; //v[138]
    X[138]=0.0; //v[139]
    X[139]=0.0; //v[140]
    X[140]=0.0; //v[141]
    X[141]=0.0; //v[142]
    X[142]=0.0; //v[143]
    X[143]=0.0; //v[144]
    X[144]=0.0; //v[145]
    X[145]=0.0; //v[146]
    X[146]=0.0; //v[147]
    X[147]=0.0; //v[148]
    X[148]=0.0; //v[149]
    X[149]=0.0; //v[150]
    X[150]=0.0; //v[151]
    X[151]=0.0; //v[152]
    X[152]=0.0; //v[153]
    X[153]=0.0; //v[154]
    X[154]=0.0; //v[155]
    X[155]=0.0; //v[156]
    X[156]=0.0; //v[157]
    X[157]=0.0; //v[158]
    X[158]=0.0; //v[159]
    X[159]=0.0; //v[160]
    X[160]=0.0; //v[161]
    X[161]=0.0; //v[162]
    X[162]=0.0; //v[163]
    X[163]=0.0; //v[164]
    X[164]=0.0; //v[165]
    X[165]=0.0; //v[166]
    X[166]=0.0; //v[167]
    X[167]=0.0; //v[168]
    X[168]=0.0; //v[169]
    X[169]=0.0; //v[170]
    X[170]=0.0; //v[171]
    X[171]=0.0; //v[172]
    X[172]=0.0; //v[173]
    X[173]=0.0; //v[174]
    X[174]=0.0; //v[175]
    X[175]=0.0; //v[176]
    X[176]=0.0; //v[177]
    X[177]=0.0; //v[178]
    X[178]=0.0; //v[179]
    X[179]=0.0; //v[180]
    X[180]=0.0; //v[181]
    X[181]=0.0; //v[182]
    X[182]=0.0; //v[183]
    X[183]=0.0; //v[184]
    X[184]=0.0; //v[185]
    X[185]=0.0; //v[186]
    X[186]=0.0; //v[187]
    X[187]=0.0; //v[188]
    X[188]=0.0; //v[189]
    X[189]=0.0; //v[190]
    X[190]=0.0; //v[191]
    X[191]=0.0; //v[192]
    X[192]=0.0; //v[193]
    X[193]=0.0; //v[194]
    X[194]=0.0; //v[195]
    X[195]=0.0; //v[196]
    X[196]=0.0; //v[197]
    X[197]=0.0; //v[198]
    X[198]=0.0; //v[199]
    X[199]=0.0; //v[200]
    X[200]=0.0; //v[201]
    X[201]=0.0; //v[202]
    X[202]=0.0; //v[203]
    X[203]=0.0; //v[204]
    X[204]=0.0; //v[205]
    X[205]=0.0; //v[206]
    X[206]=0.0; //v[207]
    X[207]=0.0; //v[208]
    X[208]=0.0; //v[209]
    X[209]=0.0; //v[210]
    X[210]=0.0; //v[211]
    X[211]=0.0; //v[212]
    X[212]=0.0; //v[213]
    X[213]=0.0; //v[214]
    X[214]=0.0; //v[215]
    X[215]=0.0; //v[216]
    X[216]=0.0; //v[217]
    X[217]=0.0; //v[218]
    X[218]=0.0; //v[219]
    X[219]=0.0; //v[220]
    X[220]=0.0; //v[221]
    X[221]=0.0; //v[222]
    X[222]=0.0; //v[223]
    X[223]=0.0; //v[224]
    X[224]=0.0; //v[225]
    X[225]=0.0; //v[226]
    X[226]=0.0; //v[227]
    X[227]=0.0; //v[228]
    X[228]=0.0; //v[229]
    X[229]=0.0; //v[230]
    X[230]=0.0; //v[231]
    X[231]=0.0; //v[232]
    X[232]=0.0; //v[233]
    X[233]=0.0; //v[234]
    X[234]=0.0; //v[235]
    X[235]=0.0; //v[236]
    X[236]=0.0; //v[237]
    X[237]=0.0; //v[238]
    X[238]=0.0; //v[239]
    X[239]=0.0; //v[240]
    X[240]=0.0; //v[241]
    X[241]=0.0; //v[242]
    X[242]=0.0; //v[243]
    X[243]=0.0; //v[244]
    X[244]=0.0; //v[245]
    X[245]=0.0; //v[246]
    X[246]=0.0; //v[247]
    X[247]=0.0; //v[248]
    X[248]=0.0; //v[249]
    X[249]=0.0; //v[250]
    X[250]=0.0; //v[251]
    X[251]=0.0; //v[252]
    X[252]=0.0; //v[253]
    X[253]=0.0; //v[254]
    X[254]=0.0; //v[255]
    X[255]=0.0; //v[256]
    X[256]=0.0; //v[257]
    X[257]=0.0; //v[258]
    X[258]=0.0; //v[259]
    X[259]=0.0; //v[260]
    X[260]=0.0; //v[261]
    X[261]=0.0; //v[262]
    X[262]=0.0; //v[263]
    X[263]=0.0; //v[264]
    X[264]=0.0; //v[265]
    X[265]=0.0; //v[266]
    X[266]=0.0; //v[267]
    X[267]=0.0; //v[268]
    X[268]=0.0; //v[269]
    X[269]=0.0; //v[270]
    X[270]=0.0; //v[271]
    X[271]=0.0; //v[272]
    X[272]=0.0; //v[273]
    X[273]=0.0; //v[274]
    X[274]=0.0; //v[275]
    X[275]=0.0; //v[276]
    X[276]=0.0; //v[277]
    X[277]=0.0; //v[278]
    X[278]=0.0; //v[279]
    X[279]=0.0; //v[280]
    X[280]=0.0; //v[281]
    X[281]=0.0; //v[282]
    X[282]=0.0; //v[283]
    X[283]=0.0; //v[284]
    X[284]=0.0; //v[285]
    X[285]=0.0; //v[286]
    X[286]=0.0; //v[287]
    X[287]=0.0; //v[288]
    X[288]=0.0; //v[289]
    X[289]=0.0; //v[290]
    X[290]=0.0; //v[291]
    X[291]=0.0; //v[292]
    X[292]=0.0; //v[293]
    X[293]=0.0; //v[294]
    X[294]=0.0; //v[295]
    X[295]=0.0; //v[296]
    X[296]=0.0; //v[297]
    X[297]=0.0; //v[298]
    X[298]=0.0; //v[299]
    X[299]=0.0; //v[300]
    X[300]=0.0; //v[301]
    X[301]=0.0; //v[302]
    X[302]=0.0; //v[303]
    X[303]=0.0; //v[304]
    X[304]=0.0; //v[305]
    X[305]=0.0; //v[306]
    X[306]=0.0; //v[307]
    X[307]=0.0; //v[308]
    X[308]=0.0; //v[309]
    X[309]=0.0; //v[310]
    X[310]=0.0; //v[311]
    X[311]=0.0; //v[312]
    X[312]=0.0; //v[313]
    X[313]=0.0; //v[314]
    X[314]=0.0; //v[315]
    X[315]=0.0; //v[316]
    X[316]=0.0; //v[317]
    X[317]=0.0; //v[318]
    X[318]=0.0; //v[319]
    X[319]=0.0; //v[320]
    X[320]=0.0; //v[321]
    X[321]=0.0; //v[322]
    X[322]=0.0; //v[323]
    X[323]=0.0; //v[324]
    X[324]=0.0; //v[325]
    X[325]=0.0; //v[326]
    X[326]=0.0; //v[327]
    X[327]=0.0; //v[328]
    X[328]=0.0; //v[329]
    X[329]=0.0; //v[330]
    X[330]=0.0; //v[331]
    X[331]=0.0; //v[332]
    X[332]=0.0; //v[333]
    X[333]=0.0; //v[334]
    X[334]=0.0; //v[335]
    X[335]=0.0; //v[336]
    X[336]=0.0; //v[337]
    X[337]=0.0; //v[338]
    X[338]=0.0; //v[339]
    X[339]=0.0; //v[340]
    X[340]=0.0; //v[341]
    X[341]=0.0; //v[342]
    X[342]=0.0; //v[343]
    X[343]=0.0; //v[344]
    X[344]=0.0; //v[345]
    X[345]=0.0; //v[346]
    X[346]=0.0; //v[347]
    X[347]=0.0; //v[348]
    X[348]=0.0; //v[349]
    X[349]=0.0; //v[350]
    X[350]=0.0; //v[351]
    X[351]=0.0; //v[352]
    X[352]=0.0; //v[353]
    X[353]=0.0; //v[354]
    X[354]=0.0; //v[355]
    X[355]=0.0; //v[356]
    X[356]=0.0; //v[357]
    X[357]=0.0; //v[358]
    X[358]=0.0; //v[359]
    X[359]=0.0; //v[360]
    X[360]=0.0; //v[361]
    X[361]=0.0; //v[362]
    X[362]=0.0; //v[363]
    X[363]=0.0; //v[364]
    X[364]=0.0; //v[365]
    X[365]=0.0; //v[366]
    X[366]=0.0; //v[367]
    X[367]=0.0; //v[368]
    X[368]=0.0; //v[369]
    X[369]=0.0; //v[370]
    X[370]=0.0; //v[371]
    X[371]=0.0; //v[372]
    X[372]=0.0; //v[373]
    X[373]=0.0; //v[374]
    X[374]=0.0; //v[375]
    X[375]=0.0; //v[376]
    X[376]=0.0; //v[377]
    X[377]=0.0; //v[378]
    X[378]=0.0; //v[379]
    X[379]=0.0; //v[380]
    X[380]=0.0; //v[381]
    X[381]=0.0; //v[382]
    X[382]=0.0; //v[383]
    X[383]=0.0; //v[384]
    X[384]=0.0; //v[385]
    X[385]=0.0; //v[386]
    X[386]=0.0; //v[387]
    X[387]=0.0; //v[388]
    X[388]=0.0; //v[389]
    X[389]=0.0; //v[390]
    X[390]=0.0; //v[391]
    X[391]=0.0; //v[392]
    X[392]=0.0; //v[393]
    X[393]=0.0; //v[394]
    X[394]=0.0; //v[395]
    X[395]=0.0; //v[396]
    X[396]=0.0; //v[397]
    X[397]=0.0; //v[398]
    X[398]=0.0; //v[399]
    X[399]=0.0; //v[400]
    X[400]=400.0; //x[1]
    X[401]=0.0; //x[2]
    X[402]=0.0; //x[3]
    X[403]=0.0; //x[4]
    X[404]=0.0; //x[5]
    X[405]=0.0; //x[6]
    X[406]=0.0; //x[7]
    X[407]=0.0; //x[8]
    X[408]=0.0; //x[9]
    X[409]=0.0; //x[10]
    X[410]=0.0; //x[11]
    X[411]=0.0; //x[12]
    X[412]=0.0; //x[13]
    X[413]=0.0; //x[14]
    X[414]=0.0; //x[15]
    X[415]=0.0; //x[16]
    X[416]=0.0; //x[17]
    X[417]=0.0; //x[18]
    X[418]=0.0; //x[19]
    X[419]=0.0; //x[20]
    X[420]=0.0; //x[21]
    X[421]=0.0; //x[22]
    X[422]=0.0; //x[23]
    X[423]=0.0; //x[24]
    X[424]=0.0; //x[25]
    X[425]=0.0; //x[26]
    X[426]=0.0; //x[27]
    X[427]=0.0; //x[28]
    X[428]=0.0; //x[29]
    X[429]=0.0; //x[30]
    X[430]=0.0; //x[31]
    X[431]=0.0; //x[32]
    X[432]=0.0; //x[33]
    X[433]=0.0; //x[34]
    X[434]=0.0; //x[35]
    X[435]=0.0; //x[36]
    X[436]=0.0; //x[37]
    X[437]=0.0; //x[38]
    X[438]=0.0; //x[39]
    X[439]=0.0; //x[40]
    X[440]=0.0; //x[41]
    X[441]=0.0; //x[42]
    X[442]=0.0; //x[43]
    X[443]=0.0; //x[44]
    X[444]=0.0; //x[45]
    X[445]=0.0; //x[46]
    X[446]=0.0; //x[47]
    X[447]=0.0; //x[48]
    X[448]=0.0; //x[49]
    X[449]=0.0; //x[50]
    X[450]=0.0; //x[51]
    X[451]=0.0; //x[52]
    X[452]=0.0; //x[53]
    X[453]=0.0; //x[54]
    X[454]=0.0; //x[55]
    X[455]=0.0; //x[56]
    X[456]=0.0; //x[57]
    X[457]=0.0; //x[58]
    X[458]=0.0; //x[59]
    X[459]=0.0; //x[60]
    X[460]=0.0; //x[61]
    X[461]=0.0; //x[62]
    X[462]=0.0; //x[63]
    X[463]=0.0; //x[64]
    X[464]=0.0; //x[65]
    X[465]=0.0; //x[66]
    X[466]=0.0; //x[67]
    X[467]=0.0; //x[68]
    X[468]=0.0; //x[69]
    X[469]=0.0; //x[70]
    X[470]=0.0; //x[71]
    X[471]=0.0; //x[72]
    X[472]=0.0; //x[73]
    X[473]=0.0; //x[74]
    X[474]=0.0; //x[75]
    X[475]=0.0; //x[76]
    X[476]=0.0; //x[77]
    X[477]=0.0; //x[78]
    X[478]=0.0; //x[79]
    X[479]=0.0; //x[80]
    X[480]=0.0; //x[81]
    X[481]=0.0; //x[82]
    X[482]=0.0; //x[83]
    X[483]=0.0; //x[84]
    X[484]=0.0; //x[85]
    X[485]=0.0; //x[86]
    X[486]=0.0; //x[87]
    X[487]=0.0; //x[88]
    X[488]=0.0; //x[89]
    X[489]=0.0; //x[90]
    X[490]=0.0; //x[91]
    X[491]=0.0; //x[92]
    X[492]=0.0; //x[93]
    X[493]=0.0; //x[94]
    X[494]=0.0; //x[95]
    X[495]=0.0; //x[96]
    X[496]=0.0; //x[97]
    X[497]=0.0; //x[98]
    X[498]=0.0; //x[99]
    X[499]=0.0; //x[100]
    X[500]=0.0; //x[101]
    X[501]=0.0; //x[102]
    X[502]=0.0; //x[103]
    X[503]=0.0; //x[104]
    X[504]=0.0; //x[105]
    X[505]=0.0; //x[106]
    X[506]=0.0; //x[107]
    X[507]=0.0; //x[108]
    X[508]=0.0; //x[109]
    X[509]=0.0; //x[110]
    X[510]=0.0; //x[111]
    X[511]=0.0; //x[112]
    X[512]=0.0; //x[113]
    X[513]=0.0; //x[114]
    X[514]=0.0; //x[115]
    X[515]=0.0; //x[116]
    X[516]=0.0; //x[117]
    X[517]=0.0; //x[118]
    X[518]=0.0; //x[119]
    X[519]=0.0; //x[120]
    X[520]=0.0; //x[121]
    X[521]=0.0; //x[122]
    X[522]=0.0; //x[123]
    X[523]=0.0; //x[124]
    X[524]=0.0; //x[125]
    X[525]=0.0; //x[126]
    X[526]=0.0; //x[127]
    X[527]=0.0; //x[128]
    X[528]=0.0; //x[129]
    X[529]=0.0; //x[130]
    X[530]=0.0; //x[131]
    X[531]=0.0; //x[132]
    X[532]=0.0; //x[133]
    X[533]=0.0; //x[134]
    X[534]=0.0; //x[135]
    X[535]=0.0; //x[136]
    X[536]=0.0; //x[137]
    X[537]=0.0; //x[138]
    X[538]=0.0; //x[139]
    X[539]=0.0; //x[140]
    X[540]=0.0; //x[141]
    X[541]=0.0; //x[142]
    X[542]=0.0; //x[143]
    X[543]=0.0; //x[144]
    X[544]=0.0; //x[145]
    X[545]=0.0; //x[146]
    X[546]=0.0; //x[147]
    X[547]=0.0; //x[148]
    X[548]=0.0; //x[149]
    X[549]=0.0; //x[150]
    X[550]=0.0; //x[151]
    X[551]=0.0; //x[152]
    X[552]=0.0; //x[153]
    X[553]=0.0; //x[154]
    X[554]=0.0; //x[155]
    X[555]=0.0; //x[156]
    X[556]=0.0; //x[157]
    X[557]=0.0; //x[158]
    X[558]=0.0; //x[159]
    X[559]=0.0; //x[160]
    X[560]=0.0; //x[161]
    X[561]=0.0; //x[162]
    X[562]=0.0; //x[163]
    X[563]=0.0; //x[164]
    X[564]=0.0; //x[165]
    X[565]=0.0; //x[166]
    X[566]=0.0; //x[167]
    X[567]=0.0; //x[168]
    X[568]=0.0; //x[169]
    X[569]=0.0; //x[170]
    X[570]=0.0; //x[171]
    X[571]=0.0; //x[172]
    X[572]=0.0; //x[173]
    X[573]=0.0; //x[174]
    X[574]=0.0; //x[175]
    X[575]=0.0; //x[176]
    X[576]=0.0; //x[177]
    X[577]=0.0; //x[178]
    X[578]=0.0; //x[179]
    X[579]=0.0; //x[180]
    X[580]=0.0; //x[181]
    X[581]=0.0; //x[182]
    X[582]=0.0; //x[183]
    X[583]=0.0; //x[184]
    X[584]=0.0; //x[185]
    X[585]=0.0; //x[186]
    X[586]=0.0; //x[187]
    X[587]=0.0; //x[188]
    X[588]=0.0; //x[189]
    X[589]=0.0; //x[190]
    X[590]=0.0; //x[191]
    X[591]=0.0; //x[192]
    X[592]=0.0; //x[193]
    X[593]=0.0; //x[194]
    X[594]=0.0; //x[195]
    X[595]=0.0; //x[196]
    X[596]=0.0; //x[197]
    X[597]=0.0; //x[198]
    X[598]=0.0; //x[199]
    X[599]=0.0; //x[200]
    X[600]=0.0; //x[201]
    X[601]=0.0; //x[202]
    X[602]=0.0; //x[203]
    X[603]=0.0; //x[204]
    X[604]=0.0; //x[205]
    X[605]=0.0; //x[206]
    X[606]=0.0; //x[207]
    X[607]=0.0; //x[208]
    X[608]=0.0; //x[209]
    X[609]=0.0; //x[210]
    X[610]=0.0; //x[211]
    X[611]=0.0; //x[212]
    X[612]=0.0; //x[213]
    X[613]=0.0; //x[214]
    X[614]=0.0; //x[215]
    X[615]=0.0; //x[216]
    X[616]=0.0; //x[217]
    X[617]=0.0; //x[218]
    X[618]=0.0; //x[219]
    X[619]=0.0; //x[220]
    X[620]=0.0; //x[221]
    X[621]=0.0; //x[222]
    X[622]=0.0; //x[223]
    X[623]=0.0; //x[224]
    X[624]=0.0; //x[225]
    X[625]=0.0; //x[226]
    X[626]=0.0; //x[227]
    X[627]=0.0; //x[228]
    X[628]=0.0; //x[229]
    X[629]=0.0; //x[230]
    X[630]=0.0; //x[231]
    X[631]=0.0; //x[232]
    X[632]=0.0; //x[233]
    X[633]=0.0; //x[234]
    X[634]=0.0; //x[235]
    X[635]=0.0; //x[236]
    X[636]=0.0; //x[237]
    X[637]=0.0; //x[238]
    X[638]=0.0; //x[239]
    X[639]=0.0; //x[240]
    X[640]=0.0; //x[241]
    X[641]=0.0; //x[242]
    X[642]=0.0; //x[243]
    X[643]=0.0; //x[244]
    X[644]=0.0; //x[245]
    X[645]=0.0; //x[246]
    X[646]=0.0; //x[247]
    X[647]=0.0; //x[248]
    X[648]=0.0; //x[249]
    X[649]=0.0; //x[250]
    X[650]=0.0; //x[251]
    X[651]=0.0; //x[252]
    X[652]=0.0; //x[253]
    X[653]=0.0; //x[254]
    X[654]=0.0; //x[255]
    X[655]=0.0; //x[256]
    X[656]=0.0; //x[257]
    X[657]=0.0; //x[258]
    X[658]=0.0; //x[259]
    X[659]=0.0; //x[260]
    X[660]=0.0; //x[261]
    X[661]=0.0; //x[262]
    X[662]=0.0; //x[263]
    X[663]=0.0; //x[264]
    X[664]=0.0; //x[265]
    X[665]=0.0; //x[266]
    X[666]=0.0; //x[267]
    X[667]=0.0; //x[268]
    X[668]=0.0; //x[269]
    X[669]=0.0; //x[270]
    X[670]=0.0; //x[271]
    X[671]=0.0; //x[272]
    X[672]=0.0; //x[273]
    X[673]=0.0; //x[274]
    X[674]=0.0; //x[275]
    X[675]=0.0; //x[276]
    X[676]=0.0; //x[277]
    X[677]=0.0; //x[278]
    X[678]=0.0; //x[279]
    X[679]=0.0; //x[280]
    X[680]=0.0; //x[281]
    X[681]=0.0; //x[282]
    X[682]=0.0; //x[283]
    X[683]=0.0; //x[284]
    X[684]=0.0; //x[285]
    X[685]=0.0; //x[286]
    X[686]=0.0; //x[287]
    X[687]=0.0; //x[288]
    X[688]=0.0; //x[289]
    X[689]=0.0; //x[290]
    X[690]=0.0; //x[291]
    X[691]=0.0; //x[292]
    X[692]=0.0; //x[293]
    X[693]=0.0; //x[294]
    X[694]=0.0; //x[295]
    X[695]=0.0; //x[296]
    X[696]=0.0; //x[297]
    X[697]=0.0; //x[298]
    X[698]=0.0; //x[299]
    X[699]=0.0; //x[300]
    X[700]=0.0; //x[301]
    X[701]=0.0; //x[302]
    X[702]=0.0; //x[303]
    X[703]=0.0; //x[304]
    X[704]=0.0; //x[305]
    X[705]=0.0; //x[306]
    X[706]=0.0; //x[307]
    X[707]=0.0; //x[308]
    X[708]=0.0; //x[309]
    X[709]=0.0; //x[310]
    X[710]=0.0; //x[311]
    X[711]=0.0; //x[312]
    X[712]=0.0; //x[313]
    X[713]=0.0; //x[314]
    X[714]=0.0; //x[315]
    X[715]=0.0; //x[316]
    X[716]=0.0; //x[317]
    X[717]=0.0; //x[318]
    X[718]=0.0; //x[319]
    X[719]=0.0; //x[320]
    X[720]=0.0; //x[321]
    X[721]=0.0; //x[322]
    X[722]=0.0; //x[323]
    X[723]=0.0; //x[324]
    X[724]=0.0; //x[325]
    X[725]=0.0; //x[326]
    X[726]=0.0; //x[327]
    X[727]=0.0; //x[328]
    X[728]=0.0; //x[329]
    X[729]=0.0; //x[330]
    X[730]=0.0; //x[331]
    X[731]=0.0; //x[332]
    X[732]=0.0; //x[333]
    X[733]=0.0; //x[334]
    X[734]=0.0; //x[335]
    X[735]=0.0; //x[336]
    X[736]=0.0; //x[337]
    X[737]=0.0; //x[338]
    X[738]=0.0; //x[339]
    X[739]=0.0; //x[340]
    X[740]=0.0; //x[341]
    X[741]=0.0; //x[342]
    X[742]=0.0; //x[343]
    X[743]=0.0; //x[344]
    X[744]=0.0; //x[345]
    X[745]=0.0; //x[346]
    X[746]=0.0; //x[347]
    X[747]=0.0; //x[348]
    X[748]=0.0; //x[349]
    X[749]=0.0; //x[350]
    X[750]=0.0; //x[351]
    X[751]=0.0; //x[352]
    X[752]=0.0; //x[353]
    X[753]=0.0; //x[354]
    X[754]=0.0; //x[355]
    X[755]=0.0; //x[356]
    X[756]=0.0; //x[357]
    X[757]=0.0; //x[358]
    X[758]=0.0; //x[359]
    X[759]=0.0; //x[360]
    X[760]=0.0; //x[361]
    X[761]=0.0; //x[362]
    X[762]=0.0; //x[363]
    X[763]=0.0; //x[364]
    X[764]=0.0; //x[365]
    X[765]=0.0; //x[366]
    X[766]=0.0; //x[367]
    X[767]=0.0; //x[368]
    X[768]=0.0; //x[369]
    X[769]=0.0; //x[370]
    X[770]=0.0; //x[371]
    X[771]=0.0; //x[372]
    X[772]=0.0; //x[373]
    X[773]=0.0; //x[374]
    X[774]=0.0; //x[375]
    X[775]=0.0; //x[376]
    X[776]=0.0; //x[377]
    X[777]=0.0; //x[378]
    X[778]=0.0; //x[379]
    X[779]=0.0; //x[380]
    X[780]=0.0; //x[381]
    X[781]=0.0; //x[382]
    X[782]=0.0; //x[383]
    X[783]=0.0; //x[384]
    X[784]=0.0; //x[385]
    X[785]=0.0; //x[386]
    X[786]=0.0; //x[387]
    X[787]=0.0; //x[388]
    X[788]=0.0; //x[389]
    X[789]=0.0; //x[390]
    X[790]=0.0; //x[391]
    X[791]=0.0; //x[392]
    X[792]=0.0; //x[393]
    X[793]=0.0; //x[394]
    X[794]=0.0; //x[395]
    X[795]=0.0; //x[396]
    X[796]=0.0; //x[397]
    X[797]=0.0; //x[398]
    X[798]=0.0; //x[399]
    X[799]=0.0; //x[400]

}

template <class Precision> __forceinline__ __device__ void PerThread_Finalization(
    int tid, int NT, int& DOIDX, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR,       int* sPARi, Precision* ACC, int* ACCi
) {
	
}


#endif
