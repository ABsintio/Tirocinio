
#ifndef COCURRENTHEATEXCHANGEREQUATIONS_N_80_PERTHREAD_SYSTEMDEFINITION_H
#define COCURRENTHEATEXCHANGEREQUATIONS_N_80_PERTHREAD_SYSTEMDEFINITION_H

#include <fstream>
#include <iostream>
#include <string>
#include "Functions.cuh"


template<class Precision> __forceinline__ __device__ void PerThread_OdeFunction(
	int tid, int NT, \
	Precision*    F, Precision*    X, Precision     T, \
	Precision* cPAR, Precision* sPAR, int*      sPARi, Precision* ACC, int* ACCi  		
) {
    ACC[161]=310.0;
    ACC[160]=(T < 8.0 ? 300.0 : 301.0);
    ACC[0]=(0.1265822784810127 * ((X[158] + (-0.5 * (ACC[160] + X[0]))) * (sPAR[6] * sPAR[9])));
    ACC[79]=(0.1265822784810127 * (((0.5 * (310.0 + X[79])) - X[158]) * (sPAR[7] * sPAR[9])));
    ACC[162]=(T < 15.0 ? 1.0 : 1.1);
    ACC[1]=(0.1265822784810127 * ((X[159] + (-0.5 * (X[0] + X[1]))) * (sPAR[6] * sPAR[9])));
    ACC[80]=(0.1265822784810127 * (((0.5 * (X[79] + X[80])) - X[159]) * (sPAR[7] * sPAR[9])));
    ACC[2]=(0.1265822784810127 * ((X[160] + (-0.5 * (X[1] + X[2]))) * (sPAR[6] * sPAR[9])));
    ACC[81]=(0.1265822784810127 * (((0.5 * (X[80] + X[81])) - X[160]) * (sPAR[7] * sPAR[9])));
    ACC[3]=(0.1265822784810127 * ((X[161] + (-0.5 * (X[2] + X[3]))) * (sPAR[6] * sPAR[9])));
    ACC[82]=(0.1265822784810127 * (((0.5 * (X[81] + X[82])) - X[161]) * (sPAR[7] * sPAR[9])));
    ACC[4]=(0.1265822784810127 * ((X[162] + (-0.5 * (X[3] + X[4]))) * (sPAR[6] * sPAR[9])));
    ACC[83]=(0.1265822784810127 * (((0.5 * (X[82] + X[83])) - X[162]) * (sPAR[7] * sPAR[9])));
    ACC[5]=(0.1265822784810127 * ((X[163] + (-0.5 * (X[4] + X[5]))) * (sPAR[6] * sPAR[9])));
    ACC[84]=(0.1265822784810127 * (((0.5 * (X[83] + X[84])) - X[163]) * (sPAR[7] * sPAR[9])));
    ACC[6]=(0.1265822784810127 * ((X[164] + (-0.5 * (X[5] + X[6]))) * (sPAR[6] * sPAR[9])));
    ACC[85]=(0.1265822784810127 * (((0.5 * (X[84] + X[85])) - X[164]) * (sPAR[7] * sPAR[9])));
    ACC[7]=(0.1265822784810127 * ((X[165] + (-0.5 * (X[6] + X[7]))) * (sPAR[6] * sPAR[9])));
    ACC[86]=(0.1265822784810127 * (((0.5 * (X[85] + X[86])) - X[165]) * (sPAR[7] * sPAR[9])));
    ACC[8]=(0.1265822784810127 * ((X[166] + (-0.5 * (X[7] + X[8]))) * (sPAR[6] * sPAR[9])));
    ACC[87]=(0.1265822784810127 * (((0.5 * (X[86] + X[87])) - X[166]) * (sPAR[7] * sPAR[9])));
    ACC[9]=(0.1265822784810127 * ((X[167] + (-0.5 * (X[8] + X[9]))) * (sPAR[6] * sPAR[9])));
    ACC[88]=(0.1265822784810127 * (((0.5 * (X[87] + X[88])) - X[167]) * (sPAR[7] * sPAR[9])));
    ACC[10]=(0.1265822784810127 * ((X[168] + (-0.5 * (X[9] + X[10]))) * (sPAR[6] * sPAR[9])));
    ACC[89]=(0.1265822784810127 * (((0.5 * (X[88] + X[89])) - X[168]) * (sPAR[7] * sPAR[9])));
    ACC[11]=(0.1265822784810127 * ((X[169] + (-0.5 * (X[10] + X[11]))) * (sPAR[6] * sPAR[9])));
    ACC[90]=(0.1265822784810127 * (((0.5 * (X[89] + X[90])) - X[169]) * (sPAR[7] * sPAR[9])));
    ACC[12]=(0.1265822784810127 * ((X[170] + (-0.5 * (X[11] + X[12]))) * (sPAR[6] * sPAR[9])));
    ACC[91]=(0.1265822784810127 * (((0.5 * (X[90] + X[91])) - X[170]) * (sPAR[7] * sPAR[9])));
    ACC[13]=(0.1265822784810127 * ((X[171] + (-0.5 * (X[12] + X[13]))) * (sPAR[6] * sPAR[9])));
    ACC[92]=(0.1265822784810127 * (((0.5 * (X[91] + X[92])) - X[171]) * (sPAR[7] * sPAR[9])));
    ACC[14]=(0.1265822784810127 * ((X[172] + (-0.5 * (X[13] + X[14]))) * (sPAR[6] * sPAR[9])));
    ACC[93]=(0.1265822784810127 * (((0.5 * (X[92] + X[93])) - X[172]) * (sPAR[7] * sPAR[9])));
    ACC[15]=(0.1265822784810127 * ((X[173] + (-0.5 * (X[14] + X[15]))) * (sPAR[6] * sPAR[9])));
    ACC[94]=(0.1265822784810127 * (((0.5 * (X[93] + X[94])) - X[173]) * (sPAR[7] * sPAR[9])));
    ACC[16]=(0.1265822784810127 * ((X[174] + (-0.5 * (X[15] + X[16]))) * (sPAR[6] * sPAR[9])));
    ACC[95]=(0.1265822784810127 * (((0.5 * (X[94] + X[95])) - X[174]) * (sPAR[7] * sPAR[9])));
    ACC[17]=(0.1265822784810127 * ((X[175] + (-0.5 * (X[16] + X[17]))) * (sPAR[6] * sPAR[9])));
    ACC[96]=(0.1265822784810127 * (((0.5 * (X[95] + X[96])) - X[175]) * (sPAR[7] * sPAR[9])));
    ACC[18]=(0.1265822784810127 * ((X[176] + (-0.5 * (X[17] + X[18]))) * (sPAR[6] * sPAR[9])));
    ACC[97]=(0.1265822784810127 * (((0.5 * (X[96] + X[97])) - X[176]) * (sPAR[7] * sPAR[9])));
    ACC[19]=(0.1265822784810127 * ((X[177] + (-0.5 * (X[18] + X[19]))) * (sPAR[6] * sPAR[9])));
    ACC[98]=(0.1265822784810127 * (((0.5 * (X[97] + X[98])) - X[177]) * (sPAR[7] * sPAR[9])));
    ACC[20]=(0.1265822784810127 * ((X[178] + (-0.5 * (X[19] + X[20]))) * (sPAR[6] * sPAR[9])));
    ACC[99]=(0.1265822784810127 * (((0.5 * (X[98] + X[99])) - X[178]) * (sPAR[7] * sPAR[9])));
    ACC[21]=(0.1265822784810127 * ((X[179] + (-0.5 * (X[20] + X[21]))) * (sPAR[6] * sPAR[9])));
    ACC[100]=(0.1265822784810127 * (((0.5 * (X[99] + X[100])) - X[179]) * (sPAR[7] * sPAR[9])));
    ACC[22]=(0.1265822784810127 * ((X[180] + (-0.5 * (X[21] + X[22]))) * (sPAR[6] * sPAR[9])));
    ACC[101]=(0.1265822784810127 * (((0.5 * (X[100] + X[101])) - X[180]) * (sPAR[7] * sPAR[9])));
    ACC[23]=(0.1265822784810127 * ((X[181] + (-0.5 * (X[22] + X[23]))) * (sPAR[6] * sPAR[9])));
    ACC[102]=(0.1265822784810127 * (((0.5 * (X[101] + X[102])) - X[181]) * (sPAR[7] * sPAR[9])));
    ACC[24]=(0.1265822784810127 * ((X[182] + (-0.5 * (X[23] + X[24]))) * (sPAR[6] * sPAR[9])));
    ACC[103]=(0.1265822784810127 * (((0.5 * (X[102] + X[103])) - X[182]) * (sPAR[7] * sPAR[9])));
    ACC[25]=(0.1265822784810127 * ((X[183] + (-0.5 * (X[24] + X[25]))) * (sPAR[6] * sPAR[9])));
    ACC[104]=(0.1265822784810127 * (((0.5 * (X[103] + X[104])) - X[183]) * (sPAR[7] * sPAR[9])));
    ACC[26]=(0.1265822784810127 * ((X[184] + (-0.5 * (X[25] + X[26]))) * (sPAR[6] * sPAR[9])));
    ACC[105]=(0.1265822784810127 * (((0.5 * (X[104] + X[105])) - X[184]) * (sPAR[7] * sPAR[9])));
    ACC[27]=(0.1265822784810127 * ((X[185] + (-0.5 * (X[26] + X[27]))) * (sPAR[6] * sPAR[9])));
    ACC[106]=(0.1265822784810127 * (((0.5 * (X[105] + X[106])) - X[185]) * (sPAR[7] * sPAR[9])));
    ACC[28]=(0.1265822784810127 * ((X[186] + (-0.5 * (X[27] + X[28]))) * (sPAR[6] * sPAR[9])));
    ACC[107]=(0.1265822784810127 * (((0.5 * (X[106] + X[107])) - X[186]) * (sPAR[7] * sPAR[9])));
    ACC[29]=(0.1265822784810127 * ((X[187] + (-0.5 * (X[28] + X[29]))) * (sPAR[6] * sPAR[9])));
    ACC[108]=(0.1265822784810127 * (((0.5 * (X[107] + X[108])) - X[187]) * (sPAR[7] * sPAR[9])));
    ACC[30]=(0.1265822784810127 * ((X[188] + (-0.5 * (X[29] + X[30]))) * (sPAR[6] * sPAR[9])));
    ACC[109]=(0.1265822784810127 * (((0.5 * (X[108] + X[109])) - X[188]) * (sPAR[7] * sPAR[9])));
    ACC[31]=(0.1265822784810127 * ((X[189] + (-0.5 * (X[30] + X[31]))) * (sPAR[6] * sPAR[9])));
    ACC[110]=(0.1265822784810127 * (((0.5 * (X[109] + X[110])) - X[189]) * (sPAR[7] * sPAR[9])));
    ACC[32]=(0.1265822784810127 * ((X[190] + (-0.5 * (X[31] + X[32]))) * (sPAR[6] * sPAR[9])));
    ACC[111]=(0.1265822784810127 * (((0.5 * (X[110] + X[111])) - X[190]) * (sPAR[7] * sPAR[9])));
    ACC[33]=(0.1265822784810127 * ((X[191] + (-0.5 * (X[32] + X[33]))) * (sPAR[6] * sPAR[9])));
    ACC[112]=(0.1265822784810127 * (((0.5 * (X[111] + X[112])) - X[191]) * (sPAR[7] * sPAR[9])));
    ACC[34]=(0.1265822784810127 * ((X[192] + (-0.5 * (X[33] + X[34]))) * (sPAR[6] * sPAR[9])));
    ACC[113]=(0.1265822784810127 * (((0.5 * (X[112] + X[113])) - X[192]) * (sPAR[7] * sPAR[9])));
    ACC[35]=(0.1265822784810127 * ((X[193] + (-0.5 * (X[34] + X[35]))) * (sPAR[6] * sPAR[9])));
    ACC[114]=(0.1265822784810127 * (((0.5 * (X[113] + X[114])) - X[193]) * (sPAR[7] * sPAR[9])));
    ACC[36]=(0.1265822784810127 * ((X[194] + (-0.5 * (X[35] + X[36]))) * (sPAR[6] * sPAR[9])));
    ACC[115]=(0.1265822784810127 * (((0.5 * (X[114] + X[115])) - X[194]) * (sPAR[7] * sPAR[9])));
    ACC[37]=(0.1265822784810127 * ((X[195] + (-0.5 * (X[36] + X[37]))) * (sPAR[6] * sPAR[9])));
    ACC[116]=(0.1265822784810127 * (((0.5 * (X[115] + X[116])) - X[195]) * (sPAR[7] * sPAR[9])));
    ACC[38]=(0.1265822784810127 * ((X[196] + (-0.5 * (X[37] + X[38]))) * (sPAR[6] * sPAR[9])));
    ACC[117]=(0.1265822784810127 * (((0.5 * (X[116] + X[117])) - X[196]) * (sPAR[7] * sPAR[9])));
    ACC[39]=(0.1265822784810127 * ((X[197] + (-0.5 * (X[38] + X[39]))) * (sPAR[6] * sPAR[9])));
    ACC[118]=(0.1265822784810127 * (((0.5 * (X[117] + X[118])) - X[197]) * (sPAR[7] * sPAR[9])));
    ACC[40]=(0.1265822784810127 * ((X[198] + (-0.5 * (X[39] + X[40]))) * (sPAR[6] * sPAR[9])));
    ACC[119]=(0.1265822784810127 * (((0.5 * (X[118] + X[119])) - X[198]) * (sPAR[7] * sPAR[9])));
    ACC[41]=(0.1265822784810127 * ((X[199] + (-0.5 * (X[40] + X[41]))) * (sPAR[6] * sPAR[9])));
    ACC[120]=(0.1265822784810127 * (((0.5 * (X[119] + X[120])) - X[199]) * (sPAR[7] * sPAR[9])));
    ACC[42]=(0.1265822784810127 * ((X[200] + (-0.5 * (X[41] + X[42]))) * (sPAR[6] * sPAR[9])));
    ACC[121]=(0.1265822784810127 * (((0.5 * (X[120] + X[121])) - X[200]) * (sPAR[7] * sPAR[9])));
    ACC[43]=(0.1265822784810127 * ((X[201] + (-0.5 * (X[42] + X[43]))) * (sPAR[6] * sPAR[9])));
    ACC[122]=(0.1265822784810127 * (((0.5 * (X[121] + X[122])) - X[201]) * (sPAR[7] * sPAR[9])));
    ACC[44]=(0.1265822784810127 * ((X[202] + (-0.5 * (X[43] + X[44]))) * (sPAR[6] * sPAR[9])));
    ACC[123]=(0.1265822784810127 * (((0.5 * (X[122] + X[123])) - X[202]) * (sPAR[7] * sPAR[9])));
    ACC[45]=(0.1265822784810127 * ((X[203] + (-0.5 * (X[44] + X[45]))) * (sPAR[6] * sPAR[9])));
    ACC[124]=(0.1265822784810127 * (((0.5 * (X[123] + X[124])) - X[203]) * (sPAR[7] * sPAR[9])));
    ACC[46]=(0.1265822784810127 * ((X[204] + (-0.5 * (X[45] + X[46]))) * (sPAR[6] * sPAR[9])));
    ACC[125]=(0.1265822784810127 * (((0.5 * (X[124] + X[125])) - X[204]) * (sPAR[7] * sPAR[9])));
    ACC[47]=(0.1265822784810127 * ((X[205] + (-0.5 * (X[46] + X[47]))) * (sPAR[6] * sPAR[9])));
    ACC[126]=(0.1265822784810127 * (((0.5 * (X[125] + X[126])) - X[205]) * (sPAR[7] * sPAR[9])));
    ACC[48]=(0.1265822784810127 * ((X[206] + (-0.5 * (X[47] + X[48]))) * (sPAR[6] * sPAR[9])));
    ACC[127]=(0.1265822784810127 * (((0.5 * (X[126] + X[127])) - X[206]) * (sPAR[7] * sPAR[9])));
    ACC[49]=(0.1265822784810127 * ((X[207] + (-0.5 * (X[48] + X[49]))) * (sPAR[6] * sPAR[9])));
    ACC[128]=(0.1265822784810127 * (((0.5 * (X[127] + X[128])) - X[207]) * (sPAR[7] * sPAR[9])));
    ACC[50]=(0.1265822784810127 * ((X[208] + (-0.5 * (X[49] + X[50]))) * (sPAR[6] * sPAR[9])));
    ACC[129]=(0.1265822784810127 * (((0.5 * (X[128] + X[129])) - X[208]) * (sPAR[7] * sPAR[9])));
    ACC[51]=(0.1265822784810127 * ((X[209] + (-0.5 * (X[50] + X[51]))) * (sPAR[6] * sPAR[9])));
    ACC[130]=(0.1265822784810127 * (((0.5 * (X[129] + X[130])) - X[209]) * (sPAR[7] * sPAR[9])));
    ACC[52]=(0.1265822784810127 * ((X[210] + (-0.5 * (X[51] + X[52]))) * (sPAR[6] * sPAR[9])));
    ACC[131]=(0.1265822784810127 * (((0.5 * (X[130] + X[131])) - X[210]) * (sPAR[7] * sPAR[9])));
    ACC[53]=(0.1265822784810127 * ((X[211] + (-0.5 * (X[52] + X[53]))) * (sPAR[6] * sPAR[9])));
    ACC[132]=(0.1265822784810127 * (((0.5 * (X[131] + X[132])) - X[211]) * (sPAR[7] * sPAR[9])));
    ACC[54]=(0.1265822784810127 * ((X[212] + (-0.5 * (X[53] + X[54]))) * (sPAR[6] * sPAR[9])));
    ACC[133]=(0.1265822784810127 * (((0.5 * (X[132] + X[133])) - X[212]) * (sPAR[7] * sPAR[9])));
    ACC[55]=(0.1265822784810127 * ((X[213] + (-0.5 * (X[54] + X[55]))) * (sPAR[6] * sPAR[9])));
    ACC[134]=(0.1265822784810127 * (((0.5 * (X[133] + X[134])) - X[213]) * (sPAR[7] * sPAR[9])));
    ACC[56]=(0.1265822784810127 * ((X[214] + (-0.5 * (X[55] + X[56]))) * (sPAR[6] * sPAR[9])));
    ACC[135]=(0.1265822784810127 * (((0.5 * (X[134] + X[135])) - X[214]) * (sPAR[7] * sPAR[9])));
    ACC[57]=(0.1265822784810127 * ((X[215] + (-0.5 * (X[56] + X[57]))) * (sPAR[6] * sPAR[9])));
    ACC[136]=(0.1265822784810127 * (((0.5 * (X[135] + X[136])) - X[215]) * (sPAR[7] * sPAR[9])));
    ACC[58]=(0.1265822784810127 * ((X[216] + (-0.5 * (X[57] + X[58]))) * (sPAR[6] * sPAR[9])));
    ACC[137]=(0.1265822784810127 * (((0.5 * (X[136] + X[137])) - X[216]) * (sPAR[7] * sPAR[9])));
    ACC[59]=(0.1265822784810127 * ((X[217] + (-0.5 * (X[58] + X[59]))) * (sPAR[6] * sPAR[9])));
    ACC[138]=(0.1265822784810127 * (((0.5 * (X[137] + X[138])) - X[217]) * (sPAR[7] * sPAR[9])));
    ACC[60]=(0.1265822784810127 * ((X[218] + (-0.5 * (X[59] + X[60]))) * (sPAR[6] * sPAR[9])));
    ACC[139]=(0.1265822784810127 * (((0.5 * (X[138] + X[139])) - X[218]) * (sPAR[7] * sPAR[9])));
    ACC[61]=(0.1265822784810127 * ((X[219] + (-0.5 * (X[60] + X[61]))) * (sPAR[6] * sPAR[9])));
    ACC[140]=(0.1265822784810127 * (((0.5 * (X[139] + X[140])) - X[219]) * (sPAR[7] * sPAR[9])));
    ACC[62]=(0.1265822784810127 * ((X[220] + (-0.5 * (X[61] + X[62]))) * (sPAR[6] * sPAR[9])));
    ACC[141]=(0.1265822784810127 * (((0.5 * (X[140] + X[141])) - X[220]) * (sPAR[7] * sPAR[9])));
    ACC[63]=(0.1265822784810127 * ((X[221] + (-0.5 * (X[62] + X[63]))) * (sPAR[6] * sPAR[9])));
    ACC[142]=(0.1265822784810127 * (((0.5 * (X[141] + X[142])) - X[221]) * (sPAR[7] * sPAR[9])));
    ACC[64]=(0.1265822784810127 * ((X[222] + (-0.5 * (X[63] + X[64]))) * (sPAR[6] * sPAR[9])));
    ACC[143]=(0.1265822784810127 * (((0.5 * (X[142] + X[143])) - X[222]) * (sPAR[7] * sPAR[9])));
    ACC[65]=(0.1265822784810127 * ((X[223] + (-0.5 * (X[64] + X[65]))) * (sPAR[6] * sPAR[9])));
    ACC[144]=(0.1265822784810127 * (((0.5 * (X[143] + X[144])) - X[223]) * (sPAR[7] * sPAR[9])));
    ACC[66]=(0.1265822784810127 * ((X[224] + (-0.5 * (X[65] + X[66]))) * (sPAR[6] * sPAR[9])));
    ACC[145]=(0.1265822784810127 * (((0.5 * (X[144] + X[145])) - X[224]) * (sPAR[7] * sPAR[9])));
    ACC[67]=(0.1265822784810127 * ((X[225] + (-0.5 * (X[66] + X[67]))) * (sPAR[6] * sPAR[9])));
    ACC[146]=(0.1265822784810127 * (((0.5 * (X[145] + X[146])) - X[225]) * (sPAR[7] * sPAR[9])));
    ACC[68]=(0.1265822784810127 * ((X[226] + (-0.5 * (X[67] + X[68]))) * (sPAR[6] * sPAR[9])));
    ACC[147]=(0.1265822784810127 * (((0.5 * (X[146] + X[147])) - X[226]) * (sPAR[7] * sPAR[9])));
    ACC[69]=(0.1265822784810127 * ((X[227] + (-0.5 * (X[68] + X[69]))) * (sPAR[6] * sPAR[9])));
    ACC[148]=(0.1265822784810127 * (((0.5 * (X[147] + X[148])) - X[227]) * (sPAR[7] * sPAR[9])));
    ACC[70]=(0.1265822784810127 * ((X[228] + (-0.5 * (X[69] + X[70]))) * (sPAR[6] * sPAR[9])));
    ACC[149]=(0.1265822784810127 * (((0.5 * (X[148] + X[149])) - X[228]) * (sPAR[7] * sPAR[9])));
    ACC[71]=(0.1265822784810127 * ((X[229] + (-0.5 * (X[70] + X[71]))) * (sPAR[6] * sPAR[9])));
    ACC[150]=(0.1265822784810127 * (((0.5 * (X[149] + X[150])) - X[229]) * (sPAR[7] * sPAR[9])));
    ACC[72]=(0.1265822784810127 * ((X[230] + (-0.5 * (X[71] + X[72]))) * (sPAR[6] * sPAR[9])));
    ACC[151]=(0.1265822784810127 * (((0.5 * (X[150] + X[151])) - X[230]) * (sPAR[7] * sPAR[9])));
    ACC[73]=(0.1265822784810127 * ((X[231] + (-0.5 * (X[72] + X[73]))) * (sPAR[6] * sPAR[9])));
    ACC[152]=(0.1265822784810127 * (((0.5 * (X[151] + X[152])) - X[231]) * (sPAR[7] * sPAR[9])));
    ACC[74]=(0.1265822784810127 * ((X[232] + (-0.5 * (X[73] + X[74]))) * (sPAR[6] * sPAR[9])));
    ACC[153]=(0.1265822784810127 * (((0.5 * (X[152] + X[153])) - X[232]) * (sPAR[7] * sPAR[9])));
    ACC[75]=(0.1265822784810127 * ((X[233] + (-0.5 * (X[74] + X[75]))) * (sPAR[6] * sPAR[9])));
    ACC[154]=(0.1265822784810127 * (((0.5 * (X[153] + X[154])) - X[233]) * (sPAR[7] * sPAR[9])));
    ACC[76]=(0.1265822784810127 * ((X[234] + (-0.5 * (X[75] + X[76]))) * (sPAR[6] * sPAR[9])));
    ACC[155]=(0.1265822784810127 * (((0.5 * (X[154] + X[155])) - X[234]) * (sPAR[7] * sPAR[9])));
    ACC[77]=(0.1265822784810127 * ((X[235] + (-0.5 * (X[76] + X[77]))) * (sPAR[6] * sPAR[9])));
    ACC[156]=(0.1265822784810127 * (((0.5 * (X[155] + X[156])) - X[235]) * (sPAR[7] * sPAR[9])));
    ACC[78]=(0.1265822784810127 * ((X[236] + (-0.5 * (X[77] + X[78]))) * (sPAR[6] * sPAR[9])));
    ACC[158]=(ACC[0] + (ACC[1] + (ACC[2] + (ACC[3] + (ACC[4] + (ACC[5] + (ACC[6] + (ACC[7] + (ACC[8] + (ACC[9] + (ACC[10] + (ACC[11] + (ACC[12] + (ACC[13] + (ACC[14] + (ACC[15] + (ACC[16] + (ACC[17] + (ACC[18] + (ACC[19] + (ACC[20] + (ACC[21] + (ACC[22] + (ACC[23] + (ACC[24] + (ACC[25] + (ACC[26] + (ACC[27] + (ACC[28] + (ACC[29] + (ACC[30] + (ACC[31] + (ACC[32] + (ACC[33] + (ACC[34] + (ACC[35] + (ACC[36] + (ACC[37] + (ACC[38] + (ACC[39] + (ACC[40] + (ACC[41] + (ACC[42] + (ACC[43] + (ACC[44] + (ACC[45] + (ACC[46] + (ACC[47] + (ACC[48] + (ACC[49] + (ACC[50] + (ACC[51] + (ACC[52] + (ACC[53] + (ACC[54] + (ACC[55] + (ACC[56] + (ACC[57] + (ACC[58] + (ACC[59] + (ACC[60] + (ACC[61] + (ACC[62] + (ACC[63] + (ACC[64] + (ACC[65] + (ACC[66] + (ACC[67] + (ACC[68] + (ACC[69] + (ACC[70] + (ACC[71] + (ACC[72] + (ACC[73] + (ACC[74] + (ACC[75] + (ACC[76] + (ACC[77] + ACC[78]))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
    ACC[157]=(0.1265822784810127 * (((0.5 * (X[156] + X[157])) - X[236]) * (sPAR[7] * sPAR[9])));
    ACC[159]=(ACC[79] + (ACC[80] + (ACC[81] + (ACC[82] + (ACC[83] + (ACC[84] + (ACC[85] + (ACC[86] + (ACC[87] + (ACC[88] + (ACC[89] + (ACC[90] + (ACC[91] + (ACC[92] + (ACC[93] + (ACC[94] + (ACC[95] + (ACC[96] + (ACC[97] + (ACC[98] + (ACC[99] + (ACC[100] + (ACC[101] + (ACC[102] + (ACC[103] + (ACC[104] + (ACC[105] + (ACC[106] + (ACC[107] + (ACC[108] + (ACC[109] + (ACC[110] + (ACC[111] + (ACC[112] + (ACC[113] + (ACC[114] + (ACC[115] + (ACC[116] + (ACC[117] + (ACC[118] + (ACC[119] + (ACC[120] + (ACC[121] + (ACC[122] + (ACC[123] + (ACC[124] + (ACC[125] + (ACC[126] + (ACC[127] + (ACC[128] + (ACC[129] + (ACC[130] + (ACC[131] + (ACC[132] + (ACC[133] + (ACC[134] + (ACC[135] + (ACC[136] + (ACC[137] + (ACC[138] + (ACC[139] + (ACC[140] + (ACC[141] + (ACC[142] + (ACC[143] + (ACC[144] + (ACC[145] + (ACC[146] + (ACC[147] + (ACC[148] + (ACC[149] + (ACC[150] + (ACC[151] + (ACC[152] + (ACC[153] + (ACC[154] + (ACC[155] + (ACC[156] + ACC[157]))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
    F[79]=(((sPAR[12] * (sPAR[4] * (310.0 - X[79]))) - ACC[79]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[158]=((79.0 * (ACC[79] - ACC[0])) / sPAR[5]);
    F[0]=(((ACC[162] * (sPAR[3] * (ACC[160] - X[0]))) + ACC[0]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[1]=(((ACC[162] * (sPAR[3] * (X[0] - X[1]))) + ACC[1]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[159]=((79.0 * (ACC[80] - ACC[1])) / sPAR[5]);
    F[80]=(((sPAR[12] * (sPAR[4] * (X[79] - X[80]))) - ACC[80]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[2]=(((ACC[162] * (sPAR[3] * (X[1] - X[2]))) + ACC[2]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[160]=((79.0 * (ACC[81] - ACC[2])) / sPAR[5]);
    F[81]=(((sPAR[12] * (sPAR[4] * (X[80] - X[81]))) - ACC[81]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[3]=(((ACC[162] * (sPAR[3] * (X[2] - X[3]))) + ACC[3]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[161]=((79.0 * (ACC[82] - ACC[3])) / sPAR[5]);
    F[82]=(((sPAR[12] * (sPAR[4] * (X[81] - X[82]))) - ACC[82]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[4]=(((ACC[162] * (sPAR[3] * (X[3] - X[4]))) + ACC[4]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[162]=((79.0 * (ACC[83] - ACC[4])) / sPAR[5]);
    F[83]=(((sPAR[12] * (sPAR[4] * (X[82] - X[83]))) - ACC[83]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[5]=(((ACC[162] * (sPAR[3] * (X[4] - X[5]))) + ACC[5]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[163]=((79.0 * (ACC[84] - ACC[5])) / sPAR[5]);
    F[84]=(((sPAR[12] * (sPAR[4] * (X[83] - X[84]))) - ACC[84]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[6]=(((ACC[162] * (sPAR[3] * (X[5] - X[6]))) + ACC[6]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[164]=((79.0 * (ACC[85] - ACC[6])) / sPAR[5]);
    F[85]=(((sPAR[12] * (sPAR[4] * (X[84] - X[85]))) - ACC[85]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[7]=(((ACC[162] * (sPAR[3] * (X[6] - X[7]))) + ACC[7]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[165]=((79.0 * (ACC[86] - ACC[7])) / sPAR[5]);
    F[86]=(((sPAR[12] * (sPAR[4] * (X[85] - X[86]))) - ACC[86]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[8]=(((ACC[162] * (sPAR[3] * (X[7] - X[8]))) + ACC[8]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[166]=((79.0 * (ACC[87] - ACC[8])) / sPAR[5]);
    F[87]=(((sPAR[12] * (sPAR[4] * (X[86] - X[87]))) - ACC[87]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[9]=(((ACC[162] * (sPAR[3] * (X[8] - X[9]))) + ACC[9]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[167]=((79.0 * (ACC[88] - ACC[9])) / sPAR[5]);
    F[88]=(((sPAR[12] * (sPAR[4] * (X[87] - X[88]))) - ACC[88]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[10]=(((ACC[162] * (sPAR[3] * (X[9] - X[10]))) + ACC[10]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[168]=((79.0 * (ACC[89] - ACC[10])) / sPAR[5]);
    F[89]=(((sPAR[12] * (sPAR[4] * (X[88] - X[89]))) - ACC[89]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[11]=(((ACC[162] * (sPAR[3] * (X[10] - X[11]))) + ACC[11]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[169]=((79.0 * (ACC[90] - ACC[11])) / sPAR[5]);
    F[90]=(((sPAR[12] * (sPAR[4] * (X[89] - X[90]))) - ACC[90]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[12]=(((ACC[162] * (sPAR[3] * (X[11] - X[12]))) + ACC[12]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[170]=((79.0 * (ACC[91] - ACC[12])) / sPAR[5]);
    F[91]=(((sPAR[12] * (sPAR[4] * (X[90] - X[91]))) - ACC[91]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[13]=(((ACC[162] * (sPAR[3] * (X[12] - X[13]))) + ACC[13]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[171]=((79.0 * (ACC[92] - ACC[13])) / sPAR[5]);
    F[92]=(((sPAR[12] * (sPAR[4] * (X[91] - X[92]))) - ACC[92]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[14]=(((ACC[162] * (sPAR[3] * (X[13] - X[14]))) + ACC[14]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[172]=((79.0 * (ACC[93] - ACC[14])) / sPAR[5]);
    F[93]=(((sPAR[12] * (sPAR[4] * (X[92] - X[93]))) - ACC[93]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[15]=(((ACC[162] * (sPAR[3] * (X[14] - X[15]))) + ACC[15]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[173]=((79.0 * (ACC[94] - ACC[15])) / sPAR[5]);
    F[94]=(((sPAR[12] * (sPAR[4] * (X[93] - X[94]))) - ACC[94]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[16]=(((ACC[162] * (sPAR[3] * (X[15] - X[16]))) + ACC[16]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[174]=((79.0 * (ACC[95] - ACC[16])) / sPAR[5]);
    F[95]=(((sPAR[12] * (sPAR[4] * (X[94] - X[95]))) - ACC[95]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[17]=(((ACC[162] * (sPAR[3] * (X[16] - X[17]))) + ACC[17]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[175]=((79.0 * (ACC[96] - ACC[17])) / sPAR[5]);
    F[96]=(((sPAR[12] * (sPAR[4] * (X[95] - X[96]))) - ACC[96]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[18]=(((ACC[162] * (sPAR[3] * (X[17] - X[18]))) + ACC[18]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[176]=((79.0 * (ACC[97] - ACC[18])) / sPAR[5]);
    F[97]=(((sPAR[12] * (sPAR[4] * (X[96] - X[97]))) - ACC[97]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[19]=(((ACC[162] * (sPAR[3] * (X[18] - X[19]))) + ACC[19]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[177]=((79.0 * (ACC[98] - ACC[19])) / sPAR[5]);
    F[98]=(((sPAR[12] * (sPAR[4] * (X[97] - X[98]))) - ACC[98]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[20]=(((ACC[162] * (sPAR[3] * (X[19] - X[20]))) + ACC[20]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[178]=((79.0 * (ACC[99] - ACC[20])) / sPAR[5]);
    F[99]=(((sPAR[12] * (sPAR[4] * (X[98] - X[99]))) - ACC[99]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[21]=(((ACC[162] * (sPAR[3] * (X[20] - X[21]))) + ACC[21]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[179]=((79.0 * (ACC[100] - ACC[21])) / sPAR[5]);
    F[100]=(((sPAR[12] * (sPAR[4] * (X[99] - X[100]))) - ACC[100]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[22]=(((ACC[162] * (sPAR[3] * (X[21] - X[22]))) + ACC[22]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[180]=((79.0 * (ACC[101] - ACC[22])) / sPAR[5]);
    F[101]=(((sPAR[12] * (sPAR[4] * (X[100] - X[101]))) - ACC[101]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[23]=(((ACC[162] * (sPAR[3] * (X[22] - X[23]))) + ACC[23]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[181]=((79.0 * (ACC[102] - ACC[23])) / sPAR[5]);
    F[102]=(((sPAR[12] * (sPAR[4] * (X[101] - X[102]))) - ACC[102]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[24]=(((ACC[162] * (sPAR[3] * (X[23] - X[24]))) + ACC[24]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[182]=((79.0 * (ACC[103] - ACC[24])) / sPAR[5]);
    F[103]=(((sPAR[12] * (sPAR[4] * (X[102] - X[103]))) - ACC[103]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[25]=(((ACC[162] * (sPAR[3] * (X[24] - X[25]))) + ACC[25]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[183]=((79.0 * (ACC[104] - ACC[25])) / sPAR[5]);
    F[104]=(((sPAR[12] * (sPAR[4] * (X[103] - X[104]))) - ACC[104]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[26]=(((ACC[162] * (sPAR[3] * (X[25] - X[26]))) + ACC[26]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[184]=((79.0 * (ACC[105] - ACC[26])) / sPAR[5]);
    F[105]=(((sPAR[12] * (sPAR[4] * (X[104] - X[105]))) - ACC[105]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[27]=(((ACC[162] * (sPAR[3] * (X[26] - X[27]))) + ACC[27]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[185]=((79.0 * (ACC[106] - ACC[27])) / sPAR[5]);
    F[106]=(((sPAR[12] * (sPAR[4] * (X[105] - X[106]))) - ACC[106]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[28]=(((ACC[162] * (sPAR[3] * (X[27] - X[28]))) + ACC[28]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[186]=((79.0 * (ACC[107] - ACC[28])) / sPAR[5]);
    F[107]=(((sPAR[12] * (sPAR[4] * (X[106] - X[107]))) - ACC[107]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[29]=(((ACC[162] * (sPAR[3] * (X[28] - X[29]))) + ACC[29]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[187]=((79.0 * (ACC[108] - ACC[29])) / sPAR[5]);
    F[108]=(((sPAR[12] * (sPAR[4] * (X[107] - X[108]))) - ACC[108]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[30]=(((ACC[162] * (sPAR[3] * (X[29] - X[30]))) + ACC[30]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[188]=((79.0 * (ACC[109] - ACC[30])) / sPAR[5]);
    F[109]=(((sPAR[12] * (sPAR[4] * (X[108] - X[109]))) - ACC[109]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[31]=(((ACC[162] * (sPAR[3] * (X[30] - X[31]))) + ACC[31]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[189]=((79.0 * (ACC[110] - ACC[31])) / sPAR[5]);
    F[110]=(((sPAR[12] * (sPAR[4] * (X[109] - X[110]))) - ACC[110]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[32]=(((ACC[162] * (sPAR[3] * (X[31] - X[32]))) + ACC[32]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[190]=((79.0 * (ACC[111] - ACC[32])) / sPAR[5]);
    F[111]=(((sPAR[12] * (sPAR[4] * (X[110] - X[111]))) - ACC[111]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[33]=(((ACC[162] * (sPAR[3] * (X[32] - X[33]))) + ACC[33]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[191]=((79.0 * (ACC[112] - ACC[33])) / sPAR[5]);
    F[112]=(((sPAR[12] * (sPAR[4] * (X[111] - X[112]))) - ACC[112]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[34]=(((ACC[162] * (sPAR[3] * (X[33] - X[34]))) + ACC[34]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[192]=((79.0 * (ACC[113] - ACC[34])) / sPAR[5]);
    F[113]=(((sPAR[12] * (sPAR[4] * (X[112] - X[113]))) - ACC[113]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[35]=(((ACC[162] * (sPAR[3] * (X[34] - X[35]))) + ACC[35]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[193]=((79.0 * (ACC[114] - ACC[35])) / sPAR[5]);
    F[114]=(((sPAR[12] * (sPAR[4] * (X[113] - X[114]))) - ACC[114]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[36]=(((ACC[162] * (sPAR[3] * (X[35] - X[36]))) + ACC[36]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[194]=((79.0 * (ACC[115] - ACC[36])) / sPAR[5]);
    F[115]=(((sPAR[12] * (sPAR[4] * (X[114] - X[115]))) - ACC[115]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[37]=(((ACC[162] * (sPAR[3] * (X[36] - X[37]))) + ACC[37]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[195]=((79.0 * (ACC[116] - ACC[37])) / sPAR[5]);
    F[116]=(((sPAR[12] * (sPAR[4] * (X[115] - X[116]))) - ACC[116]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[38]=(((ACC[162] * (sPAR[3] * (X[37] - X[38]))) + ACC[38]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[196]=((79.0 * (ACC[117] - ACC[38])) / sPAR[5]);
    F[117]=(((sPAR[12] * (sPAR[4] * (X[116] - X[117]))) - ACC[117]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[39]=(((ACC[162] * (sPAR[3] * (X[38] - X[39]))) + ACC[39]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[197]=((79.0 * (ACC[118] - ACC[39])) / sPAR[5]);
    F[118]=(((sPAR[12] * (sPAR[4] * (X[117] - X[118]))) - ACC[118]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[40]=(((ACC[162] * (sPAR[3] * (X[39] - X[40]))) + ACC[40]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[198]=((79.0 * (ACC[119] - ACC[40])) / sPAR[5]);
    F[119]=(((sPAR[12] * (sPAR[4] * (X[118] - X[119]))) - ACC[119]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[41]=(((ACC[162] * (sPAR[3] * (X[40] - X[41]))) + ACC[41]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[199]=((79.0 * (ACC[120] - ACC[41])) / sPAR[5]);
    F[120]=(((sPAR[12] * (sPAR[4] * (X[119] - X[120]))) - ACC[120]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[42]=(((ACC[162] * (sPAR[3] * (X[41] - X[42]))) + ACC[42]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[200]=((79.0 * (ACC[121] - ACC[42])) / sPAR[5]);
    F[121]=(((sPAR[12] * (sPAR[4] * (X[120] - X[121]))) - ACC[121]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[43]=(((ACC[162] * (sPAR[3] * (X[42] - X[43]))) + ACC[43]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[201]=((79.0 * (ACC[122] - ACC[43])) / sPAR[5]);
    F[122]=(((sPAR[12] * (sPAR[4] * (X[121] - X[122]))) - ACC[122]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[44]=(((ACC[162] * (sPAR[3] * (X[43] - X[44]))) + ACC[44]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[202]=((79.0 * (ACC[123] - ACC[44])) / sPAR[5]);
    F[123]=(((sPAR[12] * (sPAR[4] * (X[122] - X[123]))) - ACC[123]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[45]=(((ACC[162] * (sPAR[3] * (X[44] - X[45]))) + ACC[45]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[203]=((79.0 * (ACC[124] - ACC[45])) / sPAR[5]);
    F[124]=(((sPAR[12] * (sPAR[4] * (X[123] - X[124]))) - ACC[124]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[46]=(((ACC[162] * (sPAR[3] * (X[45] - X[46]))) + ACC[46]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[204]=((79.0 * (ACC[125] - ACC[46])) / sPAR[5]);
    F[125]=(((sPAR[12] * (sPAR[4] * (X[124] - X[125]))) - ACC[125]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[47]=(((ACC[162] * (sPAR[3] * (X[46] - X[47]))) + ACC[47]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[205]=((79.0 * (ACC[126] - ACC[47])) / sPAR[5]);
    F[126]=(((sPAR[12] * (sPAR[4] * (X[125] - X[126]))) - ACC[126]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[48]=(((ACC[162] * (sPAR[3] * (X[47] - X[48]))) + ACC[48]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[206]=((79.0 * (ACC[127] - ACC[48])) / sPAR[5]);
    F[127]=(((sPAR[12] * (sPAR[4] * (X[126] - X[127]))) - ACC[127]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[49]=(((ACC[162] * (sPAR[3] * (X[48] - X[49]))) + ACC[49]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[207]=((79.0 * (ACC[128] - ACC[49])) / sPAR[5]);
    F[128]=(((sPAR[12] * (sPAR[4] * (X[127] - X[128]))) - ACC[128]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[50]=(((ACC[162] * (sPAR[3] * (X[49] - X[50]))) + ACC[50]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[208]=((79.0 * (ACC[129] - ACC[50])) / sPAR[5]);
    F[129]=(((sPAR[12] * (sPAR[4] * (X[128] - X[129]))) - ACC[129]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[51]=(((ACC[162] * (sPAR[3] * (X[50] - X[51]))) + ACC[51]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[209]=((79.0 * (ACC[130] - ACC[51])) / sPAR[5]);
    F[130]=(((sPAR[12] * (sPAR[4] * (X[129] - X[130]))) - ACC[130]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[52]=(((ACC[162] * (sPAR[3] * (X[51] - X[52]))) + ACC[52]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[210]=((79.0 * (ACC[131] - ACC[52])) / sPAR[5]);
    F[131]=(((sPAR[12] * (sPAR[4] * (X[130] - X[131]))) - ACC[131]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[53]=(((ACC[162] * (sPAR[3] * (X[52] - X[53]))) + ACC[53]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[211]=((79.0 * (ACC[132] - ACC[53])) / sPAR[5]);
    F[132]=(((sPAR[12] * (sPAR[4] * (X[131] - X[132]))) - ACC[132]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[54]=(((ACC[162] * (sPAR[3] * (X[53] - X[54]))) + ACC[54]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[212]=((79.0 * (ACC[133] - ACC[54])) / sPAR[5]);
    F[133]=(((sPAR[12] * (sPAR[4] * (X[132] - X[133]))) - ACC[133]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[55]=(((ACC[162] * (sPAR[3] * (X[54] - X[55]))) + ACC[55]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[213]=((79.0 * (ACC[134] - ACC[55])) / sPAR[5]);
    F[134]=(((sPAR[12] * (sPAR[4] * (X[133] - X[134]))) - ACC[134]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[56]=(((ACC[162] * (sPAR[3] * (X[55] - X[56]))) + ACC[56]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[214]=((79.0 * (ACC[135] - ACC[56])) / sPAR[5]);
    F[135]=(((sPAR[12] * (sPAR[4] * (X[134] - X[135]))) - ACC[135]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[57]=(((ACC[162] * (sPAR[3] * (X[56] - X[57]))) + ACC[57]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[215]=((79.0 * (ACC[136] - ACC[57])) / sPAR[5]);
    F[136]=(((sPAR[12] * (sPAR[4] * (X[135] - X[136]))) - ACC[136]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[58]=(((ACC[162] * (sPAR[3] * (X[57] - X[58]))) + ACC[58]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[216]=((79.0 * (ACC[137] - ACC[58])) / sPAR[5]);
    F[137]=(((sPAR[12] * (sPAR[4] * (X[136] - X[137]))) - ACC[137]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[59]=(((ACC[162] * (sPAR[3] * (X[58] - X[59]))) + ACC[59]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[217]=((79.0 * (ACC[138] - ACC[59])) / sPAR[5]);
    F[138]=(((sPAR[12] * (sPAR[4] * (X[137] - X[138]))) - ACC[138]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[60]=(((ACC[162] * (sPAR[3] * (X[59] - X[60]))) + ACC[60]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[218]=((79.0 * (ACC[139] - ACC[60])) / sPAR[5]);
    F[139]=(((sPAR[12] * (sPAR[4] * (X[138] - X[139]))) - ACC[139]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[61]=(((ACC[162] * (sPAR[3] * (X[60] - X[61]))) + ACC[61]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[219]=((79.0 * (ACC[140] - ACC[61])) / sPAR[5]);
    F[140]=(((sPAR[12] * (sPAR[4] * (X[139] - X[140]))) - ACC[140]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[62]=(((ACC[162] * (sPAR[3] * (X[61] - X[62]))) + ACC[62]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[220]=((79.0 * (ACC[141] - ACC[62])) / sPAR[5]);
    F[141]=(((sPAR[12] * (sPAR[4] * (X[140] - X[141]))) - ACC[141]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[63]=(((ACC[162] * (sPAR[3] * (X[62] - X[63]))) + ACC[63]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[221]=((79.0 * (ACC[142] - ACC[63])) / sPAR[5]);
    F[142]=(((sPAR[12] * (sPAR[4] * (X[141] - X[142]))) - ACC[142]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[64]=(((ACC[162] * (sPAR[3] * (X[63] - X[64]))) + ACC[64]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[222]=((79.0 * (ACC[143] - ACC[64])) / sPAR[5]);
    F[143]=(((sPAR[12] * (sPAR[4] * (X[142] - X[143]))) - ACC[143]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[65]=(((ACC[162] * (sPAR[3] * (X[64] - X[65]))) + ACC[65]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[223]=((79.0 * (ACC[144] - ACC[65])) / sPAR[5]);
    F[144]=(((sPAR[12] * (sPAR[4] * (X[143] - X[144]))) - ACC[144]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[66]=(((ACC[162] * (sPAR[3] * (X[65] - X[66]))) + ACC[66]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[224]=((79.0 * (ACC[145] - ACC[66])) / sPAR[5]);
    F[145]=(((sPAR[12] * (sPAR[4] * (X[144] - X[145]))) - ACC[145]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[67]=(((ACC[162] * (sPAR[3] * (X[66] - X[67]))) + ACC[67]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[225]=((79.0 * (ACC[146] - ACC[67])) / sPAR[5]);
    F[146]=(((sPAR[12] * (sPAR[4] * (X[145] - X[146]))) - ACC[146]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[68]=(((ACC[162] * (sPAR[3] * (X[67] - X[68]))) + ACC[68]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[226]=((79.0 * (ACC[147] - ACC[68])) / sPAR[5]);
    F[147]=(((sPAR[12] * (sPAR[4] * (X[146] - X[147]))) - ACC[147]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[69]=(((ACC[162] * (sPAR[3] * (X[68] - X[69]))) + ACC[69]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[227]=((79.0 * (ACC[148] - ACC[69])) / sPAR[5]);
    F[148]=(((sPAR[12] * (sPAR[4] * (X[147] - X[148]))) - ACC[148]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[70]=(((ACC[162] * (sPAR[3] * (X[69] - X[70]))) + ACC[70]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[228]=((79.0 * (ACC[149] - ACC[70])) / sPAR[5]);
    F[149]=(((sPAR[12] * (sPAR[4] * (X[148] - X[149]))) - ACC[149]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[71]=(((ACC[162] * (sPAR[3] * (X[70] - X[71]))) + ACC[71]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[229]=((79.0 * (ACC[150] - ACC[71])) / sPAR[5]);
    F[150]=(((sPAR[12] * (sPAR[4] * (X[149] - X[150]))) - ACC[150]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[72]=(((ACC[162] * (sPAR[3] * (X[71] - X[72]))) + ACC[72]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[230]=((79.0 * (ACC[151] - ACC[72])) / sPAR[5]);
    F[151]=(((sPAR[12] * (sPAR[4] * (X[150] - X[151]))) - ACC[151]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[73]=(((ACC[162] * (sPAR[3] * (X[72] - X[73]))) + ACC[73]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[231]=((79.0 * (ACC[152] - ACC[73])) / sPAR[5]);
    F[152]=(((sPAR[12] * (sPAR[4] * (X[151] - X[152]))) - ACC[152]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[74]=(((ACC[162] * (sPAR[3] * (X[73] - X[74]))) + ACC[74]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[232]=((79.0 * (ACC[153] - ACC[74])) / sPAR[5]);
    F[153]=(((sPAR[12] * (sPAR[4] * (X[152] - X[153]))) - ACC[153]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[75]=(((ACC[162] * (sPAR[3] * (X[74] - X[75]))) + ACC[75]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[233]=((79.0 * (ACC[154] - ACC[75])) / sPAR[5]);
    F[154]=(((sPAR[12] * (sPAR[4] * (X[153] - X[154]))) - ACC[154]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[76]=(((ACC[162] * (sPAR[3] * (X[75] - X[76]))) + ACC[76]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[234]=((79.0 * (ACC[155] - ACC[76])) / sPAR[5]);
    F[155]=(((sPAR[12] * (sPAR[4] * (X[154] - X[155]))) - ACC[155]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[77]=(((ACC[162] * (sPAR[3] * (X[76] - X[77]))) + ACC[77]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[235]=((79.0 * (ACC[156] - ACC[77])) / sPAR[5]);
    F[156]=(((sPAR[12] * (sPAR[4] * (X[155] - X[156]))) - ACC[156]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));
    F[78]=(((ACC[162] * (sPAR[3] * (X[77] - X[78]))) + ACC[78]) / (((0.1265822784810127 * sPAR[10]) * sPAR[3]) * sPAR[1]));
    F[236]=((79.0 * (ACC[157] - ACC[78])) / sPAR[5]);
    F[157]=(((sPAR[12] * (sPAR[4] * (X[156] - X[157]))) - ACC[157]) / (((0.1265822784810127 * sPAR[11]) * sPAR[4]) * sPAR[2]));

}

template<class Precision> __forceinline__ __device__ void PerThread_EventFunction(
	int tid, int NT, Precision*	  EF, \
	Precision     T, Precision    dT, Precision*    TD, Precision*	X, \
	Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi  		
) {
    

}

template<class Precision> __forceinline__ __device__ void PerThread_ActionAfterEventDetection(
    int tid, int NT, int IDX, int& UDT, \
    Precision    &T, Precision   &dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi
) {
    
}

template<class Precision> __forceinline__ __device__ void PerThread_ActionAfterSuccessfulTimeStep(
    int tid, int NT, int& UDT, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi
) {
    
}

template<class Precision> __forceinline__ __device__ void PerThread_Initialization(
    int tid, int NT, int& DOIDX, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR,       int* sPARi, Precision* ACC, int* ACCi
) {
    T     = TD[0];
    DOIDX = 0;
    ACC[0]=0.0; //QA[1]
    ACC[1]=0.0; //QA[2]
    ACC[2]=0.0; //QA[3]
    ACC[3]=0.0; //QA[4]
    ACC[4]=0.0; //QA[5]
    ACC[5]=0.0; //QA[6]
    ACC[6]=0.0; //QA[7]
    ACC[7]=0.0; //QA[8]
    ACC[8]=0.0; //QA[9]
    ACC[9]=0.0; //QA[10]
    ACC[10]=0.0; //QA[11]
    ACC[11]=0.0; //QA[12]
    ACC[12]=0.0; //QA[13]
    ACC[13]=0.0; //QA[14]
    ACC[14]=0.0; //QA[15]
    ACC[15]=0.0; //QA[16]
    ACC[16]=0.0; //QA[17]
    ACC[17]=0.0; //QA[18]
    ACC[18]=0.0; //QA[19]
    ACC[19]=0.0; //QA[20]
    ACC[20]=0.0; //QA[21]
    ACC[21]=0.0; //QA[22]
    ACC[22]=0.0; //QA[23]
    ACC[23]=0.0; //QA[24]
    ACC[24]=0.0; //QA[25]
    ACC[25]=0.0; //QA[26]
    ACC[26]=0.0; //QA[27]
    ACC[27]=0.0; //QA[28]
    ACC[28]=0.0; //QA[29]
    ACC[29]=0.0; //QA[30]
    ACC[30]=0.0; //QA[31]
    ACC[31]=0.0; //QA[32]
    ACC[32]=0.0; //QA[33]
    ACC[33]=0.0; //QA[34]
    ACC[34]=0.0; //QA[35]
    ACC[35]=0.0; //QA[36]
    ACC[36]=0.0; //QA[37]
    ACC[37]=0.0; //QA[38]
    ACC[38]=0.0; //QA[39]
    ACC[39]=0.0; //QA[40]
    ACC[40]=0.0; //QA[41]
    ACC[41]=0.0; //QA[42]
    ACC[42]=0.0; //QA[43]
    ACC[43]=0.0; //QA[44]
    ACC[44]=0.0; //QA[45]
    ACC[45]=0.0; //QA[46]
    ACC[46]=0.0; //QA[47]
    ACC[47]=0.0; //QA[48]
    ACC[48]=0.0; //QA[49]
    ACC[49]=0.0; //QA[50]
    ACC[50]=0.0; //QA[51]
    ACC[51]=0.0; //QA[52]
    ACC[52]=0.0; //QA[53]
    ACC[53]=0.0; //QA[54]
    ACC[54]=0.0; //QA[55]
    ACC[55]=0.0; //QA[56]
    ACC[56]=0.0; //QA[57]
    ACC[57]=0.0; //QA[58]
    ACC[58]=0.0; //QA[59]
    ACC[59]=0.0; //QA[60]
    ACC[60]=0.0; //QA[61]
    ACC[61]=0.0; //QA[62]
    ACC[62]=0.0; //QA[63]
    ACC[63]=0.0; //QA[64]
    ACC[64]=0.0; //QA[65]
    ACC[65]=0.0; //QA[66]
    ACC[66]=0.0; //QA[67]
    ACC[67]=0.0; //QA[68]
    ACC[68]=0.0; //QA[69]
    ACC[69]=0.0; //QA[70]
    ACC[70]=0.0; //QA[71]
    ACC[71]=0.0; //QA[72]
    ACC[72]=0.0; //QA[73]
    ACC[73]=0.0; //QA[74]
    ACC[74]=0.0; //QA[75]
    ACC[75]=0.0; //QA[76]
    ACC[76]=0.0; //QA[77]
    ACC[77]=0.0; //QA[78]
    ACC[78]=0.0; //QA[79]
    ACC[161]=310.0; //TB[1]
    X[79]=300.0; //TB[2]
    X[158]=300.0; //TW[1]
    sPAR[7]=10000.0; //gammaB
    sPAR[9]=0.1; //omega
    ACC[79]=(0.1265822784810127 * (((0.5 * (ACC[161] + X[79])) - X[158]) * (sPAR[7] * sPAR[9]))); //QB[1]
    ACC[80]=0.0; //QB[2]
    ACC[81]=0.0; //QB[3]
    ACC[82]=0.0; //QB[4]
    ACC[83]=0.0; //QB[5]
    ACC[84]=0.0; //QB[6]
    ACC[85]=0.0; //QB[7]
    ACC[86]=0.0; //QB[8]
    ACC[87]=0.0; //QB[9]
    ACC[88]=0.0; //QB[10]
    ACC[89]=0.0; //QB[11]
    ACC[90]=0.0; //QB[12]
    ACC[91]=0.0; //QB[13]
    ACC[92]=0.0; //QB[14]
    ACC[93]=0.0; //QB[15]
    ACC[94]=0.0; //QB[16]
    ACC[95]=0.0; //QB[17]
    ACC[96]=0.0; //QB[18]
    ACC[97]=0.0; //QB[19]
    ACC[98]=0.0; //QB[20]
    ACC[99]=0.0; //QB[21]
    ACC[100]=0.0; //QB[22]
    ACC[101]=0.0; //QB[23]
    ACC[102]=0.0; //QB[24]
    ACC[103]=0.0; //QB[25]
    ACC[104]=0.0; //QB[26]
    ACC[105]=0.0; //QB[27]
    ACC[106]=0.0; //QB[28]
    ACC[107]=0.0; //QB[29]
    ACC[108]=0.0; //QB[30]
    ACC[109]=0.0; //QB[31]
    ACC[110]=0.0; //QB[32]
    ACC[111]=0.0; //QB[33]
    ACC[112]=0.0; //QB[34]
    ACC[113]=0.0; //QB[35]
    ACC[114]=0.0; //QB[36]
    ACC[115]=0.0; //QB[37]
    ACC[116]=0.0; //QB[38]
    ACC[117]=0.0; //QB[39]
    ACC[118]=0.0; //QB[40]
    ACC[119]=0.0; //QB[41]
    ACC[120]=0.0; //QB[42]
    ACC[121]=0.0; //QB[43]
    ACC[122]=0.0; //QB[44]
    ACC[123]=0.0; //QB[45]
    ACC[124]=0.0; //QB[46]
    ACC[125]=0.0; //QB[47]
    ACC[126]=0.0; //QB[48]
    ACC[127]=0.0; //QB[49]
    ACC[128]=0.0; //QB[50]
    ACC[129]=0.0; //QB[51]
    ACC[130]=0.0; //QB[52]
    ACC[131]=0.0; //QB[53]
    ACC[132]=0.0; //QB[54]
    ACC[133]=0.0; //QB[55]
    ACC[134]=0.0; //QB[56]
    ACC[135]=0.0; //QB[57]
    ACC[136]=0.0; //QB[58]
    ACC[137]=0.0; //QB[59]
    ACC[138]=0.0; //QB[60]
    ACC[139]=0.0; //QB[61]
    ACC[140]=0.0; //QB[62]
    ACC[141]=0.0; //QB[63]
    ACC[142]=0.0; //QB[64]
    ACC[143]=0.0; //QB[65]
    ACC[144]=0.0; //QB[66]
    ACC[145]=0.0; //QB[67]
    ACC[146]=0.0; //QB[68]
    ACC[147]=0.0; //QB[69]
    ACC[148]=0.0; //QB[70]
    ACC[149]=0.0; //QB[71]
    ACC[150]=0.0; //QB[72]
    ACC[151]=0.0; //QB[73]
    ACC[152]=0.0; //QB[74]
    ACC[153]=0.0; //QB[75]
    ACC[154]=0.0; //QB[76]
    ACC[155]=0.0; //QB[77]
    ACC[156]=0.0; //QB[78]
    ACC[157]=0.0; //QB[79]
    ACC[158]=0.0; //QtotA
    ACC[159]=0.0; //QtotB
    ACC[160]=300.0; //TA[1]
    ACC[162]=1.0; //wA
    sPAR[0]=10.0; //L
    sPAR[1]=5e-05; //areaA
    sPAR[2]=5e-05; //areaB
    sPAR[3]=4200.0; //cpA
    sPAR[4]=4200.0; //cpB
    sPAR[5]=2000.0; //cpW
    sPAR[6]=4000.0; //gammaA
    sPAR[8]=0.1265822784810127; //l
    sPAR[10]=1000.0; //rhoA
    sPAR[11]=1000.0; //rhoB
    sPAR[12]=1.0; //wB
    sPARi[0]=80; //N
    X[0]=300.0; //TA[2]
    X[1]=300.0; //TA[3]
    X[2]=300.0; //TA[4]
    X[3]=300.0; //TA[5]
    X[4]=300.0; //TA[6]
    X[5]=300.0; //TA[7]
    X[6]=300.0; //TA[8]
    X[7]=300.0; //TA[9]
    X[8]=300.0; //TA[10]
    X[9]=300.0; //TA[11]
    X[10]=300.0; //TA[12]
    X[11]=300.0; //TA[13]
    X[12]=300.0; //TA[14]
    X[13]=300.0; //TA[15]
    X[14]=300.0; //TA[16]
    X[15]=300.0; //TA[17]
    X[16]=300.0; //TA[18]
    X[17]=300.0; //TA[19]
    X[18]=300.0; //TA[20]
    X[19]=300.0; //TA[21]
    X[20]=300.0; //TA[22]
    X[21]=300.0; //TA[23]
    X[22]=300.0; //TA[24]
    X[23]=300.0; //TA[25]
    X[24]=300.0; //TA[26]
    X[25]=300.0; //TA[27]
    X[26]=300.0; //TA[28]
    X[27]=300.0; //TA[29]
    X[28]=300.0; //TA[30]
    X[29]=300.0; //TA[31]
    X[30]=300.0; //TA[32]
    X[31]=300.0; //TA[33]
    X[32]=300.0; //TA[34]
    X[33]=300.0; //TA[35]
    X[34]=300.0; //TA[36]
    X[35]=300.0; //TA[37]
    X[36]=300.0; //TA[38]
    X[37]=300.0; //TA[39]
    X[38]=300.0; //TA[40]
    X[39]=300.0; //TA[41]
    X[40]=300.0; //TA[42]
    X[41]=300.0; //TA[43]
    X[42]=300.0; //TA[44]
    X[43]=300.0; //TA[45]
    X[44]=300.0; //TA[46]
    X[45]=300.0; //TA[47]
    X[46]=300.0; //TA[48]
    X[47]=300.0; //TA[49]
    X[48]=300.0; //TA[50]
    X[49]=300.0; //TA[51]
    X[50]=300.0; //TA[52]
    X[51]=300.0; //TA[53]
    X[52]=300.0; //TA[54]
    X[53]=300.0; //TA[55]
    X[54]=300.0; //TA[56]
    X[55]=300.0; //TA[57]
    X[56]=300.0; //TA[58]
    X[57]=300.0; //TA[59]
    X[58]=300.0; //TA[60]
    X[59]=300.0; //TA[61]
    X[60]=300.0; //TA[62]
    X[61]=300.0; //TA[63]
    X[62]=300.0; //TA[64]
    X[63]=300.0; //TA[65]
    X[64]=300.0; //TA[66]
    X[65]=300.0; //TA[67]
    X[66]=300.0; //TA[68]
    X[67]=300.0; //TA[69]
    X[68]=300.0; //TA[70]
    X[69]=300.0; //TA[71]
    X[70]=300.0; //TA[72]
    X[71]=300.0; //TA[73]
    X[72]=300.0; //TA[74]
    X[73]=300.0; //TA[75]
    X[74]=300.0; //TA[76]
    X[75]=300.0; //TA[77]
    X[76]=300.0; //TA[78]
    X[77]=300.0; //TA[79]
    X[78]=300.0; //TA[80]
    X[80]=300.0; //TB[3]
    X[81]=300.0; //TB[4]
    X[82]=300.0; //TB[5]
    X[83]=300.0; //TB[6]
    X[84]=300.0; //TB[7]
    X[85]=300.0; //TB[8]
    X[86]=300.0; //TB[9]
    X[87]=300.0; //TB[10]
    X[88]=300.0; //TB[11]
    X[89]=300.0; //TB[12]
    X[90]=300.0; //TB[13]
    X[91]=300.0; //TB[14]
    X[92]=300.0; //TB[15]
    X[93]=300.0; //TB[16]
    X[94]=300.0; //TB[17]
    X[95]=300.0; //TB[18]
    X[96]=300.0; //TB[19]
    X[97]=300.0; //TB[20]
    X[98]=300.0; //TB[21]
    X[99]=300.0; //TB[22]
    X[100]=300.0; //TB[23]
    X[101]=300.0; //TB[24]
    X[102]=300.0; //TB[25]
    X[103]=300.0; //TB[26]
    X[104]=300.0; //TB[27]
    X[105]=300.0; //TB[28]
    X[106]=300.0; //TB[29]
    X[107]=300.0; //TB[30]
    X[108]=300.0; //TB[31]
    X[109]=300.0; //TB[32]
    X[110]=300.0; //TB[33]
    X[111]=300.0; //TB[34]
    X[112]=300.0; //TB[35]
    X[113]=300.0; //TB[36]
    X[114]=300.0; //TB[37]
    X[115]=300.0; //TB[38]
    X[116]=300.0; //TB[39]
    X[117]=300.0; //TB[40]
    X[118]=300.0; //TB[41]
    X[119]=300.0; //TB[42]
    X[120]=300.0; //TB[43]
    X[121]=300.0; //TB[44]
    X[122]=300.0; //TB[45]
    X[123]=300.0; //TB[46]
    X[124]=300.0; //TB[47]
    X[125]=300.0; //TB[48]
    X[126]=300.0; //TB[49]
    X[127]=300.0; //TB[50]
    X[128]=300.0; //TB[51]
    X[129]=300.0; //TB[52]
    X[130]=300.0; //TB[53]
    X[131]=300.0; //TB[54]
    X[132]=300.0; //TB[55]
    X[133]=300.0; //TB[56]
    X[134]=300.0; //TB[57]
    X[135]=300.0; //TB[58]
    X[136]=300.0; //TB[59]
    X[137]=300.0; //TB[60]
    X[138]=300.0; //TB[61]
    X[139]=300.0; //TB[62]
    X[140]=300.0; //TB[63]
    X[141]=300.0; //TB[64]
    X[142]=300.0; //TB[65]
    X[143]=300.0; //TB[66]
    X[144]=300.0; //TB[67]
    X[145]=300.0; //TB[68]
    X[146]=300.0; //TB[69]
    X[147]=300.0; //TB[70]
    X[148]=300.0; //TB[71]
    X[149]=300.0; //TB[72]
    X[150]=300.0; //TB[73]
    X[151]=300.0; //TB[74]
    X[152]=300.0; //TB[75]
    X[153]=300.0; //TB[76]
    X[154]=300.0; //TB[77]
    X[155]=300.0; //TB[78]
    X[156]=300.0; //TB[79]
    X[157]=300.0; //TB[80]
    X[159]=300.0; //TW[2]
    X[160]=300.0; //TW[3]
    X[161]=300.0; //TW[4]
    X[162]=300.0; //TW[5]
    X[163]=300.0; //TW[6]
    X[164]=300.0; //TW[7]
    X[165]=300.0; //TW[8]
    X[166]=300.0; //TW[9]
    X[167]=300.0; //TW[10]
    X[168]=300.0; //TW[11]
    X[169]=300.0; //TW[12]
    X[170]=300.0; //TW[13]
    X[171]=300.0; //TW[14]
    X[172]=300.0; //TW[15]
    X[173]=300.0; //TW[16]
    X[174]=300.0; //TW[17]
    X[175]=300.0; //TW[18]
    X[176]=300.0; //TW[19]
    X[177]=300.0; //TW[20]
    X[178]=300.0; //TW[21]
    X[179]=300.0; //TW[22]
    X[180]=300.0; //TW[23]
    X[181]=300.0; //TW[24]
    X[182]=300.0; //TW[25]
    X[183]=300.0; //TW[26]
    X[184]=300.0; //TW[27]
    X[185]=300.0; //TW[28]
    X[186]=300.0; //TW[29]
    X[187]=300.0; //TW[30]
    X[188]=300.0; //TW[31]
    X[189]=300.0; //TW[32]
    X[190]=300.0; //TW[33]
    X[191]=300.0; //TW[34]
    X[192]=300.0; //TW[35]
    X[193]=300.0; //TW[36]
    X[194]=300.0; //TW[37]
    X[195]=300.0; //TW[38]
    X[196]=300.0; //TW[39]
    X[197]=300.0; //TW[40]
    X[198]=300.0; //TW[41]
    X[199]=300.0; //TW[42]
    X[200]=300.0; //TW[43]
    X[201]=300.0; //TW[44]
    X[202]=300.0; //TW[45]
    X[203]=300.0; //TW[46]
    X[204]=300.0; //TW[47]
    X[205]=300.0; //TW[48]
    X[206]=300.0; //TW[49]
    X[207]=300.0; //TW[50]
    X[208]=300.0; //TW[51]
    X[209]=300.0; //TW[52]
    X[210]=300.0; //TW[53]
    X[211]=300.0; //TW[54]
    X[212]=300.0; //TW[55]
    X[213]=300.0; //TW[56]
    X[214]=300.0; //TW[57]
    X[215]=300.0; //TW[58]
    X[216]=300.0; //TW[59]
    X[217]=300.0; //TW[60]
    X[218]=300.0; //TW[61]
    X[219]=300.0; //TW[62]
    X[220]=300.0; //TW[63]
    X[221]=300.0; //TW[64]
    X[222]=300.0; //TW[65]
    X[223]=300.0; //TW[66]
    X[224]=300.0; //TW[67]
    X[225]=300.0; //TW[68]
    X[226]=300.0; //TW[69]
    X[227]=300.0; //TW[70]
    X[228]=300.0; //TW[71]
    X[229]=300.0; //TW[72]
    X[230]=300.0; //TW[73]
    X[231]=300.0; //TW[74]
    X[232]=300.0; //TW[75]
    X[233]=300.0; //TW[76]
    X[234]=300.0; //TW[77]
    X[235]=300.0; //TW[78]
    X[236]=300.0; //TW[79]

}

template <class Precision> __forceinline__ __device__ void PerThread_Finalization(
    int tid, int NT, int& DOIDX, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR,       int* sPARi, Precision* ACC, int* ACCi
) {
	
}


#endif
