
#ifndef COUNTERCURRENTHEATEXCHANGEREQUATIONS_N_160_PERTHREAD_SYSTEMDEFINITION_H
#define COUNTERCURRENTHEATEXCHANGEREQUATIONS_N_160_PERTHREAD_SYSTEMDEFINITION_H

#include <fstream>
#include <iostream>
#include <string>
#include "Functions.cuh"


template<class Precision> __forceinline__ __device__ void PerThread_OdeFunction(
	int tid, int NT, \
	Precision*    F, Precision*    X, Precision     T, \
	Precision* cPAR, Precision* sPAR, int*      sPARi, Precision* ACC, int* ACCi  		
) {
    ACC[321]=310.0;
    ACC[320]=(T < 8.0 ? 300.0 : 301.0);
    ACC[0]=(0.06289308176100629 * ((X[318] + (-0.5 * (ACC[320] + X[0]))) * (sPAR[6] * sPAR[9])));
    ACC[317]=(0.06289308176100629 * (((0.5 * (310.0 + X[317])) - X[476]) * (sPAR[7] * sPAR[9])));
    ACC[322]=(T < 15.0 ? 1.0 : 1.1);
    ACC[1]=(0.06289308176100629 * ((X[319] + (-0.5 * (X[0] + X[1]))) * (sPAR[6] * sPAR[9])));
    ACC[316]=(0.06289308176100629 * (((0.5 * (X[317] + X[316])) - X[475]) * (sPAR[7] * sPAR[9])));
    ACC[2]=(0.06289308176100629 * ((X[320] + (-0.5 * (X[1] + X[2]))) * (sPAR[6] * sPAR[9])));
    ACC[315]=(0.06289308176100629 * (((0.5 * (X[316] + X[315])) - X[474]) * (sPAR[7] * sPAR[9])));
    ACC[3]=(0.06289308176100629 * ((X[321] + (-0.5 * (X[2] + X[3]))) * (sPAR[6] * sPAR[9])));
    ACC[314]=(0.06289308176100629 * (((0.5 * (X[315] + X[314])) - X[473]) * (sPAR[7] * sPAR[9])));
    ACC[4]=(0.06289308176100629 * ((X[322] + (-0.5 * (X[3] + X[4]))) * (sPAR[6] * sPAR[9])));
    ACC[313]=(0.06289308176100629 * (((0.5 * (X[314] + X[313])) - X[472]) * (sPAR[7] * sPAR[9])));
    ACC[5]=(0.06289308176100629 * ((X[323] + (-0.5 * (X[4] + X[5]))) * (sPAR[6] * sPAR[9])));
    ACC[312]=(0.06289308176100629 * (((0.5 * (X[313] + X[312])) - X[471]) * (sPAR[7] * sPAR[9])));
    ACC[6]=(0.06289308176100629 * ((X[324] + (-0.5 * (X[5] + X[6]))) * (sPAR[6] * sPAR[9])));
    ACC[311]=(0.06289308176100629 * (((0.5 * (X[312] + X[311])) - X[470]) * (sPAR[7] * sPAR[9])));
    ACC[7]=(0.06289308176100629 * ((X[325] + (-0.5 * (X[6] + X[7]))) * (sPAR[6] * sPAR[9])));
    ACC[310]=(0.06289308176100629 * (((0.5 * (X[311] + X[310])) - X[469]) * (sPAR[7] * sPAR[9])));
    ACC[8]=(0.06289308176100629 * ((X[326] + (-0.5 * (X[7] + X[8]))) * (sPAR[6] * sPAR[9])));
    ACC[309]=(0.06289308176100629 * (((0.5 * (X[310] + X[309])) - X[468]) * (sPAR[7] * sPAR[9])));
    ACC[9]=(0.06289308176100629 * ((X[327] + (-0.5 * (X[8] + X[9]))) * (sPAR[6] * sPAR[9])));
    ACC[308]=(0.06289308176100629 * (((0.5 * (X[309] + X[308])) - X[467]) * (sPAR[7] * sPAR[9])));
    ACC[10]=(0.06289308176100629 * ((X[328] + (-0.5 * (X[9] + X[10]))) * (sPAR[6] * sPAR[9])));
    ACC[307]=(0.06289308176100629 * (((0.5 * (X[308] + X[307])) - X[466]) * (sPAR[7] * sPAR[9])));
    ACC[11]=(0.06289308176100629 * ((X[329] + (-0.5 * (X[10] + X[11]))) * (sPAR[6] * sPAR[9])));
    ACC[306]=(0.06289308176100629 * (((0.5 * (X[307] + X[306])) - X[465]) * (sPAR[7] * sPAR[9])));
    ACC[12]=(0.06289308176100629 * ((X[330] + (-0.5 * (X[11] + X[12]))) * (sPAR[6] * sPAR[9])));
    ACC[305]=(0.06289308176100629 * (((0.5 * (X[306] + X[305])) - X[464]) * (sPAR[7] * sPAR[9])));
    ACC[13]=(0.06289308176100629 * ((X[331] + (-0.5 * (X[12] + X[13]))) * (sPAR[6] * sPAR[9])));
    ACC[304]=(0.06289308176100629 * (((0.5 * (X[305] + X[304])) - X[463]) * (sPAR[7] * sPAR[9])));
    ACC[14]=(0.06289308176100629 * ((X[332] + (-0.5 * (X[13] + X[14]))) * (sPAR[6] * sPAR[9])));
    ACC[303]=(0.06289308176100629 * (((0.5 * (X[304] + X[303])) - X[462]) * (sPAR[7] * sPAR[9])));
    ACC[15]=(0.06289308176100629 * ((X[333] + (-0.5 * (X[14] + X[15]))) * (sPAR[6] * sPAR[9])));
    ACC[302]=(0.06289308176100629 * (((0.5 * (X[303] + X[302])) - X[461]) * (sPAR[7] * sPAR[9])));
    ACC[16]=(0.06289308176100629 * ((X[334] + (-0.5 * (X[15] + X[16]))) * (sPAR[6] * sPAR[9])));
    ACC[301]=(0.06289308176100629 * (((0.5 * (X[302] + X[301])) - X[460]) * (sPAR[7] * sPAR[9])));
    ACC[17]=(0.06289308176100629 * ((X[335] + (-0.5 * (X[16] + X[17]))) * (sPAR[6] * sPAR[9])));
    ACC[300]=(0.06289308176100629 * (((0.5 * (X[301] + X[300])) - X[459]) * (sPAR[7] * sPAR[9])));
    ACC[18]=(0.06289308176100629 * ((X[336] + (-0.5 * (X[17] + X[18]))) * (sPAR[6] * sPAR[9])));
    ACC[299]=(0.06289308176100629 * (((0.5 * (X[300] + X[299])) - X[458]) * (sPAR[7] * sPAR[9])));
    ACC[19]=(0.06289308176100629 * ((X[337] + (-0.5 * (X[18] + X[19]))) * (sPAR[6] * sPAR[9])));
    ACC[298]=(0.06289308176100629 * (((0.5 * (X[299] + X[298])) - X[457]) * (sPAR[7] * sPAR[9])));
    ACC[20]=(0.06289308176100629 * ((X[338] + (-0.5 * (X[19] + X[20]))) * (sPAR[6] * sPAR[9])));
    ACC[297]=(0.06289308176100629 * (((0.5 * (X[298] + X[297])) - X[456]) * (sPAR[7] * sPAR[9])));
    ACC[21]=(0.06289308176100629 * ((X[339] + (-0.5 * (X[20] + X[21]))) * (sPAR[6] * sPAR[9])));
    ACC[296]=(0.06289308176100629 * (((0.5 * (X[297] + X[296])) - X[455]) * (sPAR[7] * sPAR[9])));
    ACC[22]=(0.06289308176100629 * ((X[340] + (-0.5 * (X[21] + X[22]))) * (sPAR[6] * sPAR[9])));
    ACC[295]=(0.06289308176100629 * (((0.5 * (X[296] + X[295])) - X[454]) * (sPAR[7] * sPAR[9])));
    ACC[23]=(0.06289308176100629 * ((X[341] + (-0.5 * (X[22] + X[23]))) * (sPAR[6] * sPAR[9])));
    ACC[294]=(0.06289308176100629 * (((0.5 * (X[295] + X[294])) - X[453]) * (sPAR[7] * sPAR[9])));
    ACC[24]=(0.06289308176100629 * ((X[342] + (-0.5 * (X[23] + X[24]))) * (sPAR[6] * sPAR[9])));
    ACC[293]=(0.06289308176100629 * (((0.5 * (X[294] + X[293])) - X[452]) * (sPAR[7] * sPAR[9])));
    ACC[25]=(0.06289308176100629 * ((X[343] + (-0.5 * (X[24] + X[25]))) * (sPAR[6] * sPAR[9])));
    ACC[292]=(0.06289308176100629 * (((0.5 * (X[293] + X[292])) - X[451]) * (sPAR[7] * sPAR[9])));
    ACC[26]=(0.06289308176100629 * ((X[344] + (-0.5 * (X[25] + X[26]))) * (sPAR[6] * sPAR[9])));
    ACC[291]=(0.06289308176100629 * (((0.5 * (X[292] + X[291])) - X[450]) * (sPAR[7] * sPAR[9])));
    ACC[27]=(0.06289308176100629 * ((X[345] + (-0.5 * (X[26] + X[27]))) * (sPAR[6] * sPAR[9])));
    ACC[290]=(0.06289308176100629 * (((0.5 * (X[291] + X[290])) - X[449]) * (sPAR[7] * sPAR[9])));
    ACC[28]=(0.06289308176100629 * ((X[346] + (-0.5 * (X[27] + X[28]))) * (sPAR[6] * sPAR[9])));
    ACC[289]=(0.06289308176100629 * (((0.5 * (X[290] + X[289])) - X[448]) * (sPAR[7] * sPAR[9])));
    ACC[29]=(0.06289308176100629 * ((X[347] + (-0.5 * (X[28] + X[29]))) * (sPAR[6] * sPAR[9])));
    ACC[288]=(0.06289308176100629 * (((0.5 * (X[289] + X[288])) - X[447]) * (sPAR[7] * sPAR[9])));
    ACC[30]=(0.06289308176100629 * ((X[348] + (-0.5 * (X[29] + X[30]))) * (sPAR[6] * sPAR[9])));
    ACC[287]=(0.06289308176100629 * (((0.5 * (X[288] + X[287])) - X[446]) * (sPAR[7] * sPAR[9])));
    ACC[31]=(0.06289308176100629 * ((X[349] + (-0.5 * (X[30] + X[31]))) * (sPAR[6] * sPAR[9])));
    ACC[286]=(0.06289308176100629 * (((0.5 * (X[287] + X[286])) - X[445]) * (sPAR[7] * sPAR[9])));
    ACC[32]=(0.06289308176100629 * ((X[350] + (-0.5 * (X[31] + X[32]))) * (sPAR[6] * sPAR[9])));
    ACC[285]=(0.06289308176100629 * (((0.5 * (X[286] + X[285])) - X[444]) * (sPAR[7] * sPAR[9])));
    ACC[33]=(0.06289308176100629 * ((X[351] + (-0.5 * (X[32] + X[33]))) * (sPAR[6] * sPAR[9])));
    ACC[284]=(0.06289308176100629 * (((0.5 * (X[285] + X[284])) - X[443]) * (sPAR[7] * sPAR[9])));
    ACC[34]=(0.06289308176100629 * ((X[352] + (-0.5 * (X[33] + X[34]))) * (sPAR[6] * sPAR[9])));
    ACC[283]=(0.06289308176100629 * (((0.5 * (X[284] + X[283])) - X[442]) * (sPAR[7] * sPAR[9])));
    ACC[35]=(0.06289308176100629 * ((X[353] + (-0.5 * (X[34] + X[35]))) * (sPAR[6] * sPAR[9])));
    ACC[282]=(0.06289308176100629 * (((0.5 * (X[283] + X[282])) - X[441]) * (sPAR[7] * sPAR[9])));
    ACC[36]=(0.06289308176100629 * ((X[354] + (-0.5 * (X[35] + X[36]))) * (sPAR[6] * sPAR[9])));
    ACC[281]=(0.06289308176100629 * (((0.5 * (X[282] + X[281])) - X[440]) * (sPAR[7] * sPAR[9])));
    ACC[37]=(0.06289308176100629 * ((X[355] + (-0.5 * (X[36] + X[37]))) * (sPAR[6] * sPAR[9])));
    ACC[280]=(0.06289308176100629 * (((0.5 * (X[281] + X[280])) - X[439]) * (sPAR[7] * sPAR[9])));
    ACC[38]=(0.06289308176100629 * ((X[356] + (-0.5 * (X[37] + X[38]))) * (sPAR[6] * sPAR[9])));
    ACC[279]=(0.06289308176100629 * (((0.5 * (X[280] + X[279])) - X[438]) * (sPAR[7] * sPAR[9])));
    ACC[39]=(0.06289308176100629 * ((X[357] + (-0.5 * (X[38] + X[39]))) * (sPAR[6] * sPAR[9])));
    ACC[278]=(0.06289308176100629 * (((0.5 * (X[279] + X[278])) - X[437]) * (sPAR[7] * sPAR[9])));
    ACC[40]=(0.06289308176100629 * ((X[358] + (-0.5 * (X[39] + X[40]))) * (sPAR[6] * sPAR[9])));
    ACC[277]=(0.06289308176100629 * (((0.5 * (X[278] + X[277])) - X[436]) * (sPAR[7] * sPAR[9])));
    ACC[41]=(0.06289308176100629 * ((X[359] + (-0.5 * (X[40] + X[41]))) * (sPAR[6] * sPAR[9])));
    ACC[276]=(0.06289308176100629 * (((0.5 * (X[277] + X[276])) - X[435]) * (sPAR[7] * sPAR[9])));
    ACC[42]=(0.06289308176100629 * ((X[360] + (-0.5 * (X[41] + X[42]))) * (sPAR[6] * sPAR[9])));
    ACC[275]=(0.06289308176100629 * (((0.5 * (X[276] + X[275])) - X[434]) * (sPAR[7] * sPAR[9])));
    ACC[43]=(0.06289308176100629 * ((X[361] + (-0.5 * (X[42] + X[43]))) * (sPAR[6] * sPAR[9])));
    ACC[274]=(0.06289308176100629 * (((0.5 * (X[275] + X[274])) - X[433]) * (sPAR[7] * sPAR[9])));
    ACC[44]=(0.06289308176100629 * ((X[362] + (-0.5 * (X[43] + X[44]))) * (sPAR[6] * sPAR[9])));
    ACC[273]=(0.06289308176100629 * (((0.5 * (X[274] + X[273])) - X[432]) * (sPAR[7] * sPAR[9])));
    ACC[45]=(0.06289308176100629 * ((X[363] + (-0.5 * (X[44] + X[45]))) * (sPAR[6] * sPAR[9])));
    ACC[272]=(0.06289308176100629 * (((0.5 * (X[273] + X[272])) - X[431]) * (sPAR[7] * sPAR[9])));
    ACC[46]=(0.06289308176100629 * ((X[364] + (-0.5 * (X[45] + X[46]))) * (sPAR[6] * sPAR[9])));
    ACC[271]=(0.06289308176100629 * (((0.5 * (X[272] + X[271])) - X[430]) * (sPAR[7] * sPAR[9])));
    ACC[47]=(0.06289308176100629 * ((X[365] + (-0.5 * (X[46] + X[47]))) * (sPAR[6] * sPAR[9])));
    ACC[270]=(0.06289308176100629 * (((0.5 * (X[271] + X[270])) - X[429]) * (sPAR[7] * sPAR[9])));
    ACC[48]=(0.06289308176100629 * ((X[366] + (-0.5 * (X[47] + X[48]))) * (sPAR[6] * sPAR[9])));
    ACC[269]=(0.06289308176100629 * (((0.5 * (X[270] + X[269])) - X[428]) * (sPAR[7] * sPAR[9])));
    ACC[49]=(0.06289308176100629 * ((X[367] + (-0.5 * (X[48] + X[49]))) * (sPAR[6] * sPAR[9])));
    ACC[268]=(0.06289308176100629 * (((0.5 * (X[269] + X[268])) - X[427]) * (sPAR[7] * sPAR[9])));
    ACC[50]=(0.06289308176100629 * ((X[368] + (-0.5 * (X[49] + X[50]))) * (sPAR[6] * sPAR[9])));
    ACC[267]=(0.06289308176100629 * (((0.5 * (X[268] + X[267])) - X[426]) * (sPAR[7] * sPAR[9])));
    ACC[51]=(0.06289308176100629 * ((X[369] + (-0.5 * (X[50] + X[51]))) * (sPAR[6] * sPAR[9])));
    ACC[266]=(0.06289308176100629 * (((0.5 * (X[267] + X[266])) - X[425]) * (sPAR[7] * sPAR[9])));
    ACC[52]=(0.06289308176100629 * ((X[370] + (-0.5 * (X[51] + X[52]))) * (sPAR[6] * sPAR[9])));
    ACC[265]=(0.06289308176100629 * (((0.5 * (X[266] + X[265])) - X[424]) * (sPAR[7] * sPAR[9])));
    ACC[53]=(0.06289308176100629 * ((X[371] + (-0.5 * (X[52] + X[53]))) * (sPAR[6] * sPAR[9])));
    ACC[264]=(0.06289308176100629 * (((0.5 * (X[265] + X[264])) - X[423]) * (sPAR[7] * sPAR[9])));
    ACC[54]=(0.06289308176100629 * ((X[372] + (-0.5 * (X[53] + X[54]))) * (sPAR[6] * sPAR[9])));
    ACC[263]=(0.06289308176100629 * (((0.5 * (X[264] + X[263])) - X[422]) * (sPAR[7] * sPAR[9])));
    ACC[55]=(0.06289308176100629 * ((X[373] + (-0.5 * (X[54] + X[55]))) * (sPAR[6] * sPAR[9])));
    ACC[262]=(0.06289308176100629 * (((0.5 * (X[263] + X[262])) - X[421]) * (sPAR[7] * sPAR[9])));
    ACC[56]=(0.06289308176100629 * ((X[374] + (-0.5 * (X[55] + X[56]))) * (sPAR[6] * sPAR[9])));
    ACC[261]=(0.06289308176100629 * (((0.5 * (X[262] + X[261])) - X[420]) * (sPAR[7] * sPAR[9])));
    ACC[57]=(0.06289308176100629 * ((X[375] + (-0.5 * (X[56] + X[57]))) * (sPAR[6] * sPAR[9])));
    ACC[260]=(0.06289308176100629 * (((0.5 * (X[261] + X[260])) - X[419]) * (sPAR[7] * sPAR[9])));
    ACC[58]=(0.06289308176100629 * ((X[376] + (-0.5 * (X[57] + X[58]))) * (sPAR[6] * sPAR[9])));
    ACC[259]=(0.06289308176100629 * (((0.5 * (X[260] + X[259])) - X[418]) * (sPAR[7] * sPAR[9])));
    ACC[59]=(0.06289308176100629 * ((X[377] + (-0.5 * (X[58] + X[59]))) * (sPAR[6] * sPAR[9])));
    ACC[258]=(0.06289308176100629 * (((0.5 * (X[259] + X[258])) - X[417]) * (sPAR[7] * sPAR[9])));
    ACC[60]=(0.06289308176100629 * ((X[378] + (-0.5 * (X[59] + X[60]))) * (sPAR[6] * sPAR[9])));
    ACC[257]=(0.06289308176100629 * (((0.5 * (X[258] + X[257])) - X[416]) * (sPAR[7] * sPAR[9])));
    ACC[61]=(0.06289308176100629 * ((X[379] + (-0.5 * (X[60] + X[61]))) * (sPAR[6] * sPAR[9])));
    ACC[256]=(0.06289308176100629 * (((0.5 * (X[257] + X[256])) - X[415]) * (sPAR[7] * sPAR[9])));
    ACC[62]=(0.06289308176100629 * ((X[380] + (-0.5 * (X[61] + X[62]))) * (sPAR[6] * sPAR[9])));
    ACC[255]=(0.06289308176100629 * (((0.5 * (X[256] + X[255])) - X[414]) * (sPAR[7] * sPAR[9])));
    ACC[63]=(0.06289308176100629 * ((X[381] + (-0.5 * (X[62] + X[63]))) * (sPAR[6] * sPAR[9])));
    ACC[254]=(0.06289308176100629 * (((0.5 * (X[255] + X[254])) - X[413]) * (sPAR[7] * sPAR[9])));
    ACC[64]=(0.06289308176100629 * ((X[382] + (-0.5 * (X[63] + X[64]))) * (sPAR[6] * sPAR[9])));
    ACC[253]=(0.06289308176100629 * (((0.5 * (X[254] + X[253])) - X[412]) * (sPAR[7] * sPAR[9])));
    ACC[65]=(0.06289308176100629 * ((X[383] + (-0.5 * (X[64] + X[65]))) * (sPAR[6] * sPAR[9])));
    ACC[252]=(0.06289308176100629 * (((0.5 * (X[253] + X[252])) - X[411]) * (sPAR[7] * sPAR[9])));
    ACC[66]=(0.06289308176100629 * ((X[384] + (-0.5 * (X[65] + X[66]))) * (sPAR[6] * sPAR[9])));
    ACC[251]=(0.06289308176100629 * (((0.5 * (X[252] + X[251])) - X[410]) * (sPAR[7] * sPAR[9])));
    ACC[67]=(0.06289308176100629 * ((X[385] + (-0.5 * (X[66] + X[67]))) * (sPAR[6] * sPAR[9])));
    ACC[250]=(0.06289308176100629 * (((0.5 * (X[251] + X[250])) - X[409]) * (sPAR[7] * sPAR[9])));
    ACC[68]=(0.06289308176100629 * ((X[386] + (-0.5 * (X[67] + X[68]))) * (sPAR[6] * sPAR[9])));
    ACC[249]=(0.06289308176100629 * (((0.5 * (X[250] + X[249])) - X[408]) * (sPAR[7] * sPAR[9])));
    ACC[69]=(0.06289308176100629 * ((X[387] + (-0.5 * (X[68] + X[69]))) * (sPAR[6] * sPAR[9])));
    ACC[248]=(0.06289308176100629 * (((0.5 * (X[249] + X[248])) - X[407]) * (sPAR[7] * sPAR[9])));
    ACC[70]=(0.06289308176100629 * ((X[388] + (-0.5 * (X[69] + X[70]))) * (sPAR[6] * sPAR[9])));
    ACC[247]=(0.06289308176100629 * (((0.5 * (X[248] + X[247])) - X[406]) * (sPAR[7] * sPAR[9])));
    ACC[71]=(0.06289308176100629 * ((X[389] + (-0.5 * (X[70] + X[71]))) * (sPAR[6] * sPAR[9])));
    ACC[246]=(0.06289308176100629 * (((0.5 * (X[247] + X[246])) - X[405]) * (sPAR[7] * sPAR[9])));
    ACC[72]=(0.06289308176100629 * ((X[390] + (-0.5 * (X[71] + X[72]))) * (sPAR[6] * sPAR[9])));
    ACC[245]=(0.06289308176100629 * (((0.5 * (X[246] + X[245])) - X[404]) * (sPAR[7] * sPAR[9])));
    ACC[73]=(0.06289308176100629 * ((X[391] + (-0.5 * (X[72] + X[73]))) * (sPAR[6] * sPAR[9])));
    ACC[244]=(0.06289308176100629 * (((0.5 * (X[245] + X[244])) - X[403]) * (sPAR[7] * sPAR[9])));
    ACC[74]=(0.06289308176100629 * ((X[392] + (-0.5 * (X[73] + X[74]))) * (sPAR[6] * sPAR[9])));
    ACC[243]=(0.06289308176100629 * (((0.5 * (X[244] + X[243])) - X[402]) * (sPAR[7] * sPAR[9])));
    ACC[75]=(0.06289308176100629 * ((X[393] + (-0.5 * (X[74] + X[75]))) * (sPAR[6] * sPAR[9])));
    ACC[242]=(0.06289308176100629 * (((0.5 * (X[243] + X[242])) - X[401]) * (sPAR[7] * sPAR[9])));
    ACC[76]=(0.06289308176100629 * ((X[394] + (-0.5 * (X[75] + X[76]))) * (sPAR[6] * sPAR[9])));
    ACC[241]=(0.06289308176100629 * (((0.5 * (X[242] + X[241])) - X[400]) * (sPAR[7] * sPAR[9])));
    ACC[77]=(0.06289308176100629 * ((X[395] + (-0.5 * (X[76] + X[77]))) * (sPAR[6] * sPAR[9])));
    ACC[240]=(0.06289308176100629 * (((0.5 * (X[241] + X[240])) - X[399]) * (sPAR[7] * sPAR[9])));
    ACC[78]=(0.06289308176100629 * ((X[396] + (-0.5 * (X[77] + X[78]))) * (sPAR[6] * sPAR[9])));
    ACC[239]=(0.06289308176100629 * (((0.5 * (X[240] + X[239])) - X[398]) * (sPAR[7] * sPAR[9])));
    ACC[79]=(0.06289308176100629 * ((X[397] + (-0.5 * (X[78] + X[79]))) * (sPAR[6] * sPAR[9])));
    ACC[238]=(0.06289308176100629 * (((0.5 * (X[239] + X[238])) - X[397]) * (sPAR[7] * sPAR[9])));
    ACC[80]=(0.06289308176100629 * ((X[398] + (-0.5 * (X[79] + X[80]))) * (sPAR[6] * sPAR[9])));
    ACC[237]=(0.06289308176100629 * (((0.5 * (X[238] + X[237])) - X[396]) * (sPAR[7] * sPAR[9])));
    ACC[81]=(0.06289308176100629 * ((X[399] + (-0.5 * (X[80] + X[81]))) * (sPAR[6] * sPAR[9])));
    ACC[236]=(0.06289308176100629 * (((0.5 * (X[237] + X[236])) - X[395]) * (sPAR[7] * sPAR[9])));
    ACC[82]=(0.06289308176100629 * ((X[400] + (-0.5 * (X[81] + X[82]))) * (sPAR[6] * sPAR[9])));
    ACC[235]=(0.06289308176100629 * (((0.5 * (X[236] + X[235])) - X[394]) * (sPAR[7] * sPAR[9])));
    ACC[83]=(0.06289308176100629 * ((X[401] + (-0.5 * (X[82] + X[83]))) * (sPAR[6] * sPAR[9])));
    ACC[234]=(0.06289308176100629 * (((0.5 * (X[235] + X[234])) - X[393]) * (sPAR[7] * sPAR[9])));
    ACC[84]=(0.06289308176100629 * ((X[402] + (-0.5 * (X[83] + X[84]))) * (sPAR[6] * sPAR[9])));
    ACC[233]=(0.06289308176100629 * (((0.5 * (X[234] + X[233])) - X[392]) * (sPAR[7] * sPAR[9])));
    ACC[85]=(0.06289308176100629 * ((X[403] + (-0.5 * (X[84] + X[85]))) * (sPAR[6] * sPAR[9])));
    ACC[232]=(0.06289308176100629 * (((0.5 * (X[233] + X[232])) - X[391]) * (sPAR[7] * sPAR[9])));
    ACC[86]=(0.06289308176100629 * ((X[404] + (-0.5 * (X[85] + X[86]))) * (sPAR[6] * sPAR[9])));
    ACC[231]=(0.06289308176100629 * (((0.5 * (X[232] + X[231])) - X[390]) * (sPAR[7] * sPAR[9])));
    ACC[87]=(0.06289308176100629 * ((X[405] + (-0.5 * (X[86] + X[87]))) * (sPAR[6] * sPAR[9])));
    ACC[230]=(0.06289308176100629 * (((0.5 * (X[231] + X[230])) - X[389]) * (sPAR[7] * sPAR[9])));
    ACC[88]=(0.06289308176100629 * ((X[406] + (-0.5 * (X[87] + X[88]))) * (sPAR[6] * sPAR[9])));
    ACC[229]=(0.06289308176100629 * (((0.5 * (X[230] + X[229])) - X[388]) * (sPAR[7] * sPAR[9])));
    ACC[89]=(0.06289308176100629 * ((X[407] + (-0.5 * (X[88] + X[89]))) * (sPAR[6] * sPAR[9])));
    ACC[228]=(0.06289308176100629 * (((0.5 * (X[229] + X[228])) - X[387]) * (sPAR[7] * sPAR[9])));
    ACC[90]=(0.06289308176100629 * ((X[408] + (-0.5 * (X[89] + X[90]))) * (sPAR[6] * sPAR[9])));
    ACC[227]=(0.06289308176100629 * (((0.5 * (X[228] + X[227])) - X[386]) * (sPAR[7] * sPAR[9])));
    ACC[91]=(0.06289308176100629 * ((X[409] + (-0.5 * (X[90] + X[91]))) * (sPAR[6] * sPAR[9])));
    ACC[226]=(0.06289308176100629 * (((0.5 * (X[227] + X[226])) - X[385]) * (sPAR[7] * sPAR[9])));
    ACC[92]=(0.06289308176100629 * ((X[410] + (-0.5 * (X[91] + X[92]))) * (sPAR[6] * sPAR[9])));
    ACC[225]=(0.06289308176100629 * (((0.5 * (X[226] + X[225])) - X[384]) * (sPAR[7] * sPAR[9])));
    ACC[93]=(0.06289308176100629 * ((X[411] + (-0.5 * (X[92] + X[93]))) * (sPAR[6] * sPAR[9])));
    ACC[224]=(0.06289308176100629 * (((0.5 * (X[225] + X[224])) - X[383]) * (sPAR[7] * sPAR[9])));
    ACC[94]=(0.06289308176100629 * ((X[412] + (-0.5 * (X[93] + X[94]))) * (sPAR[6] * sPAR[9])));
    ACC[223]=(0.06289308176100629 * (((0.5 * (X[224] + X[223])) - X[382]) * (sPAR[7] * sPAR[9])));
    ACC[95]=(0.06289308176100629 * ((X[413] + (-0.5 * (X[94] + X[95]))) * (sPAR[6] * sPAR[9])));
    ACC[222]=(0.06289308176100629 * (((0.5 * (X[223] + X[222])) - X[381]) * (sPAR[7] * sPAR[9])));
    ACC[96]=(0.06289308176100629 * ((X[414] + (-0.5 * (X[95] + X[96]))) * (sPAR[6] * sPAR[9])));
    ACC[221]=(0.06289308176100629 * (((0.5 * (X[222] + X[221])) - X[380]) * (sPAR[7] * sPAR[9])));
    ACC[97]=(0.06289308176100629 * ((X[415] + (-0.5 * (X[96] + X[97]))) * (sPAR[6] * sPAR[9])));
    ACC[220]=(0.06289308176100629 * (((0.5 * (X[221] + X[220])) - X[379]) * (sPAR[7] * sPAR[9])));
    ACC[98]=(0.06289308176100629 * ((X[416] + (-0.5 * (X[97] + X[98]))) * (sPAR[6] * sPAR[9])));
    ACC[219]=(0.06289308176100629 * (((0.5 * (X[220] + X[219])) - X[378]) * (sPAR[7] * sPAR[9])));
    ACC[99]=(0.06289308176100629 * ((X[417] + (-0.5 * (X[98] + X[99]))) * (sPAR[6] * sPAR[9])));
    ACC[218]=(0.06289308176100629 * (((0.5 * (X[219] + X[218])) - X[377]) * (sPAR[7] * sPAR[9])));
    ACC[100]=(0.06289308176100629 * ((X[418] + (-0.5 * (X[99] + X[100]))) * (sPAR[6] * sPAR[9])));
    ACC[217]=(0.06289308176100629 * (((0.5 * (X[218] + X[217])) - X[376]) * (sPAR[7] * sPAR[9])));
    ACC[101]=(0.06289308176100629 * ((X[419] + (-0.5 * (X[100] + X[101]))) * (sPAR[6] * sPAR[9])));
    ACC[216]=(0.06289308176100629 * (((0.5 * (X[217] + X[216])) - X[375]) * (sPAR[7] * sPAR[9])));
    ACC[102]=(0.06289308176100629 * ((X[420] + (-0.5 * (X[101] + X[102]))) * (sPAR[6] * sPAR[9])));
    ACC[215]=(0.06289308176100629 * (((0.5 * (X[216] + X[215])) - X[374]) * (sPAR[7] * sPAR[9])));
    ACC[103]=(0.06289308176100629 * ((X[421] + (-0.5 * (X[102] + X[103]))) * (sPAR[6] * sPAR[9])));
    ACC[214]=(0.06289308176100629 * (((0.5 * (X[215] + X[214])) - X[373]) * (sPAR[7] * sPAR[9])));
    ACC[104]=(0.06289308176100629 * ((X[422] + (-0.5 * (X[103] + X[104]))) * (sPAR[6] * sPAR[9])));
    ACC[213]=(0.06289308176100629 * (((0.5 * (X[214] + X[213])) - X[372]) * (sPAR[7] * sPAR[9])));
    ACC[105]=(0.06289308176100629 * ((X[423] + (-0.5 * (X[104] + X[105]))) * (sPAR[6] * sPAR[9])));
    ACC[212]=(0.06289308176100629 * (((0.5 * (X[213] + X[212])) - X[371]) * (sPAR[7] * sPAR[9])));
    ACC[106]=(0.06289308176100629 * ((X[424] + (-0.5 * (X[105] + X[106]))) * (sPAR[6] * sPAR[9])));
    ACC[211]=(0.06289308176100629 * (((0.5 * (X[212] + X[211])) - X[370]) * (sPAR[7] * sPAR[9])));
    ACC[107]=(0.06289308176100629 * ((X[425] + (-0.5 * (X[106] + X[107]))) * (sPAR[6] * sPAR[9])));
    ACC[210]=(0.06289308176100629 * (((0.5 * (X[211] + X[210])) - X[369]) * (sPAR[7] * sPAR[9])));
    ACC[108]=(0.06289308176100629 * ((X[426] + (-0.5 * (X[107] + X[108]))) * (sPAR[6] * sPAR[9])));
    ACC[209]=(0.06289308176100629 * (((0.5 * (X[210] + X[209])) - X[368]) * (sPAR[7] * sPAR[9])));
    ACC[109]=(0.06289308176100629 * ((X[427] + (-0.5 * (X[108] + X[109]))) * (sPAR[6] * sPAR[9])));
    ACC[208]=(0.06289308176100629 * (((0.5 * (X[209] + X[208])) - X[367]) * (sPAR[7] * sPAR[9])));
    ACC[110]=(0.06289308176100629 * ((X[428] + (-0.5 * (X[109] + X[110]))) * (sPAR[6] * sPAR[9])));
    ACC[207]=(0.06289308176100629 * (((0.5 * (X[208] + X[207])) - X[366]) * (sPAR[7] * sPAR[9])));
    ACC[111]=(0.06289308176100629 * ((X[429] + (-0.5 * (X[110] + X[111]))) * (sPAR[6] * sPAR[9])));
    ACC[206]=(0.06289308176100629 * (((0.5 * (X[207] + X[206])) - X[365]) * (sPAR[7] * sPAR[9])));
    ACC[112]=(0.06289308176100629 * ((X[430] + (-0.5 * (X[111] + X[112]))) * (sPAR[6] * sPAR[9])));
    ACC[205]=(0.06289308176100629 * (((0.5 * (X[206] + X[205])) - X[364]) * (sPAR[7] * sPAR[9])));
    ACC[113]=(0.06289308176100629 * ((X[431] + (-0.5 * (X[112] + X[113]))) * (sPAR[6] * sPAR[9])));
    ACC[204]=(0.06289308176100629 * (((0.5 * (X[205] + X[204])) - X[363]) * (sPAR[7] * sPAR[9])));
    ACC[114]=(0.06289308176100629 * ((X[432] + (-0.5 * (X[113] + X[114]))) * (sPAR[6] * sPAR[9])));
    ACC[203]=(0.06289308176100629 * (((0.5 * (X[204] + X[203])) - X[362]) * (sPAR[7] * sPAR[9])));
    ACC[115]=(0.06289308176100629 * ((X[433] + (-0.5 * (X[114] + X[115]))) * (sPAR[6] * sPAR[9])));
    ACC[202]=(0.06289308176100629 * (((0.5 * (X[203] + X[202])) - X[361]) * (sPAR[7] * sPAR[9])));
    ACC[116]=(0.06289308176100629 * ((X[434] + (-0.5 * (X[115] + X[116]))) * (sPAR[6] * sPAR[9])));
    ACC[201]=(0.06289308176100629 * (((0.5 * (X[202] + X[201])) - X[360]) * (sPAR[7] * sPAR[9])));
    ACC[117]=(0.06289308176100629 * ((X[435] + (-0.5 * (X[116] + X[117]))) * (sPAR[6] * sPAR[9])));
    ACC[200]=(0.06289308176100629 * (((0.5 * (X[201] + X[200])) - X[359]) * (sPAR[7] * sPAR[9])));
    ACC[118]=(0.06289308176100629 * ((X[436] + (-0.5 * (X[117] + X[118]))) * (sPAR[6] * sPAR[9])));
    ACC[199]=(0.06289308176100629 * (((0.5 * (X[200] + X[199])) - X[358]) * (sPAR[7] * sPAR[9])));
    ACC[119]=(0.06289308176100629 * ((X[437] + (-0.5 * (X[118] + X[119]))) * (sPAR[6] * sPAR[9])));
    ACC[198]=(0.06289308176100629 * (((0.5 * (X[199] + X[198])) - X[357]) * (sPAR[7] * sPAR[9])));
    ACC[120]=(0.06289308176100629 * ((X[438] + (-0.5 * (X[119] + X[120]))) * (sPAR[6] * sPAR[9])));
    ACC[197]=(0.06289308176100629 * (((0.5 * (X[198] + X[197])) - X[356]) * (sPAR[7] * sPAR[9])));
    ACC[121]=(0.06289308176100629 * ((X[439] + (-0.5 * (X[120] + X[121]))) * (sPAR[6] * sPAR[9])));
    ACC[196]=(0.06289308176100629 * (((0.5 * (X[197] + X[196])) - X[355]) * (sPAR[7] * sPAR[9])));
    ACC[122]=(0.06289308176100629 * ((X[440] + (-0.5 * (X[121] + X[122]))) * (sPAR[6] * sPAR[9])));
    ACC[195]=(0.06289308176100629 * (((0.5 * (X[196] + X[195])) - X[354]) * (sPAR[7] * sPAR[9])));
    ACC[123]=(0.06289308176100629 * ((X[441] + (-0.5 * (X[122] + X[123]))) * (sPAR[6] * sPAR[9])));
    ACC[194]=(0.06289308176100629 * (((0.5 * (X[195] + X[194])) - X[353]) * (sPAR[7] * sPAR[9])));
    ACC[124]=(0.06289308176100629 * ((X[442] + (-0.5 * (X[123] + X[124]))) * (sPAR[6] * sPAR[9])));
    ACC[193]=(0.06289308176100629 * (((0.5 * (X[194] + X[193])) - X[352]) * (sPAR[7] * sPAR[9])));
    ACC[125]=(0.06289308176100629 * ((X[443] + (-0.5 * (X[124] + X[125]))) * (sPAR[6] * sPAR[9])));
    ACC[192]=(0.06289308176100629 * (((0.5 * (X[193] + X[192])) - X[351]) * (sPAR[7] * sPAR[9])));
    ACC[126]=(0.06289308176100629 * ((X[444] + (-0.5 * (X[125] + X[126]))) * (sPAR[6] * sPAR[9])));
    ACC[191]=(0.06289308176100629 * (((0.5 * (X[192] + X[191])) - X[350]) * (sPAR[7] * sPAR[9])));
    ACC[127]=(0.06289308176100629 * ((X[445] + (-0.5 * (X[126] + X[127]))) * (sPAR[6] * sPAR[9])));
    ACC[190]=(0.06289308176100629 * (((0.5 * (X[191] + X[190])) - X[349]) * (sPAR[7] * sPAR[9])));
    ACC[128]=(0.06289308176100629 * ((X[446] + (-0.5 * (X[127] + X[128]))) * (sPAR[6] * sPAR[9])));
    ACC[189]=(0.06289308176100629 * (((0.5 * (X[190] + X[189])) - X[348]) * (sPAR[7] * sPAR[9])));
    ACC[129]=(0.06289308176100629 * ((X[447] + (-0.5 * (X[128] + X[129]))) * (sPAR[6] * sPAR[9])));
    ACC[188]=(0.06289308176100629 * (((0.5 * (X[189] + X[188])) - X[347]) * (sPAR[7] * sPAR[9])));
    ACC[130]=(0.06289308176100629 * ((X[448] + (-0.5 * (X[129] + X[130]))) * (sPAR[6] * sPAR[9])));
    ACC[187]=(0.06289308176100629 * (((0.5 * (X[188] + X[187])) - X[346]) * (sPAR[7] * sPAR[9])));
    ACC[131]=(0.06289308176100629 * ((X[449] + (-0.5 * (X[130] + X[131]))) * (sPAR[6] * sPAR[9])));
    ACC[186]=(0.06289308176100629 * (((0.5 * (X[187] + X[186])) - X[345]) * (sPAR[7] * sPAR[9])));
    ACC[132]=(0.06289308176100629 * ((X[450] + (-0.5 * (X[131] + X[132]))) * (sPAR[6] * sPAR[9])));
    ACC[185]=(0.06289308176100629 * (((0.5 * (X[186] + X[185])) - X[344]) * (sPAR[7] * sPAR[9])));
    ACC[133]=(0.06289308176100629 * ((X[451] + (-0.5 * (X[132] + X[133]))) * (sPAR[6] * sPAR[9])));
    ACC[184]=(0.06289308176100629 * (((0.5 * (X[185] + X[184])) - X[343]) * (sPAR[7] * sPAR[9])));
    ACC[134]=(0.06289308176100629 * ((X[452] + (-0.5 * (X[133] + X[134]))) * (sPAR[6] * sPAR[9])));
    ACC[183]=(0.06289308176100629 * (((0.5 * (X[184] + X[183])) - X[342]) * (sPAR[7] * sPAR[9])));
    ACC[135]=(0.06289308176100629 * ((X[453] + (-0.5 * (X[134] + X[135]))) * (sPAR[6] * sPAR[9])));
    ACC[182]=(0.06289308176100629 * (((0.5 * (X[183] + X[182])) - X[341]) * (sPAR[7] * sPAR[9])));
    ACC[136]=(0.06289308176100629 * ((X[454] + (-0.5 * (X[135] + X[136]))) * (sPAR[6] * sPAR[9])));
    ACC[181]=(0.06289308176100629 * (((0.5 * (X[182] + X[181])) - X[340]) * (sPAR[7] * sPAR[9])));
    ACC[137]=(0.06289308176100629 * ((X[455] + (-0.5 * (X[136] + X[137]))) * (sPAR[6] * sPAR[9])));
    ACC[180]=(0.06289308176100629 * (((0.5 * (X[181] + X[180])) - X[339]) * (sPAR[7] * sPAR[9])));
    ACC[138]=(0.06289308176100629 * ((X[456] + (-0.5 * (X[137] + X[138]))) * (sPAR[6] * sPAR[9])));
    ACC[179]=(0.06289308176100629 * (((0.5 * (X[180] + X[179])) - X[338]) * (sPAR[7] * sPAR[9])));
    ACC[139]=(0.06289308176100629 * ((X[457] + (-0.5 * (X[138] + X[139]))) * (sPAR[6] * sPAR[9])));
    ACC[178]=(0.06289308176100629 * (((0.5 * (X[179] + X[178])) - X[337]) * (sPAR[7] * sPAR[9])));
    ACC[140]=(0.06289308176100629 * ((X[458] + (-0.5 * (X[139] + X[140]))) * (sPAR[6] * sPAR[9])));
    ACC[177]=(0.06289308176100629 * (((0.5 * (X[178] + X[177])) - X[336]) * (sPAR[7] * sPAR[9])));
    ACC[141]=(0.06289308176100629 * ((X[459] + (-0.5 * (X[140] + X[141]))) * (sPAR[6] * sPAR[9])));
    ACC[176]=(0.06289308176100629 * (((0.5 * (X[177] + X[176])) - X[335]) * (sPAR[7] * sPAR[9])));
    ACC[142]=(0.06289308176100629 * ((X[460] + (-0.5 * (X[141] + X[142]))) * (sPAR[6] * sPAR[9])));
    ACC[175]=(0.06289308176100629 * (((0.5 * (X[176] + X[175])) - X[334]) * (sPAR[7] * sPAR[9])));
    ACC[143]=(0.06289308176100629 * ((X[461] + (-0.5 * (X[142] + X[143]))) * (sPAR[6] * sPAR[9])));
    ACC[174]=(0.06289308176100629 * (((0.5 * (X[175] + X[174])) - X[333]) * (sPAR[7] * sPAR[9])));
    ACC[144]=(0.06289308176100629 * ((X[462] + (-0.5 * (X[143] + X[144]))) * (sPAR[6] * sPAR[9])));
    ACC[173]=(0.06289308176100629 * (((0.5 * (X[174] + X[173])) - X[332]) * (sPAR[7] * sPAR[9])));
    ACC[145]=(0.06289308176100629 * ((X[463] + (-0.5 * (X[144] + X[145]))) * (sPAR[6] * sPAR[9])));
    ACC[172]=(0.06289308176100629 * (((0.5 * (X[173] + X[172])) - X[331]) * (sPAR[7] * sPAR[9])));
    ACC[146]=(0.06289308176100629 * ((X[464] + (-0.5 * (X[145] + X[146]))) * (sPAR[6] * sPAR[9])));
    ACC[171]=(0.06289308176100629 * (((0.5 * (X[172] + X[171])) - X[330]) * (sPAR[7] * sPAR[9])));
    ACC[147]=(0.06289308176100629 * ((X[465] + (-0.5 * (X[146] + X[147]))) * (sPAR[6] * sPAR[9])));
    ACC[170]=(0.06289308176100629 * (((0.5 * (X[171] + X[170])) - X[329]) * (sPAR[7] * sPAR[9])));
    ACC[148]=(0.06289308176100629 * ((X[466] + (-0.5 * (X[147] + X[148]))) * (sPAR[6] * sPAR[9])));
    ACC[169]=(0.06289308176100629 * (((0.5 * (X[170] + X[169])) - X[328]) * (sPAR[7] * sPAR[9])));
    ACC[149]=(0.06289308176100629 * ((X[467] + (-0.5 * (X[148] + X[149]))) * (sPAR[6] * sPAR[9])));
    ACC[168]=(0.06289308176100629 * (((0.5 * (X[169] + X[168])) - X[327]) * (sPAR[7] * sPAR[9])));
    ACC[150]=(0.06289308176100629 * ((X[468] + (-0.5 * (X[149] + X[150]))) * (sPAR[6] * sPAR[9])));
    ACC[167]=(0.06289308176100629 * (((0.5 * (X[168] + X[167])) - X[326]) * (sPAR[7] * sPAR[9])));
    ACC[151]=(0.06289308176100629 * ((X[469] + (-0.5 * (X[150] + X[151]))) * (sPAR[6] * sPAR[9])));
    ACC[166]=(0.06289308176100629 * (((0.5 * (X[167] + X[166])) - X[325]) * (sPAR[7] * sPAR[9])));
    ACC[152]=(0.06289308176100629 * ((X[470] + (-0.5 * (X[151] + X[152]))) * (sPAR[6] * sPAR[9])));
    ACC[165]=(0.06289308176100629 * (((0.5 * (X[166] + X[165])) - X[324]) * (sPAR[7] * sPAR[9])));
    ACC[153]=(0.06289308176100629 * ((X[471] + (-0.5 * (X[152] + X[153]))) * (sPAR[6] * sPAR[9])));
    ACC[164]=(0.06289308176100629 * (((0.5 * (X[165] + X[164])) - X[323]) * (sPAR[7] * sPAR[9])));
    ACC[154]=(0.06289308176100629 * ((X[472] + (-0.5 * (X[153] + X[154]))) * (sPAR[6] * sPAR[9])));
    ACC[163]=(0.06289308176100629 * (((0.5 * (X[164] + X[163])) - X[322]) * (sPAR[7] * sPAR[9])));
    ACC[155]=(0.06289308176100629 * ((X[473] + (-0.5 * (X[154] + X[155]))) * (sPAR[6] * sPAR[9])));
    ACC[162]=(0.06289308176100629 * (((0.5 * (X[163] + X[162])) - X[321]) * (sPAR[7] * sPAR[9])));
    ACC[156]=(0.06289308176100629 * ((X[474] + (-0.5 * (X[155] + X[156]))) * (sPAR[6] * sPAR[9])));
    ACC[161]=(0.06289308176100629 * (((0.5 * (X[162] + X[161])) - X[320]) * (sPAR[7] * sPAR[9])));
    ACC[157]=(0.06289308176100629 * ((X[475] + (-0.5 * (X[156] + X[157]))) * (sPAR[6] * sPAR[9])));
    ACC[160]=(0.06289308176100629 * (((0.5 * (X[161] + X[160])) - X[319]) * (sPAR[7] * sPAR[9])));
    ACC[158]=(0.06289308176100629 * ((X[476] + (-0.5 * (X[157] + X[158]))) * (sPAR[6] * sPAR[9])));
    ACC[318]=(ACC[0] + (ACC[1] + (ACC[2] + (ACC[3] + (ACC[4] + (ACC[5] + (ACC[6] + (ACC[7] + (ACC[8] + (ACC[9] + (ACC[10] + (ACC[11] + (ACC[12] + (ACC[13] + (ACC[14] + (ACC[15] + (ACC[16] + (ACC[17] + (ACC[18] + (ACC[19] + (ACC[20] + (ACC[21] + (ACC[22] + (ACC[23] + (ACC[24] + (ACC[25] + (ACC[26] + (ACC[27] + (ACC[28] + (ACC[29] + (ACC[30] + (ACC[31] + (ACC[32] + (ACC[33] + (ACC[34] + (ACC[35] + (ACC[36] + (ACC[37] + (ACC[38] + (ACC[39] + (ACC[40] + (ACC[41] + (ACC[42] + (ACC[43] + (ACC[44] + (ACC[45] + (ACC[46] + (ACC[47] + (ACC[48] + (ACC[49] + (ACC[50] + (ACC[51] + (ACC[52] + (ACC[53] + (ACC[54] + (ACC[55] + (ACC[56] + (ACC[57] + (ACC[58] + (ACC[59] + (ACC[60] + (ACC[61] + (ACC[62] + (ACC[63] + (ACC[64] + (ACC[65] + (ACC[66] + (ACC[67] + (ACC[68] + (ACC[69] + (ACC[70] + (ACC[71] + (ACC[72] + (ACC[73] + (ACC[74] + (ACC[75] + (ACC[76] + (ACC[77] + (ACC[78] + (ACC[79] + (ACC[80] + (ACC[81] + (ACC[82] + (ACC[83] + (ACC[84] + (ACC[85] + (ACC[86] + (ACC[87] + (ACC[88] + (ACC[89] + (ACC[90] + (ACC[91] + (ACC[92] + (ACC[93] + (ACC[94] + (ACC[95] + (ACC[96] + (ACC[97] + (ACC[98] + (ACC[99] + (ACC[100] + (ACC[101] + (ACC[102] + (ACC[103] + (ACC[104] + (ACC[105] + (ACC[106] + (ACC[107] + (ACC[108] + (ACC[109] + (ACC[110] + (ACC[111] + (ACC[112] + (ACC[113] + (ACC[114] + (ACC[115] + (ACC[116] + (ACC[117] + (ACC[118] + (ACC[119] + (ACC[120] + (ACC[121] + (ACC[122] + (ACC[123] + (ACC[124] + (ACC[125] + (ACC[126] + (ACC[127] + (ACC[128] + (ACC[129] + (ACC[130] + (ACC[131] + (ACC[132] + (ACC[133] + (ACC[134] + (ACC[135] + (ACC[136] + (ACC[137] + (ACC[138] + (ACC[139] + (ACC[140] + (ACC[141] + (ACC[142] + (ACC[143] + (ACC[144] + (ACC[145] + (ACC[146] + (ACC[147] + (ACC[148] + (ACC[149] + (ACC[150] + (ACC[151] + (ACC[152] + (ACC[153] + (ACC[154] + (ACC[155] + (ACC[156] + (ACC[157] + ACC[158]))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
    ACC[159]=(0.06289308176100629 * (((0.5 * (X[160] + X[159])) - X[318]) * (sPAR[7] * sPAR[9])));
    ACC[319]=(ACC[159] + (ACC[160] + (ACC[161] + (ACC[162] + (ACC[163] + (ACC[164] + (ACC[165] + (ACC[166] + (ACC[167] + (ACC[168] + (ACC[169] + (ACC[170] + (ACC[171] + (ACC[172] + (ACC[173] + (ACC[174] + (ACC[175] + (ACC[176] + (ACC[177] + (ACC[178] + (ACC[179] + (ACC[180] + (ACC[181] + (ACC[182] + (ACC[183] + (ACC[184] + (ACC[185] + (ACC[186] + (ACC[187] + (ACC[188] + (ACC[189] + (ACC[190] + (ACC[191] + (ACC[192] + (ACC[193] + (ACC[194] + (ACC[195] + (ACC[196] + (ACC[197] + (ACC[198] + (ACC[199] + (ACC[200] + (ACC[201] + (ACC[202] + (ACC[203] + (ACC[204] + (ACC[205] + (ACC[206] + (ACC[207] + (ACC[208] + (ACC[209] + (ACC[210] + (ACC[211] + (ACC[212] + (ACC[213] + (ACC[214] + (ACC[215] + (ACC[216] + (ACC[217] + (ACC[218] + (ACC[219] + (ACC[220] + (ACC[221] + (ACC[222] + (ACC[223] + (ACC[224] + (ACC[225] + (ACC[226] + (ACC[227] + (ACC[228] + (ACC[229] + (ACC[230] + (ACC[231] + (ACC[232] + (ACC[233] + (ACC[234] + (ACC[235] + (ACC[236] + (ACC[237] + (ACC[238] + (ACC[239] + (ACC[240] + (ACC[241] + (ACC[242] + (ACC[243] + (ACC[244] + (ACC[245] + (ACC[246] + (ACC[247] + (ACC[248] + (ACC[249] + (ACC[250] + (ACC[251] + (ACC[252] + (ACC[253] + (ACC[254] + (ACC[255] + (ACC[256] + (ACC[257] + (ACC[258] + (ACC[259] + (ACC[260] + (ACC[261] + (ACC[262] + (ACC[263] + (ACC[264] + (ACC[265] + (ACC[266] + (ACC[267] + (ACC[268] + (ACC[269] + (ACC[270] + (ACC[271] + (ACC[272] + (ACC[273] + (ACC[274] + (ACC[275] + (ACC[276] + (ACC[277] + (ACC[278] + (ACC[279] + (ACC[280] + (ACC[281] + (ACC[282] + (ACC[283] + (ACC[284] + (ACC[285] + (ACC[286] + (ACC[287] + (ACC[288] + (ACC[289] + (ACC[290] + (ACC[291] + (ACC[292] + (ACC[293] + (ACC[294] + (ACC[295] + (ACC[296] + (ACC[297] + (ACC[298] + (ACC[299] + (ACC[300] + (ACC[301] + (ACC[302] + (ACC[303] + (ACC[304] + (ACC[305] + (ACC[306] + (ACC[307] + (ACC[308] + (ACC[309] + (ACC[310] + (ACC[311] + (ACC[312] + (ACC[313] + (ACC[314] + (ACC[315] + (ACC[316] + ACC[317]))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
    F[317]=(((sPAR[12] * (sPAR[4] * (310.0 - X[317]))) - ACC[317]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[0]=(((ACC[322] * (sPAR[3] * (ACC[320] - X[0]))) + ACC[0]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[1]=(((ACC[322] * (sPAR[3] * (X[0] - X[1]))) + ACC[1]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[316]=(((sPAR[12] * (sPAR[4] * (X[317] - X[316]))) - ACC[316]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[2]=(((ACC[322] * (sPAR[3] * (X[1] - X[2]))) + ACC[2]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[315]=(((sPAR[12] * (sPAR[4] * (X[316] - X[315]))) - ACC[315]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[3]=(((ACC[322] * (sPAR[3] * (X[2] - X[3]))) + ACC[3]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[314]=(((sPAR[12] * (sPAR[4] * (X[315] - X[314]))) - ACC[314]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[4]=(((ACC[322] * (sPAR[3] * (X[3] - X[4]))) + ACC[4]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[313]=(((sPAR[12] * (sPAR[4] * (X[314] - X[313]))) - ACC[313]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[5]=(((ACC[322] * (sPAR[3] * (X[4] - X[5]))) + ACC[5]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[312]=(((sPAR[12] * (sPAR[4] * (X[313] - X[312]))) - ACC[312]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[6]=(((ACC[322] * (sPAR[3] * (X[5] - X[6]))) + ACC[6]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[311]=(((sPAR[12] * (sPAR[4] * (X[312] - X[311]))) - ACC[311]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[7]=(((ACC[322] * (sPAR[3] * (X[6] - X[7]))) + ACC[7]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[310]=(((sPAR[12] * (sPAR[4] * (X[311] - X[310]))) - ACC[310]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[8]=(((ACC[322] * (sPAR[3] * (X[7] - X[8]))) + ACC[8]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[309]=(((sPAR[12] * (sPAR[4] * (X[310] - X[309]))) - ACC[309]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[9]=(((ACC[322] * (sPAR[3] * (X[8] - X[9]))) + ACC[9]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[308]=(((sPAR[12] * (sPAR[4] * (X[309] - X[308]))) - ACC[308]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[10]=(((ACC[322] * (sPAR[3] * (X[9] - X[10]))) + ACC[10]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[307]=(((sPAR[12] * (sPAR[4] * (X[308] - X[307]))) - ACC[307]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[11]=(((ACC[322] * (sPAR[3] * (X[10] - X[11]))) + ACC[11]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[306]=(((sPAR[12] * (sPAR[4] * (X[307] - X[306]))) - ACC[306]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[12]=(((ACC[322] * (sPAR[3] * (X[11] - X[12]))) + ACC[12]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[305]=(((sPAR[12] * (sPAR[4] * (X[306] - X[305]))) - ACC[305]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[13]=(((ACC[322] * (sPAR[3] * (X[12] - X[13]))) + ACC[13]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[304]=(((sPAR[12] * (sPAR[4] * (X[305] - X[304]))) - ACC[304]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[14]=(((ACC[322] * (sPAR[3] * (X[13] - X[14]))) + ACC[14]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[303]=(((sPAR[12] * (sPAR[4] * (X[304] - X[303]))) - ACC[303]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[15]=(((ACC[322] * (sPAR[3] * (X[14] - X[15]))) + ACC[15]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[302]=(((sPAR[12] * (sPAR[4] * (X[303] - X[302]))) - ACC[302]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[16]=(((ACC[322] * (sPAR[3] * (X[15] - X[16]))) + ACC[16]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[301]=(((sPAR[12] * (sPAR[4] * (X[302] - X[301]))) - ACC[301]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[17]=(((ACC[322] * (sPAR[3] * (X[16] - X[17]))) + ACC[17]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[300]=(((sPAR[12] * (sPAR[4] * (X[301] - X[300]))) - ACC[300]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[18]=(((ACC[322] * (sPAR[3] * (X[17] - X[18]))) + ACC[18]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[299]=(((sPAR[12] * (sPAR[4] * (X[300] - X[299]))) - ACC[299]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[19]=(((ACC[322] * (sPAR[3] * (X[18] - X[19]))) + ACC[19]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[298]=(((sPAR[12] * (sPAR[4] * (X[299] - X[298]))) - ACC[298]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[20]=(((ACC[322] * (sPAR[3] * (X[19] - X[20]))) + ACC[20]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[297]=(((sPAR[12] * (sPAR[4] * (X[298] - X[297]))) - ACC[297]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[21]=(((ACC[322] * (sPAR[3] * (X[20] - X[21]))) + ACC[21]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[296]=(((sPAR[12] * (sPAR[4] * (X[297] - X[296]))) - ACC[296]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[22]=(((ACC[322] * (sPAR[3] * (X[21] - X[22]))) + ACC[22]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[295]=(((sPAR[12] * (sPAR[4] * (X[296] - X[295]))) - ACC[295]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[23]=(((ACC[322] * (sPAR[3] * (X[22] - X[23]))) + ACC[23]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[294]=(((sPAR[12] * (sPAR[4] * (X[295] - X[294]))) - ACC[294]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[24]=(((ACC[322] * (sPAR[3] * (X[23] - X[24]))) + ACC[24]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[293]=(((sPAR[12] * (sPAR[4] * (X[294] - X[293]))) - ACC[293]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[25]=(((ACC[322] * (sPAR[3] * (X[24] - X[25]))) + ACC[25]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[292]=(((sPAR[12] * (sPAR[4] * (X[293] - X[292]))) - ACC[292]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[26]=(((ACC[322] * (sPAR[3] * (X[25] - X[26]))) + ACC[26]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[291]=(((sPAR[12] * (sPAR[4] * (X[292] - X[291]))) - ACC[291]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[27]=(((ACC[322] * (sPAR[3] * (X[26] - X[27]))) + ACC[27]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[290]=(((sPAR[12] * (sPAR[4] * (X[291] - X[290]))) - ACC[290]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[28]=(((ACC[322] * (sPAR[3] * (X[27] - X[28]))) + ACC[28]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[289]=(((sPAR[12] * (sPAR[4] * (X[290] - X[289]))) - ACC[289]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[29]=(((ACC[322] * (sPAR[3] * (X[28] - X[29]))) + ACC[29]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[288]=(((sPAR[12] * (sPAR[4] * (X[289] - X[288]))) - ACC[288]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[30]=(((ACC[322] * (sPAR[3] * (X[29] - X[30]))) + ACC[30]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[287]=(((sPAR[12] * (sPAR[4] * (X[288] - X[287]))) - ACC[287]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[31]=(((ACC[322] * (sPAR[3] * (X[30] - X[31]))) + ACC[31]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[286]=(((sPAR[12] * (sPAR[4] * (X[287] - X[286]))) - ACC[286]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[32]=(((ACC[322] * (sPAR[3] * (X[31] - X[32]))) + ACC[32]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[285]=(((sPAR[12] * (sPAR[4] * (X[286] - X[285]))) - ACC[285]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[33]=(((ACC[322] * (sPAR[3] * (X[32] - X[33]))) + ACC[33]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[284]=(((sPAR[12] * (sPAR[4] * (X[285] - X[284]))) - ACC[284]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[34]=(((ACC[322] * (sPAR[3] * (X[33] - X[34]))) + ACC[34]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[283]=(((sPAR[12] * (sPAR[4] * (X[284] - X[283]))) - ACC[283]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[35]=(((ACC[322] * (sPAR[3] * (X[34] - X[35]))) + ACC[35]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[282]=(((sPAR[12] * (sPAR[4] * (X[283] - X[282]))) - ACC[282]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[36]=(((ACC[322] * (sPAR[3] * (X[35] - X[36]))) + ACC[36]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[281]=(((sPAR[12] * (sPAR[4] * (X[282] - X[281]))) - ACC[281]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[37]=(((ACC[322] * (sPAR[3] * (X[36] - X[37]))) + ACC[37]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[280]=(((sPAR[12] * (sPAR[4] * (X[281] - X[280]))) - ACC[280]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[38]=(((ACC[322] * (sPAR[3] * (X[37] - X[38]))) + ACC[38]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[279]=(((sPAR[12] * (sPAR[4] * (X[280] - X[279]))) - ACC[279]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[39]=(((ACC[322] * (sPAR[3] * (X[38] - X[39]))) + ACC[39]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[278]=(((sPAR[12] * (sPAR[4] * (X[279] - X[278]))) - ACC[278]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[40]=(((ACC[322] * (sPAR[3] * (X[39] - X[40]))) + ACC[40]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[277]=(((sPAR[12] * (sPAR[4] * (X[278] - X[277]))) - ACC[277]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[41]=(((ACC[322] * (sPAR[3] * (X[40] - X[41]))) + ACC[41]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[276]=(((sPAR[12] * (sPAR[4] * (X[277] - X[276]))) - ACC[276]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[42]=(((ACC[322] * (sPAR[3] * (X[41] - X[42]))) + ACC[42]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[275]=(((sPAR[12] * (sPAR[4] * (X[276] - X[275]))) - ACC[275]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[43]=(((ACC[322] * (sPAR[3] * (X[42] - X[43]))) + ACC[43]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[274]=(((sPAR[12] * (sPAR[4] * (X[275] - X[274]))) - ACC[274]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[44]=(((ACC[322] * (sPAR[3] * (X[43] - X[44]))) + ACC[44]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[273]=(((sPAR[12] * (sPAR[4] * (X[274] - X[273]))) - ACC[273]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[45]=(((ACC[322] * (sPAR[3] * (X[44] - X[45]))) + ACC[45]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[272]=(((sPAR[12] * (sPAR[4] * (X[273] - X[272]))) - ACC[272]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[46]=(((ACC[322] * (sPAR[3] * (X[45] - X[46]))) + ACC[46]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[271]=(((sPAR[12] * (sPAR[4] * (X[272] - X[271]))) - ACC[271]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[47]=(((ACC[322] * (sPAR[3] * (X[46] - X[47]))) + ACC[47]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[270]=(((sPAR[12] * (sPAR[4] * (X[271] - X[270]))) - ACC[270]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[48]=(((ACC[322] * (sPAR[3] * (X[47] - X[48]))) + ACC[48]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[269]=(((sPAR[12] * (sPAR[4] * (X[270] - X[269]))) - ACC[269]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[49]=(((ACC[322] * (sPAR[3] * (X[48] - X[49]))) + ACC[49]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[268]=(((sPAR[12] * (sPAR[4] * (X[269] - X[268]))) - ACC[268]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[50]=(((ACC[322] * (sPAR[3] * (X[49] - X[50]))) + ACC[50]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[267]=(((sPAR[12] * (sPAR[4] * (X[268] - X[267]))) - ACC[267]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[51]=(((ACC[322] * (sPAR[3] * (X[50] - X[51]))) + ACC[51]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[266]=(((sPAR[12] * (sPAR[4] * (X[267] - X[266]))) - ACC[266]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[52]=(((ACC[322] * (sPAR[3] * (X[51] - X[52]))) + ACC[52]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[265]=(((sPAR[12] * (sPAR[4] * (X[266] - X[265]))) - ACC[265]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[53]=(((ACC[322] * (sPAR[3] * (X[52] - X[53]))) + ACC[53]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[264]=(((sPAR[12] * (sPAR[4] * (X[265] - X[264]))) - ACC[264]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[54]=(((ACC[322] * (sPAR[3] * (X[53] - X[54]))) + ACC[54]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[263]=(((sPAR[12] * (sPAR[4] * (X[264] - X[263]))) - ACC[263]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[55]=(((ACC[322] * (sPAR[3] * (X[54] - X[55]))) + ACC[55]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[262]=(((sPAR[12] * (sPAR[4] * (X[263] - X[262]))) - ACC[262]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[56]=(((ACC[322] * (sPAR[3] * (X[55] - X[56]))) + ACC[56]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[261]=(((sPAR[12] * (sPAR[4] * (X[262] - X[261]))) - ACC[261]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[57]=(((ACC[322] * (sPAR[3] * (X[56] - X[57]))) + ACC[57]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[260]=(((sPAR[12] * (sPAR[4] * (X[261] - X[260]))) - ACC[260]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[58]=(((ACC[322] * (sPAR[3] * (X[57] - X[58]))) + ACC[58]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[259]=(((sPAR[12] * (sPAR[4] * (X[260] - X[259]))) - ACC[259]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[59]=(((ACC[322] * (sPAR[3] * (X[58] - X[59]))) + ACC[59]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[258]=(((sPAR[12] * (sPAR[4] * (X[259] - X[258]))) - ACC[258]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[60]=(((ACC[322] * (sPAR[3] * (X[59] - X[60]))) + ACC[60]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[257]=(((sPAR[12] * (sPAR[4] * (X[258] - X[257]))) - ACC[257]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[61]=(((ACC[322] * (sPAR[3] * (X[60] - X[61]))) + ACC[61]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[256]=(((sPAR[12] * (sPAR[4] * (X[257] - X[256]))) - ACC[256]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[62]=(((ACC[322] * (sPAR[3] * (X[61] - X[62]))) + ACC[62]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[255]=(((sPAR[12] * (sPAR[4] * (X[256] - X[255]))) - ACC[255]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[63]=(((ACC[322] * (sPAR[3] * (X[62] - X[63]))) + ACC[63]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[254]=(((sPAR[12] * (sPAR[4] * (X[255] - X[254]))) - ACC[254]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[64]=(((ACC[322] * (sPAR[3] * (X[63] - X[64]))) + ACC[64]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[253]=(((sPAR[12] * (sPAR[4] * (X[254] - X[253]))) - ACC[253]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[65]=(((ACC[322] * (sPAR[3] * (X[64] - X[65]))) + ACC[65]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[252]=(((sPAR[12] * (sPAR[4] * (X[253] - X[252]))) - ACC[252]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[66]=(((ACC[322] * (sPAR[3] * (X[65] - X[66]))) + ACC[66]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[251]=(((sPAR[12] * (sPAR[4] * (X[252] - X[251]))) - ACC[251]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[67]=(((ACC[322] * (sPAR[3] * (X[66] - X[67]))) + ACC[67]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[250]=(((sPAR[12] * (sPAR[4] * (X[251] - X[250]))) - ACC[250]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[68]=(((ACC[322] * (sPAR[3] * (X[67] - X[68]))) + ACC[68]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[249]=(((sPAR[12] * (sPAR[4] * (X[250] - X[249]))) - ACC[249]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[69]=(((ACC[322] * (sPAR[3] * (X[68] - X[69]))) + ACC[69]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[248]=(((sPAR[12] * (sPAR[4] * (X[249] - X[248]))) - ACC[248]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[70]=(((ACC[322] * (sPAR[3] * (X[69] - X[70]))) + ACC[70]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[247]=(((sPAR[12] * (sPAR[4] * (X[248] - X[247]))) - ACC[247]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[71]=(((ACC[322] * (sPAR[3] * (X[70] - X[71]))) + ACC[71]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[246]=(((sPAR[12] * (sPAR[4] * (X[247] - X[246]))) - ACC[246]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[72]=(((ACC[322] * (sPAR[3] * (X[71] - X[72]))) + ACC[72]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[245]=(((sPAR[12] * (sPAR[4] * (X[246] - X[245]))) - ACC[245]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[73]=(((ACC[322] * (sPAR[3] * (X[72] - X[73]))) + ACC[73]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[244]=(((sPAR[12] * (sPAR[4] * (X[245] - X[244]))) - ACC[244]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[74]=(((ACC[322] * (sPAR[3] * (X[73] - X[74]))) + ACC[74]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[243]=(((sPAR[12] * (sPAR[4] * (X[244] - X[243]))) - ACC[243]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[75]=(((ACC[322] * (sPAR[3] * (X[74] - X[75]))) + ACC[75]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[242]=(((sPAR[12] * (sPAR[4] * (X[243] - X[242]))) - ACC[242]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[76]=(((ACC[322] * (sPAR[3] * (X[75] - X[76]))) + ACC[76]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[241]=(((sPAR[12] * (sPAR[4] * (X[242] - X[241]))) - ACC[241]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[77]=(((ACC[322] * (sPAR[3] * (X[76] - X[77]))) + ACC[77]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[240]=(((sPAR[12] * (sPAR[4] * (X[241] - X[240]))) - ACC[240]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[78]=(((ACC[322] * (sPAR[3] * (X[77] - X[78]))) + ACC[78]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[239]=(((sPAR[12] * (sPAR[4] * (X[240] - X[239]))) - ACC[239]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[79]=(((ACC[322] * (sPAR[3] * (X[78] - X[79]))) + ACC[79]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[397]=((159.0 * (ACC[238] - ACC[79])) / sPAR[5]);
    F[238]=(((sPAR[12] * (sPAR[4] * (X[239] - X[238]))) - ACC[238]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[398]=((159.0 * (ACC[239] - ACC[80])) / sPAR[5]);
    F[80]=(((ACC[322] * (sPAR[3] * (X[79] - X[80]))) + ACC[80]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[237]=(((sPAR[12] * (sPAR[4] * (X[238] - X[237]))) - ACC[237]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[396]=((159.0 * (ACC[237] - ACC[78])) / sPAR[5]);
    F[399]=((159.0 * (ACC[240] - ACC[81])) / sPAR[5]);
    F[81]=(((ACC[322] * (sPAR[3] * (X[80] - X[81]))) + ACC[81]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[236]=(((sPAR[12] * (sPAR[4] * (X[237] - X[236]))) - ACC[236]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[395]=((159.0 * (ACC[236] - ACC[77])) / sPAR[5]);
    F[400]=((159.0 * (ACC[241] - ACC[82])) / sPAR[5]);
    F[82]=(((ACC[322] * (sPAR[3] * (X[81] - X[82]))) + ACC[82]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[235]=(((sPAR[12] * (sPAR[4] * (X[236] - X[235]))) - ACC[235]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[394]=((159.0 * (ACC[235] - ACC[76])) / sPAR[5]);
    F[401]=((159.0 * (ACC[242] - ACC[83])) / sPAR[5]);
    F[83]=(((ACC[322] * (sPAR[3] * (X[82] - X[83]))) + ACC[83]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[234]=(((sPAR[12] * (sPAR[4] * (X[235] - X[234]))) - ACC[234]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[393]=((159.0 * (ACC[234] - ACC[75])) / sPAR[5]);
    F[402]=((159.0 * (ACC[243] - ACC[84])) / sPAR[5]);
    F[84]=(((ACC[322] * (sPAR[3] * (X[83] - X[84]))) + ACC[84]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[233]=(((sPAR[12] * (sPAR[4] * (X[234] - X[233]))) - ACC[233]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[392]=((159.0 * (ACC[233] - ACC[74])) / sPAR[5]);
    F[403]=((159.0 * (ACC[244] - ACC[85])) / sPAR[5]);
    F[85]=(((ACC[322] * (sPAR[3] * (X[84] - X[85]))) + ACC[85]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[232]=(((sPAR[12] * (sPAR[4] * (X[233] - X[232]))) - ACC[232]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[391]=((159.0 * (ACC[232] - ACC[73])) / sPAR[5]);
    F[404]=((159.0 * (ACC[245] - ACC[86])) / sPAR[5]);
    F[86]=(((ACC[322] * (sPAR[3] * (X[85] - X[86]))) + ACC[86]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[231]=(((sPAR[12] * (sPAR[4] * (X[232] - X[231]))) - ACC[231]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[390]=((159.0 * (ACC[231] - ACC[72])) / sPAR[5]);
    F[405]=((159.0 * (ACC[246] - ACC[87])) / sPAR[5]);
    F[87]=(((ACC[322] * (sPAR[3] * (X[86] - X[87]))) + ACC[87]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[230]=(((sPAR[12] * (sPAR[4] * (X[231] - X[230]))) - ACC[230]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[389]=((159.0 * (ACC[230] - ACC[71])) / sPAR[5]);
    F[406]=((159.0 * (ACC[247] - ACC[88])) / sPAR[5]);
    F[88]=(((ACC[322] * (sPAR[3] * (X[87] - X[88]))) + ACC[88]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[229]=(((sPAR[12] * (sPAR[4] * (X[230] - X[229]))) - ACC[229]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[388]=((159.0 * (ACC[229] - ACC[70])) / sPAR[5]);
    F[407]=((159.0 * (ACC[248] - ACC[89])) / sPAR[5]);
    F[89]=(((ACC[322] * (sPAR[3] * (X[88] - X[89]))) + ACC[89]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[228]=(((sPAR[12] * (sPAR[4] * (X[229] - X[228]))) - ACC[228]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[387]=((159.0 * (ACC[228] - ACC[69])) / sPAR[5]);
    F[408]=((159.0 * (ACC[249] - ACC[90])) / sPAR[5]);
    F[90]=(((ACC[322] * (sPAR[3] * (X[89] - X[90]))) + ACC[90]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[227]=(((sPAR[12] * (sPAR[4] * (X[228] - X[227]))) - ACC[227]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[386]=((159.0 * (ACC[227] - ACC[68])) / sPAR[5]);
    F[409]=((159.0 * (ACC[250] - ACC[91])) / sPAR[5]);
    F[91]=(((ACC[322] * (sPAR[3] * (X[90] - X[91]))) + ACC[91]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[226]=(((sPAR[12] * (sPAR[4] * (X[227] - X[226]))) - ACC[226]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[385]=((159.0 * (ACC[226] - ACC[67])) / sPAR[5]);
    F[410]=((159.0 * (ACC[251] - ACC[92])) / sPAR[5]);
    F[92]=(((ACC[322] * (sPAR[3] * (X[91] - X[92]))) + ACC[92]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[225]=(((sPAR[12] * (sPAR[4] * (X[226] - X[225]))) - ACC[225]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[384]=((159.0 * (ACC[225] - ACC[66])) / sPAR[5]);
    F[411]=((159.0 * (ACC[252] - ACC[93])) / sPAR[5]);
    F[93]=(((ACC[322] * (sPAR[3] * (X[92] - X[93]))) + ACC[93]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[224]=(((sPAR[12] * (sPAR[4] * (X[225] - X[224]))) - ACC[224]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[383]=((159.0 * (ACC[224] - ACC[65])) / sPAR[5]);
    F[412]=((159.0 * (ACC[253] - ACC[94])) / sPAR[5]);
    F[94]=(((ACC[322] * (sPAR[3] * (X[93] - X[94]))) + ACC[94]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[223]=(((sPAR[12] * (sPAR[4] * (X[224] - X[223]))) - ACC[223]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[382]=((159.0 * (ACC[223] - ACC[64])) / sPAR[5]);
    F[413]=((159.0 * (ACC[254] - ACC[95])) / sPAR[5]);
    F[95]=(((ACC[322] * (sPAR[3] * (X[94] - X[95]))) + ACC[95]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[222]=(((sPAR[12] * (sPAR[4] * (X[223] - X[222]))) - ACC[222]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[381]=((159.0 * (ACC[222] - ACC[63])) / sPAR[5]);
    F[414]=((159.0 * (ACC[255] - ACC[96])) / sPAR[5]);
    F[96]=(((ACC[322] * (sPAR[3] * (X[95] - X[96]))) + ACC[96]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[221]=(((sPAR[12] * (sPAR[4] * (X[222] - X[221]))) - ACC[221]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[380]=((159.0 * (ACC[221] - ACC[62])) / sPAR[5]);
    F[415]=((159.0 * (ACC[256] - ACC[97])) / sPAR[5]);
    F[97]=(((ACC[322] * (sPAR[3] * (X[96] - X[97]))) + ACC[97]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[220]=(((sPAR[12] * (sPAR[4] * (X[221] - X[220]))) - ACC[220]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[379]=((159.0 * (ACC[220] - ACC[61])) / sPAR[5]);
    F[416]=((159.0 * (ACC[257] - ACC[98])) / sPAR[5]);
    F[98]=(((ACC[322] * (sPAR[3] * (X[97] - X[98]))) + ACC[98]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[219]=(((sPAR[12] * (sPAR[4] * (X[220] - X[219]))) - ACC[219]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[378]=((159.0 * (ACC[219] - ACC[60])) / sPAR[5]);
    F[417]=((159.0 * (ACC[258] - ACC[99])) / sPAR[5]);
    F[99]=(((ACC[322] * (sPAR[3] * (X[98] - X[99]))) + ACC[99]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[218]=(((sPAR[12] * (sPAR[4] * (X[219] - X[218]))) - ACC[218]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[377]=((159.0 * (ACC[218] - ACC[59])) / sPAR[5]);
    F[418]=((159.0 * (ACC[259] - ACC[100])) / sPAR[5]);
    F[100]=(((ACC[322] * (sPAR[3] * (X[99] - X[100]))) + ACC[100]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[217]=(((sPAR[12] * (sPAR[4] * (X[218] - X[217]))) - ACC[217]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[376]=((159.0 * (ACC[217] - ACC[58])) / sPAR[5]);
    F[419]=((159.0 * (ACC[260] - ACC[101])) / sPAR[5]);
    F[101]=(((ACC[322] * (sPAR[3] * (X[100] - X[101]))) + ACC[101]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[216]=(((sPAR[12] * (sPAR[4] * (X[217] - X[216]))) - ACC[216]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[375]=((159.0 * (ACC[216] - ACC[57])) / sPAR[5]);
    F[420]=((159.0 * (ACC[261] - ACC[102])) / sPAR[5]);
    F[102]=(((ACC[322] * (sPAR[3] * (X[101] - X[102]))) + ACC[102]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[215]=(((sPAR[12] * (sPAR[4] * (X[216] - X[215]))) - ACC[215]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[374]=((159.0 * (ACC[215] - ACC[56])) / sPAR[5]);
    F[421]=((159.0 * (ACC[262] - ACC[103])) / sPAR[5]);
    F[103]=(((ACC[322] * (sPAR[3] * (X[102] - X[103]))) + ACC[103]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[214]=(((sPAR[12] * (sPAR[4] * (X[215] - X[214]))) - ACC[214]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[373]=((159.0 * (ACC[214] - ACC[55])) / sPAR[5]);
    F[422]=((159.0 * (ACC[263] - ACC[104])) / sPAR[5]);
    F[104]=(((ACC[322] * (sPAR[3] * (X[103] - X[104]))) + ACC[104]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[213]=(((sPAR[12] * (sPAR[4] * (X[214] - X[213]))) - ACC[213]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[372]=((159.0 * (ACC[213] - ACC[54])) / sPAR[5]);
    F[423]=((159.0 * (ACC[264] - ACC[105])) / sPAR[5]);
    F[105]=(((ACC[322] * (sPAR[3] * (X[104] - X[105]))) + ACC[105]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[212]=(((sPAR[12] * (sPAR[4] * (X[213] - X[212]))) - ACC[212]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[371]=((159.0 * (ACC[212] - ACC[53])) / sPAR[5]);
    F[424]=((159.0 * (ACC[265] - ACC[106])) / sPAR[5]);
    F[106]=(((ACC[322] * (sPAR[3] * (X[105] - X[106]))) + ACC[106]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[211]=(((sPAR[12] * (sPAR[4] * (X[212] - X[211]))) - ACC[211]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[370]=((159.0 * (ACC[211] - ACC[52])) / sPAR[5]);
    F[425]=((159.0 * (ACC[266] - ACC[107])) / sPAR[5]);
    F[107]=(((ACC[322] * (sPAR[3] * (X[106] - X[107]))) + ACC[107]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[210]=(((sPAR[12] * (sPAR[4] * (X[211] - X[210]))) - ACC[210]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[369]=((159.0 * (ACC[210] - ACC[51])) / sPAR[5]);
    F[426]=((159.0 * (ACC[267] - ACC[108])) / sPAR[5]);
    F[108]=(((ACC[322] * (sPAR[3] * (X[107] - X[108]))) + ACC[108]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[209]=(((sPAR[12] * (sPAR[4] * (X[210] - X[209]))) - ACC[209]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[368]=((159.0 * (ACC[209] - ACC[50])) / sPAR[5]);
    F[427]=((159.0 * (ACC[268] - ACC[109])) / sPAR[5]);
    F[109]=(((ACC[322] * (sPAR[3] * (X[108] - X[109]))) + ACC[109]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[208]=(((sPAR[12] * (sPAR[4] * (X[209] - X[208]))) - ACC[208]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[367]=((159.0 * (ACC[208] - ACC[49])) / sPAR[5]);
    F[428]=((159.0 * (ACC[269] - ACC[110])) / sPAR[5]);
    F[110]=(((ACC[322] * (sPAR[3] * (X[109] - X[110]))) + ACC[110]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[207]=(((sPAR[12] * (sPAR[4] * (X[208] - X[207]))) - ACC[207]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[366]=((159.0 * (ACC[207] - ACC[48])) / sPAR[5]);
    F[429]=((159.0 * (ACC[270] - ACC[111])) / sPAR[5]);
    F[111]=(((ACC[322] * (sPAR[3] * (X[110] - X[111]))) + ACC[111]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[206]=(((sPAR[12] * (sPAR[4] * (X[207] - X[206]))) - ACC[206]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[365]=((159.0 * (ACC[206] - ACC[47])) / sPAR[5]);
    F[430]=((159.0 * (ACC[271] - ACC[112])) / sPAR[5]);
    F[112]=(((ACC[322] * (sPAR[3] * (X[111] - X[112]))) + ACC[112]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[205]=(((sPAR[12] * (sPAR[4] * (X[206] - X[205]))) - ACC[205]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[364]=((159.0 * (ACC[205] - ACC[46])) / sPAR[5]);
    F[431]=((159.0 * (ACC[272] - ACC[113])) / sPAR[5]);
    F[113]=(((ACC[322] * (sPAR[3] * (X[112] - X[113]))) + ACC[113]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[204]=(((sPAR[12] * (sPAR[4] * (X[205] - X[204]))) - ACC[204]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[363]=((159.0 * (ACC[204] - ACC[45])) / sPAR[5]);
    F[432]=((159.0 * (ACC[273] - ACC[114])) / sPAR[5]);
    F[114]=(((ACC[322] * (sPAR[3] * (X[113] - X[114]))) + ACC[114]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[203]=(((sPAR[12] * (sPAR[4] * (X[204] - X[203]))) - ACC[203]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[362]=((159.0 * (ACC[203] - ACC[44])) / sPAR[5]);
    F[433]=((159.0 * (ACC[274] - ACC[115])) / sPAR[5]);
    F[115]=(((ACC[322] * (sPAR[3] * (X[114] - X[115]))) + ACC[115]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[202]=(((sPAR[12] * (sPAR[4] * (X[203] - X[202]))) - ACC[202]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[361]=((159.0 * (ACC[202] - ACC[43])) / sPAR[5]);
    F[434]=((159.0 * (ACC[275] - ACC[116])) / sPAR[5]);
    F[116]=(((ACC[322] * (sPAR[3] * (X[115] - X[116]))) + ACC[116]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[201]=(((sPAR[12] * (sPAR[4] * (X[202] - X[201]))) - ACC[201]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[360]=((159.0 * (ACC[201] - ACC[42])) / sPAR[5]);
    F[435]=((159.0 * (ACC[276] - ACC[117])) / sPAR[5]);
    F[117]=(((ACC[322] * (sPAR[3] * (X[116] - X[117]))) + ACC[117]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[200]=(((sPAR[12] * (sPAR[4] * (X[201] - X[200]))) - ACC[200]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[359]=((159.0 * (ACC[200] - ACC[41])) / sPAR[5]);
    F[436]=((159.0 * (ACC[277] - ACC[118])) / sPAR[5]);
    F[118]=(((ACC[322] * (sPAR[3] * (X[117] - X[118]))) + ACC[118]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[199]=(((sPAR[12] * (sPAR[4] * (X[200] - X[199]))) - ACC[199]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[358]=((159.0 * (ACC[199] - ACC[40])) / sPAR[5]);
    F[437]=((159.0 * (ACC[278] - ACC[119])) / sPAR[5]);
    F[119]=(((ACC[322] * (sPAR[3] * (X[118] - X[119]))) + ACC[119]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[198]=(((sPAR[12] * (sPAR[4] * (X[199] - X[198]))) - ACC[198]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[357]=((159.0 * (ACC[198] - ACC[39])) / sPAR[5]);
    F[438]=((159.0 * (ACC[279] - ACC[120])) / sPAR[5]);
    F[120]=(((ACC[322] * (sPAR[3] * (X[119] - X[120]))) + ACC[120]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[197]=(((sPAR[12] * (sPAR[4] * (X[198] - X[197]))) - ACC[197]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[356]=((159.0 * (ACC[197] - ACC[38])) / sPAR[5]);
    F[439]=((159.0 * (ACC[280] - ACC[121])) / sPAR[5]);
    F[121]=(((ACC[322] * (sPAR[3] * (X[120] - X[121]))) + ACC[121]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[196]=(((sPAR[12] * (sPAR[4] * (X[197] - X[196]))) - ACC[196]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[355]=((159.0 * (ACC[196] - ACC[37])) / sPAR[5]);
    F[440]=((159.0 * (ACC[281] - ACC[122])) / sPAR[5]);
    F[122]=(((ACC[322] * (sPAR[3] * (X[121] - X[122]))) + ACC[122]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[195]=(((sPAR[12] * (sPAR[4] * (X[196] - X[195]))) - ACC[195]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[354]=((159.0 * (ACC[195] - ACC[36])) / sPAR[5]);
    F[441]=((159.0 * (ACC[282] - ACC[123])) / sPAR[5]);
    F[123]=(((ACC[322] * (sPAR[3] * (X[122] - X[123]))) + ACC[123]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[194]=(((sPAR[12] * (sPAR[4] * (X[195] - X[194]))) - ACC[194]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[353]=((159.0 * (ACC[194] - ACC[35])) / sPAR[5]);
    F[442]=((159.0 * (ACC[283] - ACC[124])) / sPAR[5]);
    F[124]=(((ACC[322] * (sPAR[3] * (X[123] - X[124]))) + ACC[124]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[193]=(((sPAR[12] * (sPAR[4] * (X[194] - X[193]))) - ACC[193]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[352]=((159.0 * (ACC[193] - ACC[34])) / sPAR[5]);
    F[443]=((159.0 * (ACC[284] - ACC[125])) / sPAR[5]);
    F[125]=(((ACC[322] * (sPAR[3] * (X[124] - X[125]))) + ACC[125]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[192]=(((sPAR[12] * (sPAR[4] * (X[193] - X[192]))) - ACC[192]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[351]=((159.0 * (ACC[192] - ACC[33])) / sPAR[5]);
    F[444]=((159.0 * (ACC[285] - ACC[126])) / sPAR[5]);
    F[126]=(((ACC[322] * (sPAR[3] * (X[125] - X[126]))) + ACC[126]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[191]=(((sPAR[12] * (sPAR[4] * (X[192] - X[191]))) - ACC[191]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[350]=((159.0 * (ACC[191] - ACC[32])) / sPAR[5]);
    F[445]=((159.0 * (ACC[286] - ACC[127])) / sPAR[5]);
    F[127]=(((ACC[322] * (sPAR[3] * (X[126] - X[127]))) + ACC[127]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[190]=(((sPAR[12] * (sPAR[4] * (X[191] - X[190]))) - ACC[190]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[349]=((159.0 * (ACC[190] - ACC[31])) / sPAR[5]);
    F[446]=((159.0 * (ACC[287] - ACC[128])) / sPAR[5]);
    F[128]=(((ACC[322] * (sPAR[3] * (X[127] - X[128]))) + ACC[128]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[189]=(((sPAR[12] * (sPAR[4] * (X[190] - X[189]))) - ACC[189]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[348]=((159.0 * (ACC[189] - ACC[30])) / sPAR[5]);
    F[447]=((159.0 * (ACC[288] - ACC[129])) / sPAR[5]);
    F[129]=(((ACC[322] * (sPAR[3] * (X[128] - X[129]))) + ACC[129]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[188]=(((sPAR[12] * (sPAR[4] * (X[189] - X[188]))) - ACC[188]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[347]=((159.0 * (ACC[188] - ACC[29])) / sPAR[5]);
    F[448]=((159.0 * (ACC[289] - ACC[130])) / sPAR[5]);
    F[130]=(((ACC[322] * (sPAR[3] * (X[129] - X[130]))) + ACC[130]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[187]=(((sPAR[12] * (sPAR[4] * (X[188] - X[187]))) - ACC[187]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[346]=((159.0 * (ACC[187] - ACC[28])) / sPAR[5]);
    F[449]=((159.0 * (ACC[290] - ACC[131])) / sPAR[5]);
    F[131]=(((ACC[322] * (sPAR[3] * (X[130] - X[131]))) + ACC[131]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[186]=(((sPAR[12] * (sPAR[4] * (X[187] - X[186]))) - ACC[186]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[345]=((159.0 * (ACC[186] - ACC[27])) / sPAR[5]);
    F[450]=((159.0 * (ACC[291] - ACC[132])) / sPAR[5]);
    F[132]=(((ACC[322] * (sPAR[3] * (X[131] - X[132]))) + ACC[132]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[185]=(((sPAR[12] * (sPAR[4] * (X[186] - X[185]))) - ACC[185]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[344]=((159.0 * (ACC[185] - ACC[26])) / sPAR[5]);
    F[451]=((159.0 * (ACC[292] - ACC[133])) / sPAR[5]);
    F[133]=(((ACC[322] * (sPAR[3] * (X[132] - X[133]))) + ACC[133]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[184]=(((sPAR[12] * (sPAR[4] * (X[185] - X[184]))) - ACC[184]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[343]=((159.0 * (ACC[184] - ACC[25])) / sPAR[5]);
    F[452]=((159.0 * (ACC[293] - ACC[134])) / sPAR[5]);
    F[134]=(((ACC[322] * (sPAR[3] * (X[133] - X[134]))) + ACC[134]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[183]=(((sPAR[12] * (sPAR[4] * (X[184] - X[183]))) - ACC[183]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[342]=((159.0 * (ACC[183] - ACC[24])) / sPAR[5]);
    F[453]=((159.0 * (ACC[294] - ACC[135])) / sPAR[5]);
    F[135]=(((ACC[322] * (sPAR[3] * (X[134] - X[135]))) + ACC[135]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[182]=(((sPAR[12] * (sPAR[4] * (X[183] - X[182]))) - ACC[182]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[341]=((159.0 * (ACC[182] - ACC[23])) / sPAR[5]);
    F[454]=((159.0 * (ACC[295] - ACC[136])) / sPAR[5]);
    F[136]=(((ACC[322] * (sPAR[3] * (X[135] - X[136]))) + ACC[136]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[181]=(((sPAR[12] * (sPAR[4] * (X[182] - X[181]))) - ACC[181]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[340]=((159.0 * (ACC[181] - ACC[22])) / sPAR[5]);
    F[455]=((159.0 * (ACC[296] - ACC[137])) / sPAR[5]);
    F[137]=(((ACC[322] * (sPAR[3] * (X[136] - X[137]))) + ACC[137]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[180]=(((sPAR[12] * (sPAR[4] * (X[181] - X[180]))) - ACC[180]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[339]=((159.0 * (ACC[180] - ACC[21])) / sPAR[5]);
    F[456]=((159.0 * (ACC[297] - ACC[138])) / sPAR[5]);
    F[138]=(((ACC[322] * (sPAR[3] * (X[137] - X[138]))) + ACC[138]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[179]=(((sPAR[12] * (sPAR[4] * (X[180] - X[179]))) - ACC[179]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[338]=((159.0 * (ACC[179] - ACC[20])) / sPAR[5]);
    F[457]=((159.0 * (ACC[298] - ACC[139])) / sPAR[5]);
    F[139]=(((ACC[322] * (sPAR[3] * (X[138] - X[139]))) + ACC[139]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[178]=(((sPAR[12] * (sPAR[4] * (X[179] - X[178]))) - ACC[178]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[337]=((159.0 * (ACC[178] - ACC[19])) / sPAR[5]);
    F[458]=((159.0 * (ACC[299] - ACC[140])) / sPAR[5]);
    F[140]=(((ACC[322] * (sPAR[3] * (X[139] - X[140]))) + ACC[140]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[177]=(((sPAR[12] * (sPAR[4] * (X[178] - X[177]))) - ACC[177]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[336]=((159.0 * (ACC[177] - ACC[18])) / sPAR[5]);
    F[459]=((159.0 * (ACC[300] - ACC[141])) / sPAR[5]);
    F[141]=(((ACC[322] * (sPAR[3] * (X[140] - X[141]))) + ACC[141]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[176]=(((sPAR[12] * (sPAR[4] * (X[177] - X[176]))) - ACC[176]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[335]=((159.0 * (ACC[176] - ACC[17])) / sPAR[5]);
    F[460]=((159.0 * (ACC[301] - ACC[142])) / sPAR[5]);
    F[142]=(((ACC[322] * (sPAR[3] * (X[141] - X[142]))) + ACC[142]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[175]=(((sPAR[12] * (sPAR[4] * (X[176] - X[175]))) - ACC[175]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[334]=((159.0 * (ACC[175] - ACC[16])) / sPAR[5]);
    F[461]=((159.0 * (ACC[302] - ACC[143])) / sPAR[5]);
    F[143]=(((ACC[322] * (sPAR[3] * (X[142] - X[143]))) + ACC[143]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[174]=(((sPAR[12] * (sPAR[4] * (X[175] - X[174]))) - ACC[174]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[333]=((159.0 * (ACC[174] - ACC[15])) / sPAR[5]);
    F[462]=((159.0 * (ACC[303] - ACC[144])) / sPAR[5]);
    F[144]=(((ACC[322] * (sPAR[3] * (X[143] - X[144]))) + ACC[144]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[173]=(((sPAR[12] * (sPAR[4] * (X[174] - X[173]))) - ACC[173]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[332]=((159.0 * (ACC[173] - ACC[14])) / sPAR[5]);
    F[463]=((159.0 * (ACC[304] - ACC[145])) / sPAR[5]);
    F[145]=(((ACC[322] * (sPAR[3] * (X[144] - X[145]))) + ACC[145]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[172]=(((sPAR[12] * (sPAR[4] * (X[173] - X[172]))) - ACC[172]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[331]=((159.0 * (ACC[172] - ACC[13])) / sPAR[5]);
    F[464]=((159.0 * (ACC[305] - ACC[146])) / sPAR[5]);
    F[146]=(((ACC[322] * (sPAR[3] * (X[145] - X[146]))) + ACC[146]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[171]=(((sPAR[12] * (sPAR[4] * (X[172] - X[171]))) - ACC[171]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[330]=((159.0 * (ACC[171] - ACC[12])) / sPAR[5]);
    F[465]=((159.0 * (ACC[306] - ACC[147])) / sPAR[5]);
    F[147]=(((ACC[322] * (sPAR[3] * (X[146] - X[147]))) + ACC[147]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[170]=(((sPAR[12] * (sPAR[4] * (X[171] - X[170]))) - ACC[170]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[329]=((159.0 * (ACC[170] - ACC[11])) / sPAR[5]);
    F[466]=((159.0 * (ACC[307] - ACC[148])) / sPAR[5]);
    F[148]=(((ACC[322] * (sPAR[3] * (X[147] - X[148]))) + ACC[148]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[169]=(((sPAR[12] * (sPAR[4] * (X[170] - X[169]))) - ACC[169]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[328]=((159.0 * (ACC[169] - ACC[10])) / sPAR[5]);
    F[467]=((159.0 * (ACC[308] - ACC[149])) / sPAR[5]);
    F[149]=(((ACC[322] * (sPAR[3] * (X[148] - X[149]))) + ACC[149]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[168]=(((sPAR[12] * (sPAR[4] * (X[169] - X[168]))) - ACC[168]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[327]=((159.0 * (ACC[168] - ACC[9])) / sPAR[5]);
    F[468]=((159.0 * (ACC[309] - ACC[150])) / sPAR[5]);
    F[150]=(((ACC[322] * (sPAR[3] * (X[149] - X[150]))) + ACC[150]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[167]=(((sPAR[12] * (sPAR[4] * (X[168] - X[167]))) - ACC[167]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[326]=((159.0 * (ACC[167] - ACC[8])) / sPAR[5]);
    F[469]=((159.0 * (ACC[310] - ACC[151])) / sPAR[5]);
    F[151]=(((ACC[322] * (sPAR[3] * (X[150] - X[151]))) + ACC[151]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[166]=(((sPAR[12] * (sPAR[4] * (X[167] - X[166]))) - ACC[166]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[325]=((159.0 * (ACC[166] - ACC[7])) / sPAR[5]);
    F[470]=((159.0 * (ACC[311] - ACC[152])) / sPAR[5]);
    F[152]=(((ACC[322] * (sPAR[3] * (X[151] - X[152]))) + ACC[152]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[165]=(((sPAR[12] * (sPAR[4] * (X[166] - X[165]))) - ACC[165]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[324]=((159.0 * (ACC[165] - ACC[6])) / sPAR[5]);
    F[471]=((159.0 * (ACC[312] - ACC[153])) / sPAR[5]);
    F[153]=(((ACC[322] * (sPAR[3] * (X[152] - X[153]))) + ACC[153]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[164]=(((sPAR[12] * (sPAR[4] * (X[165] - X[164]))) - ACC[164]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[323]=((159.0 * (ACC[164] - ACC[5])) / sPAR[5]);
    F[472]=((159.0 * (ACC[313] - ACC[154])) / sPAR[5]);
    F[154]=(((ACC[322] * (sPAR[3] * (X[153] - X[154]))) + ACC[154]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[163]=(((sPAR[12] * (sPAR[4] * (X[164] - X[163]))) - ACC[163]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[322]=((159.0 * (ACC[163] - ACC[4])) / sPAR[5]);
    F[473]=((159.0 * (ACC[314] - ACC[155])) / sPAR[5]);
    F[155]=(((ACC[322] * (sPAR[3] * (X[154] - X[155]))) + ACC[155]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[162]=(((sPAR[12] * (sPAR[4] * (X[163] - X[162]))) - ACC[162]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[321]=((159.0 * (ACC[162] - ACC[3])) / sPAR[5]);
    F[474]=((159.0 * (ACC[315] - ACC[156])) / sPAR[5]);
    F[156]=(((ACC[322] * (sPAR[3] * (X[155] - X[156]))) + ACC[156]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[161]=(((sPAR[12] * (sPAR[4] * (X[162] - X[161]))) - ACC[161]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[320]=((159.0 * (ACC[161] - ACC[2])) / sPAR[5]);
    F[475]=((159.0 * (ACC[316] - ACC[157])) / sPAR[5]);
    F[157]=(((ACC[322] * (sPAR[3] * (X[156] - X[157]))) + ACC[157]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[160]=(((sPAR[12] * (sPAR[4] * (X[161] - X[160]))) - ACC[160]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[319]=((159.0 * (ACC[160] - ACC[1])) / sPAR[5]);
    F[158]=(((ACC[322] * (sPAR[3] * (X[157] - X[158]))) + ACC[158]) / (((0.06289308176100629 * sPAR[10]) * sPAR[1]) * sPAR[3]));
    F[476]=((159.0 * (ACC[317] - ACC[158])) / sPAR[5]);
    F[159]=(((sPAR[12] * (sPAR[4] * (X[160] - X[159]))) - ACC[159]) / (((0.06289308176100629 * sPAR[11]) * sPAR[2]) * sPAR[4]));
    F[318]=((159.0 * (ACC[159] - ACC[0])) / sPAR[5]);

}

template<class Precision> __forceinline__ __device__ void PerThread_EventFunction(
	int tid, int NT, Precision*	  EF, \
	Precision     T, Precision    dT, Precision*    TD, Precision*	X, \
	Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi  		
) {
    

}

template<class Precision> __forceinline__ __device__ void PerThread_ActionAfterEventDetection(
    int tid, int NT, int IDX, int& UDT, \
    Precision    &T, Precision   &dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi
) {
    
}

template<class Precision> __forceinline__ __device__ void PerThread_ActionAfterSuccessfulTimeStep(
    int tid, int NT, int& UDT, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi
) {
    
}

template<class Precision> __forceinline__ __device__ void PerThread_Initialization(
    int tid, int NT, int& DOIDX, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR,       int* sPARi, Precision* ACC, int* ACCi
) {
    T     = TD[0];
    DOIDX = 0;
    ACC[0]=0.0; //QA[1]
    ACC[1]=0.0; //QA[2]
    ACC[2]=0.0; //QA[3]
    ACC[3]=0.0; //QA[4]
    ACC[4]=0.0; //QA[5]
    ACC[5]=0.0; //QA[6]
    ACC[6]=0.0; //QA[7]
    ACC[7]=0.0; //QA[8]
    ACC[8]=0.0; //QA[9]
    ACC[9]=0.0; //QA[10]
    ACC[10]=0.0; //QA[11]
    ACC[11]=0.0; //QA[12]
    ACC[12]=0.0; //QA[13]
    ACC[13]=0.0; //QA[14]
    ACC[14]=0.0; //QA[15]
    ACC[15]=0.0; //QA[16]
    ACC[16]=0.0; //QA[17]
    ACC[17]=0.0; //QA[18]
    ACC[18]=0.0; //QA[19]
    ACC[19]=0.0; //QA[20]
    ACC[20]=0.0; //QA[21]
    ACC[21]=0.0; //QA[22]
    ACC[22]=0.0; //QA[23]
    ACC[23]=0.0; //QA[24]
    ACC[24]=0.0; //QA[25]
    ACC[25]=0.0; //QA[26]
    ACC[26]=0.0; //QA[27]
    ACC[27]=0.0; //QA[28]
    ACC[28]=0.0; //QA[29]
    ACC[29]=0.0; //QA[30]
    ACC[30]=0.0; //QA[31]
    ACC[31]=0.0; //QA[32]
    ACC[32]=0.0; //QA[33]
    ACC[33]=0.0; //QA[34]
    ACC[34]=0.0; //QA[35]
    ACC[35]=0.0; //QA[36]
    ACC[36]=0.0; //QA[37]
    ACC[37]=0.0; //QA[38]
    ACC[38]=0.0; //QA[39]
    ACC[39]=0.0; //QA[40]
    ACC[40]=0.0; //QA[41]
    ACC[41]=0.0; //QA[42]
    ACC[42]=0.0; //QA[43]
    ACC[43]=0.0; //QA[44]
    ACC[44]=0.0; //QA[45]
    ACC[45]=0.0; //QA[46]
    ACC[46]=0.0; //QA[47]
    ACC[47]=0.0; //QA[48]
    ACC[48]=0.0; //QA[49]
    ACC[49]=0.0; //QA[50]
    ACC[50]=0.0; //QA[51]
    ACC[51]=0.0; //QA[52]
    ACC[52]=0.0; //QA[53]
    ACC[53]=0.0; //QA[54]
    ACC[54]=0.0; //QA[55]
    ACC[55]=0.0; //QA[56]
    ACC[56]=0.0; //QA[57]
    ACC[57]=0.0; //QA[58]
    ACC[58]=0.0; //QA[59]
    ACC[59]=0.0; //QA[60]
    ACC[60]=0.0; //QA[61]
    ACC[61]=0.0; //QA[62]
    ACC[62]=0.0; //QA[63]
    ACC[63]=0.0; //QA[64]
    ACC[64]=0.0; //QA[65]
    ACC[65]=0.0; //QA[66]
    ACC[66]=0.0; //QA[67]
    ACC[67]=0.0; //QA[68]
    ACC[68]=0.0; //QA[69]
    ACC[69]=0.0; //QA[70]
    ACC[70]=0.0; //QA[71]
    ACC[71]=0.0; //QA[72]
    ACC[72]=0.0; //QA[73]
    ACC[73]=0.0; //QA[74]
    ACC[74]=0.0; //QA[75]
    ACC[75]=0.0; //QA[76]
    ACC[76]=0.0; //QA[77]
    ACC[77]=0.0; //QA[78]
    ACC[78]=0.0; //QA[79]
    ACC[79]=0.0; //QA[80]
    ACC[80]=0.0; //QA[81]
    ACC[81]=0.0; //QA[82]
    ACC[82]=0.0; //QA[83]
    ACC[83]=0.0; //QA[84]
    ACC[84]=0.0; //QA[85]
    ACC[85]=0.0; //QA[86]
    ACC[86]=0.0; //QA[87]
    ACC[87]=0.0; //QA[88]
    ACC[88]=0.0; //QA[89]
    ACC[89]=0.0; //QA[90]
    ACC[90]=0.0; //QA[91]
    ACC[91]=0.0; //QA[92]
    ACC[92]=0.0; //QA[93]
    ACC[93]=0.0; //QA[94]
    ACC[94]=0.0; //QA[95]
    ACC[95]=0.0; //QA[96]
    ACC[96]=0.0; //QA[97]
    ACC[97]=0.0; //QA[98]
    ACC[98]=0.0; //QA[99]
    ACC[99]=0.0; //QA[100]
    ACC[100]=0.0; //QA[101]
    ACC[101]=0.0; //QA[102]
    ACC[102]=0.0; //QA[103]
    ACC[103]=0.0; //QA[104]
    ACC[104]=0.0; //QA[105]
    ACC[105]=0.0; //QA[106]
    ACC[106]=0.0; //QA[107]
    ACC[107]=0.0; //QA[108]
    ACC[108]=0.0; //QA[109]
    ACC[109]=0.0; //QA[110]
    ACC[110]=0.0; //QA[111]
    ACC[111]=0.0; //QA[112]
    ACC[112]=0.0; //QA[113]
    ACC[113]=0.0; //QA[114]
    ACC[114]=0.0; //QA[115]
    ACC[115]=0.0; //QA[116]
    ACC[116]=0.0; //QA[117]
    ACC[117]=0.0; //QA[118]
    ACC[118]=0.0; //QA[119]
    ACC[119]=0.0; //QA[120]
    ACC[120]=0.0; //QA[121]
    ACC[121]=0.0; //QA[122]
    ACC[122]=0.0; //QA[123]
    ACC[123]=0.0; //QA[124]
    ACC[124]=0.0; //QA[125]
    ACC[125]=0.0; //QA[126]
    ACC[126]=0.0; //QA[127]
    ACC[127]=0.0; //QA[128]
    ACC[128]=0.0; //QA[129]
    ACC[129]=0.0; //QA[130]
    ACC[130]=0.0; //QA[131]
    ACC[131]=0.0; //QA[132]
    ACC[132]=0.0; //QA[133]
    ACC[133]=0.0; //QA[134]
    ACC[134]=0.0; //QA[135]
    ACC[135]=0.0; //QA[136]
    ACC[136]=0.0; //QA[137]
    ACC[137]=0.0; //QA[138]
    ACC[138]=0.0; //QA[139]
    ACC[139]=0.0; //QA[140]
    ACC[140]=0.0; //QA[141]
    ACC[141]=0.0; //QA[142]
    ACC[142]=0.0; //QA[143]
    ACC[143]=0.0; //QA[144]
    ACC[144]=0.0; //QA[145]
    ACC[145]=0.0; //QA[146]
    ACC[146]=0.0; //QA[147]
    ACC[147]=0.0; //QA[148]
    ACC[148]=0.0; //QA[149]
    ACC[149]=0.0; //QA[150]
    ACC[150]=0.0; //QA[151]
    ACC[151]=0.0; //QA[152]
    ACC[152]=0.0; //QA[153]
    ACC[153]=0.0; //QA[154]
    ACC[154]=0.0; //QA[155]
    ACC[155]=0.0; //QA[156]
    ACC[156]=0.0; //QA[157]
    ACC[157]=0.0; //QA[158]
    ACC[158]=0.0; //QA[159]
    ACC[159]=0.0; //QB[1]
    ACC[160]=0.0; //QB[2]
    ACC[161]=0.0; //QB[3]
    ACC[162]=0.0; //QB[4]
    ACC[163]=0.0; //QB[5]
    ACC[164]=0.0; //QB[6]
    ACC[165]=0.0; //QB[7]
    ACC[166]=0.0; //QB[8]
    ACC[167]=0.0; //QB[9]
    ACC[168]=0.0; //QB[10]
    ACC[169]=0.0; //QB[11]
    ACC[170]=0.0; //QB[12]
    ACC[171]=0.0; //QB[13]
    ACC[172]=0.0; //QB[14]
    ACC[173]=0.0; //QB[15]
    ACC[174]=0.0; //QB[16]
    ACC[175]=0.0; //QB[17]
    ACC[176]=0.0; //QB[18]
    ACC[177]=0.0; //QB[19]
    ACC[178]=0.0; //QB[20]
    ACC[179]=0.0; //QB[21]
    ACC[180]=0.0; //QB[22]
    ACC[181]=0.0; //QB[23]
    ACC[182]=0.0; //QB[24]
    ACC[183]=0.0; //QB[25]
    ACC[184]=0.0; //QB[26]
    ACC[185]=0.0; //QB[27]
    ACC[186]=0.0; //QB[28]
    ACC[187]=0.0; //QB[29]
    ACC[188]=0.0; //QB[30]
    ACC[189]=0.0; //QB[31]
    ACC[190]=0.0; //QB[32]
    ACC[191]=0.0; //QB[33]
    ACC[192]=0.0; //QB[34]
    ACC[193]=0.0; //QB[35]
    ACC[194]=0.0; //QB[36]
    ACC[195]=0.0; //QB[37]
    ACC[196]=0.0; //QB[38]
    ACC[197]=0.0; //QB[39]
    ACC[198]=0.0; //QB[40]
    ACC[199]=0.0; //QB[41]
    ACC[200]=0.0; //QB[42]
    ACC[201]=0.0; //QB[43]
    ACC[202]=0.0; //QB[44]
    ACC[203]=0.0; //QB[45]
    ACC[204]=0.0; //QB[46]
    ACC[205]=0.0; //QB[47]
    ACC[206]=0.0; //QB[48]
    ACC[207]=0.0; //QB[49]
    ACC[208]=0.0; //QB[50]
    ACC[209]=0.0; //QB[51]
    ACC[210]=0.0; //QB[52]
    ACC[211]=0.0; //QB[53]
    ACC[212]=0.0; //QB[54]
    ACC[213]=0.0; //QB[55]
    ACC[214]=0.0; //QB[56]
    ACC[215]=0.0; //QB[57]
    ACC[216]=0.0; //QB[58]
    ACC[217]=0.0; //QB[59]
    ACC[218]=0.0; //QB[60]
    ACC[219]=0.0; //QB[61]
    ACC[220]=0.0; //QB[62]
    ACC[221]=0.0; //QB[63]
    ACC[222]=0.0; //QB[64]
    ACC[223]=0.0; //QB[65]
    ACC[224]=0.0; //QB[66]
    ACC[225]=0.0; //QB[67]
    ACC[226]=0.0; //QB[68]
    ACC[227]=0.0; //QB[69]
    ACC[228]=0.0; //QB[70]
    ACC[229]=0.0; //QB[71]
    ACC[230]=0.0; //QB[72]
    ACC[231]=0.0; //QB[73]
    ACC[232]=0.0; //QB[74]
    ACC[233]=0.0; //QB[75]
    ACC[234]=0.0; //QB[76]
    ACC[235]=0.0; //QB[77]
    ACC[236]=0.0; //QB[78]
    ACC[237]=0.0; //QB[79]
    ACC[238]=0.0; //QB[80]
    ACC[239]=0.0; //QB[81]
    ACC[240]=0.0; //QB[82]
    ACC[241]=0.0; //QB[83]
    ACC[242]=0.0; //QB[84]
    ACC[243]=0.0; //QB[85]
    ACC[244]=0.0; //QB[86]
    ACC[245]=0.0; //QB[87]
    ACC[246]=0.0; //QB[88]
    ACC[247]=0.0; //QB[89]
    ACC[248]=0.0; //QB[90]
    ACC[249]=0.0; //QB[91]
    ACC[250]=0.0; //QB[92]
    ACC[251]=0.0; //QB[93]
    ACC[252]=0.0; //QB[94]
    ACC[253]=0.0; //QB[95]
    ACC[254]=0.0; //QB[96]
    ACC[255]=0.0; //QB[97]
    ACC[256]=0.0; //QB[98]
    ACC[257]=0.0; //QB[99]
    ACC[258]=0.0; //QB[100]
    ACC[259]=0.0; //QB[101]
    ACC[260]=0.0; //QB[102]
    ACC[261]=0.0; //QB[103]
    ACC[262]=0.0; //QB[104]
    ACC[263]=0.0; //QB[105]
    ACC[264]=0.0; //QB[106]
    ACC[265]=0.0; //QB[107]
    ACC[266]=0.0; //QB[108]
    ACC[267]=0.0; //QB[109]
    ACC[268]=0.0; //QB[110]
    ACC[269]=0.0; //QB[111]
    ACC[270]=0.0; //QB[112]
    ACC[271]=0.0; //QB[113]
    ACC[272]=0.0; //QB[114]
    ACC[273]=0.0; //QB[115]
    ACC[274]=0.0; //QB[116]
    ACC[275]=0.0; //QB[117]
    ACC[276]=0.0; //QB[118]
    ACC[277]=0.0; //QB[119]
    ACC[278]=0.0; //QB[120]
    ACC[279]=0.0; //QB[121]
    ACC[280]=0.0; //QB[122]
    ACC[281]=0.0; //QB[123]
    ACC[282]=0.0; //QB[124]
    ACC[283]=0.0; //QB[125]
    ACC[284]=0.0; //QB[126]
    ACC[285]=0.0; //QB[127]
    ACC[286]=0.0; //QB[128]
    ACC[287]=0.0; //QB[129]
    ACC[288]=0.0; //QB[130]
    ACC[289]=0.0; //QB[131]
    ACC[290]=0.0; //QB[132]
    ACC[291]=0.0; //QB[133]
    ACC[292]=0.0; //QB[134]
    ACC[293]=0.0; //QB[135]
    ACC[294]=0.0; //QB[136]
    ACC[295]=0.0; //QB[137]
    ACC[296]=0.0; //QB[138]
    ACC[297]=0.0; //QB[139]
    ACC[298]=0.0; //QB[140]
    ACC[299]=0.0; //QB[141]
    ACC[300]=0.0; //QB[142]
    ACC[301]=0.0; //QB[143]
    ACC[302]=0.0; //QB[144]
    ACC[303]=0.0; //QB[145]
    ACC[304]=0.0; //QB[146]
    ACC[305]=0.0; //QB[147]
    ACC[306]=0.0; //QB[148]
    ACC[307]=0.0; //QB[149]
    ACC[308]=0.0; //QB[150]
    ACC[309]=0.0; //QB[151]
    ACC[310]=0.0; //QB[152]
    ACC[311]=0.0; //QB[153]
    ACC[312]=0.0; //QB[154]
    ACC[313]=0.0; //QB[155]
    ACC[314]=0.0; //QB[156]
    ACC[315]=0.0; //QB[157]
    ACC[316]=0.0; //QB[158]
    ACC[321]=310.0; //TB[160]
    X[317]=300.0; //TB[159]
    X[476]=300.0; //TW[159]
    sPAR[7]=10000.0; //gammaB
    sPAR[9]=0.1; //omega
    ACC[317]=(0.06289308176100629 * (((0.5 * (ACC[321] + X[317])) - X[476]) * (sPAR[7] * sPAR[9]))); //QB[159]
    ACC[318]=0.0; //QtotA
    ACC[319]=0.0; //QtotB
    ACC[320]=300.0; //TA[1]
    ACC[322]=1.0; //wA
    sPAR[0]=10.0; //L
    sPAR[1]=5e-05; //areaA
    sPAR[2]=5e-05; //areaB
    sPAR[3]=4200.0; //cpA
    sPAR[4]=4200.0; //cpB
    sPAR[5]=2000.0; //cpW
    sPAR[6]=4000.0; //gammaA
    sPAR[8]=0.06289308176100629; //l
    sPAR[10]=1000.0; //rhoA
    sPAR[11]=1000.0; //rhoB
    sPAR[12]=1.0; //wB
    sPARi[0]=160; //N
    X[0]=300.0; //TA[2]
    X[1]=300.0; //TA[3]
    X[2]=300.0; //TA[4]
    X[3]=300.0; //TA[5]
    X[4]=300.0; //TA[6]
    X[5]=300.0; //TA[7]
    X[6]=300.0; //TA[8]
    X[7]=300.0; //TA[9]
    X[8]=300.0; //TA[10]
    X[9]=300.0; //TA[11]
    X[10]=300.0; //TA[12]
    X[11]=300.0; //TA[13]
    X[12]=300.0; //TA[14]
    X[13]=300.0; //TA[15]
    X[14]=300.0; //TA[16]
    X[15]=300.0; //TA[17]
    X[16]=300.0; //TA[18]
    X[17]=300.0; //TA[19]
    X[18]=300.0; //TA[20]
    X[19]=300.0; //TA[21]
    X[20]=300.0; //TA[22]
    X[21]=300.0; //TA[23]
    X[22]=300.0; //TA[24]
    X[23]=300.0; //TA[25]
    X[24]=300.0; //TA[26]
    X[25]=300.0; //TA[27]
    X[26]=300.0; //TA[28]
    X[27]=300.0; //TA[29]
    X[28]=300.0; //TA[30]
    X[29]=300.0; //TA[31]
    X[30]=300.0; //TA[32]
    X[31]=300.0; //TA[33]
    X[32]=300.0; //TA[34]
    X[33]=300.0; //TA[35]
    X[34]=300.0; //TA[36]
    X[35]=300.0; //TA[37]
    X[36]=300.0; //TA[38]
    X[37]=300.0; //TA[39]
    X[38]=300.0; //TA[40]
    X[39]=300.0; //TA[41]
    X[40]=300.0; //TA[42]
    X[41]=300.0; //TA[43]
    X[42]=300.0; //TA[44]
    X[43]=300.0; //TA[45]
    X[44]=300.0; //TA[46]
    X[45]=300.0; //TA[47]
    X[46]=300.0; //TA[48]
    X[47]=300.0; //TA[49]
    X[48]=300.0; //TA[50]
    X[49]=300.0; //TA[51]
    X[50]=300.0; //TA[52]
    X[51]=300.0; //TA[53]
    X[52]=300.0; //TA[54]
    X[53]=300.0; //TA[55]
    X[54]=300.0; //TA[56]
    X[55]=300.0; //TA[57]
    X[56]=300.0; //TA[58]
    X[57]=300.0; //TA[59]
    X[58]=300.0; //TA[60]
    X[59]=300.0; //TA[61]
    X[60]=300.0; //TA[62]
    X[61]=300.0; //TA[63]
    X[62]=300.0; //TA[64]
    X[63]=300.0; //TA[65]
    X[64]=300.0; //TA[66]
    X[65]=300.0; //TA[67]
    X[66]=300.0; //TA[68]
    X[67]=300.0; //TA[69]
    X[68]=300.0; //TA[70]
    X[69]=300.0; //TA[71]
    X[70]=300.0; //TA[72]
    X[71]=300.0; //TA[73]
    X[72]=300.0; //TA[74]
    X[73]=300.0; //TA[75]
    X[74]=300.0; //TA[76]
    X[75]=300.0; //TA[77]
    X[76]=300.0; //TA[78]
    X[77]=300.0; //TA[79]
    X[78]=300.0; //TA[80]
    X[79]=300.0; //TA[81]
    X[80]=300.0; //TA[82]
    X[81]=300.0; //TA[83]
    X[82]=300.0; //TA[84]
    X[83]=300.0; //TA[85]
    X[84]=300.0; //TA[86]
    X[85]=300.0; //TA[87]
    X[86]=300.0; //TA[88]
    X[87]=300.0; //TA[89]
    X[88]=300.0; //TA[90]
    X[89]=300.0; //TA[91]
    X[90]=300.0; //TA[92]
    X[91]=300.0; //TA[93]
    X[92]=300.0; //TA[94]
    X[93]=300.0; //TA[95]
    X[94]=300.0; //TA[96]
    X[95]=300.0; //TA[97]
    X[96]=300.0; //TA[98]
    X[97]=300.0; //TA[99]
    X[98]=300.0; //TA[100]
    X[99]=300.0; //TA[101]
    X[100]=300.0; //TA[102]
    X[101]=300.0; //TA[103]
    X[102]=300.0; //TA[104]
    X[103]=300.0; //TA[105]
    X[104]=300.0; //TA[106]
    X[105]=300.0; //TA[107]
    X[106]=300.0; //TA[108]
    X[107]=300.0; //TA[109]
    X[108]=300.0; //TA[110]
    X[109]=300.0; //TA[111]
    X[110]=300.0; //TA[112]
    X[111]=300.0; //TA[113]
    X[112]=300.0; //TA[114]
    X[113]=300.0; //TA[115]
    X[114]=300.0; //TA[116]
    X[115]=300.0; //TA[117]
    X[116]=300.0; //TA[118]
    X[117]=300.0; //TA[119]
    X[118]=300.0; //TA[120]
    X[119]=300.0; //TA[121]
    X[120]=300.0; //TA[122]
    X[121]=300.0; //TA[123]
    X[122]=300.0; //TA[124]
    X[123]=300.0; //TA[125]
    X[124]=300.0; //TA[126]
    X[125]=300.0; //TA[127]
    X[126]=300.0; //TA[128]
    X[127]=300.0; //TA[129]
    X[128]=300.0; //TA[130]
    X[129]=300.0; //TA[131]
    X[130]=300.0; //TA[132]
    X[131]=300.0; //TA[133]
    X[132]=300.0; //TA[134]
    X[133]=300.0; //TA[135]
    X[134]=300.0; //TA[136]
    X[135]=300.0; //TA[137]
    X[136]=300.0; //TA[138]
    X[137]=300.0; //TA[139]
    X[138]=300.0; //TA[140]
    X[139]=300.0; //TA[141]
    X[140]=300.0; //TA[142]
    X[141]=300.0; //TA[143]
    X[142]=300.0; //TA[144]
    X[143]=300.0; //TA[145]
    X[144]=300.0; //TA[146]
    X[145]=300.0; //TA[147]
    X[146]=300.0; //TA[148]
    X[147]=300.0; //TA[149]
    X[148]=300.0; //TA[150]
    X[149]=300.0; //TA[151]
    X[150]=300.0; //TA[152]
    X[151]=300.0; //TA[153]
    X[152]=300.0; //TA[154]
    X[153]=300.0; //TA[155]
    X[154]=300.0; //TA[156]
    X[155]=300.0; //TA[157]
    X[156]=300.0; //TA[158]
    X[157]=300.0; //TA[159]
    X[158]=300.0; //TA[160]
    X[159]=300.0; //TB[1]
    X[160]=300.0; //TB[2]
    X[161]=300.0; //TB[3]
    X[162]=300.0; //TB[4]
    X[163]=300.0; //TB[5]
    X[164]=300.0; //TB[6]
    X[165]=300.0; //TB[7]
    X[166]=300.0; //TB[8]
    X[167]=300.0; //TB[9]
    X[168]=300.0; //TB[10]
    X[169]=300.0; //TB[11]
    X[170]=300.0; //TB[12]
    X[171]=300.0; //TB[13]
    X[172]=300.0; //TB[14]
    X[173]=300.0; //TB[15]
    X[174]=300.0; //TB[16]
    X[175]=300.0; //TB[17]
    X[176]=300.0; //TB[18]
    X[177]=300.0; //TB[19]
    X[178]=300.0; //TB[20]
    X[179]=300.0; //TB[21]
    X[180]=300.0; //TB[22]
    X[181]=300.0; //TB[23]
    X[182]=300.0; //TB[24]
    X[183]=300.0; //TB[25]
    X[184]=300.0; //TB[26]
    X[185]=300.0; //TB[27]
    X[186]=300.0; //TB[28]
    X[187]=300.0; //TB[29]
    X[188]=300.0; //TB[30]
    X[189]=300.0; //TB[31]
    X[190]=300.0; //TB[32]
    X[191]=300.0; //TB[33]
    X[192]=300.0; //TB[34]
    X[193]=300.0; //TB[35]
    X[194]=300.0; //TB[36]
    X[195]=300.0; //TB[37]
    X[196]=300.0; //TB[38]
    X[197]=300.0; //TB[39]
    X[198]=300.0; //TB[40]
    X[199]=300.0; //TB[41]
    X[200]=300.0; //TB[42]
    X[201]=300.0; //TB[43]
    X[202]=300.0; //TB[44]
    X[203]=300.0; //TB[45]
    X[204]=300.0; //TB[46]
    X[205]=300.0; //TB[47]
    X[206]=300.0; //TB[48]
    X[207]=300.0; //TB[49]
    X[208]=300.0; //TB[50]
    X[209]=300.0; //TB[51]
    X[210]=300.0; //TB[52]
    X[211]=300.0; //TB[53]
    X[212]=300.0; //TB[54]
    X[213]=300.0; //TB[55]
    X[214]=300.0; //TB[56]
    X[215]=300.0; //TB[57]
    X[216]=300.0; //TB[58]
    X[217]=300.0; //TB[59]
    X[218]=300.0; //TB[60]
    X[219]=300.0; //TB[61]
    X[220]=300.0; //TB[62]
    X[221]=300.0; //TB[63]
    X[222]=300.0; //TB[64]
    X[223]=300.0; //TB[65]
    X[224]=300.0; //TB[66]
    X[225]=300.0; //TB[67]
    X[226]=300.0; //TB[68]
    X[227]=300.0; //TB[69]
    X[228]=300.0; //TB[70]
    X[229]=300.0; //TB[71]
    X[230]=300.0; //TB[72]
    X[231]=300.0; //TB[73]
    X[232]=300.0; //TB[74]
    X[233]=300.0; //TB[75]
    X[234]=300.0; //TB[76]
    X[235]=300.0; //TB[77]
    X[236]=300.0; //TB[78]
    X[237]=300.0; //TB[79]
    X[238]=300.0; //TB[80]
    X[239]=300.0; //TB[81]
    X[240]=300.0; //TB[82]
    X[241]=300.0; //TB[83]
    X[242]=300.0; //TB[84]
    X[243]=300.0; //TB[85]
    X[244]=300.0; //TB[86]
    X[245]=300.0; //TB[87]
    X[246]=300.0; //TB[88]
    X[247]=300.0; //TB[89]
    X[248]=300.0; //TB[90]
    X[249]=300.0; //TB[91]
    X[250]=300.0; //TB[92]
    X[251]=300.0; //TB[93]
    X[252]=300.0; //TB[94]
    X[253]=300.0; //TB[95]
    X[254]=300.0; //TB[96]
    X[255]=300.0; //TB[97]
    X[256]=300.0; //TB[98]
    X[257]=300.0; //TB[99]
    X[258]=300.0; //TB[100]
    X[259]=300.0; //TB[101]
    X[260]=300.0; //TB[102]
    X[261]=300.0; //TB[103]
    X[262]=300.0; //TB[104]
    X[263]=300.0; //TB[105]
    X[264]=300.0; //TB[106]
    X[265]=300.0; //TB[107]
    X[266]=300.0; //TB[108]
    X[267]=300.0; //TB[109]
    X[268]=300.0; //TB[110]
    X[269]=300.0; //TB[111]
    X[270]=300.0; //TB[112]
    X[271]=300.0; //TB[113]
    X[272]=300.0; //TB[114]
    X[273]=300.0; //TB[115]
    X[274]=300.0; //TB[116]
    X[275]=300.0; //TB[117]
    X[276]=300.0; //TB[118]
    X[277]=300.0; //TB[119]
    X[278]=300.0; //TB[120]
    X[279]=300.0; //TB[121]
    X[280]=300.0; //TB[122]
    X[281]=300.0; //TB[123]
    X[282]=300.0; //TB[124]
    X[283]=300.0; //TB[125]
    X[284]=300.0; //TB[126]
    X[285]=300.0; //TB[127]
    X[286]=300.0; //TB[128]
    X[287]=300.0; //TB[129]
    X[288]=300.0; //TB[130]
    X[289]=300.0; //TB[131]
    X[290]=300.0; //TB[132]
    X[291]=300.0; //TB[133]
    X[292]=300.0; //TB[134]
    X[293]=300.0; //TB[135]
    X[294]=300.0; //TB[136]
    X[295]=300.0; //TB[137]
    X[296]=300.0; //TB[138]
    X[297]=300.0; //TB[139]
    X[298]=300.0; //TB[140]
    X[299]=300.0; //TB[141]
    X[300]=300.0; //TB[142]
    X[301]=300.0; //TB[143]
    X[302]=300.0; //TB[144]
    X[303]=300.0; //TB[145]
    X[304]=300.0; //TB[146]
    X[305]=300.0; //TB[147]
    X[306]=300.0; //TB[148]
    X[307]=300.0; //TB[149]
    X[308]=300.0; //TB[150]
    X[309]=300.0; //TB[151]
    X[310]=300.0; //TB[152]
    X[311]=300.0; //TB[153]
    X[312]=300.0; //TB[154]
    X[313]=300.0; //TB[155]
    X[314]=300.0; //TB[156]
    X[315]=300.0; //TB[157]
    X[316]=300.0; //TB[158]
    X[318]=300.0; //TW[1]
    X[319]=300.0; //TW[2]
    X[320]=300.0; //TW[3]
    X[321]=300.0; //TW[4]
    X[322]=300.0; //TW[5]
    X[323]=300.0; //TW[6]
    X[324]=300.0; //TW[7]
    X[325]=300.0; //TW[8]
    X[326]=300.0; //TW[9]
    X[327]=300.0; //TW[10]
    X[328]=300.0; //TW[11]
    X[329]=300.0; //TW[12]
    X[330]=300.0; //TW[13]
    X[331]=300.0; //TW[14]
    X[332]=300.0; //TW[15]
    X[333]=300.0; //TW[16]
    X[334]=300.0; //TW[17]
    X[335]=300.0; //TW[18]
    X[336]=300.0; //TW[19]
    X[337]=300.0; //TW[20]
    X[338]=300.0; //TW[21]
    X[339]=300.0; //TW[22]
    X[340]=300.0; //TW[23]
    X[341]=300.0; //TW[24]
    X[342]=300.0; //TW[25]
    X[343]=300.0; //TW[26]
    X[344]=300.0; //TW[27]
    X[345]=300.0; //TW[28]
    X[346]=300.0; //TW[29]
    X[347]=300.0; //TW[30]
    X[348]=300.0; //TW[31]
    X[349]=300.0; //TW[32]
    X[350]=300.0; //TW[33]
    X[351]=300.0; //TW[34]
    X[352]=300.0; //TW[35]
    X[353]=300.0; //TW[36]
    X[354]=300.0; //TW[37]
    X[355]=300.0; //TW[38]
    X[356]=300.0; //TW[39]
    X[357]=300.0; //TW[40]
    X[358]=300.0; //TW[41]
    X[359]=300.0; //TW[42]
    X[360]=300.0; //TW[43]
    X[361]=300.0; //TW[44]
    X[362]=300.0; //TW[45]
    X[363]=300.0; //TW[46]
    X[364]=300.0; //TW[47]
    X[365]=300.0; //TW[48]
    X[366]=300.0; //TW[49]
    X[367]=300.0; //TW[50]
    X[368]=300.0; //TW[51]
    X[369]=300.0; //TW[52]
    X[370]=300.0; //TW[53]
    X[371]=300.0; //TW[54]
    X[372]=300.0; //TW[55]
    X[373]=300.0; //TW[56]
    X[374]=300.0; //TW[57]
    X[375]=300.0; //TW[58]
    X[376]=300.0; //TW[59]
    X[377]=300.0; //TW[60]
    X[378]=300.0; //TW[61]
    X[379]=300.0; //TW[62]
    X[380]=300.0; //TW[63]
    X[381]=300.0; //TW[64]
    X[382]=300.0; //TW[65]
    X[383]=300.0; //TW[66]
    X[384]=300.0; //TW[67]
    X[385]=300.0; //TW[68]
    X[386]=300.0; //TW[69]
    X[387]=300.0; //TW[70]
    X[388]=300.0; //TW[71]
    X[389]=300.0; //TW[72]
    X[390]=300.0; //TW[73]
    X[391]=300.0; //TW[74]
    X[392]=300.0; //TW[75]
    X[393]=300.0; //TW[76]
    X[394]=300.0; //TW[77]
    X[395]=300.0; //TW[78]
    X[396]=300.0; //TW[79]
    X[397]=300.0; //TW[80]
    X[398]=300.0; //TW[81]
    X[399]=300.0; //TW[82]
    X[400]=300.0; //TW[83]
    X[401]=300.0; //TW[84]
    X[402]=300.0; //TW[85]
    X[403]=300.0; //TW[86]
    X[404]=300.0; //TW[87]
    X[405]=300.0; //TW[88]
    X[406]=300.0; //TW[89]
    X[407]=300.0; //TW[90]
    X[408]=300.0; //TW[91]
    X[409]=300.0; //TW[92]
    X[410]=300.0; //TW[93]
    X[411]=300.0; //TW[94]
    X[412]=300.0; //TW[95]
    X[413]=300.0; //TW[96]
    X[414]=300.0; //TW[97]
    X[415]=300.0; //TW[98]
    X[416]=300.0; //TW[99]
    X[417]=300.0; //TW[100]
    X[418]=300.0; //TW[101]
    X[419]=300.0; //TW[102]
    X[420]=300.0; //TW[103]
    X[421]=300.0; //TW[104]
    X[422]=300.0; //TW[105]
    X[423]=300.0; //TW[106]
    X[424]=300.0; //TW[107]
    X[425]=300.0; //TW[108]
    X[426]=300.0; //TW[109]
    X[427]=300.0; //TW[110]
    X[428]=300.0; //TW[111]
    X[429]=300.0; //TW[112]
    X[430]=300.0; //TW[113]
    X[431]=300.0; //TW[114]
    X[432]=300.0; //TW[115]
    X[433]=300.0; //TW[116]
    X[434]=300.0; //TW[117]
    X[435]=300.0; //TW[118]
    X[436]=300.0; //TW[119]
    X[437]=300.0; //TW[120]
    X[438]=300.0; //TW[121]
    X[439]=300.0; //TW[122]
    X[440]=300.0; //TW[123]
    X[441]=300.0; //TW[124]
    X[442]=300.0; //TW[125]
    X[443]=300.0; //TW[126]
    X[444]=300.0; //TW[127]
    X[445]=300.0; //TW[128]
    X[446]=300.0; //TW[129]
    X[447]=300.0; //TW[130]
    X[448]=300.0; //TW[131]
    X[449]=300.0; //TW[132]
    X[450]=300.0; //TW[133]
    X[451]=300.0; //TW[134]
    X[452]=300.0; //TW[135]
    X[453]=300.0; //TW[136]
    X[454]=300.0; //TW[137]
    X[455]=300.0; //TW[138]
    X[456]=300.0; //TW[139]
    X[457]=300.0; //TW[140]
    X[458]=300.0; //TW[141]
    X[459]=300.0; //TW[142]
    X[460]=300.0; //TW[143]
    X[461]=300.0; //TW[144]
    X[462]=300.0; //TW[145]
    X[463]=300.0; //TW[146]
    X[464]=300.0; //TW[147]
    X[465]=300.0; //TW[148]
    X[466]=300.0; //TW[149]
    X[467]=300.0; //TW[150]
    X[468]=300.0; //TW[151]
    X[469]=300.0; //TW[152]
    X[470]=300.0; //TW[153]
    X[471]=300.0; //TW[154]
    X[472]=300.0; //TW[155]
    X[473]=300.0; //TW[156]
    X[474]=300.0; //TW[157]
    X[475]=300.0; //TW[158]

}

template <class Precision> __forceinline__ __device__ void PerThread_Finalization(
    int tid, int NT, int& DOIDX, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR,       int* sPARi, Precision* ACC, int* ACCi
) {
	
}


#endif
