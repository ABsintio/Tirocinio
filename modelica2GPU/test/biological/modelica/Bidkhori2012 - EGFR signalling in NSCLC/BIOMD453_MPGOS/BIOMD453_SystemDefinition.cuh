
#ifndef BIOMD453_PERTHREAD_SYSTEMDEFINITION_H
#define BIOMD453_PERTHREAD_SYSTEMDEFINITION_H

#include <fstream>
#include <iostream>
#include <string>
#include "Functions.cuh"


template<class Precision> __forceinline__ __device__ void PerThread_OdeFunction(
	int tid, int NT, \
	Precision*    F, Precision*    X, Precision     T, \
	Precision* cPAR, Precision* sPAR, int*      sPARi, Precision* ACC, int* ACCi  		
) {
    ACC[0]=(X[11] + X[26]);
    F[43]=((2.0 * (X[76] * X[71])) + (-0.0505 * X[43]));
    F[76]=((0.2 * (X[4] * X[12])) + ((-0.005 * X[76]) + ((-2.0 * (X[76] * X[71])) + (0.05 * X[43]))));
    F[44]=((2.0 * (X[59] * X[71])) + (-0.0505 * X[44]));
    F[59]=((0.2 * (X[20] * X[12])) + ((-0.005 * X[59]) + ((-2.0 * (X[59] * X[71])) + (0.05 * X[44]))));
    F[50]=((X[97] * X[5]) + (-0.205 * X[50]));
    F[55]=((0.005 * X[50]) + ((-0.0002 * (X[55] * X[97])) + ((0.2 * X[56]) + (-0.05 * X[55]))));
    F[56]=((0.005 * X[6]) + ((0.0002 * (X[55] * X[97])) + (-0.2 * X[56])));
    F[6]=((X[27] * X[5]) + (-0.205 * X[6]));
    F[5]=((0.005 * (X[6] + X[50])) + ((0.2 * X[6]) + ((0.2 * X[50]) + (((-(X[97])) - X[27]) * X[5]))));
    F[97]=((-40.0 * pow(X[97],2.0)) + ((0.2 * X[27]) + ((-0.0002 * (X[55] * X[97])) + ((0.2 * X[56]) + ((0.2 * X[50]) - (X[97] * X[5]))))));
    F[27]=((0.005 * X[32]) + ((20.0 * pow(X[97],2.0)) + ((-0.1 * X[27]) + ((0.2 * X[6]) - (X[27] * X[5])))));
    F[86]=((0.003 * X[30]) + ((0.0002 * (X[10] * X[73])) + (-0.2 * X[86])));
    F[32]=((20.0 * pow(X[73],2.0)) + ((-0.105 * X[32]) + ((0.2 * X[30]) - (X[32] * X[82]))));
    F[30]=((X[32] * X[82]) + (-0.203 * X[30]));
    F[93]=((X[73] * X[82]) + (-0.203 * X[93]));
    F[82]=((0.003 * (X[93] + X[30])) + ((0.2 * X[93]) + ((0.2 * X[30]) + (((-(X[32])) - X[73]) * X[82]))));
    F[23]=((5.0 * (X[78] * X[73])) + (-0.5 * X[23]));
    F[73]=((0.4 * X[20]) + ((-5.0 * (X[78] * X[73])) + ((0.5 * X[23]) + ((0.2 * X[93]) + ((-40.0 * pow(X[73],2.0)) + ((0.2 * X[32]) + ((-0.0002 * (X[10] * X[73])) + ((0.2 * X[86]) - (X[73] * X[82])))))))));
    F[20]=((5.5 * (X[78] * X[10])) + ((-12.14 * X[20]) + ((-0.2 * (X[20] * X[12])) + (0.005 * X[59]))));
    F[10]=((0.003 * X[93]) + ((0.05 * X[55]) + ((0.0005 * X[44]) + ((-5.5 * (X[78] * X[10])) + ((11.74 * X[20]) + ((-0.0002 * (X[10] * X[73])) + (0.2 * X[86])))))));
    F[88]=((0.05 * X[35]) + (-0.001 * (X[88] - (X[38] * X[8]))));
    F[35]=((10.0 * (X[79] * X[8])) + (-1.05 * X[35]));
    F[58]=((0.05 * X[14]) + (-0.001 * (X[58] - (X[37] * X[8]))));
    F[14]=((10.0 * (X[26] * X[8])) + (-1.05 * X[14]));
    F[8]=((0.001 * (X[17] + (X[58] + (X[88] + ((((-(X[37])) - X[38]) - X[84]) * X[8]))))) + ((-10.0 * (X[11] * X[8])) + (X[65] + ((-10.0 * (X[26] * X[8])) + (X[14] + ((-10.0 * (X[79] * X[8])) + X[35]))))));
    F[17]=((0.05 * X[65]) + (-0.001 * (X[17] - (X[84] * X[8]))));
    F[65]=((10.0 * (X[11] * X[8])) + (-1.05 * X[65]));
    F[11]=(X[26] + ((-0.001 * (X[11] * X[91])) + ((-10.0 * (X[11] * X[8])) + X[65])));
    F[26]=((0.1 * X[79]) + ((-0.005 * (X[26] * X[41])) + ((0.001 * (X[11] * X[91])) + ((-10.0 * (X[26] * X[8])) + (X[14] - X[26])))));
    F[79]=((10.0 * X[38]) + ((-0.1 * X[79]) + ((0.005 * (X[26] * X[41])) + ((-10.0 * (X[79] * X[8])) + X[35]))));
    F[38]=((10.0 * (X[37] * X[41])) + ((0.001 * (X[88] - (X[38] * X[8]))) + (-11.0 * X[38])));
    F[41]=((0.1 * X[79]) + ((-0.005 * (X[26] * X[41])) + ((-10.0 * (X[37] * X[41])) + X[38])));
    F[37]=((10.0 * (X[84] * X[91])) + ((0.001 * (X[58] - (X[37] * X[8]))) + ((-10.0 * (X[37] * X[41])) + (X[38] - X[37]))));
    F[84]=((0.001 * (X[17] - (X[84] * X[8]))) + ((-10.0 * (X[84] * X[91])) + X[37]));
    F[91]=((25.0 * X[0]) + (X[26] + ((-0.001 * (X[11] * X[91])) + ((-10.0 * (X[84] * X[91])) + (X[37] + (-17.0 * X[91]))))));
    F[0]=((25.0 * (X[45] * X[72])) + (-28.5 * X[0]));
    F[72]=((17.0 * X[91]) + ((-25.0 * (X[45] * X[72])) + (3.5 * X[0])));
    F[42]=((0.595 * X[75]) + ((-4.7e-06 * X[42]) + (2.297e-06 * (X[107] * X[19]))));
    F[75]=((X[107] * X[45]) + (-0.633 * X[75]));
    F[107]=((4.7e-06 * X[42]) + ((-2.297e-06 * (X[107] * X[19])) + ((0.038 * X[75]) - (X[107] * X[45]))));
    F[45]=((0.09 * X[4]) + ((-0.1764 * (X[78] * X[45])) + ((28.5 * X[0]) + ((0.038 * X[75]) + (X[45] * ((-25.0 * X[72]) - X[107]))))));
    F[16]=((33.72 * X[4]) + (-0.0003372 * X[16]));
    F[4]=((14.0 * (X[78] * X[19])) + ((-33.9843 * X[4]) + ((0.0003372 * X[16]) + ((0.1764 * (X[78] * X[45])) + ((-0.2 * (X[4] * X[12])) + (0.005 * X[76]))))));
    F[19]=((4.7e-06 * X[42]) + ((-2.297e-06 * (X[107] * X[19])) + ((0.0005 * X[43]) + ((-14.0 * (X[78] * X[19])) + (0.1743 * X[4])))));
    F[63]=((2.0 * (X[99] * X[71])) + (-0.0505 * X[63]));
    F[99]=((0.2 * (X[78] * X[12])) + ((-0.0005 * X[99]) + ((-2.0 * (X[99] * X[71])) + (0.05 * X[63]))));
    F[15]=((2.0 * (X[31] * X[71])) + (-0.0505 * X[15]));
    F[71]=((0.0005 * (X[1] + (X[15] + (X[63] + (X[44] + X[43]))))) + ((-2.0 * (X[70] * X[71])) + ((0.05 * X[1]) + ((-2.0 * (X[31] * X[71])) + ((0.05 * X[15]) + ((-2.0 * (X[99] * X[71])) + ((0.05 * X[63]) + ((-2.0 * (X[59] * X[71])) + ((0.05 * X[44]) + ((-2.0 * (X[76] * X[71])) + (0.05 * X[43])))))))))));
    F[1]=((2.0 * (X[70] * X[71])) + (-0.0505 * X[1]));
    F[3]=(-0.005 * X[3]);
    F[21]=((8.898 * (X[89] * X[103])) + (-1.0426 * X[21]));
    F[22]=((0.0426 * (X[36] + X[21])) + (-0.002 * X[22]));
    F[36]=((8.898 * (X[89] * X[106])) + (-1.0426 * X[36]));
    F[66]=((7.0 * (X[89] * X[85])) + (-0.87 * X[66]));
    F[24]=((5.0 * (X[81] * X[85])) + (-0.8 * X[24]));
    F[85]=((0.87 * X[66]) + ((0.8 * X[24]) + ((-7.0 * (X[89] * X[85])) + (-5.0 * (X[81] * X[85])))));
    F[62]=((0.25 * (X[57] * X[105])) + (-0.5580000000000001 * X[62]));
    F[80]=((14.3 * (X[102] * X[105])) + (-0.8580000000000001 * X[80]));
    F[105]=((0.058 * (X[80] + X[62])) + ((-14.3 * (X[102] * X[105])) + ((0.8 * X[80]) + ((-0.25 * (X[57] * X[105])) + (0.5 * X[62])))));
    F[13]=((71.7 * (X[69] * X[74])) + (-1.2 * X[13]));
    F[74]=((1.2 * X[13]) + (-71.7 * (X[69] * X[74])));
    F[89]=((5.7 * X[40]) + ((0.0426 * (X[36] + X[21])) + ((-7.0 * (X[89] * X[85])) + ((0.6 * X[66]) + ((-8.898 * (X[89] * X[106])) + (X[36] + ((-8.898 * (X[89] * X[103])) + X[21])))))));
    F[40]=((3.0 * (X[102] * X[81])) + (-5.733000000000001 * X[40]));
    F[81]=((16.0 * X[83]) + ((0.27 * X[66]) + ((-3.0 * (X[102] * X[81])) + ((0.033 * X[40]) + ((-5.0 * (X[81] * X[85])) + (0.5 * X[24]))))));
    F[83]=((3.0 * (X[102] * X[47])) + (-16.033 * X[83]));
    F[47]=((0.3 * X[24]) + ((-3.0 * (X[102] * X[47])) + (0.033 * X[83])));
    F[102]=((2.9 * X[9]) + ((16.033 * X[83]) + ((5.733000000000001 * X[40]) + ((-3.0 * (X[102] * (X[47] + X[81]))) + ((-14.3 * (X[102] * X[105])) + (0.8 * X[80]))))));
    F[9]=((4.0 * (X[69] * X[57])) + (-2.91833 * X[9]));
    F[57]=((3.5 * X[29]) + ((0.058 * X[80]) + ((-4.0 * (X[69] * X[57])) + ((0.01833 * X[9]) + ((-0.25 * (X[57] * X[105])) + (0.5 * X[62]))))));
    F[29]=((4.0 * (X[69] * X[2])) + (-3.51833 * X[29]));
    F[2]=((0.058 * X[62]) + ((-4.0 * (X[69] * X[2])) + (0.01833 * X[29])));
    F[49]=((1.75 * (X[39] * X[64])) + (-0.8124 * X[49]));
    F[39]=(X[13] + ((-1.75 * (X[39] * X[64])) + (0.05 * X[49])));
    F[77]=((3.114 * (X[87] * X[98])) + (-2.861 * X[77]));
    F[90]=((2.845 * (X[87] * X[64])) + (-8.719999999999999 * X[90]));
    F[87]=((0.1 * (X[78] * X[46])) + ((-0.01 * X[87]) + ((8.719999999999999 * X[90]) + ((-2.845 * (X[87] * X[64])) + ((-3.114 * (X[87] * X[98])) + (0.2 * X[77]))))));
    F[94]=((2.854 * (X[64] * X[46])) + (-8.719999999999999 * X[94]));
    F[46]=((8.719999999999999 * X[94]) + ((2.661 * X[77]) + ((-2.854 * (X[64] * X[46])) + ((-0.1 * (X[78] * X[46])) + (0.01 * X[87])))));
    F[18]=((202.9 * (X[103] * X[51])) + (-0.3234 * X[18]));
    F[64]=((0.1434 * (X[100] + X[18])) + ((0.8124 * X[49]) + ((-0.000167 * X[64]) + ((-2.854 * (X[64] * X[46])) + ((0.96 * X[94]) + ((-2.845 * (X[87] * X[64])) + ((0.96 * X[90]) + (-1.75 * (X[39] * X[64])))))))));
    F[100]=((202.9 * (X[106] * X[51])) + (-0.3234 * X[100]));
    F[51]=((0.000167 * X[64]) + ((7.76 * (X[94] + X[90])) + ((-202.9 * (X[106] * X[51])) + ((0.18 * X[100]) + ((-202.9 * (X[103] * X[51])) + (0.18 * X[18]))))));
    F[31]=((0.2 * (X[103] * X[12])) + ((-0.0025 * X[31]) + ((-2.0 * (X[31] * X[71])) + (0.05 * X[15]))));
    F[103]=((10.0 * (X[92] * X[60])) + ((-0.08499999999999999 * X[103]) + ((2.734 * (X[78] * X[7])) + ((0.3234 * X[18]) + ((-202.9 * (X[103] * X[51])) + ((-8.898 * (X[89] * X[103])) + (X[21] + ((-0.2 * (X[103] * X[12])) + (0.0025 * X[31])))))))));
    F[52]=((10.0 * (X[92] * X[98])) + (-3.661 * X[52]));
    F[92]=((3.0 * (X[78] * X[101])) + ((-0.05 * X[92]) + ((-10.0 * (X[92] * X[98])) + (X[52] + ((-10.0 * (X[92] * X[60])) + (0.06 * X[103]))))));
    F[7]=((0.1 * (X[101] * X[60])) + ((-0.0015 * X[7]) + ((0.0005 * (X[1] + X[15])) + ((-10.0 * (X[68] * X[7])) + ((0.045 * X[106]) + ((-2.734 * (X[78] * X[7])) + (0.025 * X[103])))))));
    F[70]=((0.2 * (X[106] * X[12])) + ((-0.0025 * X[70]) + ((-2.0 * (X[70] * X[71])) + (0.05 * X[1]))));
    F[106]=((10.0 * (X[33] * X[60])) + ((-0.0664 * X[106]) + ((10.0 * (X[68] * X[7])) + ((0.3234 * X[100]) + ((-202.9 * (X[106] * X[51])) + ((-8.898 * (X[89] * X[106])) + (X[36] + ((-0.2 * (X[106] * X[12])) + (0.0025 * X[70])))))))));
    F[60]=((0.002 * X[22]) + ((-10.0 * (X[33] * X[60])) + ((0.0214 * X[106]) + ((-0.1 * (X[101] * X[60])) + ((0.0015 * X[7]) + ((-10.0 * (X[92] * X[60])) + (0.06 * X[103])))))));
    F[28]=((10.0 * (X[33] * X[98])) + (-3.661 * X[28]));
    F[33]=((3.0 * (X[68] * X[101])) + ((-0.1 * X[33]) + ((-10.0 * (X[33] * X[98])) + (X[28] + ((-10.0 * (X[33] * X[60])) + (0.0214 * X[106]))))));
    F[101]=((2.661 * (X[28] + X[52])) + ((0.0426 * (X[36] + X[21])) + ((-3.0 * (X[68] * X[101])) + ((0.1 * X[33]) + ((-0.1 * (X[101] * X[60])) + ((0.0015 * X[7]) + ((-3.0 * (X[78] * X[101])) + (0.05 * X[92]))))))));
    F[104]=((3.114 * (X[61] * X[98])) + (-0.4661 * X[104]));
    F[61]=((4.481 * X[68]) + ((-0.3 * (X[78] * X[61])) + ((2.661 * X[28]) + ((0.0426 * X[36]) + ((0.0005 * X[1]) + ((-3.114 * (X[61] * X[98])) + ((0.2 * X[104]) + (-0.005 * X[61]))))))));
    F[68]=((0.5838 * X[34]) + ((-4.481 * X[68]) + ((0.3 * (X[78] * X[61])) + ((-3.0 * (X[68] * X[101])) + ((0.1 * X[33]) + ((-10.0 * (X[68] * X[7])) + (0.045 * X[106])))))));
    F[54]=((3.114 * (X[78] * X[98])) + (-0.4661 * X[54]));
    F[98]=((0.2661 * (X[54] + X[104])) + ((2.661 * (X[28] + (X[52] + X[77]))) + ((-3.114 * (X[78] * X[98])) + ((0.2 * X[54]) + ((-3.114 * (X[61] * X[98])) + ((0.2 * X[104]) + ((-10.0 * (X[33] * X[98])) + (X[28] + ((-10.0 * (X[92] * X[98])) + (X[52] + ((-3.114 * (X[87] * X[98])) + (0.2 * X[77]))))))))))));
    F[34]=((90.0 * (X[78] * X[25])) + (-1.1838 * X[34]));
    F[25]=((0.2661 * X[104]) + ((0.005 * X[61]) + ((-90.0 * (X[78] * X[25])) + (0.6 * X[34]))));
    F[12]=((0.0005 * (X[1] + (X[15] + (X[63] + X[44])))) + ((-0.2 * (X[106] * X[12])) + ((0.0025 * X[70]) + ((-0.2 * (X[103] * X[12])) + ((0.0025 * X[31]) + ((-0.2 * (X[78] * X[12])) + ((0.0005 * X[99]) + ((-0.2 * (X[20] * X[12])) + ((0.005 * X[59]) + ((-0.2 * (X[4] * X[12])) + (0.005 * X[76])))))))))));
    F[78]=((0.24 * (X[67] / (13.0 + X[67]))) + ((4.481 * X[68]) + ((-0.3 * (X[78] * X[61])) + ((0.0426 * (X[36] + X[21])) + ((0.2643 * X[4]) + ((-0.1764 * (X[78] * X[45])) + ((12.14 * X[20]) + ((-90.0 * (X[78] * X[25])) + ((0.6 * X[34]) + ((-3.114 * (X[78] * X[98])) + ((0.2 * X[54]) + ((-3.0 * (X[78] * X[101])) + ((0.05 * X[92]) + ((-2.734 * (X[78] * X[7])) + ((0.025 * X[103]) + ((-0.1 * (X[78] * X[46])) + ((0.01 * X[87]) + ((-0.2 * (X[78] * X[12])) + ((0.0005 * X[99]) + ((X[78] * ((-14.0 * X[19]) + (-5.5 * X[10]))) + ((-5.0 * (X[78] * X[73])) + (0.5 * X[23]))))))))))))))))))))));
    F[67]=((10.0 * pow(X[48],2.0)) + ((-0.02 * X[67]) + ((0.2661 * X[54]) + ((2.661 * (X[28] + (X[52] + X[77]))) + (-0.24 * (X[67] / (13.0 + X[67])))))));
    F[48]=((100.0 * (X[96] * X[53])) + ((-0.0038 * X[48]) + ((-20.0 * pow(X[48],2.0)) + (0.04 * X[67]))));
    F[53]=((0.005 * X[3]) + ((-100.0 * (X[96] * X[53])) + (0.0038 * X[48])));
    F[96]=((-100.0 * (X[96] * X[53])) + (0.0038 * X[48]));
    F[69]=((0.7624 * X[49]) + ((3.51833 * X[29]) + ((2.91833 * X[9]) + (X[95] + ((-4.0 * (X[69] * (X[2] + X[57]))) + ((-71.7 * (X[69] * X[74])) + ((0.2 * X[13]) + (-0.1 * (ACC[0] * (X[69] / (0.2 + X[69])))))))))));
    F[95]=((0.1 * (ACC[0] * (X[69] / (0.2 + X[69])))) - X[95]);

}

template<class Precision> __forceinline__ __device__ void PerThread_EventFunction(
	int tid, int NT, Precision*	  EF, \
	Precision     T, Precision    dT, Precision*    TD, Precision*	X, \
	Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi  		
) {
    

}

template<class Precision> __forceinline__ __device__ void PerThread_ActionAfterEventDetection(
    int tid, int NT, int IDX, int& UDT, \
    Precision    &T, Precision   &dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi
) {
    
}

template<class Precision> __forceinline__ __device__ void PerThread_ActionAfterSuccessfulTimeStep(
    int tid, int NT, int& UDT, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi
) {
    
}

template<class Precision> __forceinline__ __device__ void PerThread_Initialization(
    int tid, int NT, int& DOIDX, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR,       int* sPARi, Precision* ACC, int* ACCi
) {
    T     = TD[0];
    DOIDX = 0;
    ACC[0]=0.0; //mwa6994523_5d45_4000_af0c_3e94073bf183
    X[0]=0.0; //mw014cc419_b720_4b90_9192_2ec6e706c87d
    X[1]=0.0; //mw06b8aada_c92a_48eb_8ee7_af3778cfe62f
    X[2]=0.68; //mw0834731b_0477_4217_a53b_30cef851191b
    X[3]=1.0; //mw0a0ca6ba_cb28_44c7_a0c0_1593cb720966
    X[4]=0.0; //mw0dc4e5eb_4366_4799_bebc_cfcffe5c06f5
    X[5]=0.6; //mw0e1be972_fded_4bff_a93d_091ec942485f
    X[6]=0.0; //mw0facb8f2_95cf_4ddf_a959_b24ba64f320b
    X[7]=0.0; //mw1093b3af_1864_4ba3_a541_6009a9921282
    X[8]=0.1; //mw11a8b702_b8ac_4513_b4aa_063e51089812
    X[9]=0.0; //mw12ba4000_d452_420c_be63_96d2848aca32
    X[10]=2.0; //mw13abe2a6_9905_40e5_8c23_3fc8834b572a
    X[11]=0.0; //mw16796ffe_4764_4a9f_942e_149f42c1cd28
    X[12]=0.8; //mw19122f7d_f92e_4dc0_922f_6b681db65b0b
    X[13]=0.0; //mw19a33ad5_5ba4_46c7_84eb_c1287f02bcd5
    X[14]=0.0; //mw1a0cb97a_b657_430b_963c_92217f643081
    X[15]=0.0; //mw1d5948e7_5504_4224_9d71_227911b4f1ee
    X[16]=0.0; //mw1e591998_65c0_484e_8a3b_537a38d94de1
    X[17]=0.0; //mw236a3250_4c96_4f6e_b94c_ab3d12852801
    X[18]=0.0; //mw28464aad_8013_4a23_ae09_a406954859a6
    X[19]=0.4; //mw2ba1db9a_4483_44fa_a3a2_b4a5ea66898c
    X[20]=0.0; //mw2fd710a6_7fe2_4484_bca6_59c187bade8b
    X[21]=0.0; //mw31261227_9cd6_4059_a0bb_04dbf4888080
    X[22]=0.0; //mw31ac308f_da36_4f73_830f_67f3e5b945d9
    X[23]=0.0; //mw341082a0_8017_4cc7_9d00_b1211a196072
    X[24]=0.0; //mw35f5adaa_d1c0_433c_817d_76e317f4cb15
    X[25]=1.0; //mw3c2e1b43_29ca_491a_93e9_c723a993d6fb
    X[26]=0.0; //mw3d81860d_d786_4fcc_b8bb_64f1a2d7739d
    X[27]=0.0; //mw4110f531_7513_4786_8896_7c9d969ff558
    X[28]=0.0; //mw45ab688a_6467_4a3e_a779_2118fa84d69e
    X[29]=0.0; //mw4628f984_eb87_4922_9760_4975095ce6eb
    X[30]=0.0; //mw472d5cb9_120e_4f60_bbae_1ae2552837dd
    X[31]=0.0; //mw481cd12b_61ba_44e5_93bf_8b88c6c4a4e7
    X[32]=0.0; //mw4f575c55_7dff_45d7_94ad_cda9621d5b63
    X[33]=0.0; //mw504578d8_96c3_471f_8a7e_8c14e7535d3d
    X[34]=0.0; //mw5198d3c2_879c_4f0d_b4f8_cd40efe0b1cf
    X[35]=0.0; //mw57a44eb0_ace7_4294_905a_219e87d3c281
    X[36]=0.0; //mw5babe3d5_a9af_4dfd_ac01_35474ef64af2
    X[37]=0.0; //mw62bf5275_ce02_4e86_b3b6_3f87a335e1de
    X[38]=0.0; //mw6353aa36_d4a4_4254_8a1f_1f7f571d4233
    X[39]=0.5; //mw66ac98c4_7e7b_4071_954d_43eb17584220
    X[40]=0.0; //mw6cb74b27_ffef_49bb_8ffb_622d552caa9e
    X[41]=0.1; //mw6e01967b_3e2a_433d_bec6_9f9cf3ba243c
    X[42]=0.0; //mw7033dfd6_53c5_433b_a132_f8cb34dea20f
    X[43]=0.0; //mw71d03aab_fcb6_4f78_a788_48f183d0b931
    X[44]=0.0; //mw741407c8_029b_44ed_9799_02eb9d90ec9a
    X[45]=0.0; //mw78e207c4_4faf_4b48_8e22_1ee666e9cc4c
    X[46]=0.1; //mw7cff9a0e_094d_498e_bf7f_7b162c61d63a
    X[47]=0.8; //mw7e23b961_186b_47a0_a8b5_5e9957766792
    X[48]=0.0; //mw7eacabf9_d68c_491a_aba2_ec0809a8ecc8
    X[49]=0.0; //mw83de7813_4941_45a6_a320_a551165bf22a
    X[50]=0.0; //mw8c85ff7f_6368_4b11_a2ed_ce83481b55e6
    X[51]=0.3; //mw8f5a7b5c_ca4c_4a4c_85b1_e5d640c426bf
    X[52]=0.0; //mw925b938a_fe73_4664_ba6f_e72e57780891
    X[53]=1.0; //mw93907b2d_53db_4080_9e3f_3eb304441ab9
    X[54]=0.0; //mw954e8fcb_ac0a_459d_8878_f19080208a17
    X[55]=0.0; //mw960bddeb_e567_46dd_b2f3_ed5e6a5c7972
    X[56]=0.0; //mw9686f53e_d343_45fd_b441_9c992219546a
    X[57]=0.0; //mw9b25f809_18a1_4c14_8f4b_cf18e6d93c28
    X[58]=0.0; //mw9b937ca3_0d82_46d5_8f5a_0f9701002797
    X[59]=0.0; //mw9da19d39_6d91_41d0_b101_f7748391705a
    X[60]=0.3; //mw9dcaa655_a755_426e_a3fa_1ad7c3c45575
    X[61]=0.0; //mwa0349407_8187_48fc_9e94_5698ccc4e06d
    X[62]=0.0; //mwa0acc0ac_5fac_4a42_a3be_e36db44994b0
    X[63]=0.0; //mwa455ec7e_1a12_4659_95a2_a5695d09ca60
    X[64]=0.0; //mwa54a9c38_c98b_45e5_8432_4119fb777e44
    X[65]=0.0; //mwa6e82fc9_a0ce_461c_93c8_17f3c807c1a1
    X[66]=0.0; //mwa7e3103a_6394_472c_b0f4_8ed527f68604
    X[67]=0.0; //mwa8f2e7b2_0927_4ab4_a817_dddc43bb4fa3
    X[68]=0.0; //mwa98802cb_c977_4fe0_9e67_5000904c2c36
    X[69]=0.0; //mwaff92910_ed3d_40b9_a29c_e4866167e828
    X[70]=0.0; //mwb1bc2058_e6d8_4680_9e6c_d27bb366cde0
    X[71]=0.5; //mwb2366216_0b3c_4f28_8303_fec92c68dd57
    X[72]=0.5; //mwb561d9f3_a9ed_4bdb_8d40_87be5cc3237a
    X[73]=0.0; //mwb6a9aa2c_62e7_410f_9c33_dbe36dfcc4af
    X[74]=0.5; //mwbaaeb210_4806_4076_9d60_219f4ed945b6
    X[75]=0.0; //mwbd6bb050_89bd_41df_8cea_d2e1fb77bafe
    X[76]=0.0; //mwbedcc124_dbf3_41ab_989e_6b0900d7590a
    X[77]=0.0; //mwbf5cb039_b830_4282_aa22_a3dda6272ec1
    X[78]=0.0; //mwbfcf6773_1915_432c_b1d2_1f246094cc74
    X[79]=0.0; //mwc1935afc_56b1_4a87_923c_ae6d82455d80
    X[80]=0.0; //mwcb572fe2_c3ac_40e7_8141_da7d55fce18a
    X[81]=0.0; //mwcc894c94_0ddf_42cc_913e_cdcc4d471d94
    X[82]=0.5; //mwcea1f1c1_2f85_4af1_98ea_ef14cf580c09
    X[83]=0.0; //mwcedf8ecd_67bd_4b91_aa04_d58782dec2a4
    X[84]=0.2; //mwcef73e0e_d195_4077_ae71_723664ee1602
    X[85]=0.002; //mwd087f76b_65dc_47f1_ba21_c43774457686
    X[86]=0.0; //mwd2c465fb_eea7_499a_8ea4_f318a64cb9ee
    X[87]=0.0; //mwd39388fd_4f85_4d1c_b2a3_37857c595a2d
    X[88]=0.0; //mwd746a5d5_5e65_4a4c_9f84_0e4a3cb7d2fc
    X[89]=0.0; //mwd784228d_0cb5_468a_ac70_02d8f04b3d9c
    X[90]=0.0; //mwd7bf31ba_b05c_4c45_bb2f_6a2468a2a507
    X[91]=0.0; //mwd7f41594_8377_4e2e_9528_45d5a82ffdb4
    X[92]=0.0; //mwd9462e5b_a272_4b66_ab66_fde9266b1a43
    X[93]=0.0; //mwdc34472c_a6f9_4002_951d_e0e8da64eb42
    X[94]=0.0; //mwdf82303e_323f_4c51_a858_56a59233cd98
    X[95]=0.0; //mwdf92bdc0_f426_45b0_9ad0_876521f41312
    X[96]=0.008196699999999999; //mwe2fff28d_182c_4a1c_9882_f17774c0958a
    X[97]=0.0; //mwe3fd7f65_b0d1_44d9_b6f3_d2f7d332f664
    X[98]=0.2; //mwe57c3282_5935_405c_8c0b_7fadb7a5de17
    X[99]=0.0; //mwec1b368b_8f73_47eb_9636_9956389836eb
    X[100]=0.0; //mwf40d6176_abfc_4a30_886f_83a19fcffc48
    X[101]=1.0; //mwf430a579_ecbf_48ba_80c2_06e455808f2a
    X[102]=0.0; //mwf816df4c_4593_4d23_990f_0d7c15ddde5d
    X[103]=0.0; //mwf8cc7834_bf4f_4ccd_8235_d0890badf0f6
    X[104]=0.0; //mwf9999977_6f0e_4e35_9b73_75587f3448e9
    X[105]=0.02; //mwf9e2a044_7774_400b_a74e_a111b4a21f30
    X[106]=0.0; //mwfbda4e09_0cbb_49bc_ae69_f88b7a79ed21
    X[107]=0.2; //mwfc4a9c3d_3ebb_4033_8b7d_f4d7613d2078

}

template <class Precision> __forceinline__ __device__ void PerThread_Finalization(
    int tid, int NT, int& DOIDX, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR,       int* sPARi, Precision* ACC, int* ACCi
) {
	
}


#endif
