
#ifndef BIOMD572_PERTHREAD_SYSTEMDEFINITION_H
#define BIOMD572_PERTHREAD_SYSTEMDEFINITION_H

#include <fstream>
#include <iostream>
#include <string>
#include "Functions.cuh"


template<class Precision> __forceinline__ __device__ void PerThread_OdeFunction(
	int tid, int NT, \
	Precision*    F, Precision*    X, Precision     T, \
	Precision* cPAR, Precision* sPAR, int*      sPARi, Precision* ACC, int* ACCi  		
) {
    F[12]=function_4_PFL(X[2],X[8],X[12],X[13],650.0,0.124066,X[23],0.00230934,0.511288,7.34319,54.2693,5.77662);
    F[19]=(function_4_Mannitol_transp(X[17],X[19],1.62459,0.940662,0.0223502) - function_4_PTS_Man(X[18],X[19],X[22],X[23],4.44903,0.362571,0.0127321,2.20816,0.344134));
    F[5]=function_4_Acetoin_transp(X[4],X[5],1.60066,1.89255,7.05248);
    F[15]=(-(function_4_PTS_Glc(X[11],X[14],X[15],X[22],X[23],X[25],3.71082,0.070909,1.16937,0.284871,0.0485045,0.305604,1.95993)));
    F[7]=function_4_BDH(X[4],X[7],1400.0,X[20],X[21],2.28578,5.62373,1.80684,3.54858,1.29567);
    F[3]=function_4_ACK(X[0],X[1],X[2],X[3],X[8],3.83918,1.17242,14.1556,0.55824,0.552221,0.173388);
    F[9]=function_4_AE(X[1],X[2],X[8],X[9],X[20],X[21],2.11844,6.28119,7.38021,0.09181300000000001,2.28106,0.43127,1.31442);
    F[16]=function_4_LDH(X[11],X[16],X[20],X[21],X[23],X[25],566.598,0.0184011,0.0676829,94.1203,0.144443,3.08447,0.01);
    F[24]=(-(function_4_P_transp(X[0],X[1],X[24],X[25],3.59588,0.561093,0.192278,0.523288,0.749898,0.30336)));
    F[8]=(function_4_AE(X[1],X[2],X[8],X[9],X[20],X[21],2.11844,6.28119,7.38021,0.09181300000000001,2.28106,0.43127,1.31442) + (function_4_ACK(X[0],X[1],X[2],X[3],X[8],3.83918,1.17242,14.1556,0.55824,0.552221,0.173388) - function_4_PFL(X[2],X[8],X[12],X[13],650.0,0.124066,X[23],0.00230934,0.511288,7.34319,54.2693,5.77662)));
    F[18]=(function_4_MPD(X[10],200.0,X[18],X[20],X[21],1.32695,22.0284,0.321372,0.0891203,0.0303446,0.373149) + (function_4_PTS_Man(X[18],X[19],X[22],X[23],4.44903,0.362571,0.0127321,2.20816,0.344134) - function_4_MP(X[17],X[18],3.48563,3.51571,0.238849)));
    F[17]=(function_4_MP(X[17],X[18],3.48563,3.51571,0.238849) - function_4_Mannitol_transp(X[17],X[19],1.62459,0.940662,0.0223502));
    F[4]=(function_4_ALS(X[4],900000.0,X[23],0.354581,0.0495418,0.262819) + ((-(function_4_BDH(X[4],X[7],1400.0,X[20],X[21],2.28578,5.62373,1.80684,3.54858,1.29567))) - function_4_Acetoin_transp(X[4],X[5],1.60066,1.89255,7.05248)));
    F[2]=(function_4_PFL(X[2],X[8],X[12],X[13],650.0,0.124066,X[23],0.00230934,0.511288,7.34319,54.2693,5.77662) + ((-(function_4_AE(X[1],X[2],X[8],X[9],X[20],X[21],2.11844,6.28119,7.38021,0.09181300000000001,2.28106,0.43127,1.31442))) - function_4_ACK(X[0],X[1],X[2],X[3],X[8],3.83918,1.17242,14.1556,0.55824,0.552221,0.173388)));
    F[23]=(function_4_PTS_Glc(X[11],X[14],X[15],X[22],X[23],X[25],3.71082,0.070909,1.16937,0.284871,0.0485045,0.305604,1.95993) + (function_4_PYK(X[0],X[1],X[11],X[22],X[23],X[25],2.22404,0.0388651,3.70071,3.07711,29.6028,0.330583,96.42270000000001,3.0) + (function_4_PTS_Man(X[18],X[19],X[22],X[23],4.44903,0.362571,0.0127321,2.20816,0.344134) + ((-2.0 * function_4_ALS(X[4],900000.0,X[23],0.354581,0.0495418,0.262819)) + ((-(function_4_PFL(X[2],X[8],X[12],X[13],650.0,0.124066,X[23],0.00230934,0.511288,7.34319,54.2693,5.77662))) - function_4_LDH(X[11],X[16],X[20],X[21],X[23],X[25],566.598,0.0184011,0.0676829,94.1203,0.144443,3.08447,0.01))))));
    F[21]=(function_4_GAPDH(X[6],X[13],0.0007,X[20],X[21],X[25],30.0058,0.0481603,0.181788,0.643019,0.0477445,6.75302) + ((-2.0 * function_4_AE(X[1],X[2],X[8],X[9],X[20],X[21],2.11844,6.28119,7.38021,0.09181300000000001,2.28106,0.43127,1.31442)) + (((-(function_4_LDH(X[11],X[16],X[20],X[21],X[23],X[25],566.598,0.0184011,0.0676829,94.1203,0.144443,3.08447,0.01))) - function_4_BDH(X[4],X[7],1400.0,X[20],X[21],2.28578,5.62373,1.80684,3.54858,1.29567)) - function_4_MPD(X[10],200.0,X[18],X[20],X[21],1.32695,22.0284,0.321372,0.0891203,0.0303446,0.373149))));
    F[20]=(function_4_LDH(X[11],X[16],X[20],X[21],X[23],X[25],566.598,0.0184011,0.0676829,94.1203,0.144443,3.08447,0.01) + ((2.0 * function_4_AE(X[1],X[2],X[8],X[9],X[20],X[21],2.11844,6.28119,7.38021,0.09181300000000001,2.28106,0.43127,1.31442)) + (function_4_BDH(X[4],X[7],1400.0,X[20],X[21],2.28578,5.62373,1.80684,3.54858,1.29567) + (function_4_MPD(X[10],200.0,X[18],X[20],X[21],1.32695,22.0284,0.321372,0.0891203,0.0303446,0.373149) - function_4_GAPDH(X[6],X[13],0.0007,X[20],X[21],X[25],30.0058,0.0481603,0.181788,0.643019,0.0477445,6.75302)))));
    F[22]=(function_4_ENO(X[0],X[1],X[6],27.55,X[22],29.132,0.413195,0.748238,0.0241572,1.38899) + (((-(function_4_PTS_Glc(X[11],X[14],X[15],X[22],X[23],X[25],3.71082,0.070909,1.16937,0.284871,0.0485045,0.305604,1.95993))) - function_4_PYK(X[0],X[1],X[11],X[22],X[23],X[25],2.22404,0.0388651,3.70071,3.07711,29.6028,0.330583,96.42270000000001,3.0)) - function_4_PTS_Man(X[18],X[19],X[22],X[23],4.44903,0.362571,0.0127321,2.20816,0.344134)));
    F[6]=(function_4_GAPDH(X[6],X[13],0.0007,X[20],X[21],X[25],30.0058,0.0481603,0.181788,0.643019,0.0477445,6.75302) - function_4_ENO(X[0],X[1],X[6],27.55,X[22],29.132,0.413195,0.748238,0.0241572,1.38899));
    F[13]=((2.0 * function_4_FBA(X[11],X[13],0.056,56.1311,0.300745,10.1058)) - function_4_GAPDH(X[6],X[13],0.0007,X[20],X[21],X[25],30.0058,0.0481603,0.181788,0.643019,0.0477445,6.75302));
    F[11]=(function_4_PFK(X[0],X[1],X[10],X[11],18.3577,10.7357,0.0616607,1.01973,86.8048) + ((-(function_4_FBA(X[11],X[13],0.056,56.1311,0.300745,10.1058))) - function_4_FBPase(X[10],X[11],X[25],0.0970486,1.90796,0.412307,0.0109675)));
    F[10]=(function_4_PGI(X[10],X[14],0.43,21.681,3.13894,0.199409) + (function_4_FBPase(X[10],X[11],X[25],0.0970486,1.90796,0.412307,0.0109675) + ((-(function_4_PFK(X[0],X[1],X[10],X[11],18.3577,10.7357,0.0616607,1.01973,86.8048))) - function_4_MPD(X[10],200.0,X[18],X[20],X[21],1.32695,22.0284,0.321372,0.0891203,0.0303446,0.373149))));
    F[25]=(function_4_ATPase(X[1],3.2901,4.34159,3.0) + ((2.0 * function_4_P_transp(X[0],X[1],X[24],X[25],3.59588,0.561093,0.192278,0.523288,0.749898,0.30336)) + (function_4_FBPase(X[10],X[11],X[25],0.0970486,1.90796,0.412307,0.0109675) - function_4_GAPDH(X[6],X[13],0.0007,X[20],X[21],X[25],30.0058,0.0481603,0.181788,0.643019,0.0477445,6.75302))));
    F[0]=(function_4_ATPase(X[1],3.2901,4.34159,3.0) + (function_4_P_transp(X[0],X[1],X[24],X[25],3.59588,0.561093,0.192278,0.523288,0.749898,0.30336) + (function_4_PFK(X[0],X[1],X[10],X[11],18.3577,10.7357,0.0616607,1.01973,86.8048) + (((-(function_4_ENO(X[0],X[1],X[6],27.55,X[22],29.132,0.413195,0.748238,0.0241572,1.38899))) - function_4_PYK(X[0],X[1],X[11],X[22],X[23],X[25],2.22404,0.0388651,3.70071,3.07711,29.6028,0.330583,96.42270000000001,3.0)) - function_4_ACK(X[0],X[1],X[2],X[3],X[8],3.83918,1.17242,14.1556,0.55824,0.552221,0.173388)))));
    F[1]=(function_4_ENO(X[0],X[1],X[6],27.55,X[22],29.132,0.413195,0.748238,0.0241572,1.38899) + (function_4_PYK(X[0],X[1],X[11],X[22],X[23],X[25],2.22404,0.0388651,3.70071,3.07711,29.6028,0.330583,96.42270000000001,3.0) + (function_4_ACK(X[0],X[1],X[2],X[3],X[8],3.83918,1.17242,14.1556,0.55824,0.552221,0.173388) + (((-(function_4_ATPase(X[1],3.2901,4.34159,3.0))) - function_4_P_transp(X[0],X[1],X[24],X[25],3.59588,0.561093,0.192278,0.523288,0.749898,0.30336)) - function_4_PFK(X[0],X[1],X[10],X[11],18.3577,10.7357,0.0616607,1.01973,86.8048)))));
    F[14]=(function_4_PTS_Glc(X[11],X[14],X[15],X[22],X[23],X[25],3.71082,0.070909,1.16937,0.284871,0.0485045,0.305604,1.95993) - function_4_PGI(X[10],X[14],0.43,21.681,3.13894,0.199409));

}

template<class Precision> __forceinline__ __device__ void PerThread_EventFunction(
	int tid, int NT, Precision*	  EF, \
	Precision     T, Precision    dT, Precision*    TD, Precision*	X, \
	Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi  		
) {
    

}

template<class Precision> __forceinline__ __device__ void PerThread_ActionAfterEventDetection(
    int tid, int NT, int IDX, int& UDT, \
    Precision    &T, Precision   &dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi
) {
    
}

template<class Precision> __forceinline__ __device__ void PerThread_ActionAfterSuccessfulTimeStep(
    int tid, int NT, int& UDT, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi
) {
    
}

template<class Precision> __forceinline__ __device__ void PerThread_Initialization(
    int tid, int NT, int& DOIDX, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR,       int* sPARi, Precision* ACC, int* ACCi
) {
    T     = TD[0];
    DOIDX = 0;
    X[0]=20.3856905308319; //ADP
    X[1]=4.88632508879394; //ATP
    X[2]=0.0; //AcetCoA
    X[3]=0.0; //Acetate
    X[4]=0.0; //Acetoin
    X[5]=0.0; //Acetoin_Ext
    X[6]=1.26348531244692; //BPG
    X[7]=0.0; //Butanediol
    X[8]=1.0; //CoA
    X[9]=0.0; //Ethanol
    X[10]=0.0; //F6P
    X[11]=15.3; //FBP
    X[12]=0.0; //Formate
    X[13]=0.0; //G3P
    X[14]=0.0; //G6P
    X[15]=80.0; //Glucose
    X[16]=0.0; //Lactate
    X[17]=0.0; //Mannitol
    X[18]=0.0; //Mannitol1Phosphate
    X[19]=0.0; //Mannitol_Ext
    X[20]=4.67; //NAD
    X[21]=2.03337939283534e-06; //NADH
    X[22]=2.4790177588998; //PEP
    X[23]=0.0; //PYR
    X[24]=50.0; //Pext
    X[25]=38.26; //Pint

}

template <class Precision> __forceinline__ __device__ void PerThread_Finalization(
    int tid, int NT, int& DOIDX, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR,       int* sPARi, Precision* ACC, int* ACCi
) {
	
}


#endif
