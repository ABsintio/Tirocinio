
model BIOMD256 "Rehm2006_Caspase"

    function pow
        input  Real x;
        input  Real power;
        output Real y;
        algorithm
            y := x^power;
    end pow;
    
    function piecewise
        input Real x;
        input Boolean condition;
        input Real y;
        output Real z;
        algorithm
            z := if condition then x else y;
    end piecewise;

    parameter Real k3 = 6.0;
    parameter Real k4 = 12.0;
    parameter Real k5 = 48.0;
    parameter Real k6 = 2.4;
    parameter Real k7 = 156.0;
    parameter Real k7r = 0.144;
    parameter Real k8 = 156.0;
    parameter Real k8r = 0.144;
    parameter Real k9 = 156.0;
    parameter Real k9r = 0.144;
    parameter Real k10 = 156.0;
    parameter Real k10r = 0.144;
    parameter Real k11 = 12.0;
    parameter Real k12 = 12.0;
    parameter Real k13 = 12.0;
    parameter Real k14 = 12.0;
    parameter Real k15 = 12.0;
    parameter Real k16 = 12.0;
    parameter Real k17 = 12.0;
    parameter Real k18 = 12.0;
    parameter Real k19 = 12.0;
    parameter Real k20 = 12.0;
    parameter Real k21 = 156.0;
    parameter Real k21r = 0.144;
    parameter Real k22 = 156.0;
    parameter Real k22r = 0.144;
    parameter Real k23 = 156.0;
    parameter Real k23r = 0.144;
    parameter Real k24 = 0.0;
    parameter Real k25 = 0.0;
    parameter Real k26 = 420.0;
    parameter Real k26r = 0.133;
    parameter Real k27 = 420.0;
    parameter Real k27r = 156.0;
    parameter Real k28 = 420.0;
    parameter Real k28r = 156.0;
    parameter Real k29 = 420.0;
    parameter Real k29r = 156.0;
    parameter Real k30 = 4.45;
    parameter Real k30r = 31.9;
    parameter Real k31 = 0.33;
    parameter Real k31r = 14.2;
    parameter Real k32 = 4.45;
    parameter Real k32r = 156.0;
    parameter Real k33 = 0.33;
    parameter Real k33r = 156.0;
    parameter Real k34 = 420.0;
    parameter Real k34r = 156.0;
    parameter Real k35 = 0.0058;
    parameter Real k36 = 0.0058;
    parameter Real k37 = 0.0058;
    parameter Real k41 = 0.0058;
    parameter Real k42 = 0.0347;
    parameter Real k45 = 0.0058;
    parameter Real k47 = 0.0058;
    parameter Real k49 = 0.0058;
    parameter Real k52 = 0.0058;
    parameter Real k53 = 12.0;
    parameter Real th_SMAC = 7.0;
    parameter Real th_Apop = 2.3;
    parameter Real th_CytC = 1.5;
    parameter Real S_breakdown = 0.01;
    parameter Real cell = 1.0;
    parameter Real mito = 1.0;

    Real k1(start=0.000468);
    Real k1r(start=0.0039);
    Real k2(start=0.0007308);
    Real k2r(start=0.0116);
    Real k38(start=0.0347);
    Real k39(start=0.0347);
    Real k40(start=0.0347);
    Real k43(start=0.0347);
    Real k44(start=0.0347);
    Real k46(start=0.0347);
    Real k48(start=0.0347);
    Real k50(start=0.0058);
    Real k51(start=0.0347);
    Real apo_lim(start=0.0);
    Real SMAC_norm(start=0.0);
    Real XIAP_ini(start=0.063);
    Real XIAP_2SMAC_norm(start=0.0);
    Real C9norm(start=0.0);
    Real C9_tot(start=0.03);
    Real C9Pnorm(start=0.0);
    Real C3norm(start=0.0);
    Real C3_tot(start=0.12);
    Real PC3norm(start=0.0);
    Real SMAC_rel(start=0.0);
    Real SMAC_tot(start=0.126);
    Real Apoform(start=0.0);
    Real XIAP_norm(start=0.0);
    Real XIAP_C3_norm(start=0.0);
    Real XIAP_C9_norm(start=0.0);
    Real XIAP_p2frag_norm(start=0.0);
    Real BIR12_norm(start=0.0);
    Real BIR3R_norm(start=0.0);
    Real BIR12_C3_norm(start=0.0);
    Real BIR3R_C9_norm(start=0.0);
    Real BIR3R_p2frag_norm(start=0.0);
    Real CytC_tot(start=10.0);
    Real APAF1_tot(start=3.372);

    Real PC3;
    Real XIAP;
    Real C9;
    Real PC9;
    Real C3;
    Real C9P;
    Real XIAP_C3;
    Real XIAP_C9;
    Real XIAP_C9_C3;
    Real XIAP_p2frag;
    Real XIAP_p2frag_C3;
    Real BIR12;
    Real BIR12_C3;
    Real BIR3R;
    Real BIR3R_C9;
    Real BIR3R_p2frag;
    Real XIAP_2SMAC;
    Real BIR12_SMAC;
    Real BIR3R_SMAC;
    Real SMAC;
    Real APAF1;
    Real XIAP_p2frag_2SMAC;
    Real Substrate;
    Real ClvgPrds;
    Real SMAC_mito;
    Real CytC_mit;
    Real CytC_cell;

initial equation
    PC3 = 0.12;
    XIAP = 0.063;
    C9 = 0.0;
    PC9 = 0.03;
    C3 = 0.0;
    C9P = 0.0;
    XIAP_C3 = 0.0;
    XIAP_C9 = 0.0;
    XIAP_C9_C3 = 0.0;
    XIAP_p2frag = 0.0;
    XIAP_p2frag_C3 = 0.0;
    BIR12 = 0.0;
    BIR12_C3 = 0.0;
    BIR3R = 0.0;
    BIR3R_C9 = 0.0;
    BIR3R_p2frag = 0.0;
    XIAP_2SMAC = 0.0;
    BIR12_SMAC = 0.0;
    BIR3R_SMAC = 0.0;
    SMAC = 0.0;
    APAF1 = 3.372;
    XIAP_p2frag_2SMAC = 0.0;
    Substrate = 1.0;
    ClvgPrds = 0.0;
    SMAC_mito = 0.126;
    CytC_mit = 10.0;
    CytC_cell = 0.0;

equation
    apo_lim = piecewise(PC9, (PC9 < APAF1), APAF1);
    SMAC_norm = SMAC / XIAP_ini;
    XIAP_2SMAC_norm = XIAP_2SMAC / XIAP_ini;
    C9norm = C9 / C9_tot;
    C9Pnorm = C9P / C9_tot;
    C3norm = C3 / C3_tot;
    PC3norm = PC3 / C3_tot;
    SMAC_rel = 1 - SMAC_mito / SMAC_tot;
    Apoform = 1 - PC9 / C9_tot;
    XIAP_norm = XIAP / XIAP_ini;
    XIAP_C3_norm = (XIAP_C3 + XIAP_C9_C3) / XIAP_ini;
    XIAP_C9_norm = (XIAP_C9 + XIAP_C9_C3) / XIAP_ini;
    XIAP_p2frag_norm = (XIAP_p2frag + XIAP_p2frag_C3) / XIAP_ini;
    BIR12_norm = BIR12 / XIAP_ini;
    BIR3R_norm = BIR3R / XIAP_ini;
    BIR12_C3_norm = BIR12_C3 / XIAP_ini;
    BIR3R_C9_norm = BIR3R_C9 / XIAP_ini;
    BIR3R_p2frag_norm = BIR3R_p2frag / XIAP_ini;
    der(PC3) = (cell * (k1 - k1r * PC3)) - (cell * k3 * C9 * PC3) - (cell * k5 * C9P * PC3) - (cell * k6 * PC3 * C3);
    der(XIAP) = (cell * (k2 - k2r * XIAP)) + (cell * k25 * XIAP_p2frag) - (cell * (k7 * C3 * XIAP - k7r * XIAP_C3)) - (cell * k11 * C3 * XIAP) - (cell * (k21 * C9 * XIAP - k21r * XIAP_C9)) - (cell * (k26 * XIAP * SMAC * SMAC - k26r * XIAP_2SMAC));
    der(C9) = (cell * k3 * C9 * PC3) + (cell * (k27 * XIAP_C9 * SMAC * SMAC - k27r * XIAP_2SMAC * C9)) + (cell * (k29 * XIAP_C9_C3 * SMAC * SMAC - k29r * XIAP_2SMAC * C3 * C9)) + (cell * (k33 * BIR3R_C9 * SMAC - k33r * BIR3R_SMAC * C9)) + (cell * apo_lim * log(2) / th_Apop) - (cell * k3 * C9 * PC3) - (cell * k4 * C9 * C3) - (cell * (k21 * C9 * XIAP - k21r * XIAP_C9)) - (cell * (k22 * C9 * XIAP_C3 - k22r * XIAP_C9_C3)) - (cell * (k23 * C9 * BIR3R - k23r * BIR3R_C9)) - (cell * k36 * C9);
    der(PC9) =  - (cell * apo_lim * log(2) / th_Apop);
    der(C3) = (cell * k3 * C9 * PC3) + (cell * k4 * C9 * C3) + (cell * k5 * C9P * PC3) + (2.0 * cell * k6 * PC3 * C3) + (cell * k11 * C3 * XIAP) + (cell * k12 * C3 * XIAP_C9) + (cell * k13 * C3 * XIAP_C3) + (cell * k14 * C3 * XIAP_p2frag) + (cell * k15 * C3 * XIAP_p2frag_C3) + (cell * k16 * C3 * XIAP_C9_C3) + (cell * k17 * C3 * XIAP_2SMAC) + (cell * k18 * C3 * XIAP_C9_C3) + (cell * k19 * C3 * XIAP_C9) + (cell * k20 * C3 * BIR3R_C9) + (cell * (k28 * XIAP_C3 * SMAC * SMAC - k28r * XIAP_2SMAC * C3)) + (cell * (k29 * XIAP_C9_C3 * SMAC * SMAC - k29r * XIAP_2SMAC * C3 * C9)) + (cell * (k32 * BIR12_C3 * SMAC - k32r * BIR12_SMAC * C3)) + (cell * k53 * C3 * Substrate) - (cell * k4 * C9 * C3) - (cell * k6 * PC3 * C3) - (cell * (k7 * C3 * XIAP - k7r * XIAP_C3)) - (cell * (k8 * C3 * XIAP_C9 - k8r * XIAP_C9_C3)) - (cell * (k9 * C3 * XIAP_p2frag - k9r * XIAP_p2frag_C3)) - (cell * (k10 * C3 * BIR12 - k10r * BIR12_C3)) - (cell * k11 * C3 * XIAP) - (cell * k12 * C3 * XIAP_C9) - (cell * k13 * C3 * XIAP_C3) - (cell * k14 * C3 * XIAP_p2frag) - (cell * k15 * C3 * XIAP_p2frag_C3) - (cell * k16 * C3 * XIAP_C9_C3) - (cell * k17 * C3 * XIAP_2SMAC) - (cell * k18 * C3 * XIAP_C9_C3) - (cell * k19 * C3 * XIAP_C9) - (cell * k20 * C3 * BIR3R_C9) - (cell * k37 * C3) - (cell * k53 * C3 * Substrate);
    der(C9P) = (cell * k4 * C9 * C3) + (cell * k5 * C9P * PC3) + (cell * k18 * C3 * XIAP_C9_C3) + (cell * k19 * C3 * XIAP_C9) + (cell * k20 * C3 * BIR3R_C9) - (cell * k5 * C9P * PC3) - (cell * k35 * C9P);
    der(XIAP_C3) = (cell * (k7 * C3 * XIAP - k7r * XIAP_C3)) - (cell * k13 * C3 * XIAP_C3) - (cell * (k22 * C9 * XIAP_C3 - k22r * XIAP_C9_C3)) - (cell * (k28 * XIAP_C3 * SMAC * SMAC - k28r * XIAP_2SMAC * C3)) - (cell * k38 * XIAP_C3);
    der(XIAP_C9) = (cell * (k21 * C9 * XIAP - k21r * XIAP_C9)) - (cell * (k8 * C3 * XIAP_C9 - k8r * XIAP_C9_C3)) - (cell * k12 * C3 * XIAP_C9) - (cell * k19 * C3 * XIAP_C9) - (cell * (k27 * XIAP_C9 * SMAC * SMAC - k27r * XIAP_2SMAC * C9)) - (cell * k40 * XIAP_C9);
    der(XIAP_C9_C3) = (cell * (k8 * C3 * XIAP_C9 - k8r * XIAP_C9_C3)) + (cell * (k22 * C9 * XIAP_C3 - k22r * XIAP_C9_C3)) - (cell * k16 * C3 * XIAP_C9_C3) - (cell * k18 * C3 * XIAP_C9_C3) - (cell * (k29 * XIAP_C9_C3 * SMAC * SMAC - k29r * XIAP_2SMAC * C3 * C9)) - (cell * k39 * XIAP_C9_C3);
    der(XIAP_p2frag) = (cell * k19 * C3 * XIAP_C9) - (cell * (k9 * C3 * XIAP_p2frag - k9r * XIAP_p2frag_C3)) - (cell * k14 * C3 * XIAP_p2frag) - (cell * k25 * XIAP_p2frag) - (cell * (k34 * XIAP_p2frag * SMAC * SMAC - k34r * XIAP_p2frag_2SMAC)) - (cell * k41 * XIAP_p2frag);
    der(XIAP_p2frag_C3) = (cell * (k9 * C3 * XIAP_p2frag - k9r * XIAP_p2frag_C3)) + (cell * k18 * C3 * XIAP_C9_C3) - (cell * k15 * C3 * XIAP_p2frag_C3) - (cell * k42 * XIAP_p2frag_C3);
    der(BIR12) = (cell * k11 * C3 * XIAP) + (cell * k12 * C3 * XIAP_C9) + (cell * k14 * C3 * XIAP_p2frag) - (cell * (k10 * C3 * BIR12 - k10r * BIR12_C3)) - (cell * (k30 * BIR12 * SMAC - k30r * BIR12_SMAC)) - (cell * k45 * BIR12);
    der(BIR12_C3) = (cell * (k10 * C3 * BIR12 - k10r * BIR12_C3)) + (cell * k13 * C3 * XIAP_C3) + (cell * k15 * C3 * XIAP_p2frag_C3) + (cell * k16 * C3 * XIAP_C9_C3) - (cell * (k32 * BIR12_C3 * SMAC - k32r * BIR12_SMAC * C3)) - (cell * k49 * BIR12_C3);
    der(BIR3R) = (cell * k11 * C3 * XIAP) + (cell * k13 * C3 * XIAP_C3) + (cell * k24 * BIR3R_p2frag) - (cell * (k23 * C9 * BIR3R - k23r * BIR3R_C9)) - (cell * (k31 * BIR3R * SMAC - k31r * BIR3R_SMAC)) - (cell * k46 * BIR3R);
    der(BIR3R_C9) = (cell * k12 * C3 * XIAP_C9) + (cell * k16 * C3 * XIAP_C9_C3) + (cell * (k23 * C9 * BIR3R - k23r * BIR3R_C9)) - (cell * k20 * C3 * BIR3R_C9) - (cell * (k33 * BIR3R_C9 * SMAC - k33r * BIR3R_SMAC * C9)) - (cell * k50 * BIR3R_C9);
    der(BIR3R_p2frag) = (cell * k14 * C3 * XIAP_p2frag) + (cell * k15 * C3 * XIAP_p2frag_C3) + (cell * k20 * C3 * BIR3R_C9) - (cell * k24 * BIR3R_p2frag) - (cell * k51 * BIR3R_p2frag);
    der(XIAP_2SMAC) = (cell * (k26 * XIAP * SMAC * SMAC - k26r * XIAP_2SMAC)) + (cell * (k27 * XIAP_C9 * SMAC * SMAC - k27r * XIAP_2SMAC * C9)) + (cell * (k28 * XIAP_C3 * SMAC * SMAC - k28r * XIAP_2SMAC * C3)) + (cell * (k29 * XIAP_C9_C3 * SMAC * SMAC - k29r * XIAP_2SMAC * C3 * C9)) - (cell * k17 * C3 * XIAP_2SMAC) - (cell * k44 * XIAP_2SMAC);
    der(BIR12_SMAC) = (cell * k17 * C3 * XIAP_2SMAC) + (cell * (k30 * BIR12 * SMAC - k30r * BIR12_SMAC)) + (cell * (k32 * BIR12_C3 * SMAC - k32r * BIR12_SMAC * C3)) - (cell * k47 * BIR12_SMAC);
    der(BIR3R_SMAC) = (cell * k17 * C3 * XIAP_2SMAC) + (cell * (k31 * BIR3R * SMAC - k31r * BIR3R_SMAC)) + (cell * (k33 * BIR3R_C9 * SMAC - k33r * BIR3R_SMAC * C9)) - (cell * k48 * BIR3R_SMAC);
    der(SMAC) = (cell * SMAC_mito * log(2) / th_SMAC) - (2.0 * cell * (k26 * XIAP * SMAC * SMAC - k26r * XIAP_2SMAC)) - (2.0 * cell * (k27 * XIAP_C9 * SMAC * SMAC - k27r * XIAP_2SMAC * C9)) - (2.0 * cell * (k28 * XIAP_C3 * SMAC * SMAC - k28r * XIAP_2SMAC * C3)) - (2.0 * cell * (k29 * XIAP_C9_C3 * SMAC * SMAC - k29r * XIAP_2SMAC * C3 * C9)) - (cell * (k30 * BIR12 * SMAC - k30r * BIR12_SMAC)) - (cell * (k31 * BIR3R * SMAC - k31r * BIR3R_SMAC)) - (cell * (k32 * BIR12_C3 * SMAC - k32r * BIR12_SMAC * C3)) - (cell * (k33 * BIR3R_C9 * SMAC - k33r * BIR3R_SMAC * C9)) - (2.0 * cell * (k34 * XIAP_p2frag * SMAC * SMAC - k34r * XIAP_p2frag_2SMAC)) - (cell * k52 * SMAC);
    der(APAF1) =  - (cell * apo_lim * log(2) / th_Apop);
    der(XIAP_p2frag_2SMAC) = (cell * (k34 * XIAP_p2frag * SMAC * SMAC - k34r * XIAP_p2frag_2SMAC)) - (cell * k43 * XIAP_p2frag_2SMAC);
    der(Substrate) =  - (cell * k53 * C3 * Substrate);
    der(ClvgPrds) = (cell * k53 * C3 * Substrate) ;
    der(SMAC_mito) =  - (cell * SMAC_mito * log(2) / th_SMAC);
    der(CytC_mit) =  - (cell * CytC_mit * log(2) / th_CytC);
    der(CytC_cell) = (cell * CytC_mit * log(2) / th_CytC) ;
    der(k1)=0.0;
    der(k1r)=0.0;
    der(k2)=0.0;
    der(k2r)=0.0;
    der(k38)=0.0;
    der(k39)=0.0;
    der(k40)=0.0;
    der(k43)=0.0;
    der(k44)=0.0;
    der(k46)=0.0;
    der(k48)=0.0;
    der(k50)=0.0;
    der(k51)=0.0;
    der(XIAP_ini)=0.0;
    der(C9_tot)=0.0;
    der(C3_tot)=0.0;
    der(SMAC_tot)=0.0;
    der(CytC_tot)=0.0;
    der(APAF1_tot)=0.0;

    when Substrate < S_breakdown then
        reinit(k51,0.0058);
        reinit(k50,0.0058);
        reinit(k48,0.0058);
        reinit(k46,0.0058);
        reinit(k44,0.0058);
        reinit(k43,0.0058);
        reinit(k40,0.0058);
        reinit(k39,0.0058);
        reinit(k38,0.0058);
        reinit(k2r,0);
        reinit(k2,0);
        reinit(k1r,0);
        reinit(k1,0);
    end when;

end BIOMD256;
