
model BIOMD399 "Jenkinson2011_EGF_MAPK"

    function pow
        input  Real x;
        input  Real power;
        output Real y;
        algorithm
            y := x^power;
    end pow;
    
    function piecewise
        input Real x;
        input Boolean condition;
        input Real y;
        output Real z;
        algorithm
            z := if condition then x else y;
    end piecewise;



    parameter Real k1 = 0.002372521;
    parameter Real kr1 = 0.1146248;
    parameter Real kr2 = 0.5100538;
    parameter Real k2 = 0.000480156;
    parameter Real k3 = 31.71871;
    parameter Real kr3 = 2.220991;
    parameter Real k4 = 3.047285e-05;
    parameter Real kr4 = 0.1230832;
    parameter Real k6 = 0.0004123214;
    parameter Real kr6 = 0.294324;
    parameter Real k7 = 0.003011324;
    parameter Real k8 = 0.0005174108;
    parameter Real kr8 = 0.9058936;
    parameter Real k10 = 3803.728;
    parameter Real kr10 = 171.6947;
    parameter Real kr11 = 0.5100538;
    parameter Real k11 = 0.000480156;
    parameter Real kr12 = 2.220991;
    parameter Real k12 = 31.71871;
    parameter Real k13 = 0.4545611;
    parameter Real k14 = 6.370566e-07;
    parameter Real kr14 = 196.6479;
    parameter Real k15 = 46468.78;
    parameter Real kr16 = 0.4509308;
    parameter Real k16 = 0.0004021305;
    parameter Real kr17 = 2.524092;
    parameter Real k17 = 0.0003099213;
    parameter Real kr18 = 11.1361;
    parameter Real k18 = 0.004463938;
    parameter Real kr19 = 5.84737e-06;
    parameter Real k19 = 349.772;
    parameter Real kr20 = 12.816;
    parameter Real k20 = 5.17656e-05;
    parameter Real k21 = 0.4722901;
    parameter Real kr21 = 1.714441e-05;
    parameter Real k22 = 0.0001445554;
    parameter Real kr22 = 0.6220457;
    parameter Real k23 = 420.3359;
    parameter Real kr23 = 17.39321;
    parameter Real k24 = 0.007178843;
    parameter Real kr24 = 563.2135;
    parameter Real kr25 = 1.218132;
    parameter Real k25 = 0.0006871213;
    parameter Real k28 = 9.826084e-06;
    parameter Real kr28 = 0.9683624;
    parameter Real k29 = 931.1092;
    parameter Real kr29 = 0.0001096614;
    parameter Real kr32 = 5.54527e-05;
    parameter Real k32 = 14.19908;
    parameter Real k33 = 10.96212;
    parameter Real kr33 = 1.788597e-05;
    parameter Real k34 = 0.2467995;
    parameter Real kr34 = 0.0001283286;
    parameter Real k35 = 1.836058;
    parameter Real kr35 = 0.0003866434;
    parameter Real Vm36 = 615.0325;
    parameter Real Km36 = 771977800000000.0;
    parameter Real k37 = 29.34687;
    parameter Real kr37 = 5.477036e-06;
    parameter Real k40 = 7.409959e-05;
    parameter Real kr40 = 2.748877;
    parameter Real kr41 = 44.60169;
    parameter Real k41 = 0.001522817;
    parameter Real k42 = 0.009688174;
    parameter Real kr42 = 1.870396;
    parameter Real k43 = 51.60945;
    parameter Real kr44 = 0.5985189;
    parameter Real k44 = 0.001406622;
    parameter Real k45 = 6340.081;
    parameter Real k47 = 1632.425;
    parameter Real kr48 = 1489.015;
    parameter Real k48 = 0.0006874119;
    parameter Real k49 = 10.73099;
    parameter Real kr50 = 9.954943;
    parameter Real k50 = 0.0005464454;
    parameter Real k52 = 0.003826571;
    parameter Real kr52 = 19.85279;
    parameter Real k53 = 62181.84;
    parameter Real k55 = 1120.398;
    parameter Real kr56 = 1.229629;
    parameter Real k56 = 0.004700229;
    parameter Real k57 = 19.75184;
    parameter Real kr58 = 0.1138168;
    parameter Real k58 = 0.0001714511;
    parameter Real k59 = 6.409354;
    parameter Real k60 = 0.08693199;
    parameter Real k61 = 0.006499143;
    parameter Real RT = 50000.0;
    parameter Real c1 = 1.0;
    parameter Real c2 = 1.0;
    parameter Real c3 = 1.0;

    Real k5(start=0.0);
    Real C(start=0.0);

    Real x1;
    Real x2;
    Real x3;
    Real x4;
    Real x5;
    Real x6;
    Real x7;
    Real x8;
    Real x9;
    Real x10;
    Real x11;
    Real x12;
    Real x13;
    Real x14;
    Real x15;
    Real x16;
    Real x17;
    Real x18;
    Real x19;
    Real x20;
    Real x21;
    Real x22;
    Real x23;
    Real x24;
    Real x25;
    Real x26;
    Real x27;
    Real x28;
    Real x29;
    Real x30;
    Real x31;
    Real x32;
    Real x33;
    Real x34;
    Real x35;
    Real x36;
    Real x37;
    Real x38;
    Real x39;
    Real x40;
    Real x41;
    Real x42;
    Real x43;
    Real x44;
    Real x45;
    Real x46;
    Real x47;
    Real x48;
    Real x49;
    Real x50;
    Real x51;
    Real x52;
    Real x53;
    Real x54;
    Real x55;
    Real x56;
    Real x57;
    Real x58;
    Real x59;
    Real x60;
    Real x61;
    Real x62;
    Real x63;
    Real x64;
    Real x65;
    Real x66;
    Real x67;
    Real x68;
    Real x69;
    Real x70;
    Real x71;
    Real x72;
    Real x73;
    Real x74;
    Real x75;
    Real x76;
    Real x77;
    Real x78;
    Real x79;
    Real x80;
    Real x81;
    Real x82;
    Real x83;
    Real x84;
    Real x85;
    Real x86;
    Real x87;
    Real x88;
    Real x89;
    Real x90;
    Real x91;
    Real x92;
    Real x93;
    Real x94;
    Real Raf_act;
    Real Ras_GTP;
    Real MEK_PP;
    Real ERK_PP;
    Real SHC_P_t;
    Real EGF_EGFR_act;

initial equation
    x1 = 4962.0;
    x2 = 50000.0;
    x3 = 0.0;
    x4 = 0.0;
    x5 = 0.0;
    x6 = 0.0;
    x7 = 0.0;
    x8 = 0.0;
    x9 = 0.0;
    x10 = 0.0;
    x11 = 0.0;
    x12 = 81000.0;
    x13 = 0.0;
    x14 = 12000.0;
    x15 = 0.0;
    x16 = 0.0;
    x17 = 0.0;
    x18 = 0.0;
    x19 = 0.0;
    x20 = 0.0;
    x21 = 0.0;
    x22 = 11000.0;
    x23 = 0.0;
    x24 = 26300.0;
    x25 = 0.0;
    x26 = 72000.0;
    x27 = 0.0;
    x28 = 0.0;
    x29 = 0.0;
    x30 = 40000.0;
    x31 = 101000.0;
    x32 = 0.0;
    x33 = 0.0;
    x34 = 0.0;
    x35 = 0.0;
    x36 = 0.0;
    x37 = 0.0;
    x38 = 0.0;
    x39 = 0.0;
    x40 = 0.0;
    x41 = 40000.0;
    x42 = 0.0;
    x43 = 0.0;
    x44 = 40000.0;
    x45 = 0.0;
    x46 = 0.0;
    x47 = 22000000.0;
    x48 = 0.0;
    x49 = 0.0;
    x50 = 0.0;
    x51 = 0.0;
    x52 = 0.0;
    x53 = 40000.0;
    x54 = 0.0;
    x55 = 21000000.0;
    x56 = 0.0;
    x57 = 0.0;
    x58 = 0.0;
    x59 = 0.0;
    x60 = 10000000.0;
    x61 = 0.0;
    x62 = 0.0;
    x63 = 0.0;
    x64 = 0.0;
    x65 = 0.0;
    x66 = 0.0;
    x67 = 0.0;
    x68 = 0.0;
    x69 = 0.0;
    x70 = 0.0;
    x71 = 0.0;
    x72 = 0.0;
    x73 = 0.0;
    x74 = 0.0;
    x75 = 0.0;
    x76 = 0.0;
    x77 = 0.0;
    x78 = 0.0;
    x79 = 0.0;
    x80 = 0.0;
    x81 = 0.0;
    x82 = 0.0;
    x83 = 0.0;
    x84 = 0.0;
    x85 = 0.0;
    x86 = 0.0;
    x87 = 0.0;
    x88 = 0.0;
    x89 = 0.0;
    x90 = 0.0;
    x91 = 0.0;
    x92 = 0.0;
    x93 = 0.0;
    x94 = 0.0;

equation
    Ras_GTP = x42 + x28 + x70 + x69;
    MEK_PP = x51 + x77;
    ERK_PP = x59 + x83;
    Raf_act = x45 + x46 + x48 + x50 + x72 + x73 + x74 + x76;
    SHC_P_t = x33 + x34 + x35 + x36 + x37 + x38 + x39 + x40 + x91 + x92 + x93 + x94 + x64 + x65 + x66 + x67 + x68;
    EGF_EGFR_act = x5 + x7 + x15 + x23 + x25 + x27 + x29 + x32 + x33 + x34 + x35 + x36 + x37 + x88 + x89 + x90 + x91 + x92 + x93 + x94 + x8 + x11 + x17 + x18 + x19 + x20 + x21 + x63 + x64 + x65 + x66 + x67 + x68;
    C = RT / (kr1 / (k1 * x1) + 1);
    k5 = piecewise(1.55, lt(C, 3100), 0.2, gt(C, 100000), C * -1.35e-5 + 1.55);
    der(x1) = 0.0;
    der(x2) = (k13) - (k1 * x1 * x2 - kr1 * x3) - (k6 * x2 - kr6 * x6);
    der(x3) = (k1 * x1 * x2 - kr1 * x3) - (2.0 * k2 * x3 * x3 - kr2 * x4);
    der(x4) = (k2 * x3 * x3 - kr2 * x4) - (k3 * x4 - kr3 * x5);
    der(x5) = (k3 * x4 - kr3 * x5) - (k7 * x5) - (k8 * x5 * x14 - kr8 * x15);
    der(x6) = (k6 * x2 - kr6 * x6) - (k10 * x6 * x16 - kr10 * x10) - (k60 * x6);
    der(x7) = (k4 * x23 * x12 - kr4 * x7) - (k5 * x7);
    der(x8) = (k7 * x5) + (k3 * x11 - kr3 * x8) - (k14 * x8 * x14 - kr14 * x17) - (k60 * x8);
    der(x9) = (k5 * x7) + (k5 * x88) + (k5 * x89) + (k5 * x90) + (k5 * x91) + (k5 * x92) + (k5 * x93) + (k5 * x94) - (k15 * x9);
    der(x10) = (k10 * x6 * x16 - kr10 * x10) - (2.0 * k2 * x10 * x10 - kr2 * x11);
    der(x11) = (k2 * x10 * x10 - kr2 * x11) - (k3 * x11 - kr3 * x8);
    der(x12) = (k15 * x9) - (k4 * x23 * x12 - kr4 * x7) - (k4 * x25 * x12 - kr4 * x88) - (k4 * x27 * x12 - kr4 * x89) - (k4 * x29 * x12 - kr4 * x90) - (k4 * x34 * x12 - kr4 * x91) - (k4 * x35 * x12 - kr4 * x92) - (k4 * x36 * x12 - kr4 * x93) - (k4 * x37 * x12 - kr4 * x94);
    der(x13) = (k61 * x16) ;
    der(x14) =  - (k8 * x5 * x14 - kr8 * x15) - (k14 * x8 * x14 - kr14 * x17);
    der(x15) = (k8 * x5 * x14 - kr8 * x15) + (k32 * x35 - kr32 * x15 * x38) + (k34 * x25 - kr34 * x15 * x30) + (k37 * x33 - kr37 * x15 * x40) + (k37 * x34 - kr37 * x15 * x39) - (k16 * x22 * x15 - kr16 * x23) - (k22 * x31 * x15 - kr22 * x32) - (k6 * x15 - kr6 * x17);
    der(x16) =  - (k10 * x6 * x16 - kr10 * x10) - (k61 * x16);
    der(x17) = (k14 * x8 * x14 - kr14 * x17) + (k32 * x66 - kr32 * x17 * x38) + (k34 * x19 - kr34 * x17 * x30) + (k37 * x64 - kr37 * x17 * x40) + (k37 * x65 - kr37 * x17 * x39) + (k6 * x15 - kr6 * x17) - (k16 * x17 * x22 - kr16 * x18) - (k22 * x31 * x17 - kr22 * x63);
    der(x18) = (k5 * x7) + (k7 * x23) + (k16 * x17 * x22 - kr16 * x18) - (k17 * x24 * x18 - kr17 * x19);
    der(x19) = (k17 * x24 * x18 - kr17 * x19) + (k19 * x20 - kr19 * x69 * x19) + (k21 * x21 - kr21 * x19 * x26) + (k6 * x25 - kr6 * x19) + (k5 * x88) - (k18 * x26 * x19 - kr18 * x20) - (k20 * x71 * x19 - kr20 * x21) - (k34 * x19 - kr34 * x17 * x30);
    der(x20) = (k18 * x26 * x19 - kr18 * x20) + (k6 * x27 - kr6 * x20) + (k5 * x89) - (k19 * x20 - kr19 * x69 * x19);
    der(x21) = (k20 * x71 * x19 - kr20 * x21) + (k6 * x29 - kr6 * x21) + (k5 * x90) - (k21 * x21 - kr21 * x19 * x26);
    der(x22) = (k35 * x30 - kr35 * x24 * x22) - (k16 * x22 * x15 - kr16 * x23) - (k24 * x22 * x33 - kr24 * x34) - (k24 * x22 * x40 - kr24 * x39) - (k16 * x17 * x22 - kr16 * x18) - (k24 * x22 * x64 - kr24 * x65);
    der(x23) = (k16 * x22 * x15 - kr16 * x23) - (k4 * x23 * x12 - kr4 * x7) - (k7 * x23) - (k17 * x24 * x23 - kr17 * x25);
    der(x24) = (k35 * x30 - kr35 * x24 * x22) - (k17 * x24 * x23 - kr17 * x25) - (k25 * x24 * x34 - kr25 * x35) - (k40 * x24 * x39 - kr40 * x38) - (k17 * x24 * x18 - kr17 * x19) - (k25 * x24 * x65 - kr25 * x66);
    der(x25) = (k17 * x24 * x23 - kr17 * x25) + (k19 * x27 - kr19 * x28 * x25) + (k21 * x29 - kr21 * x25 * x26) - (k18 * x26 * x25 - kr18 * x27) - (k20 * x25 * x43 - kr20 * x29) - (k34 * x25 - kr34 * x15 * x30) - (k6 * x25 - kr6 * x19) - (k4 * x25 * x12 - kr4 * x88);
    der(x26) = (k21 * x29 - kr21 * x25 * x26) + (k21 * x37 - kr21 * x35 * x26) + (k21 * x21 - kr21 * x19 * x26) + (k21 * x68 - kr21 * x66 * x26) - (k18 * x26 * x25 - kr18 * x27) - (k18 * x26 * x35 - kr18 * x36) - (k18 * x26 * x19 - kr18 * x20) - (k18 * x26 * x66 - kr18 * x67);
    der(x27) = (k18 * x26 * x25 - kr18 * x27) - (k19 * x27 - kr19 * x28 * x25) - (k6 * x27 - kr6 * x20) - (k4 * x27 * x12 - kr4 * x89);
    der(x28) = (k19 * x27 - kr19 * x28 * x25) + (k19 * x36 - kr19 * x35 * x28) - (k28 * x28 * x41 - kr28 * x42);
    der(x29) = (k20 * x25 * x43 - kr20 * x29) - (k21 * x29 - kr21 * x25 * x26) - (k6 * x29 - kr6 * x21) - (k4 * x29 * x12 - kr4 * x90);
    der(x30) = (k33 * x38 - kr33 * x40 * x30) + (k34 * x25 - kr34 * x15 * x30) + (k34 * x19 - kr34 * x17 * x30) - (k35 * x30 - kr35 * x24 * x22) - (k41 * x30 * x33 - kr41 * x35) - (k41 * x30 * x64 - kr41 * x66);
    der(x31) = (Vm36 * x40 / (Km36 + x40)) - (k22 * x31 * x15 - kr22 * x32) - (k22 * x31 * x17 - kr22 * x63);
    der(x32) = (k22 * x31 * x15 - kr22 * x32) - (k23 * x32 - kr23 * x33) - (k6 * x32 - kr6 * x63);
    der(x33) = (k23 * x32 - kr23 * x33) - (k24 * x22 * x33 - kr24 * x34) - (k37 * x33 - kr37 * x15 * x40) - (k41 * x30 * x33 - kr41 * x35) - (k6 * x33 - kr6 * x64);
    der(x34) = (k24 * x22 * x33 - kr24 * x34) - (k25 * x24 * x34 - kr25 * x35) - (k37 * x34 - kr37 * x15 * x39) - (k6 * x34 - kr6 * x65) - (k4 * x34 * x12 - kr4 * x91);
    der(x35) = (k25 * x24 * x34 - kr25 * x35) + (k19 * x36 - kr19 * x35 * x28) + (k21 * x37 - kr21 * x35 * x26) + (k41 * x30 * x33 - kr41 * x35) - (k18 * x26 * x35 - kr18 * x36) - (k20 * x35 * x43 - kr20 * x37) - (k32 * x35 - kr32 * x15 * x38) - (k6 * x35 - kr6 * x66) - (k4 * x35 * x12 - kr4 * x92);
    der(x36) = (k18 * x26 * x35 - kr18 * x36) - (k19 * x36 - kr19 * x35 * x28) - (k6 * x36 - kr6 * x67) - (k4 * x36 * x12 - kr4 * x93);
    der(x37) = (k20 * x35 * x43 - kr20 * x37) - (k21 * x37 - kr21 * x35 * x26) - (k6 * x37 - kr6 * x68) - (k4 * x37 * x12 - kr4 * x94);
    der(x38) = (k32 * x35 - kr32 * x15 * x38) + (k40 * x24 * x39 - kr40 * x38) + (k32 * x66 - kr32 * x17 * x38) - (k33 * x38 - kr33 * x40 * x30);
    der(x39) = (k24 * x22 * x40 - kr24 * x39) + (k37 * x34 - kr37 * x15 * x39) + (k37 * x65 - kr37 * x17 * x39) - (k40 * x24 * x39 - kr40 * x38);
    der(x40) = (k33 * x38 - kr33 * x40 * x30) + (k37 * x33 - kr37 * x15 * x40) + (k37 * x64 - kr37 * x17 * x40) - (Vm36 * x40 / (Km36 + x40)) - (k24 * x22 * x40 - kr24 * x39);
    der(x41) = (k43 * x46) + (k43 * x73) - (k28 * x28 * x41 - kr28 * x42) - (k28 * x69 * x41 - kr28 * x70);
    der(x42) = (k28 * x28 * x41 - kr28 * x42) - (k29 * x42 - kr29 * x43 * x45);
    der(x43) = (k29 * x42 - kr29 * x43 * x45) - (k20 * x25 * x43 - kr20 * x29) - (k20 * x35 * x43 - kr20 * x37);
    der(x44) = (k43 * x46) + (k43 * x73) - (k42 * x44 * x45 - kr42 * x46) - (k42 * x44 * x72 - kr42 * x73);
    der(x45) = (k29 * x42 - kr29 * x43 * x45) + (k45 * x48) + (k47 * x50) - (k42 * x44 * x45 - kr42 * x46) - (k44 * x47 * x45 - kr44 * x48) - (k44 * x49 * x45 - kr44 * x50);
    der(x46) = (k42 * x44 * x45 - kr42 * x46) - (k43 * x46);
    der(x47) = (k49 * x54) + (k49 * x79) - (k44 * x47 * x45 - kr44 * x48) - (k44 * x47 * x72 - kr44 * x74);
    der(x48) = (k44 * x47 * x45 - kr44 * x48) - (k45 * x48);
    der(x49) = (k45 * x48) + (k49 * x52) - (k44 * x49 * x45 - kr44 * x50) - (k50 * x53 * x49 - kr50 * x54);
    der(x50) = (k44 * x49 * x45 - kr44 * x50) - (k47 * x50);
    der(x51) = (k47 * x50) + (k53 * x56) + (k55 * x58) - (k48 * x51 * x53 - kr48 * x52) - (k52 * x55 * x51 - kr52 * x56) - (k52 * x51 * x57 - kr52 * x58);
    der(x52) = (k48 * x51 * x53 - kr48 * x52) - (k49 * x52);
    der(x53) = (k49 * x52) + (k49 * x54) + (k49 * x78) + (k49 * x79) - (k48 * x51 * x53 - kr48 * x52) - (k50 * x53 * x49 - kr50 * x54) - (k48 * x77 * x53 - kr48 * x78) - (k50 * x53 * x75 - kr50 * x79);
    der(x54) = (k50 * x53 * x49 - kr50 * x54) - (k49 * x54);
    der(x55) = (k59 * x62) + (k59 * x85) - (k52 * x55 * x51 - kr52 * x56) - (k52 * x55 * x77 - kr52 * x80);
    der(x56) = (k52 * x55 * x51 - kr52 * x56) - (k53 * x56);
    der(x57) = (k53 * x56) + (k57 * x61) - (k52 * x51 * x57 - kr52 * x58) - (k58 * x60 * x57 - kr58 * x62);
    der(x58) = (k52 * x51 * x57 - kr52 * x58) - (k55 * x58);
    der(x59) = (k55 * x58) - (k56 * x59 * x60 - kr56 * x61);
    der(x60) = (k57 * x61) + (k59 * x62) + (k57 * x84) + (k59 * x85) - (k56 * x59 * x60 - kr56 * x61) - (k58 * x60 * x57 - kr58 * x62) - (k56 * x83 * x60 - kr56 * x84) - (k58 * x60 * x81 - kr58 * x85);
    der(x61) = (k56 * x59 * x60 - kr56 * x61) - (k57 * x61);
    der(x62) = (k58 * x60 * x57 - kr58 * x62) - (k59 * x62);
    der(x63) = (k22 * x31 * x17 - kr22 * x63) + (k6 * x32 - kr6 * x63) - (k23 * x63 - kr23 * x64);
    der(x64) = (k23 * x63 - kr23 * x64) + (k6 * x33 - kr6 * x64) - (k24 * x22 * x64 - kr24 * x65) - (k37 * x64 - kr37 * x17 * x40) - (k41 * x30 * x64 - kr41 * x66);
    der(x65) = (k24 * x22 * x64 - kr24 * x65) + (k6 * x34 - kr6 * x65) + (k5 * x91) - (k25 * x24 * x65 - kr25 * x66) - (k37 * x65 - kr37 * x17 * x39);
    der(x66) = (k25 * x24 * x65 - kr25 * x66) + (k19 * x67 - kr19 * x66 * x69) + (k21 * x68 - kr21 * x66 * x26) + (k41 * x30 * x64 - kr41 * x66) + (k6 * x35 - kr6 * x66) + (k5 * x92) - (k18 * x26 * x66 - kr18 * x67) - (k20 * x71 * x66 - kr20 * x68) - (k32 * x66 - kr32 * x17 * x38);
    der(x67) = (k18 * x26 * x66 - kr18 * x67) + (k6 * x36 - kr6 * x67) + (k5 * x93) - (k19 * x67 - kr19 * x66 * x69);
    der(x68) = (k20 * x71 * x66 - kr20 * x68) + (k6 * x37 - kr6 * x68) + (k5 * x94) - (k21 * x68 - kr21 * x66 * x26);
    der(x69) = (k19 * x20 - kr19 * x69 * x19) + (k19 * x67 - kr19 * x66 * x69) - (k28 * x69 * x41 - kr28 * x70);
    der(x70) = (k28 * x69 * x41 - kr28 * x70) - (k29 * x70 - kr29 * x71 * x72);
    der(x71) = (k29 * x70 - kr29 * x71 * x72) - (k20 * x71 * x19 - kr20 * x21) - (k20 * x71 * x66 - kr20 * x68);
    der(x72) = (k29 * x70 - kr29 * x71 * x72) + (k45 * x74) + (k47 * x76) - (k42 * x44 * x72 - kr42 * x73) - (k44 * x47 * x72 - kr44 * x74) - (k44 * x72 * x75 - kr44 * x76);
    der(x73) = (k42 * x44 * x72 - kr42 * x73) - (k43 * x73);
    der(x74) = (k44 * x47 * x72 - kr44 * x74) - (k45 * x74);
    der(x75) = (k45 * x74) + (k49 * x78) - (k44 * x72 * x75 - kr44 * x76) - (k50 * x53 * x75 - kr50 * x79);
    der(x76) = (k44 * x72 * x75 - kr44 * x76) - (k47 * x76);
    der(x77) = (k47 * x76) + (k53 * x80) + (k55 * x82) - (k48 * x77 * x53 - kr48 * x78) - (k52 * x55 * x77 - kr52 * x80) - (k52 * x77 * x81 - kr52 * x82);
    der(x78) = (k48 * x77 * x53 - kr48 * x78) - (k49 * x78);
    der(x79) = (k50 * x53 * x75 - kr50 * x79) - (k49 * x79);
    der(x80) = (k52 * x55 * x77 - kr52 * x80) - (k53 * x80);
    der(x81) = (k53 * x80) + (k57 * x84) - (k52 * x77 * x81 - kr52 * x82) - (k58 * x60 * x81 - kr58 * x85);
    der(x82) = (k52 * x77 * x81 - kr52 * x82) - (k55 * x82);
    der(x83) = (k55 * x82) - (k56 * x83 * x60 - kr56 * x84);
    der(x84) = (k56 * x83 * x60 - kr56 * x84) - (k57 * x84);
    der(x85) = (k58 * x60 * x81 - kr58 * x85) - (k59 * x85);
    der(x86) = (k60 * x6) ;
    der(x87) = (k60 * x8) ;
    der(x88) = (k4 * x25 * x12 - kr4 * x88) - (k5 * x88);
    der(x89) = (k4 * x27 * x12 - kr4 * x89) - (k5 * x89);
    der(x90) = (k4 * x29 * x12 - kr4 * x90) - (k5 * x90);
    der(x91) = (k4 * x34 * x12 - kr4 * x91) - (k5 * x91);
    der(x92) = (k4 * x35 * x12 - kr4 * x92) - (k5 * x92);
    der(x93) = (k4 * x36 * x12 - kr4 * x93) - (k5 * x93);
    der(x94) = (k4 * x37 * x12 - kr4 * x94) - (k5 * x94);




end BIOMD399;
