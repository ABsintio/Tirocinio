
model BIOMD471 "Smallbone2013 - Yeast metabolic model with linlog rate law"

    function pow
        input  Real x;
        input  Real power;
        output Real y;
        algorithm
            y := x^power;
    end pow;
    
    function piecewise
        input Real x;
        input Boolean condition;
        input Real y;
        output Real z;
        algorithm
            z := if condition then x else y;
    end piecewise;


    function max
        	input Real x;
	input Real y;
        output Real y;
    algorithm
        y :=  (x + y + abs(x - y)) / 2;
    end max;


    parameter Real zero_flux = 0.0;
    parameter Real ic0002 = 0.1;
    parameter Real ic0004 = 0.1;
    parameter Real ic0008 = 0.1;
    parameter Real ic0009 = 0.1;
    parameter Real ic0010 = 0.1;
    parameter Real ic0015 = 0.1;
    parameter Real ic0016 = 0.1;
    parameter Real ic0018 = 0.1;
    parameter Real ic0019 = 0.1;
    parameter Real ic0028 = 0.1;
    parameter Real ic0037 = 0.1;
    parameter Real ic0039 = 0.1;
    parameter Real ic0056 = 0.1;
    parameter Real ic0061 = 0.1;
    parameter Real ic0066 = 0.1;
    parameter Real ic0075 = 0.1;
    parameter Real ic0076 = 0.1;
    parameter Real ic0077 = 0.1;
    parameter Real ic0078 = 0.1;
    parameter Real ic0082 = 0.1;
    parameter Real ic0086 = 0.1;
    parameter Real ic0089 = 0.1;
    parameter Real ic0118 = 0.1;
    parameter Real ic0120 = 0.1;
    parameter Real ic0122 = 0.1;
    parameter Real ic0126 = 0.1;
    parameter Real ic0141 = 0.1;
    parameter Real ic0142 = 0.1;
    parameter Real ic0145 = 0.1;
    parameter Real ic0146 = 0.1;
    parameter Real ic0158 = 0.1;
    parameter Real ic0162 = 0.1;
    parameter Real ic0165 = 0.1;
    parameter Real ic0176 = 0.1;
    parameter Real ic0178 = 0.1;
    parameter Real ic0180 = 0.1;
    parameter Real ic0188 = 0.1;
    parameter Real ic0190 = 0.1;
    parameter Real ic0201 = 0.1;
    parameter Real ic0204 = 0.1;
    parameter Real ic0207 = 0.1;
    parameter Real ic0209 = 0.1;
    parameter Real ic0210 = 0.1;
    parameter Real ic0211 = 0.1;
    parameter Real ic0218 = 0.1;
    parameter Real ic0231 = 0.1;
    parameter Real ic0232 = 0.1;
    parameter Real ic0258 = 0.1;
    parameter Real ic0259 = 0.1;
    parameter Real ic0260 = 0.1;
    parameter Real ic0261 = 0.1;
    parameter Real ic0262 = 0.1;
    parameter Real ic0291 = 0.1;
    parameter Real ic0295 = 0.1;
    parameter Real ic0296 = 0.1;
    parameter Real ic0297 = 0.1;
    parameter Real ic0298 = 0.1;
    parameter Real ic0299 = 0.1;
    parameter Real ic0300 = 0.1;
    parameter Real ic0301 = 0.1;
    parameter Real ic0302 = 0.1;
    parameter Real ic0304 = 0.1;
    parameter Real ic0306 = 0.1;
    parameter Real ic0312 = 0.1;
    parameter Real ic0313 = 0.1;
    parameter Real ic0314 = 0.1;
    parameter Real ic0322 = 0.1;
    parameter Real ic0324 = 0.1;
    parameter Real ic0325 = 0.1;
    parameter Real ic0326 = 0.1;
    parameter Real ic0327 = 0.1;
    parameter Real ic0328 = 0.1;
    parameter Real ic0349 = 0.1;
    parameter Real ic0362 = 0.1;
    parameter Real ic0367 = 0.1;
    parameter Real ic0373 = 0.1;
    parameter Real ic0380 = 0.1;
    parameter Real ic0386 = 0.1;
    parameter Real ic0390 = 0.1;
    parameter Real ic0393 = 0.1;
    parameter Real ic0394 = 0.1;
    parameter Real ic0403 = 0.1;
    parameter Real ic0404 = 0.1;
    parameter Real ic0409 = 0.1;
    parameter Real ic0419 = 0.1;
    parameter Real ic0420 = 1.0;
    parameter Real ic0423 = 0.1;
    parameter Real ic0427 = 0.1;
    parameter Real ic0428 = 0.1;
    parameter Real ic0430 = 0.1;
    parameter Real ic0432 = 0.1;
    parameter Real ic0434 = 0.1;
    parameter Real ic0445 = 0.1;
    parameter Real ic0454 = 0.1;
    parameter Real ic0455 = 0.1;
    parameter Real ic0456 = 0.1;
    parameter Real ic0467 = 0.1;
    parameter Real ic0471 = 0.1;
    parameter Real ic0475 = 0.1;
    parameter Real ic0481 = 0.1;
    parameter Real ic0493 = 0.1;
    parameter Real ic0499 = 0.1;
    parameter Real ic0515 = 0.1;
    parameter Real ic0516 = 0.1;
    parameter Real ic0522 = 0.1;
    parameter Real ic0526 = 0.1;
    parameter Real ic0529 = 0.1;
    parameter Real ic0539 = 0.1;
    parameter Real ic0542 = 0.1;
    parameter Real ic0550 = 0.1;
    parameter Real ic0551 = 0.1;
    parameter Real ic0555 = 0.1;
    parameter Real ic0557 = 0.1;
    parameter Real ic0563 = 0.1;
    parameter Real ic0565 = 1.0;
    parameter Real ic0567 = 0.1;
    parameter Real ic0568 = 0.1;
    parameter Real ic0573 = 0.1;
    parameter Real ic0574 = 0.1;
    parameter Real ic0577 = 0.1;
    parameter Real ic0581 = 0.1;
    parameter Real ic0582 = 0.1;
    parameter Real ic0584 = 0.1;
    parameter Real ic0586 = 0.1;
    parameter Real ic0587 = 0.1;
    parameter Real ic0589 = 0.1;
    parameter Real ic0595 = 0.1;
    parameter Real ic0602 = 0.1;
    parameter Real ic0613 = 0.1;
    parameter Real ic0615 = 0.1;
    parameter Real ic0619 = 0.1;
    parameter Real ic0625 = 0.1;
    parameter Real ic0629 = 0.1;
    parameter Real ic0633 = 0.1;
    parameter Real ic0644 = 0.1;
    parameter Real ic0645 = 0.1;
    parameter Real ic0649 = 0.1;
    parameter Real ic0654 = 0.1;
    parameter Real ic0656 = 0.1;
    parameter Real ic0657 = 0.1;
    parameter Real ic0662 = 0.1;
    parameter Real ic0664 = 0.1;
    parameter Real ic0666 = 0.1;
    parameter Real ic0672 = 0.1;
    parameter Real ic0700 = 0.1;
    parameter Real ic0709 = 0.1;
    parameter Real ic0710 = 0.1;
    parameter Real ic0722 = 0.1;
    parameter Real ic0725 = 0.1;
    parameter Real ic0739 = 0.1;
    parameter Real ic0743 = 0.1;
    parameter Real ic0745 = 0.1;
    parameter Real ic0747 = 0.1;
    parameter Real ic0748 = 0.1;
    parameter Real ic0750 = 0.1;
    parameter Real ic0754 = 0.1;
    parameter Real ic0757 = 0.1;
    parameter Real ic0764 = 0.1;
    parameter Real ic0767 = 0.1;
    parameter Real ic0773 = 0.1;
    parameter Real ic0782 = 0.1;
    parameter Real ic0785 = 0.1;
    parameter Real ic0832 = 0.1;
    parameter Real ic0835 = 0.1;
    parameter Real ic0836 = 0.1;
    parameter Real ic0837 = 0.1;
    parameter Real ic0841 = 0.1;
    parameter Real ic0847 = 0.1;
    parameter Real ic0849 = 0.1;
    parameter Real ic0918 = 0.1;
    parameter Real ic0940 = 0.1;
    parameter Real ic0943 = 0.1;
    parameter Real ic0951 = 0.1;
    parameter Real ic0953 = 0.1;
    parameter Real ic0955 = 0.1;
    parameter Real ic0959 = 0.1;
    parameter Real ic0965 = 0.1;
    parameter Real ic0969 = 0.1;
    parameter Real ic0973 = 0.1;
    parameter Real ic0978 = 0.1;
    parameter Real ic0979 = 0.1;
    parameter Real ic0980 = 0.1;
    parameter Real ic0981 = 0.1;
    parameter Real ic0991 = 0.1;
    parameter Real ic0999 = 0.1;
    parameter Real ic1003 = 0.1;
    parameter Real ic1006 = 0.1;
    parameter Real ic1010 = 0.1;
    parameter Real ic1011 = 0.1;
    parameter Real ic1012 = 0.1;
    parameter Real ic1014 = 0.1;
    parameter Real ic1016 = 0.1;
    parameter Real ic1021 = 0.1;
    parameter Real ic1025 = 0.1;
    parameter Real ic1029 = 0.1;
    parameter Real ic1032 = 0.1;
    parameter Real ic1035 = 0.1;
    parameter Real ic1038 = 0.1;
    parameter Real ic1039 = 0.1;
    parameter Real ic1045 = 0.1;
    parameter Real ic1048 = 0.1;
    parameter Real ic1051 = 0.1;
    parameter Real ic1056 = 0.1;
    parameter Real ic1059 = 0.1;
    parameter Real ic1065 = 0.1;
    parameter Real ic1073 = 0.1;
    parameter Real ic1077 = 0.1;
    parameter Real ic1084 = 0.1;
    parameter Real ic1099 = 0.1;
    parameter Real ic1101 = 0.1;
    parameter Real ic1107 = 0.1;
    parameter Real ic1148 = 0.1;
    parameter Real ic1153 = 0.1;
    parameter Real ic1161 = 0.1;
    parameter Real ic1176 = 0.1;
    parameter Real ic1182 = 0.1;
    parameter Real ic1187 = 0.1;
    parameter Real ic1191 = 0.1;
    parameter Real ic1192 = 0.1;
    parameter Real ic1194 = 0.1;
    parameter Real ic1198 = 0.1;
    parameter Real ic1203 = 0.1;
    parameter Real ic1207 = 0.1;
    parameter Real ic1212 = 0.1;
    parameter Real ic1233 = 0.1;
    parameter Real ic1238 = 0.1;
    parameter Real ic1255 = 0.1;
    parameter Real ic1266 = 0.1;
    parameter Real ic1269 = 0.1;
    parameter Real ic1270 = 0.1;
    parameter Real ic1271 = 0.1;
    parameter Real ic1275 = 0.1;
    parameter Real ic1277 = 1.0;
    parameter Real ic1286 = 0.1;
    parameter Real ic1302 = 0.1;
    parameter Real ic1314 = 0.1;
    parameter Real ic1322 = 0.1;
    parameter Real ic1324 = 1.0;
    parameter Real ic1331 = 0.1;
    parameter Real ic1337 = 0.1;
    parameter Real ic1342 = 0.1;
    parameter Real ic1343 = 0.1;
    parameter Real ic1346 = 0.1;
    parameter Real ic1351 = 0.1;
    parameter Real ic1360 = 0.1;
    parameter Real ic1364 = 0.1;
    parameter Real ic1365 = 0.1;
    parameter Real ic1366 = 0.1;
    parameter Real ic1376 = 0.1;
    parameter Real ic1377 = 0.1;
    parameter Real ic1379 = 0.1;
    parameter Real ic1386 = 0.1;
    parameter Real ic1399 = 0.1;
    parameter Real ic1405 = 0.1;
    parameter Real ic1408 = 0.1;
    parameter Real ic1413 = 0.1;
    parameter Real ic1416 = 0.1;
    parameter Real ic1427 = 0.1;
    parameter Real ic1428 = 0.1;
    parameter Real ic1429 = 0.1;
    parameter Real ic1445 = 0.1;
    parameter Real ic1447 = 0.1;
    parameter Real ic1449 = 0.1;
    parameter Real ic1454 = 0.1;
    parameter Real ic1467 = 0.1;
    parameter Real ic1468 = 1.0;
    parameter Real ic1469 = 0.1;
    parameter Real ic1487 = 0.1;
    parameter Real ic1491 = 0.1;
    parameter Real ic1520 = 0.1;
    parameter Real ic1524 = 0.1;
    parameter Real ic1527 = 0.1;
    parameter Real ic1533 = 0.1;
    parameter Real ic1535 = 0.1;
    parameter Real ic1537 = 0.1;
    parameter Real ic1538 = 0.1;
    parameter Real ic1543 = 0.1;
    parameter Real ic1545 = 0.1;
    parameter Real ic1559 = 0.1;
    parameter Real ic1561 = 0.1;
    parameter Real ic1565 = 0.1;
    parameter Real ic1569 = 0.1;
    parameter Real ic1576 = 0.1;
    parameter Real ic1577 = 0.1;
    parameter Real ic1578 = 0.1;
    parameter Real ic1579 = 0.1;
    parameter Real ic1582 = 0.1;
    parameter Real ic1583 = 0.1;
    parameter Real ic1585 = 0.1;
    parameter Real ic1587 = 0.1;
    parameter Real ic1589 = 0.1;
    parameter Real ic1590 = 0.1;
    parameter Real ic1591 = 0.1;
    parameter Real ic1593 = 0.1;
    parameter Real ic1594 = 0.1;
    parameter Real ic1596 = 0.1;
    parameter Real ic1598 = 0.1;
    parameter Real ic1600 = 0.1;
    parameter Real ic1602 = 0.1;
    parameter Real ic1604 = 0.1;
    parameter Real ic1606 = 0.1;
    parameter Real ic1607 = 0.1;
    parameter Real ic1608 = 0.1;
    parameter Real ic1610 = 0.1;
    parameter Real ic1612 = 0.1;
    parameter Real ic1614 = 0.1;
    parameter Real ic1616 = 0.1;
    parameter Real ic1620 = 0.1;
    parameter Real FLUX_VALUE_0 = 0.0430685067991607;
    parameter Real v0_0 = 0.0430685067991607;
    parameter Real ep1543_0 = 1.0;
    parameter Real ep0002_0 = -1.0;
    parameter Real ep1538_0 = -1.0;
    parameter Real FLUX_VALUE_1 = 0.0430685067991607;
    parameter Real v0_1 = 0.0430685067991607;
    parameter Real ep1543_1 = 1.0;
    parameter Real ep0004_1 = -1.0;
    parameter Real ep1538_1 = -1.0;
    parameter Real FLUX_VALUE_2 = 0.00251625132250899;
    parameter Real v0_2 = 0.00251625132250899;
    parameter Real ep0077_2 = 1.0;
    parameter Real ep0312_2 = -1.0;
    parameter Real FLUX_VALUE_3 = 0.000240277332169094;
    parameter Real v0_3 = 0.000240277332169094;
    parameter Real ep0082_3 = 1.0;
    parameter Real ep0380_3 = 1.0;
    parameter Real ep0529_3 = -1.0;
    parameter Real ep1331_3 = -1.0;
    parameter Real FLUX_VALUE_4 = 0.00625077817220527;
    parameter Real v0_4 = 0.00625077817220527;
    parameter Real ep0991_4 = 1.0;
    parameter Real ep1203_4 = 1.0;
    parameter Real ep0118_4 = -1.0;
    parameter Real ep1198_4 = -1.0;
    parameter Real FLUX_VALUE_5 = 3.75729835487922e-05;
    parameter Real v0_5 = 3.75729835487922e-05;
    parameter Real ep0142_5 = 1.0;
    parameter Real ep0313_5 = -1.0;
    parameter Real ep0419_5 = -1.0;
    parameter Real FLUX_VALUE_6 = 3.75729835487922e-05;
    parameter Real v0_6 = 3.75729835487922e-05;
    parameter Real ep0141_6 = 1.0;
    parameter Real ep1212_6 = 1.0;
    parameter Real ep0142_6 = -1.0;
    parameter Real ep1207_6 = -1.0;
    parameter Real FLUX_VALUE_7 = 0.00965062714996943;
    parameter Real v0_7 = 0.00965062714996943;
    parameter Real ep0178_7 = 1.0;
    parameter Real ep1399_7 = 1.0;
    parameter Real ep0039_7 = -1.0;
    parameter Real ep0456_7 = -1.0;
    parameter Real FLUX_VALUE_8 = 0.01086200797138;
    parameter Real v0_8 = 0.01086200797138;
    parameter Real ep0176_8 = 1.0;
    parameter Real ep0991_8 = 1.0;
    parameter Real ep0180_8 = -1.0;
    parameter Real ep0953_8 = -1.0;
    parameter Real FLUX_VALUE_9 = 0.0100308480322675;
    parameter Real v0_9 = 0.0100308480322675;
    parameter Real ep0551_9 = 1.0;
    parameter Real ep1360_9 = 1.0;
    parameter Real ep0349_9 = -1.0;
    parameter Real ep1322_9 = -1.0;
    parameter Real FLUX_VALUE_10 = 0.0112491235594474;
    parameter Real v0_10 = 0.0112491235594474;
    parameter Real ep0162_10 = 1.0;
    parameter Real ep0165_10 = -1.0;
    parameter Real FLUX_VALUE_11 = 0.0112491235594486;
    parameter Real v0_11 = 0.0112491235594486;
    parameter Real ep0232_11 = 1.0;
    parameter Real ep0373_11 = 1.0;
    parameter Real ep0162_11 = -1.0;
    parameter Real ep0529_11 = -1.0;
    parameter Real FLUX_VALUE_12 = 0.01086200797138;
    parameter Real v0_12 = 0.01086200797138;
    parameter Real ep0835_12 = 1.0;
    parameter Real ep0454_12 = -1.0;
    parameter Real FLUX_VALUE_13 = 0.0112491235594566;
    parameter Real v0_13 = 0.0112491235594566;
    parameter Real ep0010_13 = 1.0;
    parameter Real ep0291_13 = -1.0;
    parameter Real ep0456_13 = -1.0;
    parameter Real FLUX_VALUE_14 = 0.00217467874479323;
    parameter Real v0_14 = 0.00217467874479323;
    parameter Real ep0390_14 = 1.0;
    parameter Real ep0423_14 = -1.0;
    parameter Real ep1322_14 = -1.0;
    parameter Real FLUX_VALUE_15 = 7.51459670975844e-05;
    parameter Real v0_15 = 7.51459670975844e-05;
    parameter Real ep0577_15 = 1.0;
    parameter Real ep0158_15 = -1.0;
    parameter Real ep0722_15 = -1.0;
    parameter Real FLUX_VALUE_16 = 0.0100308480322675;
    parameter Real v0_16 = 0.0100308480322675;
    parameter Real ep0210_16 = 1.0;
    parameter Real ep0211_16 = -1.0;
    parameter Real FLUX_VALUE_17 = 0.0100308480322675;
    parameter Real v0_17 = 0.0100308480322675;
    parameter Real ep0349_17 = 1.0;
    parameter Real ep0210_17 = -1.0;
    parameter Real ep1322_17 = -1.0;
    parameter Real FLUX_VALUE_18 = 2.04421699920047e-05;
    parameter Real v0_18 = 2.04421699920047e-05;
    parameter Real ep0231_18 = 1.0;
    parameter Real ep1212_18 = 1.0;
    parameter Real ep1207_18 = -1.0;
    parameter Real ep1445_18 = -1.0;
    parameter Real FLUX_VALUE_19 = 0.0112491235594474;
    parameter Real v0_19 = 0.0112491235594474;
    parameter Real ep0165_19 = 1.0;
    parameter Real ep0009_19 = -1.0;
    parameter Real FLUX_VALUE_20 = 0.0112491235594474;
    parameter Real v0_20 = 0.0112491235594474;
    parameter Real ep0009_20 = 1.0;
    parameter Real ep1198_20 = 1.0;
    parameter Real ep0010_20 = -1.0;
    parameter Real ep1203_20 = -1.0;
    parameter Real FLUX_VALUE_21 = 0.0100308480322675;
    parameter Real v0_21 = 0.0100308480322675;
    parameter Real ep0261_21 = 1.0;
    parameter Real ep1360_21 = 1.0;
    parameter Real ep0324_21 = -1.0;
    parameter Real ep1322_21 = -1.0;
    parameter Real FLUX_VALUE_22 = 0.00375691882979276;
    parameter Real v0_22 = 0.00375691882979276;
    parameter Real ep0301_22 = 1.0;
    parameter Real ep0434_22 = 1.0;
    parameter Real ep0999_22 = 1.0;
    parameter Real ep0302_22 = -1.0;
    parameter Real ep0394_22 = -1.0;
    parameter Real ep0991_22 = -1.0;
    parameter Real ep1322_22 = -1.0;
    parameter Real FLUX_VALUE_23 = 0.00250816743817059;
    parameter Real v0_23 = 0.00250816743817059;
    parameter Real ep0306_23 = 1.0;
    parameter Real ep1212_23 = 1.0;
    parameter Real ep0322_23 = -1.0;
    parameter Real ep1207_23 = -1.0;
    parameter Real FLUX_VALUE_24 = 0.0212913573443156;
    parameter Real v0_24 = 0.0212913573443156;
    parameter Real ep0146_24 = 1.0;
    parameter Real ep1212_24 = 1.0;
    parameter Real ep0016_24 = -1.0;
    parameter Real ep1207_24 = -1.0;
    parameter Real FLUX_VALUE_25 = 0.0212913573443156;
    parameter Real v0_25 = 0.0212913573443156;
    parameter Real ep1399_25 = 2.0;
    parameter Real ep0146_25 = -1.0;
    parameter Real ep0456_25 = -1.0;
    parameter Real FLUX_VALUE_26 = 0.00155984810490327;
    parameter Real v0_26 = 0.00155984810490327;
    parameter Real ep0373_26 = 2.0;
    parameter Real ep0367_26 = -1.0;
    parameter Real ep0529_26 = -1.0;
    parameter Real FLUX_VALUE_27 = 0.00036795905905662;
    parameter Real v0_27 = 0.00036795905905662;
    parameter Real ep0373_27 = 1.0;
    parameter Real ep0434_27 = 1.0;
    parameter Real ep0445_27 = 1.0;
    parameter Real ep0394_27 = -1.0;
    parameter Real ep1101_27 = -1.0;
    parameter Real ep1322_27 = -1.0;
    parameter Real FLUX_VALUE_28 = 0.0115748193382789;
    parameter Real v0_28 = 0.0115748193382789;
    parameter Real ep0362_28 = 1.0;
    parameter Real ep0529_28 = 1.0;
    parameter Real ep0373_28 = -1.0;
    parameter Real FLUX_VALUE_29 = 0.00609896813767666;
    parameter Real v0_29 = 0.00609896813767666;
    parameter Real ep0434_29 = 1.0;
    parameter Real ep1192_29 = 1.0;
    parameter Real ep0394_29 = -1.0;
    parameter Real ep1191_29 = -1.0;
    parameter Real FLUX_VALUE_30 = 0.00609896813767666;
    parameter Real v0_30 = 0.00609896813767666;
    parameter Real ep0145_30 = 1.0;
    parameter Real ep0991_30 = 1.0;
    parameter Real ep0180_30 = -1.0;
    parameter Real ep1182_30 = -1.0;
    parameter Real FLUX_VALUE_31 = 0.000583975250318604;
    parameter Real v0_31 = 0.000583975250318604;
    parameter Real ep0386_31 = 1.0;
    parameter Real ep0434_31 = 1.0;
    parameter Real ep0394_31 = -1.0;
    parameter Real ep0423_31 = -1.0;
    parameter Real FLUX_VALUE_32 = 0.000583975250368712;
    parameter Real v0_32 = 0.000583975250368712;
    parameter Real ep1413_32 = 1.0;
    parameter Real ep0386_32 = -1.0;
    parameter Real ep1012_32 = -1.0;
    parameter Real FLUX_VALUE_33 = 0.168650639524106;
    parameter Real v0_33 = 0.168650639524106;
    parameter Real ep0423_33 = 1.0;
    parameter Real ep0434_33 = 1.0;
    parameter Real ep0394_33 = -2.0;
    parameter Real FLUX_VALUE_34 = 0.00375691882979276;
    parameter Real v0_34 = 0.00375691882979276;
    parameter Real ep0299_34 = 1.0;
    parameter Real ep0403_34 = -1.0;
    parameter Real ep0725_34 = -1.0;
    parameter Real FLUX_VALUE_35 = 0.00439869575080998;
    parameter Real v0_35 = 0.00439869575080998;
    parameter Real ep0393_35 = 1.0;
    parameter Real ep0423_35 = -1.0;
    parameter Real ep0725_35 = -1.0;
    parameter Real FLUX_VALUE_36 = 0.00439869575080998;
    parameter Real v0_36 = 0.00439869575080998;
    parameter Real ep0785_36 = 1.0;
    parameter Real ep0849_36 = 1.0;
    parameter Real ep0973_36 = 1.0;
    parameter Real ep0393_36 = -1.0;
    parameter Real ep0739_36 = -1.0;
    parameter Real ep1322_36 = -1.0;
    parameter Real FLUX_VALUE_37 = 0.00217467874478967;
    parameter Real v0_37 = 0.00217467874478967;
    parameter Real ep0298_37 = 1.0;
    parameter Real ep0434_37 = 1.0;
    parameter Real ep0201_37 = -1.0;
    parameter Real ep0394_37 = -1.0;
    parameter Real FLUX_VALUE_38 = 0.0174126109618039;
    parameter Real v0_38 = 0.0174126109618039;
    parameter Real ep0434_38 = 1.0;
    parameter Real ep0955_38 = 1.0;
    parameter Real ep1582_38 = 1.0;
    parameter Real ep0404_38 = -1.0;
    parameter Real ep0423_38 = -1.0;
    parameter Real ep0633_38 = -1.0;
    parameter Real FLUX_VALUE_39 = 0.000888088702058448;
    parameter Real v0_39 = 0.000888088702058448;
    parameter Real ep0568_39 = 1.0;
    parameter Real ep1543_39 = 1.0;
    parameter Real ep0409_39 = -1.0;
    parameter Real ep1538_39 = -1.0;
    parameter Real FLUX_VALUE_40 = 0.00107785124523996;
    parameter Real v0_40 = 0.00107785124523996;
    parameter Real ep0427_40 = 1.0;
    parameter Real ep1386_40 = 1.0;
    parameter Real ep0633_40 = -1.0;
    parameter Real ep1187_40 = -1.0;
    parameter Real FLUX_VALUE_41 = 0.00107785124523716;
    parameter Real v0_41 = 0.00107785124523716;
    parameter Real ep0515_41 = 1.0;
    parameter Real ep0999_41 = 1.0;
    parameter Real ep0427_41 = -1.0;
    parameter Real ep0991_41 = -1.0;
    parameter Real ep1399_41 = -1.0;
    parameter Real FLUX_VALUE_42 = 0.00609896813766667;
    parameter Real v0_42 = 0.00609896813766667;
    parameter Real ep0015_42 = 1.0;
    parameter Real ep0725_42 = -1.0;
    parameter Real ep0965_42 = -1.0;
    parameter Real FLUX_VALUE_43 = 0.00609896813766667;
    parameter Real v0_43 = 0.00609896813766667;
    parameter Real ep0434_43 = 1.0;
    parameter Real ep0973_43 = 1.0;
    parameter Real ep0979_43 = 1.0;
    parameter Real ep0015_43 = -1.0;
    parameter Real ep0423_43 = -1.0;
    parameter Real ep0633_43 = -1.0;
    parameter Real FLUX_VALUE_44 = 0.00609896813766758;
    parameter Real v0_44 = 0.00609896813766758;
    parameter Real ep0434_44 = 1.0;
    parameter Real ep0965_44 = 1.0;
    parameter Real ep1583_44 = 1.0;
    parameter Real ep0423_44 = -1.0;
    parameter Real ep0428_44 = -1.0;
    parameter Real ep0633_44 = -1.0;
    parameter Real FLUX_VALUE_45 = 0.00385977012819758;
    parameter Real v0_45 = 0.00385977012819758;
    parameter Real ep0434_45 = 1.0;
    parameter Real ep0973_45 = 1.0;
    parameter Real ep0999_45 = 1.0;
    parameter Real ep0423_45 = -1.0;
    parameter Real ep0633_45 = -1.0;
    parameter Real ep0969_45 = -1.0;
    parameter Real ep0991_45 = -1.0;
    parameter Real FLUX_VALUE_46 = 0.00385977012819411;
    parameter Real v0_46 = 0.00385977012819411;
    parameter Real ep0434_46 = 1.0;
    parameter Real ep0969_46 = 1.0;
    parameter Real ep1585_46 = 1.0;
    parameter Real ep0423_46 = -1.0;
    parameter Real ep0430_46 = -1.0;
    parameter Real ep0633_46 = -1.0;
    parameter Real FLUX_VALUE_47 = 0.00419754745504612;
    parameter Real v0_47 = 0.00419754745504612;
    parameter Real ep0455_47 = 1.0;
    parameter Real ep0973_47 = 1.0;
    parameter Real ep1194_47 = -1.0;
    parameter Real ep1322_47 = -1.0;
    parameter Real FLUX_VALUE_48 = 0.0188389294905409;
    parameter Real v0_48 = 0.0188389294905409;
    parameter Real ep0434_48 = 1.0;
    parameter Real ep0973_48 = 1.0;
    parameter Real ep0295_48 = -1.0;
    parameter Real ep0394_48 = -1.0;
    parameter Real FLUX_VALUE_49 = 0.0524417011110143;
    parameter Real v0_49 = 0.0524417011110143;
    parameter Real ep0991_49 = 1.0;
    parameter Real ep1271_49 = 1.0;
    parameter Real ep0180_49 = -1.0;
    parameter Real ep0973_49 = -1.0;
    parameter Real FLUX_VALUE_50 = 0.0188389294905409;
    parameter Real v0_50 = 0.0188389294905409;
    parameter Real ep0295_50 = 1.0;
    parameter Real ep1212_50 = 1.0;
    parameter Real ep0978_50 = -1.0;
    parameter Real ep1207_50 = -1.0;
    parameter Real ep1322_50 = -1.0;
    parameter Real FLUX_VALUE_51 = 0.0112908713189552;
    parameter Real v0_51 = 0.0112908713189552;
    parameter Real ep0434_51 = 1.0;
    parameter Real ep0973_51 = 1.0;
    parameter Real ep1587_51 = 1.0;
    parameter Real ep0423_51 = -1.0;
    parameter Real ep0432_51 = -1.0;
    parameter Real ep0633_51 = -1.0;
    parameter Real FLUX_VALUE_52 = 0.00251625132250899;
    parameter Real v0_52 = 0.00251625132250899;
    parameter Real ep0434_52 = 1.0;
    parameter Real ep1386_52 = 1.0;
    parameter Real ep0326_52 = -1.0;
    parameter Real ep0633_52 = -1.0;
    parameter Real FLUX_VALUE_53 = 0.000258760203874159;
    parameter Real v0_53 = 0.000258760203874159;
    parameter Real ep0262_53 = 1.0;
    parameter Real ep1212_53 = 1.0;
    parameter Real ep0122_53 = -1.0;
    parameter Real ep1207_53 = -1.0;
    parameter Real FLUX_VALUE_54 = 0.000248095549098117;
    parameter Real v0_54 = 0.000248095549098117;
    parameter Real ep0664_54 = 1.0;
    parameter Real ep1212_54 = 1.0;
    parameter Real ep1275_54 = 1.0;
    parameter Real ep0662_54 = -1.0;
    parameter Real ep1207_54 = -1.0;
    parameter Real FLUX_VALUE_55 = 0.000256634863390825;
    parameter Real v0_55 = 0.000256634863390825;
    parameter Real ep1207_55 = 1.0;
    parameter Real ep1578_55 = 1.0;
    parameter Real ep0456_55 = -1.0;
    parameter Real ep1212_55 = -1.0;
    parameter Real ep1579_55 = -1.0;
    parameter Real FLUX_VALUE_56 = 0.000256634863390825;
    parameter Real v0_56 = 0.000256634863390825;
    parameter Real ep0297_56 = 1.0;
    parameter Real ep1198_56 = 1.0;
    parameter Real ep0209_56 = -1.0;
    parameter Real ep0456_56 = -1.0;
    parameter Real ep1203_56 = -1.0;
    parameter Real FLUX_VALUE_57 = 0.000256634863390825;
    parameter Real v0_57 = 0.000256634863390825;
    parameter Real ep0209_57 = 1.0;
    parameter Real ep1212_57 = 1.0;
    parameter Real ep0296_57 = -1.0;
    parameter Real ep1207_57 = -1.0;
    parameter Real FLUX_VALUE_58 = 0.000256634863390825;
    parameter Real v0_58 = 0.000256634863390825;
    parameter Real ep1212_58 = 1.0;
    parameter Real ep1579_58 = 1.0;
    parameter Real ep1207_58 = -1.0;
    parameter Real ep1569_58 = -1.0;
    parameter Real FLUX_VALUE_59 = 0.000256634863390825;
    parameter Real v0_59 = 0.000256634863390825;
    parameter Real ep0296_59 = 1.0;
    parameter Real ep1212_59 = 1.0;
    parameter Real ep1275_59 = 1.0;
    parameter Real ep1207_59 = -1.0;
    parameter Real ep1576_59 = -1.0;
    parameter Real FLUX_VALUE_60 = 0.000256634863390825;
    parameter Real v0_60 = 0.000256634863390825;
    parameter Real ep1212_60 = 1.0;
    parameter Real ep1275_60 = 1.0;
    parameter Real ep1576_60 = 1.0;
    parameter Real ep1207_60 = -1.0;
    parameter Real ep1577_60 = -1.0;
    parameter Real FLUX_VALUE_61 = 0.000256634863390825;
    parameter Real v0_61 = 0.000256634863390825;
    parameter Real ep1212_61 = 1.0;
    parameter Real ep1275_61 = 1.0;
    parameter Real ep1577_61 = 1.0;
    parameter Real ep1207_61 = -1.0;
    parameter Real ep1578_61 = -1.0;
    parameter Real FLUX_VALUE_62 = 0.000256634863390825;
    parameter Real v0_62 = 0.000256634863390825;
    parameter Real ep0122_62 = 1.0;
    parameter Real ep1212_62 = 3.0;
    parameter Real ep1275_62 = 3.0;
    parameter Real ep0297_62 = -1.0;
    parameter Real ep1207_62 = -3.0;
    parameter Real FLUX_VALUE_63 = 0.000248095549098117;
    parameter Real v0_63 = 0.000248095549098117;
    parameter Real ep0657_63 = 1.0;
    parameter Real ep1212_63 = 1.0;
    parameter Real ep1275_63 = 1.0;
    parameter Real ep0664_63 = -1.0;
    parameter Real ep1207_63 = -1.0;
    parameter Real FLUX_VALUE_64 = 0.00025173898992709;
    parameter Real v0_64 = 0.00025173898992709;
    parameter Real ep0700_64 = 1.0;
    parameter Real ep0657_64 = -1.0;
    parameter Real FLUX_VALUE_65 = 0.000243351485368152;
    parameter Real v0_65 = 0.000243351485368152;
    parameter Real ep0662_65 = 1.0;
    parameter Real ep1212_65 = 1.0;
    parameter Real ep0666_65 = -1.0;
    parameter Real ep1207_65 = -1.0;
    parameter Real FLUX_VALUE_66 = 0.0102965155927141;
    parameter Real v0_66 = 0.0102965155927141;
    parameter Real ep0434_66 = 2.0;
    parameter Real ep0445_66 = 1.0;
    parameter Real ep0999_66 = 1.0;
    parameter Real ep0394_66 = -2.0;
    parameter Real ep0455_66 = -1.0;
    parameter Real ep0991_66 = -1.0;
    parameter Real ep1322_66 = -1.0;
    parameter Real FLUX_VALUE_67 = 0.00023107859282821;
    parameter Real v0_67 = 0.00023107859282821;
    parameter Real ep0539_67 = 1.0;
    parameter Real ep1331_67 = 1.0;
    parameter Real ep0471_67 = -1.0;
    parameter Real ep0633_67 = -1.0;
    parameter Real FLUX_VALUE_68 = 1.02210849818021e-05;
    parameter Real v0_68 = 1.02210849818021e-05;
    parameter Real ep0475_68 = 1.0;
    parameter Real ep1212_68 = 1.0;
    parameter Real ep1275_68 = 1.0;
    parameter Real ep0481_68 = -1.0;
    parameter Real ep1207_68 = -1.0;
    parameter Real FLUX_VALUE_69 = 2.04421701081157e-05;
    parameter Real v0_69 = 2.04421701081157e-05;
    parameter Real ep0481_69 = 1.0;
    parameter Real ep1212_69 = 1.0;
    parameter Real ep1275_69 = 1.0;
    parameter Real ep0493_69 = -1.0;
    parameter Real ep1207_69 = -1.0;
    parameter Real FLUX_VALUE_70 = 2.04421702621944e-05;
    parameter Real v0_70 = 2.04421702621944e-05;
    parameter Real ep0493_70 = 1.0;
    parameter Real ep1212_70 = 1.0;
    parameter Real ep1275_70 = 1.0;
    parameter Real ep0499_70 = -1.0;
    parameter Real ep1207_70 = -1.0;
    parameter Real FLUX_VALUE_71 = 0.00895299678702938;
    parameter Real v0_71 = 0.00895299678702938;
    parameter Real ep0515_71 = 1.0;
    parameter Real ep1377_71 = -1.0;
    parameter Real FLUX_VALUE_72 = 0.0100308480322675;
    parameter Real v0_72 = 0.0100308480322675;
    parameter Real ep0324_72 = 1.0;
    parameter Real ep0515_72 = -1.0;
    parameter Real ep1322_72 = -1.0;
    parameter Real FLUX_VALUE_73 = 0.0386660157978829;
    parameter Real v0_73 = 0.0386660157978829;
    parameter Real ep0516_73 = 1.0;
    parameter Real ep0940_73 = -1.0;
    parameter Real FLUX_VALUE_74 = 0.0386660157978829;
    parameter Real v0_74 = 0.0386660157978829;
    parameter Real ep0373_74 = 1.0;
    parameter Real ep1271_74 = 1.0;
    parameter Real ep0522_74 = -1.0;
    parameter Real ep0529_74 = -1.0;
    parameter Real FLUX_VALUE_75 = 0.0386660157978829;
    parameter Real v0_75 = 0.0386660157978829;
    parameter Real ep0522_75 = 1.0;
    parameter Real ep0516_75 = -1.0;
    parameter Real FLUX_VALUE_76 = 0.00179092669763194;
    parameter Real v0_76 = 0.00179092669763194;
    parameter Real ep0419_76 = 1.0;
    parameter Real ep0434_76 = 1.0;
    parameter Real ep1559_76 = 1.0;
    parameter Real ep0394_76 = -1.0;
    parameter Real ep0539_76 = -1.0;
    parameter Real ep1322_76 = -1.0;
    parameter Real FLUX_VALUE_77 = 0.000250486556092046;
    parameter Real v0_77 = 0.000250486556092046;
    parameter Real ep1012_77 = 1.0;
    parameter Real ep1039_77 = 1.0;
    parameter Real ep0980_77 = -1.0;
    parameter Real FLUX_VALUE_78 = 0.00965062714998262;
    parameter Real v0_78 = 0.00965062714998262;
    parameter Real ep0980_78 = 1.0;
    parameter Real ep0178_78 = -1.0;
    parameter Real ep0419_78 = -1.0;
    parameter Real ep0981_78 = -1.0;
    parameter Real FLUX_VALUE_79 = 0.0094001405938857;
    parameter Real v0_79 = 0.0094001405938857;
    parameter Real ep0981_79 = 1.0;
    parameter Real ep1233_79 = 1.0;
    parameter Real ep0362_79 = -1.0;
    parameter Real ep0980_79 = -1.0;
    parameter Real FLUX_VALUE_80 = 0.000250486556991948;
    parameter Real v0_80 = 0.000250486556991948;
    parameter Real ep0434_80 = 1.0;
    parameter Real ep0981_80 = 1.0;
    parameter Real ep1589_80 = 1.0;
    parameter Real ep0423_80 = -1.0;
    parameter Real ep0542_80 = -1.0;
    parameter Real ep0633_80 = -1.0;
    parameter Real FLUX_VALUE_81 = 0.000258760203874159;
    parameter Real v0_81 = 0.000258760203874159;
    parameter Real ep1059_81 = 1.0;
    parameter Real ep1212_81 = 3.0;
    parameter Real ep1275_81 = 3.0;
    parameter Real ep0262_81 = -1.0;
    parameter Real ep0722_81 = -1.0;
    parameter Real ep1207_81 = -3.0;
    parameter Real FLUX_VALUE_82 = 3.36354094523684e-06;
    parameter Real v0_82 = 3.36354094523684e-06;
    parameter Real ep0589_82 = 1.0;
    parameter Real ep0419_82 = -1.0;
    parameter Real ep0654_82 = -1.0;
    parameter Real FLUX_VALUE_83 = 9.10860206737184e-05;
    parameter Real v0_83 = 9.10860206737184e-05;
    parameter Real ep0394_83 = 1.0;
    parameter Real ep0613_83 = 1.0;
    parameter Real ep0434_83 = -1.0;
    parameter Real ep0615_83 = -1.0;
    parameter Real FLUX_VALUE_84 = 0.000480554664340808;
    parameter Real v0_84 = 0.000480554664340808;
    parameter Real ep0529_84 = 1.0;
    parameter Real ep1524_84 = 1.0;
    parameter Real ep0380_84 = -1.0;
    parameter Real ep0619_84 = -1.0;
    parameter Real FLUX_VALUE_85 = 9.19873934027924e-06;
    parameter Real v0_85 = 9.19873934027924e-06;
    parameter Real ep1331_85 = 1.0;
    parameter Real ep0619_85 = -1.0;
    parameter Real ep1322_85 = -1.0;
    parameter Real FLUX_VALUE_86 = 0.00419754745533934;
    parameter Real v0_86 = 0.00419754745533934;
    parameter Real ep0061_86 = 1.0;
    parameter Real ep1275_86 = 1.0;
    parameter Real ep0837_86 = -1.0;
    parameter Real ep1269_86 = -1.0;
    parameter Real FLUX_VALUE_87 = 1.02210849818021e-05;
    parameter Real v0_87 = 1.02210849818021e-05;
    parameter Real ep1084_87 = 1.0;
    parameter Real ep1445_87 = 1.0;
    parameter Real ep0475_87 = -1.0;
    parameter Real FLUX_VALUE_88 = 0.000136629031089924;
    parameter Real v0_88 = 0.000136629031089924;
    parameter Real ep0625_88 = 1.0;
    parameter Real ep1212_88 = 1.0;
    parameter Real ep1207_88 = -1.0;
    parameter Real ep1487_88 = -1.0;
    parameter Real FLUX_VALUE_89 = 0.00419754745504612;
    parameter Real v0_89 = 0.00419754745504612;
    parameter Real ep1194_89 = 1.0;
    parameter Real ep0061_89 = -1.0;
    parameter Real FLUX_VALUE_90 = 0.0212913573443156;
    parameter Real v0_90 = 0.0212913573443156;
    parameter Real ep0016_90 = 1.0;
    parameter Real ep0232_90 = -1.0;
    parameter Real FLUX_VALUE_91 = 0.00965062714996943;
    parameter Real v0_91 = 0.00965062714996943;
    parameter Real ep0008_91 = 1.0;
    parameter Real ep0056_91 = -1.0;
    parameter Real FLUX_VALUE_92 = 0.000519949368301002;
    parameter Real v0_92 = 0.000519949368301002;
    parameter Real ep0943_92 = 1.0;
    parameter Real ep1376_92 = 1.0;
    parameter Real ep0633_92 = -1.0;
    parameter Real ep0745_92 = -1.0;
    parameter Real FLUX_VALUE_93 = 0.0306618317263326;
    parameter Real v0_93 = 0.0306618317263326;
    parameter Real ep0645_93 = 1.0;
    parameter Real ep0743_93 = 1.0;
    parameter Real ep0644_93 = -1.0;
    parameter Real ep0739_93 = -1.0;
    parameter Real FLUX_VALUE_94 = 0.0306618317263326;
    parameter Real v0_94 = 0.0306618317263326;
    parameter Real ep0644_94 = 1.0;
    parameter Real ep0645_94 = -1.0;
    parameter Real ep1107_94 = -1.0;
    parameter Real FLUX_VALUE_95 = 0.000133265490575614;
    parameter Real v0_95 = 0.000133265490575614;
    parameter Real ep0656_95 = 1.0;
    parameter Real ep0633_95 = -1.0;
    parameter Real ep0654_95 = -1.0;
    parameter Real FLUX_VALUE_96 = 0.231348466852626;
    parameter Real v0_96 = 0.231348466852626;
    parameter Real ep0188_96 = 1.0;
    parameter Real ep1360_96 = -1.0;
    parameter Real FLUX_VALUE_97 = 1.02210849110579e-05;
    parameter Real v0_97 = 1.02210849110579e-05;
    parameter Real ep0595_97 = 1.0;
    parameter Real ep1101_97 = 1.0;
    parameter Real ep1212_97 = 2.0;
    parameter Real ep0456_97 = -1.0;
    parameter Real ep0529_97 = -1.0;
    parameter Real ep1065_97 = -1.0;
    parameter Real ep1207_97 = -2.0;
    parameter Real FLUX_VALUE_98 = 1.02210846264081e-05;
    parameter Real v0_98 = 1.02210846264081e-05;
    parameter Real ep1065_98 = 1.0;
    parameter Real ep1101_98 = 1.0;
    parameter Real ep1212_98 = 2.0;
    parameter Real ep0456_98 = -1.0;
    parameter Real ep0529_98 = -1.0;
    parameter Real ep1161_98 = -1.0;
    parameter Real ep1207_98 = -2.0;
    parameter Real FLUX_VALUE_99 = 1.02210846264081e-05;
    parameter Real v0_99 = 1.02210846264081e-05;
    parameter Real ep1101_99 = 1.0;
    parameter Real ep1161_99 = 1.0;
    parameter Real ep1212_99 = 2.0;
    parameter Real ep0456_99 = -1.0;
    parameter Real ep0529_99 = -1.0;
    parameter Real ep1207_99 = -2.0;
    parameter Real ep1286_99 = -1.0;
    parameter Real FLUX_VALUE_100 = 1.02210846264081e-05;
    parameter Real v0_100 = 1.02210846264081e-05;
    parameter Real ep1101_100 = 1.0;
    parameter Real ep1212_100 = 2.0;
    parameter Real ep1286_100 = 1.0;
    parameter Real ep0456_100 = -1.0;
    parameter Real ep0529_100 = -1.0;
    parameter Real ep1207_100 = -2.0;
    parameter Real ep1449_100 = -1.0;
    parameter Real FLUX_VALUE_101 = 2.04421699980673e-05;
    parameter Real v0_101 = 2.04421699980673e-05;
    parameter Real ep1101_101 = 3.0;
    parameter Real ep1212_101 = 6.0;
    parameter Real ep1449_101 = 1.0;
    parameter Real ep0456_101 = -3.0;
    parameter Real ep0529_101 = -3.0;
    parameter Real ep1084_101 = -1.0;
    parameter Real ep1207_101 = -6.0;
    parameter Real FLUX_VALUE_102 = 4.0884339927971e-05;
    parameter Real v0_102 = 4.0884339927971e-05;
    parameter Real ep1101_102 = 1.0;
    parameter Real ep1212_102 = 2.0;
    parameter Real ep1255_102 = 1.0;
    parameter Real ep0456_102 = -1.0;
    parameter Real ep0529_102 = -1.0;
    parameter Real ep0602_102 = -1.0;
    parameter Real ep1207_102 = -2.0;
    parameter Real FLUX_VALUE_103 = 4.08843399368032e-05;
    parameter Real v0_103 = 4.08843399368032e-05;
    parameter Real ep0373_103 = 1.0;
    parameter Real ep1101_103 = 3.0;
    parameter Real ep1212_103 = 6.0;
    parameter Real ep0456_103 = -3.0;
    parameter Real ep0529_103 = -3.0;
    parameter Real ep1207_103 = -6.0;
    parameter Real ep1255_103 = -1.0;
    parameter Real FLUX_VALUE_104 = 1.02210849110579e-05;
    parameter Real v0_104 = 1.02210849110579e-05;
    parameter Real ep0423_104 = 1.0;
    parameter Real ep0602_104 = 1.0;
    parameter Real ep0633_104 = 1.0;
    parameter Real ep0434_104 = -1.0;
    parameter Real ep0529_104 = -1.0;
    parameter Real ep0595_104 = -1.0;
    parameter Real FLUX_VALUE_105 = 1.32100771565048e-12;
    parameter Real v0_105 = 1.32100771565048e-12;
    parameter Real ep0423_105 = 1.0;
    parameter Real ep0633_105 = 1.0;
    parameter Real ep1073_105 = 1.0;
    parameter Real ep0434_105 = -1.0;
    parameter Real ep0529_105 = -1.0;
    parameter Real ep1065_105 = -1.0;
    parameter Real FLUX_VALUE_106 = 1.02210853716592e-05;
    parameter Real v0_106 = 1.02210853716592e-05;
    parameter Real ep0423_106 = 1.0;
    parameter Real ep0633_106 = 1.0;
    parameter Real ep1454_106 = 1.0;
    parameter Real ep0434_106 = -1.0;
    parameter Real ep0529_106 = -1.0;
    parameter Real ep1449_106 = -1.0;
    parameter Real FLUX_VALUE_107 = 3.06632550169132e-05;
    parameter Real v0_107 = 3.06632550169132e-05;
    parameter Real ep0602_107 = 1.0;
    parameter Real ep1101_107 = 1.0;
    parameter Real ep1212_107 = 2.0;
    parameter Real ep0456_107 = -1.0;
    parameter Real ep0529_107 = -1.0;
    parameter Real ep1073_107 = -1.0;
    parameter Real ep1207_107 = -2.0;
    parameter Real FLUX_VALUE_108 = 3.06632551696157e-05;
    parameter Real v0_108 = 3.06632551696157e-05;
    parameter Real ep1073_108 = 1.0;
    parameter Real ep1101_108 = 1.0;
    parameter Real ep1212_108 = 2.0;
    parameter Real ep0456_108 = -1.0;
    parameter Real ep0529_108 = -1.0;
    parameter Real ep1176_108 = -1.0;
    parameter Real ep1207_108 = -2.0;
    parameter Real FLUX_VALUE_109 = 3.06632551696157e-05;
    parameter Real v0_109 = 3.06632551696157e-05;
    parameter Real ep1101_109 = 1.0;
    parameter Real ep1176_109 = 1.0;
    parameter Real ep1212_109 = 2.0;
    parameter Real ep0456_109 = -1.0;
    parameter Real ep0529_109 = -1.0;
    parameter Real ep1207_109 = -2.0;
    parameter Real ep1302_109 = -1.0;
    parameter Real FLUX_VALUE_110 = 1.0221085177611e-05;
    parameter Real v0_110 = 1.0221085177611e-05;
    parameter Real ep1101_110 = 1.0;
    parameter Real ep1212_110 = 2.0;
    parameter Real ep1302_110 = 1.0;
    parameter Real ep0456_110 = -1.0;
    parameter Real ep0529_110 = -1.0;
    parameter Real ep1207_110 = -2.0;
    parameter Real ep1454_110 = -1.0;
    parameter Real FLUX_VALUE_111 = 2.93389817698765;
    parameter Real v0_111 = 2.93389817698765;
    parameter Real ep0710_111 = 4.0;
    parameter Real ep1275_111 = 1.0;
    parameter Real ep0709_111 = -4.0;
    parameter Real FLUX_VALUE_112 = 5.86779635397514;
    parameter Real v0_112 = 5.86779635397514;
    parameter Real ep0709_112 = 2.0;
    parameter Real ep1535_112 = 1.0;
    parameter Real ep0710_112 = -2.0;
    parameter Real ep1537_112 = -1.0;
    parameter Real FLUX_VALUE_113 = 2.87562321404181;
    parameter Real v0_113 = 2.87562321404181;
    parameter Real ep0120_113 = 1.0;
    parameter Real ep0394_113 = 1.0;
    parameter Real ep1322_113 = 1.0;
    parameter Real ep0434_113 = -1.0;
    parameter Real ep0722_113 = -1.0;
    parameter Real ep1487_113 = -1.0;
    parameter Real FLUX_VALUE_114 = 0.850573321329957;
    parameter Real v0_114 = 0.850573321329957;
    parameter Real ep0555_114 = 1.0;
    parameter Real ep0629_114 = -1.0;
    parameter Real ep0764_114 = -1.0;
    parameter Real FLUX_VALUE_115 = 0.0142545827184152;
    parameter Real v0_115 = 0.0142545827184152;
    parameter Real ep0725_115 = 1.0;
    parameter Real ep0066_115 = -1.0;
    parameter Real FLUX_VALUE_116 = 0.000519949368301002;
    parameter Real v0_116 = 0.000519949368301002;
    parameter Real ep0745_116 = 1.0;
    parameter Real ep0943_116 = 1.0;
    parameter Real ep0190_116 = -1.0;
    parameter Real ep0633_116 = -1.0;
    parameter Real FLUX_VALUE_117 = 0.892327912279146;
    parameter Real v0_117 = 0.892327912279146;
    parameter Real ep0568_117 = 1.0;
    parameter Real ep0557_117 = -1.0;
    parameter Real FLUX_VALUE_118 = 0.812814651968887;
    parameter Real v0_118 = 0.812814651968887;
    parameter Real ep0180_118 = 1.0;
    parameter Real ep0419_118 = 1.0;
    parameter Real ep1203_118 = 1.0;
    parameter Real ep0991_118 = -1.0;
    parameter Real ep1198_118 = -1.0;
    parameter Real FLUX_VALUE_119 = 0.812814651968585;
    parameter Real v0_119 = 0.812814651968585;
    parameter Real ep0180_119 = 1.0;
    parameter Real ep0419_119 = 1.0;
    parameter Real ep1212_119 = 1.0;
    parameter Real ep0991_119 = -1.0;
    parameter Real ep1207_119 = -1.0;
    parameter Real FLUX_VALUE_120 = 0.0311388947598679;
    parameter Real v0_120 = 0.0311388947598679;
    parameter Real ep0419_120 = 1.0;
    parameter Real ep0434_120 = 1.0;
    parameter Real ep0991_120 = 1.0;
    parameter Real ep0394_120 = -1.0;
    parameter Real ep0999_120 = -1.0;
    parameter Real ep1322_120 = -1.0;
    parameter Real FLUX_VALUE_121 = 0.00400019441014414;
    parameter Real v0_121 = 0.00400019441014414;
    parameter Real ep0434_121 = 1.0;
    parameter Real ep0999_121 = 1.0;
    parameter Real ep1590_121 = 1.0;
    parameter Real ep0423_121 = -1.0;
    parameter Real ep0633_121 = -1.0;
    parameter Real ep0747_121 = -1.0;
    parameter Real FLUX_VALUE_122 = 0.0114540671060863;
    parameter Real v0_122 = 0.0114540671060863;
    parameter Real ep0434_122 = 1.0;
    parameter Real ep0991_122 = 1.0;
    parameter Real ep1591_122 = 1.0;
    parameter Real ep0423_122 = -1.0;
    parameter Real ep0633_122 = -1.0;
    parameter Real ep0748_122 = -1.0;
    parameter Real FLUX_VALUE_123 = 0.00209877372752306;
    parameter Real v0_123 = 0.00209877372752306;
    parameter Real ep0754_123 = 1.0;
    parameter Real ep1212_123 = 1.0;
    parameter Real ep0750_123 = -2.0;
    parameter Real ep1207_123 = -1.0;
    parameter Real FLUX_VALUE_124 = 0.00209877372752306;
    parameter Real v0_124 = 0.00209877372752306;
    parameter Real ep0750_124 = 2.0;
    parameter Real ep0837_124 = 1.0;
    parameter Real ep0754_124 = -1.0;
    parameter Real FLUX_VALUE_125 = 1.69142241294296;
    parameter Real v0_125 = 1.69142241294296;
    parameter Real ep0764_125 = 1.0;
    parameter Real ep1198_125 = 1.0;
    parameter Real ep1322_125 = 1.0;
    parameter Real ep0075_125 = -1.0;
    parameter Real ep1203_125 = -1.0;
    parameter Real FLUX_VALUE_126 = 0.000240277331835412;
    parameter Real v0_126 = 0.000240277331835412;
    parameter Real ep0629_126 = 1.0;
    parameter Real ep1203_126 = 1.0;
    parameter Real ep0767_126 = -1.0;
    parameter Real ep1198_126 = -1.0;
    parameter Real FLUX_VALUE_127 = 0.000240277332169094;
    parameter Real v0_127 = 0.000240277332169094;
    parameter Real ep0380_127 = 1.0;
    parameter Real ep0767_127 = 1.0;
    parameter Real ep0082_127 = -1.0;
    parameter Real ep0529_127 = -1.0;
    parameter Real FLUX_VALUE_128 = 0.00375691882979276;
    parameter Real v0_128 = 0.00375691882979276;
    parameter Real ep0120_128 = 1.0;
    parameter Real ep0325_128 = 1.0;
    parameter Real ep0301_128 = -1.0;
    parameter Real ep1487_128 = -1.0;
    parameter Real FLUX_VALUE_129 = 1.43675988607776;
    parameter Real v0_129 = 1.43675988607776;
    parameter Real ep1003_129 = 1.0;
    parameter Real ep1198_129 = 1.0;
    parameter Real ep1487_129 = 1.0;
    parameter Real ep0306_129 = -1.0;
    parameter Real ep0419_129 = -1.0;
    parameter Real ep0456_129 = -1.0;
    parameter Real ep1203_129 = -1.0;
    parameter Real FLUX_VALUE_130 = 1.45153821341539;
    parameter Real v0_130 = 1.45153821341539;
    parameter Real ep1039_130 = 1.0;
    parameter Real ep1487_130 = 1.0;
    parameter Real ep0306_130 = -1.0;
    parameter Real ep1003_130 = -1.0;
    parameter Real FLUX_VALUE_131 = 0.0196783757273199;
    parameter Real v0_131 = 0.0196783757273199;
    parameter Real ep1543_131 = 1.0;
    parameter Real ep0773_131 = -1.0;
    parameter Real ep1538_131 = -1.0;
    parameter Real FLUX_VALUE_132 = 0.0110214085076458;
    parameter Real v0_132 = 0.0110214085076458;
    parameter Real ep0434_132 = 1.0;
    parameter Real ep1003_132 = 1.0;
    parameter Real ep1593_132 = 1.0;
    parameter Real ep0423_132 = -1.0;
    parameter Real ep0633_132 = -1.0;
    parameter Real ep0757_132 = -1.0;
    parameter Real FLUX_VALUE_133 = 0.00187447440148675;
    parameter Real v0_133 = 0.00187447440148675;
    parameter Real ep0434_133 = 1.0;
    parameter Real ep0999_133 = 1.0;
    parameter Real ep1565_133 = 1.0;
    parameter Real ep0423_133 = -1.0;
    parameter Real ep0633_133 = -1.0;
    parameter Real ep0782_133 = -1.0;
    parameter Real ep0991_133 = -1.0;
    parameter Real FLUX_VALUE_134 = 3.75729835487922e-05;
    parameter Real v0_134 = 3.75729835487922e-05;
    parameter Real ep0785_134 = 1.0;
    parameter Real ep0141_134 = -1.0;
    parameter Real ep0633_134 = -1.0;
    parameter Real ep0722_134 = -1.0;
    parameter Real FLUX_VALUE_135 = 6.43295020859241e-05;
    parameter Real v0_135 = 6.43295020859241e-05;
    parameter Real ep0434_135 = 1.0;
    parameter Real ep0782_135 = 1.0;
    parameter Real ep0394_135 = -1.0;
    parameter Real ep0739_135 = -1.0;
    parameter Real FLUX_VALUE_136 = 6.43295039602845e-05;
    parameter Real v0_136 = 6.43295039602845e-05;
    parameter Real ep0586_136 = 1.0;
    parameter Real ep0782_136 = 1.0;
    parameter Real ep0582_136 = -1.0;
    parameter Real ep0739_136 = -1.0;
    parameter Real FLUX_VALUE_137 = 0.999999999999993;
    parameter Real v0_137 = 0.999999999999993;
    parameter Real ep0434_137 = 1.0;
    parameter Real ep0563_137 = 1.0;
    parameter Real ep0394_137 = -1.0;
    parameter Real ep0568_137 = -1.0;
    parameter Real FLUX_VALUE_138 = 0.00251625132250899;
    parameter Real v0_138 = 0.00251625132250899;
    parameter Real ep1010_138 = 1.0;
    parameter Real ep1198_138 = 2.0;
    parameter Real ep1006_138 = -1.0;
    parameter Real ep1203_138 = -2.0;
    parameter Real FLUX_VALUE_139 = 0.00251625132250899;
    parameter Real v0_139 = 0.00251625132250899;
    parameter Real ep1011_139 = 1.0;
    parameter Real ep1010_139 = -1.0;
    parameter Real ep1322_139 = -1.0;
    parameter Real FLUX_VALUE_140 = 0.00251625132250899;
    parameter Real v0_140 = 0.00251625132250899;
    parameter Real ep0207_140 = 1.0;
    parameter Real ep0991_140 = 1.0;
    parameter Real ep0180_140 = -1.0;
    parameter Real ep1011_140 = -1.0;
    parameter Real FLUX_VALUE_141 = 0.00251625132251002;
    parameter Real v0_141 = 0.00251625132251002;
    parameter Real ep0434_141 = 1.0;
    parameter Real ep1006_141 = 1.0;
    parameter Real ep1594_141 = 1.0;
    parameter Real ep0423_141 = -1.0;
    parameter Real ep0633_141 = -1.0;
    parameter Real ep0832_141 = -1.0;
    parameter Real FLUX_VALUE_142 = 0.01086200797138;
    parameter Real v0_142 = 0.01086200797138;
    parameter Real ep0454_142 = 1.0;
    parameter Real ep0836_142 = -1.0;
    parameter Real FLUX_VALUE_143 = 0.01086200797138;
    parameter Real v0_143 = 0.01086200797138;
    parameter Real ep0180_143 = 1.0;
    parameter Real ep0373_143 = 1.0;
    parameter Real ep0529_143 = -1.0;
    parameter Real ep0835_143 = -1.0;
    parameter Real FLUX_VALUE_144 = 0.01086200797138;
    parameter Real v0_144 = 0.01086200797138;
    parameter Real ep0836_144 = 1.0;
    parameter Real ep1198_144 = 1.0;
    parameter Real ep0176_144 = -1.0;
    parameter Real ep1203_144 = -1.0;
    parameter Real ep0456_144 = -1.0;
    parameter Real FLUX_VALUE_145 = 0.0188389294905409;
    parameter Real v0_145 = 0.0188389294905409;
    parameter Real ep0978_145 = 1.0;
    parameter Real ep1212_145 = 1.0;
    parameter Real ep1014_145 = -1.0;
    parameter Real ep1207_145 = -1.0;
    parameter Real FLUX_VALUE_146 = 0.00726411015276989;
    parameter Real v0_146 = 0.00726411015276989;
    parameter Real ep0434_146 = 1.0;
    parameter Real ep1014_146 = 1.0;
    parameter Real ep0394_146 = -1.0;
    parameter Real ep1238_146 = -1.0;
    parameter Real FLUX_VALUE_147 = 0.0115748193375687;
    parameter Real v0_147 = 0.0115748193375687;
    parameter Real ep0373_147 = 1.0;
    parameter Real ep1014_147 = 1.0;
    parameter Real ep0529_147 = -1.0;
    parameter Real ep1233_147 = -1.0;
    parameter Real FLUX_VALUE_148 = 0.00209877372781628;
    parameter Real v0_148 = 0.00209877372781628;
    parameter Real ep0837_148 = 1.0;
    parameter Real ep1616_148 = 1.0;
    parameter Real ep1620_148 = -1.0;
    parameter Real FLUX_VALUE_149 = 0.00155984810490327;
    parameter Real v0_149 = 0.00155984810490327;
    parameter Real ep0218_149 = 1.0;
    parameter Real ep1212_149 = 2.0;
    parameter Real ep0028_149 = -1.0;
    parameter Real ep0529_149 = -1.0;
    parameter Real ep1207_149 = -2.0;
    parameter Real FLUX_VALUE_150 = 0.00155984810490327;
    parameter Real v0_150 = 0.00155984810490327;
    parameter Real ep0367_150 = 1.0;
    parameter Real ep0373_150 = 1.0;
    parameter Real ep0218_150 = -1.0;
    parameter Real ep0529_150 = -1.0;
    parameter Real FLUX_VALUE_151 = 0.00251625132250899;
    parameter Real v0_151 = 0.00251625132250899;
    parameter Real ep0312_151 = 1.0;
    parameter Real ep0999_151 = 1.0;
    parameter Real ep0403_151 = -1.0;
    parameter Real ep0550_151 = -1.0;
    parameter Real ep0991_151 = -1.0;
    parameter Real FLUX_VALUE_152 = 0.00251625132250899;
    parameter Real v0_152 = 0.00251625132250899;
    parameter Real ep0550_152 = 1.0;
    parameter Real ep0207_152 = -1.0;
    parameter Real FLUX_VALUE_153 = 0.00187447440148864;
    parameter Real v0_153 = 0.00187447440148864;
    parameter Real ep0849_153 = 1.0;
    parameter Real ep1198_153 = 1.0;
    parameter Real ep1203_153 = -1.0;
    parameter Real ep1565_153 = -1.0;
    parameter Real FLUX_VALUE_154 = 0.00107785124523996;
    parameter Real v0_154 = 0.00107785124523996;
    parameter Real ep0076_154 = 1.0;
    parameter Real ep0086_154 = -1.0;
    parameter Real ep0456_154 = -1.0;
    parameter Real FLUX_VALUE_155 = 0.305666406674421;
    parameter Real v0_155 = 0.305666406674421;
    parameter Real ep0633_155 = 1.0;
    parameter Real ep1322_155 = -2.0;
    parameter Real FLUX_VALUE_156 = 0.00627317015230181;
    parameter Real v0_156 = 0.00627317015230181;
    parameter Real ep1365_156 = 1.0;
    parameter Real ep0849_156 = -1.0;
    parameter Real FLUX_VALUE_157 = 2.04421705708177e-05;
    parameter Real v0_157 = 2.04421705708177e-05;
    parameter Real ep0089_157 = 1.0;
    parameter Real ep0499_157 = 1.0;
    parameter Real ep0619_157 = -1.0;
    parameter Real ep0918_157 = -1.0;
    parameter Real FLUX_VALUE_158 = 0.0193330078987431;
    parameter Real v0_158 = 0.0193330078987431;
    parameter Real ep0940_158 = 1.0;
    parameter Real ep1198_158 = 1.0;
    parameter Real ep0180_158 = -1.0;
    parameter Real ep0456_158 = -1.0;
    parameter Real ep1203_158 = -1.0;
    parameter Real FLUX_VALUE_159 = 0.0193330078983478;
    parameter Real v0_159 = 0.0193330078983478;
    parameter Real ep0940_159 = 1.0;
    parameter Real ep1207_159 = 1.0;
    parameter Real ep0180_159 = -1.0;
    parameter Real ep0456_159 = -1.0;
    parameter Real ep1212_159 = -1.0;
    parameter Real FLUX_VALUE_160 = 0.00731344841399458;
    parameter Real v0_160 = 0.00731344841399458;
    parameter Real ep0056_160 = 1.0;
    parameter Real ep0991_160 = 1.0;
    parameter Real ep0180_160 = -1.0;
    parameter Real ep1016_160 = -1.0;
    parameter Real FLUX_VALUE_161 = 0.00731344841399218;
    parameter Real v0_161 = 0.00731344841399218;
    parameter Real ep0434_161 = 1.0;
    parameter Real ep1016_161 = 1.0;
    parameter Real ep1596_161 = 1.0;
    parameter Real ep0423_161 = -1.0;
    parameter Real ep0633_161 = -1.0;
    parameter Real ep0847_161 = -1.0;
    parameter Real FLUX_VALUE_162 = 0.000519949368301002;
    parameter Real v0_162 = 0.000519949368301002;
    parameter Real ep0943_162 = 1.0;
    parameter Real ep1376_162 = -1.0;
    parameter Real FLUX_VALUE_163 = 0.00965062714996943;
    parameter Real v0_163 = 0.00965062714996943;
    parameter Real ep0039_163 = 1.0;
    parameter Real ep1212_163 = 1.0;
    parameter Real ep0008_163 = -1.0;
    parameter Real ep1207_163 = -1.0;
    parameter Real FLUX_VALUE_164 = 0.0174126109617655;
    parameter Real v0_164 = 0.0174126109617655;
    parameter Real ep0991_164 = 1.0;
    parameter Real ep1399_164 = 1.0;
    parameter Real ep0180_164 = -1.0;
    parameter Real ep0955_164 = -1.0;
    parameter Real FLUX_VALUE_165 = 0.01086200797138;
    parameter Real v0_165 = 0.01086200797138;
    parameter Real ep0953_165 = 1.0;
    parameter Real ep1212_165 = 1.0;
    parameter Real ep0959_165 = -1.0;
    parameter Real ep1207_165 = -1.0;
    parameter Real FLUX_VALUE_166 = 0.000259974684150501;
    parameter Real v0_166 = 0.000259974684150501;
    parameter Real ep0037_166 = 1.0;
    parameter Real ep1059_166 = -1.0;
    parameter Real FLUX_VALUE_167 = 0.0112491235594554;
    parameter Real v0_167 = 0.0112491235594554;
    parameter Real ep0291_167 = 1.0;
    parameter Real ep0991_167 = 1.0;
    parameter Real ep0180_167 = -1.0;
    parameter Real ep1021_167 = -1.0;
    parameter Real FLUX_VALUE_168 = 0.0112491235594566;
    parameter Real v0_168 = 0.0112491235594566;
    parameter Real ep0434_168 = 1.0;
    parameter Real ep1021_168 = 1.0;
    parameter Real ep1598_168 = 1.0;
    parameter Real ep0423_168 = -1.0;
    parameter Real ep0633_168 = -1.0;
    parameter Real ep1077_168 = -1.0;
    parameter Real FLUX_VALUE_169 = 0.0108620079713781;
    parameter Real v0_169 = 0.0108620079713781;
    parameter Real ep0434_169 = 1.0;
    parameter Real ep1025_169 = 1.0;
    parameter Real ep1600_169 = 1.0;
    parameter Real ep0423_169 = -1.0;
    parameter Real ep0633_169 = -1.0;
    parameter Real ep1099_169 = -1.0;
    parameter Real FLUX_VALUE_170 = 0.0142545827185181;
    parameter Real v0_170 = 0.0142545827185181;
    parameter Real ep0066_170 = 1.0;
    parameter Real ep1198_170 = 1.0;
    parameter Real ep1203_170 = -1.0;
    parameter Real ep1271_170 = -1.0;
    parameter Real FLUX_VALUE_171 = 0.0306618317263325;
    parameter Real v0_171 = 0.0306618317263325;
    parameter Real ep0573_171 = 1.0;
    parameter Real ep0785_171 = 1.0;
    parameter Real ep0633_171 = -1.0;
    parameter Real ep0743_171 = -1.0;
    parameter Real FLUX_VALUE_172 = 0.0306618317263325;
    parameter Real v0_172 = 0.0306618317263325;
    parameter Real ep0557_172 = 1.0;
    parameter Real ep0574_172 = -1.0;
    parameter Real FLUX_VALUE_173 = 2.88565330302391;
    parameter Real v0_173 = 2.88565330302391;
    parameter Real ep0304_173 = 1.0;
    parameter Real ep0120_173 = -1.0;
    parameter Real FLUX_VALUE_174 = 0.000583975250367414;
    parameter Real v0_174 = 0.000583975250367414;
    parameter Real ep0434_174 = 1.0;
    parameter Real ep1029_174 = 1.0;
    parameter Real ep0633_174 = -1.0;
    parameter Real ep1322_174 = -1.0;
    parameter Real ep1416_174 = -1.0;
    parameter Real FLUX_VALUE_175 = 0.00250816743817059;
    parameter Real v0_175 = 0.00250816743817059;
    parameter Real ep0322_175 = 1.0;
    parameter Real ep1012_175 = 1.0;
    parameter Real ep1029_175 = -1.0;
    parameter Real ep1487_175 = -1.0;
    parameter Real FLUX_VALUE_176 = 0.00192419218780178;
    parameter Real v0_176 = 0.00192419218780178;
    parameter Real ep0434_176 = 1.0;
    parameter Real ep1029_176 = 1.0;
    parameter Real ep1602_176 = 1.0;
    parameter Real ep0423_176 = -1.0;
    parameter Real ep0633_176 = -1.0;
    parameter Real ep1148_176 = -1.0;
    parameter Real FLUX_VALUE_177 = 1.95938592660585;
    parameter Real v0_177 = 1.95938592660585;
    parameter Real ep0306_177 = 1.0;
    parameter Real ep1198_177 = 1.0;
    parameter Real ep0304_177 = -1.0;
    parameter Real ep1203_177 = -1.0;
    parameter Real FLUX_VALUE_178 = 0.926267376418038;
    parameter Real v0_178 = 0.926267376418038;
    parameter Real ep0306_178 = 1.0;
    parameter Real ep1207_178 = 1.0;
    parameter Real ep0304_178 = -1.0;
    parameter Real ep1212_178 = -1.0;
    parameter Real FLUX_VALUE_179 = 0.00155984810489089;
    parameter Real v0_179 = 0.00155984810489089;
    parameter Real ep0028_179 = 1.0;
    parameter Real ep0539_179 = 1.0;
    parameter Real ep0019_179 = -1.0;
    parameter Real ep0467_179 = -1.0;
    parameter Real FLUX_VALUE_180 = 0.00155984810490301;
    parameter Real v0_180 = 0.00155984810490301;
    parameter Real ep0018_180 = 1.0;
    parameter Real ep0434_180 = 1.0;
    parameter Real ep0394_180 = -1.0;
    parameter Real ep0456_180 = -1.0;
    parameter Real ep0943_180 = -1.0;
    parameter Real ep1322_180 = -1.0;
    parameter Real FLUX_VALUE_181 = 8.05209910738368e-05;
    parameter Real v0_181 = 8.05209910738368e-05;
    parameter Real ep0126_181 = 1.0;
    parameter Real ep1153_181 = -1.0;
    parameter Real ep1322_181 = -1.0;
    parameter Real FLUX_VALUE_182 = 8.05209911324267e-05;
    parameter Real v0_182 = 8.05209911324267e-05;
    parameter Real ep0568_182 = 1.0;
    parameter Real ep0126_182 = -1.0;
    parameter Real FLUX_VALUE_183 = 0.00609896813767666;
    parameter Real v0_183 = 0.00609896813767666;
    parameter Real ep1191_183 = 1.0;
    parameter Real ep1212_183 = 1.0;
    parameter Real ep0145_183 = -1.0;
    parameter Real ep1207_183 = -1.0;
    parameter Real ep1322_183 = -1.0;
    parameter Real FLUX_VALUE_184 = 5.86779635397505;
    parameter Real v0_184 = 5.86779635397505;
    parameter Real ep1203_184 = 1.0;
    parameter Real ep1537_184 = 1.0;
    parameter Real ep1198_184 = -1.0;
    parameter Real ep1535_184 = -1.0;
    parameter Real FLUX_VALUE_185 = 0.0014653985431621;
    parameter Real v0_185 = 0.0014653985431621;
    parameter Real ep0467_185 = 1.0;
    parameter Real ep0526_185 = -1.0;
    parameter Real ep1322_185 = -1.0;
    parameter Real FLUX_VALUE_186 = 0.0350981004584189;
    parameter Real v0_186 = 0.0350981004584189;
    parameter Real ep0434_186 = 1.0;
    parameter Real ep0739_186 = 1.0;
    parameter Real ep0394_186 = -1.0;
    parameter Real ep0785_186 = -1.0;
    parameter Real FLUX_VALUE_187 = 0.10862767021555;
    parameter Real v0_187 = 0.10862767021555;
    parameter Real ep0434_187 = 1.0;
    parameter Real ep1538_187 = 1.0;
    parameter Real ep0394_187 = -1.0;
    parameter Real ep1559_187 = -1.0;
    parameter Real FLUX_VALUE_188 = 0.00217467874388578;
    parameter Real v0_188 = 0.00217467874388578;
    parameter Real ep0841_188 = 1.0;
    parameter Real ep1233_188 = 1.0;
    parameter Real ep0362_188 = -1.0;
    parameter Real ep1012_188 = -1.0;
    parameter Real FLUX_VALUE_189 = 0.00609896813766667;
    parameter Real v0_189 = 0.00609896813766667;
    parameter Real ep0455_189 = 1.0;
    parameter Real ep1266_189 = 1.0;
    parameter Real ep0979_189 = -1.0;
    parameter Real ep1322_189 = -1.0;
    parameter Real FLUX_VALUE_190 = 0.00609896813767666;
    parameter Real v0_190 = 0.00609896813767666;
    parameter Real ep0991_190 = 1.0;
    parameter Real ep1182_190 = 1.0;
    parameter Real ep1192_190 = -1.0;
    parameter Real ep1266_190 = -1.0;
    parameter Real FLUX_VALUE_191 = 0.00419754745504612;
    parameter Real v0_191 = 0.00419754745504612;
    parameter Real ep1269_191 = 1.0;
    parameter Real ep1386_191 = 1.0;
    parameter Real ep0633_191 = -1.0;
    parameter Real ep1270_191 = -1.0;
    parameter Real FLUX_VALUE_192 = 0.00419754745504612;
    parameter Real v0_192 = 0.00419754745504612;
    parameter Real ep1270_192 = 1.0;
    parameter Real ep0456_192 = -1.0;
    parameter Real ep1545_192 = -1.0;
    parameter Real FLUX_VALUE_193 = 0.00508184090605392;
    parameter Real v0_193 = 0.00508184090605392;
    parameter Real ep0951_193 = 1.0;
    parameter Real ep0991_193 = 1.0;
    parameter Real ep0180_193 = -1.0;
    parameter Real ep1032_193 = -1.0;
    parameter Real FLUX_VALUE_194 = 0.00508184090624576;
    parameter Real v0_194 = 0.00508184090624576;
    parameter Real ep0434_194 = 1.0;
    parameter Real ep1032_194 = 1.0;
    parameter Real ep1604_194 = 1.0;
    parameter Real ep0423_194 = -1.0;
    parameter Real ep0633_194 = -1.0;
    parameter Real ep1314_194 = -1.0;
    parameter Real FLUX_VALUE_195 = 0.00375691882979276;
    parameter Real v0_195 = 0.00375691882979276;
    parameter Real ep0302_195 = 1.0;
    parameter Real ep0434_195 = 1.0;
    parameter Real ep0300_195 = -1.0;
    parameter Real ep0394_195 = -1.0;
    parameter Real ep1322_195 = -1.0;
    parameter Real FLUX_VALUE_196 = 0.000109303224869629;
    parameter Real v0_196 = 0.000109303224869629;
    parameter Real ep1351_196 = 1.0;
    parameter Real ep1416_196 = 1.0;
    parameter Real ep1343_196 = -1.0;
    parameter Real ep1413_196 = -1.0;
    parameter Real FLUX_VALUE_197 = 8.05209910738368e-05;
    parameter Real v0_197 = 8.05209910738368e-05;
    parameter Real ep0471_197 = 1.0;
    parameter Real ep1153_197 = 1.0;
    parameter Real ep0089_197 = -1.0;
    parameter Real ep0526_197 = -1.0;
    parameter Real FLUX_VALUE_198 = 0.00013575612338737;
    parameter Real v0_198 = 0.00013575612338737;
    parameter Real ep1337_198 = 1.0;
    parameter Real ep0456_198 = -1.0;
    parameter Real ep1351_198 = -1.0;
    parameter Real FLUX_VALUE_199 = 0.000150557601754342;
    parameter Real v0_199 = 0.000150557601754342;
    parameter Real ep0471_199 = 1.0;
    parameter Real ep1039_199 = 1.0;
    parameter Real ep0526_199 = -1.0;
    parameter Real ep1337_199 = -1.0;
    parameter Real FLUX_VALUE_200 = 0.00217467874478967;
    parameter Real v0_200 = 0.00217467874478967;
    parameter Real ep0201_200 = 1.0;
    parameter Real ep1616_200 = 1.0;
    parameter Real ep0390_200 = -1.0;
    parameter Real ep1469_200 = -1.0;
    parameter Real ep1620_200 = -1.0;
    parameter Real FLUX_VALUE_201 = 0.850573321329957;
    parameter Real v0_201 = 0.850573321329957;
    parameter Real ep0434_201 = 1.0;
    parameter Real ep0557_201 = 1.0;
    parameter Real ep0394_201 = -1.0;
    parameter Real ep0555_201 = -1.0;
    parameter Real FLUX_VALUE_202 = 0.106703478027702;
    parameter Real v0_202 = 0.106703478027702;
    parameter Real ep0568_202 = 1.0;
    parameter Real ep0567_202 = -1.0;
    parameter Real FLUX_VALUE_203 = 1.46007394609031;
    parameter Real v0_203 = 1.46007394609031;
    parameter Real ep0260_203 = 1.0;
    parameter Real ep1198_203 = 1.0;
    parameter Real ep0258_203 = -1.0;
    parameter Real ep1203_203 = -1.0;
    parameter Real FLUX_VALUE_204 = 1.69142241294296;
    parameter Real v0_204 = 1.69142241294296;
    parameter Real ep0075_204 = 1.0;
    parameter Real ep0394_204 = 1.0;
    parameter Real ep0260_204 = -1.0;
    parameter Real ep0434_204 = -1.0;
    parameter Real FLUX_VALUE_205 = 0.231348466852626;
    parameter Real v0_205 = 0.231348466852626;
    parameter Real ep0260_205 = 1.0;
    parameter Real ep0188_205 = -1.0;
    parameter Real FLUX_VALUE_206 = 0.000109303224869629;
    parameter Real v0_206 = 0.000109303224869629;
    parameter Real ep1342_206 = 1.0;
    parameter Real ep1416_206 = 1.0;
    parameter Real ep1346_206 = -1.0;
    parameter Real ep1413_206 = -1.0;
    parameter Real FLUX_VALUE_207 = 0.000109303224869629;
    parameter Real v0_207 = 0.000109303224869629;
    parameter Real ep1343_207 = 1.0;
    parameter Real ep1416_207 = 1.0;
    parameter Real ep1342_207 = -1.0;
    parameter Real ep1413_207 = -1.0;
    parameter Real FLUX_VALUE_208 = 0.0306618317263325;
    parameter Real v0_208 = 0.0306618317263325;
    parameter Real ep0574_208 = 1.0;
    parameter Real ep0573_208 = -1.0;
    parameter Real FLUX_VALUE_209 = 0.00155984810490301;
    parameter Real v0_209 = 0.00155984810490301;
    parameter Real ep0019_209 = 1.0;
    parameter Real ep0434_209 = 1.0;
    parameter Real ep0018_209 = -1.0;
    parameter Real ep0394_209 = -1.0;
    parameter Real FLUX_VALUE_210 = 0.00375691882979276;
    parameter Real v0_210 = 0.00375691882979276;
    parameter Real ep0434_210 = 1.0;
    parameter Real ep0973_210 = 1.0;
    parameter Real ep1364_210 = 1.0;
    parameter Real ep0299_210 = -1.0;
    parameter Real ep0394_210 = -1.0;
    parameter Real ep1322_210 = -1.0;
    parameter Real FLUX_VALUE_211 = 0.00251625132250899;
    parameter Real v0_211 = 0.00251625132250899;
    parameter Real ep0078_211 = 1.0;
    parameter Real ep0077_211 = -1.0;
    parameter Real FLUX_VALUE_212 = 0.00251625132250899;
    parameter Real v0_212 = 0.00251625132250899;
    parameter Real ep0326_212 = 1.0;
    parameter Real ep0078_212 = -1.0;
    parameter Real ep0633_212 = -1.0;
    parameter Real FLUX_VALUE_213 = 0.00375691882979276;
    parameter Real v0_213 = 0.00375691882979276;
    parameter Real ep0300_213 = 1.0;
    parameter Real ep0456_213 = 1.0;
    parameter Real ep0434_213 = 1.0;
    parameter Real ep1364_213 = -1.0;
    parameter Real ep0394_213 = -1.0;
    parameter Real ep1322_213 = -1.0;
    parameter Real FLUX_VALUE_214 = 0.00627317015230181;
    parameter Real v0_214 = 0.00627317015230181;
    parameter Real ep0120_214 = 1.0;
    parameter Real ep0403_214 = 1.0;
    parameter Real ep1365_214 = -1.0;
    parameter Real ep1487_214 = -1.0;
    parameter Real FLUX_VALUE_215 = 0.00107785124523996;
    parameter Real v0_215 = 0.00107785124523996;
    parameter Real ep1187_215 = 1.0;
    parameter Real ep0076_215 = -1.0;
    parameter Real FLUX_VALUE_216 = 0.00375691882979276;
    parameter Real v0_216 = 0.00375691882979276;
    parameter Real ep0327_216 = 1.0;
    parameter Real ep0434_216 = 1.0;
    parameter Real ep1003_216 = 1.0;
    parameter Real ep0325_216 = -1.0;
    parameter Real ep0394_216 = -1.0;
    parameter Real ep1322_216 = -1.0;
    parameter Real FLUX_VALUE_217 = 0.00375691882979276;
    parameter Real v0_217 = 0.00375691882979276;
    parameter Real ep0999_217 = 1.0;
    parameter Real ep1386_217 = 1.0;
    parameter Real ep0327_217 = -1.0;
    parameter Real ep0633_217 = -1.0;
    parameter Real ep0991_217 = -1.0;
    parameter Real FLUX_VALUE_218 = 0.0115485688525797;
    parameter Real v0_218 = 0.0115485688525797;
    parameter Real ep0434_218 = 1.0;
    parameter Real ep1408_218 = 1.0;
    parameter Real ep0423_218 = -1.0;
    parameter Real ep1386_218 = -1.0;
    parameter Real FLUX_VALUE_219 = 1.46007394609031;
    parameter Real v0_219 = 1.46007394609031;
    parameter Real ep0259_219 = 1.0;
    parameter Real ep1039_219 = -1.0;
    parameter Real ep1322_219 = -1.0;
    parameter Real FLUX_VALUE_220 = 1.46007394609031;
    parameter Real v0_220 = 1.46007394609031;
    parameter Real ep0258_220 = 1.0;
    parameter Real ep0991_220 = 1.0;
    parameter Real ep0180_220 = -1.0;
    parameter Real ep0259_220 = -1.0;
    parameter Real FLUX_VALUE_221 = 1.02210851263136e-05;
    parameter Real v0_221 = 1.02210851263136e-05;
    parameter Real ep1084_221 = 1.0;
    parameter Real ep1366_221 = 1.0;
    parameter Real ep0481_221 = -1.0;
    parameter Real FLUX_VALUE_222 = 1.02210838883012e-05;
    parameter Real v0_222 = 1.02210838883012e-05;
    parameter Real ep1212_222 = 1.0;
    parameter Real ep1275_222 = 1.0;
    parameter Real ep1445_222 = 1.0;
    parameter Real ep1207_222 = -1.0;
    parameter Real ep1366_222 = -1.0;
    parameter Real FLUX_VALUE_223 = 0.00508184090624473;
    parameter Real v0_223 = 0.00508184090624473;
    parameter Real ep1377_223 = 1.0;
    parameter Real ep0456_223 = -1.0;
    parameter Real ep0951_223 = -1.0;
    parameter Real FLUX_VALUE_224 = 0.00387115588078458;
    parameter Real v0_224 = 0.00387115588078458;
    parameter Real ep1207_224 = 1.0;
    parameter Real ep1377_224 = 1.0;
    parameter Real ep0204_224 = -1.0;
    parameter Real ep0456_224 = -1.0;
    parameter Real ep1212_224 = -1.0;
    parameter Real FLUX_VALUE_225 = 0.00625077817220815;
    parameter Real v0_225 = 0.00625077817220815;
    parameter Real ep0434_225 = 1.0;
    parameter Real ep1035_225 = 1.0;
    parameter Real ep1606_225 = 1.0;
    parameter Real ep0423_225 = -1.0;
    parameter Real ep0633_225 = -1.0;
    parameter Real ep1379_225 = -1.0;
    parameter Real FLUX_VALUE_226 = 0.00625077817220671;
    parameter Real v0_226 = 0.00625077817220671;
    parameter Real ep0118_226 = 1.0;
    parameter Real ep1212_226 = 1.0;
    parameter Real ep1035_226 = -1.0;
    parameter Real ep1207_226 = -1.0;
    parameter Real FLUX_VALUE_227 = 0.0768531341901953;
    parameter Real v0_227 = 0.0768531341901953;
    parameter Real ep0434_227 = 1.0;
    parameter Real ep0445_227 = 1.0;
    parameter Real ep1399_227 = 1.0;
    parameter Real ep0394_227 = -1.0;
    parameter Real ep1271_227 = -1.0;
    parameter Real ep1322_227 = -1.0;
    parameter Real FLUX_VALUE_228 = 0.0658655350433608;
    parameter Real v0_228 = 0.0658655350433608;
    parameter Real ep0529_228 = 1.0;
    parameter Real ep1198_228 = 1.0;
    parameter Real ep1399_228 = 1.0;
    parameter Real ep0373_228 = -1.0;
    parameter Real ep0456_228 = -1.0;
    parameter Real ep1203_228 = -1.0;
    parameter Real FLUX_VALUE_229 = 0.211286770788091;
    parameter Real v0_229 = 0.211286770788091;
    parameter Real ep0394_229 = 1.0;
    parameter Real ep1360_229 = 1.0;
    parameter Real ep0434_229 = -1.0;
    parameter Real ep1399_229 = -1.0;
    parameter Real FLUX_VALUE_230 = 7.51459670975844e-05;
    parameter Real v0_230 = 7.51459670975844e-05;
    parameter Real ep0158_230 = 1.0;
    parameter Real ep0314_230 = 1.0;
    parameter Real ep0328_230 = -1.0;
    parameter Real ep1322_230 = -1.0;
    parameter Real FLUX_VALUE_231 = 3.75729835487922e-05;
    parameter Real v0_231 = 3.75729835487922e-05;
    parameter Real ep0328_231 = 2.0;
    parameter Real ep0314_231 = -1.0;
    parameter Real ep1405_231 = -1.0;
    parameter Real FLUX_VALUE_232 = 6.43295039602845e-05;
    parameter Real v0_232 = 6.43295039602845e-05;
    parameter Real ep0434_232 = 1.0;
    parameter Real ep1616_232 = 1.0;
    parameter Real ep0586_232 = -1.0;
    parameter Real ep1620_232 = -1.0;
    parameter Real FLUX_VALUE_233 = 0.000133265490575614;
    parameter Real v0_233 = 0.000133265490575614;
    parameter Real ep1559_233 = 1.0;
    parameter Real ep1616_233 = 1.0;
    parameter Real ep0656_233 = -1.0;
    parameter Real ep1620_233 = -1.0;
    parameter Real FLUX_VALUE_234 = 7.22995270761245e-05;
    parameter Real v0_234 = 7.22995270761245e-05;
    parameter Real ep0394_234 = 1.0;
    parameter Real ep1616_234 = 1.0;
    parameter Real ep0582_234 = -1.0;
    parameter Real ep1620_234 = -1.0;
    parameter Real FLUX_VALUE_235 = 9.44495616410234e-05;
    parameter Real v0_235 = 9.44495616410234e-05;
    parameter Real ep0467_235 = 1.0;
    parameter Real ep1616_235 = 1.0;
    parameter Real ep0587_235 = -1.0;
    parameter Real ep1620_235 = -1.0;
    parameter Real FLUX_VALUE_236 = 9.10860206851083e-05;
    parameter Real v0_236 = 9.10860206851083e-05;
    parameter Real ep0739_236 = 1.0;
    parameter Real ep1616_236 = 1.0;
    parameter Real ep0613_236 = -1.0;
    parameter Real ep1620_236 = -1.0;
    parameter Real FLUX_VALUE_237 = 0.0110176132567827;
    parameter Real v0_237 = 0.0110176132567827;
    parameter Real ep0577_237 = 1.0;
    parameter Real ep1408_237 = -1.0;
    parameter Real FLUX_VALUE_238 = 0.0110927592238809;
    parameter Real v0_238 = 0.0110927592238809;
    parameter Real ep0581_238 = 1.0;
    parameter Real ep0577_238 = -1.0;
    parameter Real FLUX_VALUE_239 = 0.000256065575909038;
    parameter Real v0_239 = 0.000256065575909038;
    parameter Real ep1416_239 = 1.0;
    parameter Real ep1569_239 = 1.0;
    parameter Real ep0700_239 = -1.0;
    parameter Real ep1413_239 = -1.0;
    parameter Real FLUX_VALUE_240 = 0.01086200797138;
    parameter Real v0_240 = 0.01086200797138;
    parameter Real ep1038_240 = 1.0;
    parameter Real ep1198_240 = 1.0;
    parameter Real ep0180_240 = -1.0;
    parameter Real ep1025_240 = -1.0;
    parameter Real ep1203_240 = -1.0;
    parameter Real FLUX_VALUE_241 = 0.01086200797138;
    parameter Real v0_241 = 0.01086200797138;
    parameter Real ep0959_241 = 1.0;
    parameter Real ep0991_241 = 1.0;
    parameter Real ep1212_241 = 1.0;
    parameter Real ep1038_241 = -1.0;
    parameter Real ep1207_241 = -1.0;
    parameter Real FLUX_VALUE_242 = 2.04421699920047e-05;
    parameter Real v0_242 = 2.04421699920047e-05;
    parameter Real ep1039_242 = 1.0;
    parameter Real ep1302_242 = 1.0;
    parameter Real ep0231_242 = -1.0;
    parameter Real ep0456_242 = -1.0;
    parameter Real ep0529_242 = -1.0;
    parameter Real FLUX_VALUE_243 = 0.00703639510095562;
    parameter Real v0_243 = 0.00703639510095562;
    parameter Real ep0434_243 = 1.0;
    parameter Real ep1039_243 = 1.0;
    parameter Real ep1607_243 = 1.0;
    parameter Real ep0423_243 = -1.0;
    parameter Real ep0633_243 = -1.0;
    parameter Real ep1428_243 = -1.0;
    parameter Real FLUX_VALUE_244 = 0.0100308480322675;
    parameter Real v0_244 = 0.0100308480322675;
    parameter Real ep0211_244 = 1.0;
    parameter Real ep1212_244 = 1.0;
    parameter Real ep1207_244 = -1.0;
    parameter Real ep1429_244 = -1.0;
    parameter Real FLUX_VALUE_245 = 0.0100308480322675;
    parameter Real v0_245 = 0.0100308480322675;
    parameter Real ep0434_245 = 1.0;
    parameter Real ep1429_245 = 1.0;
    parameter Real ep0261_245 = -1.0;
    parameter Real ep0394_245 = -1.0;
    parameter Real FLUX_VALUE_246 = 0.000129987342075721;
    parameter Real v0_246 = 0.000129987342075721;
    parameter Real ep1203_246 = 1.0;
    parameter Real ep1275_246 = 1.0;
    parameter Real ep1447_246 = 1.0;
    parameter Real ep0037_246 = -1.0;
    parameter Real ep1198_246 = -1.0;
    parameter Real FLUX_VALUE_247 = 0.00012998734207478;
    parameter Real v0_247 = 0.00012998734207478;
    parameter Real ep1212_247 = 1.0;
    parameter Real ep1275_247 = 1.0;
    parameter Real ep1447_247 = 1.0;
    parameter Real ep0037_247 = -1.0;
    parameter Real ep1207_247 = -1.0;
    parameter Real FLUX_VALUE_248 = 0.000259974684150501;
    parameter Real v0_248 = 0.000259974684150501;
    parameter Real ep0190_248 = 2.0;
    parameter Real ep1212_248 = 1.0;
    parameter Real ep0633_248 = -2.0;
    parameter Real ep1207_248 = -1.0;
    parameter Real ep1447_248 = -1.0;
    parameter Real FLUX_VALUE_249 = 3.08174379214594e-05;
    parameter Real v0_249 = 3.08174379214594e-05;
    parameter Real ep0666_249 = 1.0;
    parameter Real ep0056_249 = 3.0;
    parameter Real ep0672_249 = -1.0;
    parameter Real FLUX_VALUE_250 = 0.00217467874480193;
    parameter Real v0_250 = 0.00217467874480193;
    parameter Real ep0394_250 = 1.0;
    parameter Real ep1467_250 = 1.0;
    parameter Real ep0298_250 = -1.0;
    parameter Real ep1322_250 = -1.0;
    parameter Real FLUX_VALUE_251 = 0.00217467874480475;
    parameter Real v0_251 = 0.00217467874480475;
    parameter Real ep1212_251 = 3.0;
    parameter Real ep1469_251 = 1.0;
    parameter Real ep0841_251 = -1.0;
    parameter Real ep1207_251 = -3.0;
    parameter Real FLUX_VALUE_252 = 0.0047288825765441;
    parameter Real v0_252 = 0.0047288825765441;
    parameter Real ep1212_252 = 1.0;
    parameter Real ep1620_252 = 1.0;
    parameter Real ep1207_252 = -1.0;
    parameter Real ep1616_252 = -1.0;
    parameter Real FLUX_VALUE_253 = 0.00726411015276989;
    parameter Real v0_253 = 0.00726411015276989;
    parameter Real ep1238_253 = 1.0;
    parameter Real ep1045_253 = -1.0;
    parameter Real ep1322_253 = -1.0;
    parameter Real FLUX_VALUE_254 = 0.00726411015276649;
    parameter Real v0_254 = 0.00726411015276649;
    parameter Real ep0434_254 = 1.0;
    parameter Real ep1045_254 = 1.0;
    parameter Real ep1608_254 = 1.0;
    parameter Real ep0423_254 = -1.0;
    parameter Real ep0633_254 = -1.0;
    parameter Real ep1491_254 = -1.0;
    parameter Real FLUX_VALUE_255 = 0.000136629031085814;
    parameter Real v0_255 = 0.000136629031085814;
    parameter Real ep0306_255 = 1.0;
    parameter Real ep0654_255 = 1.0;
    parameter Real ep0625_255 = -1.0;
    parameter Real ep0649_255 = -1.0;
    parameter Real FLUX_VALUE_256 = 0.000530955594768567;
    parameter Real v0_256 = 0.000530955594768567;
    parameter Real ep0551_256 = 1.0;
    parameter Real ep0557_256 = 1.0;
    parameter Real ep0764_256 = -1.0;
    parameter Real ep1427_256 = -1.0;
    parameter Real FLUX_VALUE_257 = 0.000530955595806181;
    parameter Real v0_257 = 0.000530955595806181;
    parameter Real ep0764_257 = 1.0;
    parameter Real ep1427_257 = 1.0;
    parameter Real ep0581_257 = -1.0;
    parameter Real ep1408_257 = -1.0;
    parameter Real FLUX_VALUE_258 = 0.0105618036280732;
    parameter Real v0_258 = 0.0105618036280732;
    parameter Real ep0557_258 = 1.0;
    parameter Real ep0764_258 = 1.0;
    parameter Real ep0551_258 = -1.0;
    parameter Real ep0581_258 = -1.0;
    parameter Real FLUX_VALUE_259 = 0.000888088702062361;
    parameter Real v0_259 = 0.000888088702062361;
    parameter Real ep0409_259 = 1.0;
    parameter Real ep1322_259 = -1.0;
    parameter Real ep1520_259 = -1.0;
    parameter Real FLUX_VALUE_260 = 0.000510195573579038;
    parameter Real v0_260 = 0.000510195573579038;
    parameter Real ep0619_260 = 1.0;
    parameter Real ep0056_260 = 4.33333333333333;
    parameter Real ep1524_260 = -1.0;
    parameter Real FLUX_VALUE_261 = 0.850333043996831;
    parameter Real v0_261 = 0.850333043996831;
    parameter Real ep0629_261 = 1.0;
    parameter Real ep0764_261 = -1.0;
    parameter Real FLUX_VALUE_262 = 0.00107785124523996;
    parameter Real v0_262 = 0.00107785124523996;
    parameter Real ep0086_262 = 1.0;
    parameter Real ep1039_262 = 1.0;
    parameter Real ep0764_262 = -1.0;
    parameter Real ep1048_262 = -1.0;
    parameter Real FLUX_VALUE_263 = 0.00107785124523807;
    parameter Real v0_263 = 0.00107785124523807;
    parameter Real ep0434_263 = 1.0;
    parameter Real ep1048_263 = 1.0;
    parameter Real ep1610_263 = 1.0;
    parameter Real ep0423_263 = -1.0;
    parameter Real ep0633_263 = -1.0;
    parameter Real ep1527_263 = -1.0;
    parameter Real FLUX_VALUE_264 = 0.00387115588138798;
    parameter Real v0_264 = 0.00387115588138798;
    parameter Real ep0204_264 = 1.0;
    parameter Real ep0991_264 = 1.0;
    parameter Real ep0180_264 = -1.0;
    parameter Real ep1051_264 = -1.0;
    parameter Real FLUX_VALUE_265 = 0.00387115588078469;
    parameter Real v0_265 = 0.00387115588078469;
    parameter Real ep0434_265 = 1.0;
    parameter Real ep1051_265 = 1.0;
    parameter Real ep1612_265 = 1.0;
    parameter Real ep0423_265 = -1.0;
    parameter Real ep0633_265 = -1.0;
    parameter Real ep1533_265 = -1.0;
    parameter Real FLUX_VALUE_266 = 0.00192419218784248;
    parameter Real v0_266 = 0.00192419218784248;
    parameter Real ep0434_266 = 1.0;
    parameter Real ep1545_266 = 1.0;
    parameter Real ep0394_266 = -1.0;
    parameter Real ep1538_266 = -1.0;
    parameter Real FLUX_VALUE_267 = 0.106703478028585;
    parameter Real v0_267 = 0.106703478028585;
    parameter Real ep0567_267 = 1.0;
    parameter Real ep1559_267 = 1.0;
    parameter Real ep0633_267 = -1.0;
    parameter Real ep1543_267 = -1.0;
    parameter Real FLUX_VALUE_268 = 0.01004223378483;
    parameter Real v0_268 = 0.01004223378483;
    parameter Real ep0232_268 = 1.0;
    parameter Real ep0991_268 = 1.0;
    parameter Real ep0180_268 = -1.0;
    parameter Real ep1056_268 = -1.0;
    parameter Real FLUX_VALUE_269 = 0.010042233784859;
    parameter Real v0_269 = 0.010042233784859;
    parameter Real ep0434_269 = 1.0;
    parameter Real ep1056_269 = 1.0;
    parameter Real ep1614_269 = 1.0;
    parameter Real ep0423_269 = -1.0;
    parameter Real ep0633_269 = -1.0;
    parameter Real ep1561_269 = -1.0;
    parameter Real FLUX_VALUE_270 = 0.212107675642733;
    parameter Real v0_270 = 0.212107675642733;
    parameter Real ep0420_270 = 1.0;
    parameter Real ep0419_270 = -1.0;
    parameter Real FLUX_VALUE_271 = 1.0;
    parameter Real v0_271 = 1.0;
    parameter Real ep0565_271 = 1.0;
    parameter Real ep0563_271 = -1.0;
    parameter Real FLUX_VALUE_272 = 0.0300082373429098;
    parameter Real v0_272 = 0.0300082373429098;
    parameter Real ep1324_272 = 1.0;
    parameter Real ep1322_272 = -1.0;
    parameter Real FLUX_VALUE_273 = 0.00293372891749683;
    parameter Real v0_273 = 0.00293372891749683;
    parameter Real ep1468_273 = 1.0;
    parameter Real ep1467_273 = -1.0;
    parameter Real FLUX_VALUE_274 = 0.087517608841966;
    parameter Real v0_274 = 0.087517608841966;
    parameter Real ep0456_274 = 1.0;
    parameter Real ep0445_274 = -1.0;
    parameter Real FLUX_VALUE_275 = 1.51989569594335;
    parameter Real v0_275 = 1.51989569594335;
    parameter Real ep0456_275 = 1.0;
    parameter Real FLUX_VALUE_276 = 9.44495616916319e-05;
    parameter Real v0_276 = 9.44495616916319e-05;
    parameter Real ep0394_276 = 1.0;
    parameter Real ep0587_276 = 1.0;
    parameter Real ep0434_276 = -1.0;
    parameter Real ep0589_276 = -1.0;
    parameter Real FLUX_VALUE_277 = 0.000136629031036409;
    parameter Real v0_277 = 0.000136629031036409;
    parameter Real ep0394_277 = 1.0;
    parameter Real ep0582_277 = 1.0;
    parameter Real ep0434_277 = -1.0;
    parameter Real ep0584_277 = -1.0;
    parameter Real FLUX_VALUE_278 = 2.87599469319674;
    parameter Real v0_278 = 2.87599469319674;
    parameter Real ep0722_278 = 1.0;
    parameter Real FLUX_VALUE_279 = 2.94122930652654;
    parameter Real v0_279 = 2.94122930652654;
    parameter Real ep1277_279 = 1.0;
    parameter Real ep1275_279 = -1.0;
    parameter Real FLUX_VALUE_280 = 3.75729835487922e-05;
    parameter Real v0_280 = 3.75729835487922e-05;
    parameter Real ep0313_280 = 1.0;
    parameter Real ep0314_280 = -1.0;
    parameter Real ep1322_280 = -1.0;
    parameter Real FLUX_VALUE_281 = 0.0379525086351436;
    parameter Real v0_281 = 0.0379525086351436;
    parameter Real ep0002_281 = 1.1348;
    parameter Real ep0423_281 = 0.046;
    parameter Real ep0434_281 = 59.276;
    parameter Real ep0526_281 = 0.0447;
    parameter Real ep0584_281 = 0.0036;
    parameter Real ep0589_281 = 0.0024;
    parameter Real ep0615_281 = 0.0024;
    parameter Real ep0649_281 = 0.0036;
    parameter Real ep0773_281 = 0.5185;
    parameter Real ep0782_281 = 0.046;
    parameter Real ep1107_281 = 0.8079;
    parameter Real ep1405_281 = 0.00099;
    parameter Real ep1467_281 = 0.02;
    parameter Real ep1520_281 = 0.0234;
    parameter Real ep1545_281 = 0.0599;
    parameter Real ep0004_281 = 1.1348;
    parameter Real ep0404_281 = 0.4588;
    parameter Real ep0428_281 = 0.1607;
    parameter Real ep0430_281 = 0.1017;
    parameter Real ep0432_281 = 0.2975;
    parameter Real ep0542_281 = 0.0066;
    parameter Real ep0747_281 = 0.1054;
    parameter Real ep0748_281 = 0.3018;
    parameter Real ep0757_281 = 0.2904;
    parameter Real ep0832_281 = 0.0663;
    parameter Real ep0847_281 = 0.1927;
    parameter Real ep1077_281 = 0.2964;
    parameter Real ep1099_281 = 0.2862;
    parameter Real ep1148_281 = 0.0507;
    parameter Real ep1314_281 = 0.1339;
    parameter Real ep1379_281 = 0.1647;
    parameter Real ep1337_281 = 0.00039;
    parameter Real ep0089_281 = 0.001583;
    parameter Real ep1428_281 = 0.1854;
    parameter Real ep1491_281 = 0.1914;
    parameter Real ep1527_281 = 0.0284;
    parameter Real ep1533_281 = 0.102;
    parameter Real ep1561_281 = 0.2646;
    parameter Real ep0122_281 = 5.6e-05;
    parameter Real ep0918_281 = 0.000538625;
    parameter Real ep0657_281 = 9.6e-05;
    parameter Real ep0662_281 = 0.000125;
    parameter Real ep0666_281 = 0.0056;
    parameter Real ep0672_281 = 0.000812;
    parameter Real ep0056_281 = 0.000892666666666666;
    parameter Real ep0700_281 = 0.000114;
    parameter Real ep1059_281 = 3.2e-05;
    parameter Real ep1346_281 = 0.00288;
    parameter Real ep1351_281 = 0.000697;
    parameter Real ep1524_281 = 0.000781;
    parameter Real ep1569_281 = 1.5e-05;
    parameter Real cell = 1.0;
    parameter Real extracellular = 1.0;



    Real s_0002;
    Real s_0004;
    Real s_0008;
    Real s_0009;
    Real s_0010;
    Real s_0015;
    Real s_0016;
    Real s_0018;
    Real s_0019;
    Real s_0028;
    Real s_0037;
    Real s_0039;
    Real s_0056;
    Real s_0061;
    Real s_0066;
    Real s_0075;
    Real s_0076;
    Real s_0077;
    Real s_0078;
    Real s_0082;
    Real s_0086;
    Real s_0089;
    Real s_0118;
    Real s_0120;
    Real s_0122;
    Real s_0126;
    Real s_0141;
    Real s_0142;
    Real s_0145;
    Real s_0146;
    Real s_0158;
    Real s_0162;
    Real s_0165;
    Real s_0176;
    Real s_0178;
    Real s_0180;
    Real s_0188;
    Real s_0190;
    Real s_0201;
    Real s_0204;
    Real s_0207;
    Real s_0209;
    Real s_0210;
    Real s_0211;
    Real s_0218;
    Real s_0231;
    Real s_0232;
    Real s_0258;
    Real s_0259;
    Real s_0260;
    Real s_0261;
    Real s_0262;
    Real s_0291;
    Real s_0295;
    Real s_0296;
    Real s_0297;
    Real s_0298;
    Real s_0299;
    Real s_0300;
    Real s_0301;
    Real s_0302;
    Real s_0304;
    Real s_0306;
    Real s_0312;
    Real s_0313;
    Real s_0314;
    Real s_0322;
    Real s_0324;
    Real s_0325;
    Real s_0326;
    Real s_0327;
    Real s_0328;
    Real s_0349;
    Real s_0362;
    Real s_0367;
    Real s_0373;
    Real s_0380;
    Real s_0386;
    Real s_0390;
    Real s_0393;
    Real s_0394;
    Real s_0403;
    Real s_0404;
    Real s_0409;
    Real s_0419;
    Real s_0420;
    Real s_0423;
    Real s_0427;
    Real s_0428;
    Real s_0430;
    Real s_0432;
    Real s_0434;
    Real s_0445;
    Real s_0454;
    Real s_0455;
    Real s_0456;
    Real s_0458;
    Real s_0467;
    Real s_0471;
    Real s_0475;
    Real s_0481;
    Real s_0493;
    Real s_0499;
    Real s_0515;
    Real s_0516;
    Real s_0522;
    Real s_0526;
    Real s_0529;
    Real s_0539;
    Real s_0542;
    Real s_0550;
    Real s_0551;
    Real s_0555;
    Real s_0557;
    Real s_0563;
    Real s_0565;
    Real s_0567;
    Real s_0568;
    Real s_0573;
    Real s_0574;
    Real s_0577;
    Real s_0581;
    Real s_0582;
    Real s_0584;
    Real s_0586;
    Real s_0587;
    Real s_0589;
    Real s_0595;
    Real s_0602;
    Real s_0613;
    Real s_0615;
    Real s_0619;
    Real s_0625;
    Real s_0629;
    Real s_0633;
    Real s_0644;
    Real s_0645;
    Real s_0649;
    Real s_0654;
    Real s_0656;
    Real s_0657;
    Real s_0662;
    Real s_0664;
    Real s_0666;
    Real s_0672;
    Real s_0700;
    Real s_0709;
    Real s_0710;
    Real s_0722;
    Real s_0723;
    Real s_0725;
    Real s_0739;
    Real s_0743;
    Real s_0745;
    Real s_0747;
    Real s_0748;
    Real s_0750;
    Real s_0754;
    Real s_0757;
    Real s_0764;
    Real s_0767;
    Real s_0773;
    Real s_0782;
    Real s_0785;
    Real s_0832;
    Real s_0835;
    Real s_0836;
    Real s_0837;
    Real s_0841;
    Real s_0847;
    Real s_0849;
    Real s_0918;
    Real s_0940;
    Real s_0943;
    Real s_0951;
    Real s_0953;
    Real s_0955;
    Real s_0959;
    Real s_0965;
    Real s_0969;
    Real s_0973;
    Real s_0978;
    Real s_0979;
    Real s_0980;
    Real s_0981;
    Real s_0991;
    Real s_0999;
    Real s_1003;
    Real s_1006;
    Real s_1010;
    Real s_1011;
    Real s_1012;
    Real s_1014;
    Real s_1016;
    Real s_1021;
    Real s_1025;
    Real s_1029;
    Real s_1032;
    Real s_1035;
    Real s_1038;
    Real s_1039;
    Real s_1045;
    Real s_1048;
    Real s_1051;
    Real s_1056;
    Real s_1059;
    Real s_1065;
    Real s_1073;
    Real s_1077;
    Real s_1084;
    Real s_1099;
    Real s_1101;
    Real s_1107;
    Real s_1148;
    Real s_1153;
    Real s_1161;
    Real s_1176;
    Real s_1182;
    Real s_1187;
    Real s_1191;
    Real s_1192;
    Real s_1194;
    Real s_1198;
    Real s_1203;
    Real s_1207;
    Real s_1212;
    Real s_1233;
    Real s_1238;
    Real s_1255;
    Real s_1266;
    Real s_1269;
    Real s_1270;
    Real s_1271;
    Real s_1275;
    Real s_1277;
    Real s_1286;
    Real s_1302;
    Real s_1314;
    Real s_1322;
    Real s_1324;
    Real s_1331;
    Real s_1337;
    Real s_1342;
    Real s_1343;
    Real s_1346;
    Real s_1351;
    Real s_1360;
    Real s_1364;
    Real s_1365;
    Real s_1366;
    Real s_1376;
    Real s_1377;
    Real s_1379;
    Real s_1386;
    Real s_1399;
    Real s_1405;
    Real s_1408;
    Real s_1413;
    Real s_1416;
    Real s_1427;
    Real s_1428;
    Real s_1429;
    Real s_1445;
    Real s_1447;
    Real s_1449;
    Real s_1454;
    Real s_1467;
    Real s_1468;
    Real s_1469;
    Real s_1487;
    Real s_1491;
    Real s_1520;
    Real s_1524;
    Real s_1527;
    Real s_1533;
    Real s_1535;
    Real s_1537;
    Real s_1538;
    Real s_1543;
    Real s_1545;
    Real s_1559;
    Real s_1561;
    Real s_1565;
    Real s_1569;
    Real s_1576;
    Real s_1577;
    Real s_1578;
    Real s_1579;
    Real s_1582;
    Real s_1583;
    Real s_1585;
    Real s_1587;
    Real s_1589;
    Real s_1590;
    Real s_1591;
    Real s_1593;
    Real s_1594;
    Real s_1596;
    Real s_1598;
    Real s_1600;
    Real s_1602;
    Real s_1604;
    Real s_1606;
    Real s_1607;
    Real s_1608;
    Real s_1610;
    Real s_1612;
    Real s_1614;
    Real s_1616;
    Real s_1620;
    Real e_0001;
    Real e_0004;
    Real e_0006;
    Real e_0007;
    Real e_0008;
    Real e_0010;
    Real e_0011;
    Real e_0012;
    Real e_0016;
    Real e_0017;
    Real e_0020;
    Real e_0022;
    Real e_0025;
    Real e_0026;
    Real e_0028;
    Real e_0029;
    Real e_0030;
    Real e_0031;
    Real e_0038;
    Real e_0045;
    Real e_0054;
    Real e_0057;
    Real e_0062;
    Real e_0063;
    Real e_0064;
    Real e_0065;
    Real e_0071;
    Real e_0074;
    Real e_0077;
    Real e_0079;
    Real e_0084;
    Real e_0085;
    Real e_0086;
    Real e_0087;
    Real e_0088;
    Real e_0089;
    Real e_0090;
    Real e_0091;
    Real e_0092;
    Real e_0100;
    Real e_0101;
    Real e_0103;
    Real e_0104;
    Real e_0106;
    Real e_0107;
    Real e_0111;
    Real e_0113;
    Real e_0117;
    Real e_0122;
    Real e_0124;
    Real e_0128;
    Real e_0129;
    Real e_0133;
    Real e_0134;
    Real e_0135;
    Real e_0136;
    Real e_0137;
    Real e_0139;
    Real e_0141;
    Real e_0142;
    Real e_0146;
    Real e_0154;
    Real e_0160;
    Real e_0165;
    Real e_0167;
    Real e_0168;
    Real e_0169;
    Real e_0171;
    Real e_0175;
    Real e_0176;
    Real e_0177;
    Real e_0179;
    Real e_0181;
    Real e_0182;
    Real e_0186;
    Real e_0194;
    Real e_0196;
    Real e_0203;
    Real e_0204;
    Real e_0206;
    Real e_0214;
    Real e_0218;
    Real e_0219;
    Real e_0220;
    Real e_0231;
    Real e_0233;
    Real e_0234;
    Real e_0237;
    Real e_0239;
    Real e_0242;
    Real e_0243;
    Real e_0249;
    Real e_0250;
    Real e_0255;
    Real e_0269;
    Real e_0271;
    Real e_0273;
    Real e_0276;
    Real e_0278;
    Real e_0280;
    Real e_0281;
    Real e_0283;
    Real e_0290;
    Real e_0291;
    Real e_0294;
    Real e_0296;
    Real e_0297;
    Real e_0298;
    Real e_0299;
    Real e_0303;
    Real e_0304;
    Real e_0306;
    Real e_0311;
    Real e_0312;
    Real e_0314;
    Real e_0317;
    Real e_0320;
    Real e_0321;
    Real e_0322;
    Real e_0325;
    Real e_0326;
    Real e_0328;
    Real e_0329;
    Real e_0330;
    Real e_0334;
    Real e_0340;
    Real e_0342;
    Real e_0343;
    Real e_0346;
    Real e_0347;
    Real e_0348;
    Real e_0352;
    Real e_0353;
    Real e_0355;
    Real e_0364;
    Real e_0365;
    Real e_0367;
    Real e_0368;
    Real e_0372;
    Real e_0376;
    Real e_0379;
    Real e_0380;
    Real e_0381;
    Real e_0382;
    Real e_0385;
    Real e_0387;
    Real e_0389;
    Real e_0390;
    Real e_0392;
    Real e_0393;
    Real e_0396;
    Real e_0397;
    Real e_0398;
    Real e_0401;
    Real e_0405;
    Real e_0409;
    Real e_0418;
    Real e_0422;
    Real e_0424;
    Real e_0425;
    Real e_0426;
    Real e_0427;
    Real e_0428;
    Real e_0431;
    Real e_0434;
    Real e_0435;
    Real e_0436;
    Real e_0440;
    Real e_0448;
    Real e_0452;
    Real e_0454;
    Real e_0456;
    Real e_0457;
    Real e_0458;
    Real e_0462;
    Real e_0463;
    Real e_0465;
    Real e_0467;
    Real e_0469;
    Real e_0470;
    Real e_0472;
    Real e_0475;
    Real e_0476;
    Real e_0489;
    Real e_0490;
    Real e_0492;
    Real e_0495;
    Real e_0496;
    Real e_0499;
    Real e_0506;
    Real e_0508;
    Real e_0510;
    Real e_0512;
    Real e_0514;
    Real e_0515;
    Real e_0525;
    Real e_0528;
    Real e_0531;
    Real e_0536;
    Real e_0540;
    Real e_0541;
    Real e_0542;
    Real e_0545;
    Real e_0547;
    Real e_0548;
    Real e_0549;
    Real e_0550;
    Real e_0556;
    Real e_0557;
    Real e_0561;
    Real e_0563;
    Real e_0565;
    Real e_0567;
    Real e_0568;
    Real e_0571;
    Real e_0574;
    Real e_0576;
    Real e_0578;
    Real e_0582;
    Real e_0585;
    Real e_0586;
    Real e_0591;
    Real e_0594;
    Real e_0603;
    Real e_0607;
    Real e_0610;
    Real e_0611;
    Real e_0613;
    Real e_0615;
    Real e_0629;
    Real e_0631;
    Real e_0632;
    Real e_0633;
    Real e_0637;
    Real e_0638;
    Real e_0639;
    Real e_0642;
    Real e_0644;
    Real e_0645;
    Real e_0658;
    Real e_0667;
    Real e_0674;
    Real e_0675;
    Real e_0682;
    Real e_0684;
    Real e_0685;
    Real e_0686;
    Real e_0687;
    Real e_0690;
    Real e_0692;
    Real e_0693;
    Real e_0697;
    Real e_0699;
    Real e_0705;
    Real e_0708;
    Real e_0711;
    Real e_0712;
    Real e_0714;
    Real e_0716;
    Real e_0724;
    Real e_0729;
    Real e_0733;
    Real e_0734;
    Real e_0736;
    Real e_0737;
    Real e_0741;
    Real e_0742;
    Real e_0743;
    Real e_0744;
    Real e_0745;
    Real e_0746;
    Real e_0747;
    Real e_0750;
    Real e_0752;
    Real e_0753;
    Real e_0754;
    Real e_0755;
    Real e_0756;
    Real e_0757;
    Real e_0761;
    Real e_0763;
    Real e_0765;
    Real e_0769;
    Real e_0771;
    Real e_0774;
    Real e_0775;
    Real e_0778;
    Real e_0788;
    Real e_0791;
    Real e_0793;
    Real e_0799;
    Real e_0800;
    Real e_0802;
    Real e_0805;
    Real e_0808;
    Real e_0812;
    Real e_0813;
    Real e_0826;
    Real e_0827;
    Real e_0829;
    Real e_0830;
    Real e_0832;
    Real e_0836;
    Real e_0838;
    Real e_0840;
    Real e_0841;
    Real e_0848;
    Real e_0850;
    Real e_0851;
    Real e_0852;
    Real e_0855;
    Real e_0860;
    Real e_0862;
    Real e_0867;
    Real e_0869;
    Real e_0872;
    Real e_0875;
    Real e_0880;
    Real e_0883;
    Real e_0888;
    Real e_0889;
    Real e_0890;
    Real e_0894;
    Real e_0895;
    Real e_0899;
    Real e_0903;
    Real e_0904;
    Real e_0910;
    Real e_0914;
    Real e_0915;
    Real e_0922;
    Real e_0926;
    Real e_0934;
    Real e_0940;
    Real e_0947;
    Real e_0953;
    Real e_0955;
    Real e_0959;
    Real e_0962;
    Real e_0963;
    Real e_0964;
    Real e_0970;
    Real e_0973;
    Real e_0975;
    Real e_0976;
    Real e_0978;
    Real e_0980;

initial equation
    s_0002 = 0.1;
    s_0004 = 0.1;
    s_0008 = 0.1;
    s_0009 = 0.1;
    s_0010 = 0.1;
    s_0015 = 0.1;
    s_0016 = 0.1;
    s_0018 = 0.1;
    s_0019 = 0.1;
    s_0028 = 0.1;
    s_0037 = 0.1;
    s_0039 = 0.1;
    s_0056 = 0.1;
    s_0061 = 0.1;
    s_0066 = 0.1;
    s_0075 = 0.1;
    s_0076 = 0.1;
    s_0077 = 0.1;
    s_0078 = 0.1;
    s_0082 = 0.1;
    s_0086 = 0.1;
    s_0089 = 0.1;
    s_0118 = 0.1;
    s_0120 = 0.1;
    s_0122 = 0.1;
    s_0126 = 0.1;
    s_0141 = 0.1;
    s_0142 = 0.1;
    s_0145 = 0.1;
    s_0146 = 0.1;
    s_0158 = 0.1;
    s_0162 = 0.1;
    s_0165 = 0.1;
    s_0176 = 0.1;
    s_0178 = 0.1;
    s_0180 = 0.1;
    s_0188 = 0.1;
    s_0190 = 0.1;
    s_0201 = 0.1;
    s_0204 = 0.1;
    s_0207 = 0.1;
    s_0209 = 0.1;
    s_0210 = 0.1;
    s_0211 = 0.1;
    s_0218 = 0.1;
    s_0231 = 0.1;
    s_0232 = 0.1;
    s_0258 = 0.1;
    s_0259 = 0.1;
    s_0260 = 0.1;
    s_0261 = 0.1;
    s_0262 = 0.1;
    s_0291 = 0.1;
    s_0295 = 0.1;
    s_0296 = 0.1;
    s_0297 = 0.1;
    s_0298 = 0.1;
    s_0299 = 0.1;
    s_0300 = 0.1;
    s_0301 = 0.1;
    s_0302 = 0.1;
    s_0304 = 0.1;
    s_0306 = 0.1;
    s_0312 = 0.1;
    s_0313 = 0.1;
    s_0314 = 0.1;
    s_0322 = 0.1;
    s_0324 = 0.1;
    s_0325 = 0.1;
    s_0326 = 0.1;
    s_0327 = 0.1;
    s_0328 = 0.1;
    s_0349 = 0.1;
    s_0362 = 0.1;
    s_0367 = 0.1;
    s_0373 = 0.1;
    s_0380 = 0.1;
    s_0386 = 0.1;
    s_0390 = 0.1;
    s_0393 = 0.1;
    s_0394 = 0.1;
    s_0403 = 0.1;
    s_0404 = 0.1;
    s_0409 = 0.1;
    s_0419 = 0.1;
    s_0420 = 1.0;
    s_0423 = 0.1;
    s_0427 = 0.1;
    s_0428 = 0.1;
    s_0430 = 0.1;
    s_0432 = 0.1;
    s_0434 = 0.1;
    s_0445 = 0.1;
    s_0454 = 0.1;
    s_0455 = 0.1;
    s_0456 = 0.1;
    s_0458 = 0.0;
    s_0467 = 0.1;
    s_0471 = 0.1;
    s_0475 = 0.1;
    s_0481 = 0.1;
    s_0493 = 0.1;
    s_0499 = 0.1;
    s_0515 = 0.1;
    s_0516 = 0.1;
    s_0522 = 0.1;
    s_0526 = 0.1;
    s_0529 = 0.1;
    s_0539 = 0.1;
    s_0542 = 0.1;
    s_0550 = 0.1;
    s_0551 = 0.1;
    s_0555 = 0.1;
    s_0557 = 0.1;
    s_0563 = 0.1;
    s_0565 = 1.0;
    s_0567 = 0.1;
    s_0568 = 0.1;
    s_0573 = 0.1;
    s_0574 = 0.1;
    s_0577 = 0.1;
    s_0581 = 0.1;
    s_0582 = 0.1;
    s_0584 = 0.1;
    s_0586 = 0.1;
    s_0587 = 0.1;
    s_0589 = 0.1;
    s_0595 = 0.1;
    s_0602 = 0.1;
    s_0613 = 0.1;
    s_0615 = 0.1;
    s_0619 = 0.1;
    s_0625 = 0.1;
    s_0629 = 0.1;
    s_0633 = 0.1;
    s_0644 = 0.1;
    s_0645 = 0.1;
    s_0649 = 0.1;
    s_0654 = 0.1;
    s_0656 = 0.1;
    s_0657 = 0.1;
    s_0662 = 0.1;
    s_0664 = 0.1;
    s_0666 = 0.1;
    s_0672 = 0.1;
    s_0700 = 0.1;
    s_0709 = 0.1;
    s_0710 = 0.1;
    s_0722 = 0.1;
    s_0723 = 0.0;
    s_0725 = 0.1;
    s_0739 = 0.1;
    s_0743 = 0.1;
    s_0745 = 0.1;
    s_0747 = 0.1;
    s_0748 = 0.1;
    s_0750 = 0.1;
    s_0754 = 0.1;
    s_0757 = 0.1;
    s_0764 = 0.1;
    s_0767 = 0.1;
    s_0773 = 0.1;
    s_0782 = 0.1;
    s_0785 = 0.1;
    s_0832 = 0.1;
    s_0835 = 0.1;
    s_0836 = 0.1;
    s_0837 = 0.1;
    s_0841 = 0.1;
    s_0847 = 0.1;
    s_0849 = 0.1;
    s_0918 = 0.1;
    s_0940 = 0.1;
    s_0943 = 0.1;
    s_0951 = 0.1;
    s_0953 = 0.1;
    s_0955 = 0.1;
    s_0959 = 0.1;
    s_0965 = 0.1;
    s_0969 = 0.1;
    s_0973 = 0.1;
    s_0978 = 0.1;
    s_0979 = 0.1;
    s_0980 = 0.1;
    s_0981 = 0.1;
    s_0991 = 0.1;
    s_0999 = 0.1;
    s_1003 = 0.1;
    s_1006 = 0.1;
    s_1010 = 0.1;
    s_1011 = 0.1;
    s_1012 = 0.1;
    s_1014 = 0.1;
    s_1016 = 0.1;
    s_1021 = 0.1;
    s_1025 = 0.1;
    s_1029 = 0.1;
    s_1032 = 0.1;
    s_1035 = 0.1;
    s_1038 = 0.1;
    s_1039 = 0.1;
    s_1045 = 0.1;
    s_1048 = 0.1;
    s_1051 = 0.1;
    s_1056 = 0.1;
    s_1059 = 0.1;
    s_1065 = 0.1;
    s_1073 = 0.1;
    s_1077 = 0.1;
    s_1084 = 0.1;
    s_1099 = 0.1;
    s_1101 = 0.1;
    s_1107 = 0.1;
    s_1148 = 0.1;
    s_1153 = 0.1;
    s_1161 = 0.1;
    s_1176 = 0.1;
    s_1182 = 0.1;
    s_1187 = 0.1;
    s_1191 = 0.1;
    s_1192 = 0.1;
    s_1194 = 0.1;
    s_1198 = 0.1;
    s_1203 = 0.1;
    s_1207 = 0.1;
    s_1212 = 0.1;
    s_1233 = 0.1;
    s_1238 = 0.1;
    s_1255 = 0.1;
    s_1266 = 0.1;
    s_1269 = 0.1;
    s_1270 = 0.1;
    s_1271 = 0.1;
    s_1275 = 0.1;
    s_1277 = 1.0;
    s_1286 = 0.1;
    s_1302 = 0.1;
    s_1314 = 0.1;
    s_1322 = 0.1;
    s_1324 = 1.0;
    s_1331 = 0.1;
    s_1337 = 0.1;
    s_1342 = 0.1;
    s_1343 = 0.1;
    s_1346 = 0.1;
    s_1351 = 0.1;
    s_1360 = 0.1;
    s_1364 = 0.1;
    s_1365 = 0.1;
    s_1366 = 0.1;
    s_1376 = 0.1;
    s_1377 = 0.1;
    s_1379 = 0.1;
    s_1386 = 0.1;
    s_1399 = 0.1;
    s_1405 = 0.1;
    s_1408 = 0.1;
    s_1413 = 0.1;
    s_1416 = 0.1;
    s_1427 = 0.1;
    s_1428 = 0.1;
    s_1429 = 0.1;
    s_1445 = 0.1;
    s_1447 = 0.1;
    s_1449 = 0.1;
    s_1454 = 0.1;
    s_1467 = 0.1;
    s_1468 = 1.0;
    s_1469 = 0.1;
    s_1487 = 0.1;
    s_1491 = 0.1;
    s_1520 = 0.1;
    s_1524 = 0.1;
    s_1527 = 0.1;
    s_1533 = 0.1;
    s_1535 = 0.1;
    s_1537 = 0.1;
    s_1538 = 0.1;
    s_1543 = 0.1;
    s_1545 = 0.1;
    s_1559 = 0.1;
    s_1561 = 0.1;
    s_1565 = 0.1;
    s_1569 = 0.1;
    s_1576 = 0.1;
    s_1577 = 0.1;
    s_1578 = 0.1;
    s_1579 = 0.1;
    s_1582 = 0.1;
    s_1583 = 0.1;
    s_1585 = 0.1;
    s_1587 = 0.1;
    s_1589 = 0.1;
    s_1590 = 0.1;
    s_1591 = 0.1;
    s_1593 = 0.1;
    s_1594 = 0.1;
    s_1596 = 0.1;
    s_1598 = 0.1;
    s_1600 = 0.1;
    s_1602 = 0.1;
    s_1604 = 0.1;
    s_1606 = 0.1;
    s_1607 = 0.1;
    s_1608 = 0.1;
    s_1610 = 0.1;
    s_1612 = 0.1;
    s_1614 = 0.1;
    s_1616 = 0.1;
    s_1620 = 0.1;
    e_0001 = 0.001;
    e_0004 = 0.001;
    e_0006 = 0.001;
    e_0007 = 0.001;
    e_0008 = 0.001;
    e_0010 = 0.001;
    e_0011 = 0.001;
    e_0012 = 0.001;
    e_0016 = 0.001;
    e_0017 = 0.001;
    e_0020 = 0.001;
    e_0022 = 0.001;
    e_0025 = 0.001;
    e_0026 = 0.001;
    e_0028 = 0.001;
    e_0029 = 0.001;
    e_0030 = 0.001;
    e_0031 = 0.001;
    e_0038 = 0.001;
    e_0045 = 0.001;
    e_0054 = 0.001;
    e_0057 = 0.001;
    e_0062 = 0.001;
    e_0063 = 0.001;
    e_0064 = 0.001;
    e_0065 = 0.001;
    e_0071 = 0.001;
    e_0074 = 0.001;
    e_0077 = 0.001;
    e_0079 = 0.001;
    e_0084 = 0.001;
    e_0085 = 0.001;
    e_0086 = 0.001;
    e_0087 = 0.001;
    e_0088 = 0.001;
    e_0089 = 0.001;
    e_0090 = 0.001;
    e_0091 = 0.001;
    e_0092 = 0.001;
    e_0100 = 0.001;
    e_0101 = 0.001;
    e_0103 = 0.001;
    e_0104 = 0.001;
    e_0106 = 0.001;
    e_0107 = 0.001;
    e_0111 = 0.001;
    e_0113 = 0.001;
    e_0117 = 0.001;
    e_0122 = 0.001;
    e_0124 = 0.001;
    e_0128 = 0.001;
    e_0129 = 0.001;
    e_0133 = 0.001;
    e_0134 = 0.001;
    e_0135 = 0.001;
    e_0136 = 0.001;
    e_0137 = 0.001;
    e_0139 = 0.001;
    e_0141 = 0.001;
    e_0142 = 0.001;
    e_0146 = 0.001;
    e_0154 = 0.001;
    e_0160 = 0.001;
    e_0165 = 0.001;
    e_0167 = 0.001;
    e_0168 = 0.001;
    e_0169 = 0.001;
    e_0171 = 0.001;
    e_0175 = 0.001;
    e_0176 = 0.001;
    e_0177 = 0.001;
    e_0179 = 0.001;
    e_0181 = 0.001;
    e_0182 = 0.001;
    e_0186 = 0.001;
    e_0194 = 0.001;
    e_0196 = 0.001;
    e_0203 = 0.001;
    e_0204 = 0.001;
    e_0206 = 0.001;
    e_0214 = 0.001;
    e_0218 = 0.001;
    e_0219 = 0.001;
    e_0220 = 0.001;
    e_0231 = 0.001;
    e_0233 = 0.001;
    e_0234 = 0.001;
    e_0237 = 0.001;
    e_0239 = 0.001;
    e_0242 = 0.001;
    e_0243 = 0.001;
    e_0249 = 0.001;
    e_0250 = 0.001;
    e_0255 = 0.001;
    e_0269 = 0.001;
    e_0271 = 0.001;
    e_0273 = 0.001;
    e_0276 = 0.001;
    e_0278 = 0.001;
    e_0280 = 0.001;
    e_0281 = 0.001;
    e_0283 = 0.001;
    e_0290 = 0.001;
    e_0291 = 0.001;
    e_0294 = 0.001;
    e_0296 = 0.001;
    e_0297 = 0.001;
    e_0298 = 0.001;
    e_0299 = 0.001;
    e_0303 = 0.001;
    e_0304 = 0.001;
    e_0306 = 0.001;
    e_0311 = 0.001;
    e_0312 = 0.001;
    e_0314 = 0.001;
    e_0317 = 0.001;
    e_0320 = 0.001;
    e_0321 = 0.001;
    e_0322 = 0.001;
    e_0325 = 0.001;
    e_0326 = 0.001;
    e_0328 = 0.001;
    e_0329 = 0.001;
    e_0330 = 0.001;
    e_0334 = 0.001;
    e_0340 = 0.001;
    e_0342 = 0.001;
    e_0343 = 0.001;
    e_0346 = 0.001;
    e_0347 = 0.001;
    e_0348 = 0.001;
    e_0352 = 0.001;
    e_0353 = 0.001;
    e_0355 = 0.001;
    e_0364 = 0.001;
    e_0365 = 0.001;
    e_0367 = 0.001;
    e_0368 = 0.001;
    e_0372 = 0.001;
    e_0376 = 0.001;
    e_0379 = 0.001;
    e_0380 = 0.001;
    e_0381 = 0.001;
    e_0382 = 0.001;
    e_0385 = 0.001;
    e_0387 = 0.001;
    e_0389 = 0.001;
    e_0390 = 0.001;
    e_0392 = 0.001;
    e_0393 = 0.001;
    e_0396 = 0.001;
    e_0397 = 0.001;
    e_0398 = 0.001;
    e_0401 = 0.001;
    e_0405 = 0.001;
    e_0409 = 0.001;
    e_0418 = 0.001;
    e_0422 = 0.001;
    e_0424 = 0.001;
    e_0425 = 0.001;
    e_0426 = 0.001;
    e_0427 = 0.001;
    e_0428 = 0.001;
    e_0431 = 0.001;
    e_0434 = 0.001;
    e_0435 = 0.001;
    e_0436 = 0.001;
    e_0440 = 0.001;
    e_0448 = 0.001;
    e_0452 = 0.001;
    e_0454 = 0.001;
    e_0456 = 0.001;
    e_0457 = 0.001;
    e_0458 = 0.001;
    e_0462 = 0.001;
    e_0463 = 0.001;
    e_0465 = 0.001;
    e_0467 = 0.001;
    e_0469 = 0.001;
    e_0470 = 0.001;
    e_0472 = 0.001;
    e_0475 = 0.001;
    e_0476 = 0.001;
    e_0489 = 0.001;
    e_0490 = 0.001;
    e_0492 = 0.001;
    e_0495 = 0.001;
    e_0496 = 0.001;
    e_0499 = 0.001;
    e_0506 = 0.001;
    e_0508 = 0.001;
    e_0510 = 0.001;
    e_0512 = 0.001;
    e_0514 = 0.001;
    e_0515 = 0.001;
    e_0525 = 0.001;
    e_0528 = 0.001;
    e_0531 = 0.001;
    e_0536 = 0.001;
    e_0540 = 0.001;
    e_0541 = 0.001;
    e_0542 = 0.001;
    e_0545 = 0.001;
    e_0547 = 0.001;
    e_0548 = 0.001;
    e_0549 = 0.001;
    e_0550 = 0.001;
    e_0556 = 0.001;
    e_0557 = 0.001;
    e_0561 = 0.001;
    e_0563 = 0.001;
    e_0565 = 0.001;
    e_0567 = 0.001;
    e_0568 = 0.001;
    e_0571 = 0.001;
    e_0574 = 0.001;
    e_0576 = 0.001;
    e_0578 = 0.001;
    e_0582 = 0.001;
    e_0585 = 0.001;
    e_0586 = 0.001;
    e_0591 = 0.001;
    e_0594 = 0.001;
    e_0603 = 0.001;
    e_0607 = 0.001;
    e_0610 = 0.001;
    e_0611 = 0.001;
    e_0613 = 0.001;
    e_0615 = 0.001;
    e_0629 = 0.001;
    e_0631 = 0.001;
    e_0632 = 0.001;
    e_0633 = 0.001;
    e_0637 = 0.001;
    e_0638 = 0.001;
    e_0639 = 0.001;
    e_0642 = 0.001;
    e_0644 = 0.001;
    e_0645 = 0.001;
    e_0658 = 0.001;
    e_0667 = 0.001;
    e_0674 = 0.001;
    e_0675 = 0.001;
    e_0682 = 0.001;
    e_0684 = 0.001;
    e_0685 = 0.001;
    e_0686 = 0.001;
    e_0687 = 0.001;
    e_0690 = 0.001;
    e_0692 = 0.001;
    e_0693 = 0.001;
    e_0697 = 0.001;
    e_0699 = 0.001;
    e_0705 = 0.001;
    e_0708 = 0.001;
    e_0711 = 0.001;
    e_0712 = 0.001;
    e_0714 = 0.001;
    e_0716 = 0.001;
    e_0724 = 0.001;
    e_0729 = 0.001;
    e_0733 = 0.001;
    e_0734 = 0.001;
    e_0736 = 0.001;
    e_0737 = 0.001;
    e_0741 = 0.001;
    e_0742 = 0.001;
    e_0743 = 0.001;
    e_0744 = 0.001;
    e_0745 = 0.001;
    e_0746 = 0.001;
    e_0747 = 0.001;
    e_0750 = 0.001;
    e_0752 = 0.001;
    e_0753 = 0.001;
    e_0754 = 0.001;
    e_0755 = 0.001;
    e_0756 = 0.001;
    e_0757 = 0.001;
    e_0761 = 0.001;
    e_0763 = 0.001;
    e_0765 = 0.001;
    e_0769 = 0.001;
    e_0771 = 0.001;
    e_0774 = 0.001;
    e_0775 = 0.001;
    e_0778 = 0.001;
    e_0788 = 0.001;
    e_0791 = 0.001;
    e_0793 = 0.001;
    e_0799 = 0.001;
    e_0800 = 0.001;
    e_0802 = 0.001;
    e_0805 = 0.001;
    e_0808 = 0.001;
    e_0812 = 0.001;
    e_0813 = 0.001;
    e_0826 = 0.001;
    e_0827 = 0.001;
    e_0829 = 0.001;
    e_0830 = 0.001;
    e_0832 = 0.001;
    e_0836 = 0.001;
    e_0838 = 0.001;
    e_0840 = 0.001;
    e_0841 = 0.001;
    e_0848 = 0.001;
    e_0850 = 0.001;
    e_0851 = 0.001;
    e_0852 = 0.001;
    e_0855 = 0.001;
    e_0860 = 0.001;
    e_0862 = 0.001;
    e_0867 = 0.001;
    e_0869 = 0.001;
    e_0872 = 0.001;
    e_0875 = 0.001;
    e_0880 = 0.001;
    e_0883 = 0.001;
    e_0888 = 0.001;
    e_0889 = 0.001;
    e_0890 = 0.001;
    e_0894 = 0.001;
    e_0895 = 0.001;
    e_0899 = 0.001;
    e_0903 = 0.001;
    e_0904 = 0.001;
    e_0910 = 0.001;
    e_0914 = 0.001;
    e_0915 = 0.001;
    e_0922 = 0.001;
    e_0926 = 0.001;
    e_0934 = 0.001;
    e_0940 = 0.001;
    e_0947 = 0.001;
    e_0953 = 0.001;
    e_0955 = 0.001;
    e_0959 = 0.001;
    e_0962 = 0.001;
    e_0963 = 0.001;
    e_0964 = 0.001;
    e_0970 = 0.001;
    e_0973 = 0.001;
    e_0975 = 0.001;
    e_0976 = 0.001;
    e_0978 = 0.001;
    e_0980 = 0.001;

equation

    der(s_0002) = (cell * v0_0 * (1 + ep1543_0 * log(s_1543 / ic1543) + ep0002_0 * log(s_0002 / ic0002) + ep1538_0 * log(s_1538 / ic1538))) - (1.1348 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0004) = (cell * v0_1 * (1 + ep1543_1 * log(s_1543 / ic1543) + ep0004_1 * log(s_0004 / ic0004) + ep1538_1 * log(s_1538 / ic1538))) - (1.1348 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0008) = (cell * v0_163 * (1 + ep0039_163 * log(s_0039 / ic0039) + ep1212_163 * log(s_1212 / ic1212) + ep0008_163 * log(s_0008 / ic0008) + ep1207_163 * log(s_1207 / ic1207))) - (cell * v0_91 * (1 + ep0008_91 * log(s_0008 / ic0008) + ep0056_91 * log(s_0056 / ic0056)));
    der(s_0009) = (cell * v0_19 * (1 + ep0165_19 * log(s_0165 / ic0165) + ep0009_19 * log(s_0009 / ic0009))) - (cell * v0_20 * (1 + ep0009_20 * log(s_0009 / ic0009) + ep1198_20 * log(s_1198 / ic1198) + ep0010_20 * log(s_0010 / ic0010) + ep1203_20 * log(s_1203 / ic1203)));
    der(s_0010) = (cell * v0_20 * (1 + ep0009_20 * log(s_0009 / ic0009) + ep1198_20 * log(s_1198 / ic1198) + ep0010_20 * log(s_0010 / ic0010) + ep1203_20 * log(s_1203 / ic1203))) - (cell * v0_13 * (1 + ep0010_13 * log(s_0010 / ic0010) + ep0291_13 * log(s_0291 / ic0291) + ep0456_13 * log(s_0456 / ic0456)));
    der(s_0015) = (cell * v0_43 * (1 + ep0434_43 * log(s_0434 / ic0434) + ep0973_43 * log(s_0973 / ic0973) + ep0979_43 * log(s_0979 / ic0979) + ep0015_43 * log(s_0015 / ic0015) + ep0423_43 * log(s_0423 / ic0423) + ep0633_43 * log(s_0633 / ic0633))) - (cell * v0_42 * (1 + ep0015_42 * log(s_0015 / ic0015) + ep0725_42 * log(s_0725 / ic0725) + ep0965_42 * log(s_0965 / ic0965)));
    der(s_0016) = (cell * v0_24 * (1 + ep0146_24 * log(s_0146 / ic0146) + ep1212_24 * log(s_1212 / ic1212) + ep0016_24 * log(s_0016 / ic0016) + ep1207_24 * log(s_1207 / ic1207))) - (cell * v0_90 * (1 + ep0016_90 * log(s_0016 / ic0016) + ep0232_90 * log(s_0232 / ic0232)));
    der(s_0018) = (cell * v0_209 * (1 + ep0019_209 * log(s_0019 / ic0019) + ep0434_209 * log(s_0434 / ic0434) + ep0018_209 * log(s_0018 / ic0018) + ep0394_209 * log(s_0394 / ic0394))) - (cell * v0_180 * (1 + ep0018_180 * log(s_0018 / ic0018) + ep0434_180 * log(s_0434 / ic0434) + ep0394_180 * log(s_0394 / ic0394) + ep0456_180 * log(s_0456 / ic0456) + ep0943_180 * log(s_0943 / ic0943) + ep1322_180 * log(s_1322 / ic1322)));
    der(s_0019) = (cell * v0_179 * (1 + ep0028_179 * log(s_0028 / ic0028) + ep0539_179 * log(s_0539 / ic0539) + ep0019_179 * log(s_0019 / ic0019) + ep0467_179 * log(s_0467 / ic0467))) - (cell * v0_209 * (1 + ep0019_209 * log(s_0019 / ic0019) + ep0434_209 * log(s_0434 / ic0434) + ep0018_209 * log(s_0018 / ic0018) + ep0394_209 * log(s_0394 / ic0394)));
    der(s_0028) = (cell * v0_149 * (1 + ep0218_149 * log(s_0218 / ic0218) + ep1212_149 * log(s_1212 / ic1212) + ep0028_149 * log(s_0028 / ic0028) + ep0529_149 * log(s_0529 / ic0529) + ep1207_149 * log(s_1207 / ic1207))) - (cell * v0_179 * (1 + ep0028_179 * log(s_0028 / ic0028) + ep0539_179 * log(s_0539 / ic0539) + ep0019_179 * log(s_0019 / ic0019) + ep0467_179 * log(s_0467 / ic0467)));
    der(s_0037) = (cell * v0_246 * (1 + ep1203_246 * log(s_1203 / ic1203) + ep1275_246 * log(s_1275 / ic1275) + ep1447_246 * log(s_1447 / ic1447) + ep0037_246 * log(s_0037 / ic0037) + ep1198_246 * log(s_1198 / ic1198))) + (cell * v0_247 * (1 + ep1212_247 * log(s_1212 / ic1212) + ep1275_247 * log(s_1275 / ic1275) + ep1447_247 * log(s_1447 / ic1447) + ep0037_247 * log(s_0037 / ic0037) + ep1207_247 * log(s_1207 / ic1207))) - (cell * v0_166 * (1 + ep0037_166 * log(s_0037 / ic0037) + ep1059_166 * log(s_1059 / ic1059)));
    der(s_0039) = (cell * v0_7 * (1 + ep0178_7 * log(s_0178 / ic0178) + ep1399_7 * log(s_1399 / ic1399) + ep0039_7 * log(s_0039 / ic0039) + ep0456_7 * log(s_0456 / ic0456))) - (cell * v0_163 * (1 + ep0039_163 * log(s_0039 / ic0039) + ep1212_163 * log(s_1212 / ic1212) + ep0008_163 * log(s_0008 / ic0008) + ep1207_163 * log(s_1207 / ic1207)));
    der(s_0056) = (cell * v0_91 * (1 + ep0008_91 * log(s_0008 / ic0008) + ep0056_91 * log(s_0056 / ic0056))) - (cell * v0_160 * (1 + ep0056_160 * log(s_0056 / ic0056) + ep0991_160 * log(s_0991 / ic0991) + ep0180_160 * log(s_0180 / ic0180) + ep1016_160 * log(s_1016 / ic1016))) - (3.0 * cell * v0_249 * (1 + ep0666_249 * log(s_0666 / ic0666) + ep0056_249 * log(s_0056 / ic0056) + ep0672_249 * log(s_0672 / ic0672))) - (4.33333333333333 * cell * v0_260 * (1 + ep0619_260 * log(s_0619 / ic0619) + ep0056_260 * log(s_0056 / ic0056) + ep1524_260 * log(s_1524 / ic1524))) - (0.000892666666666666 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0061) = (cell * v0_89 * (1 + ep1194_89 * log(s_1194 / ic1194) + ep0061_89 * log(s_0061 / ic0061))) - (cell * v0_86 * (1 + ep0061_86 * log(s_0061 / ic0061) + ep1275_86 * log(s_1275 / ic1275) + ep0837_86 * log(s_0837 / ic0837) + ep1269_86 * log(s_1269 / ic1269)));
    der(s_0066) = (cell * v0_115 * (1 + ep0725_115 * log(s_0725 / ic0725) + ep0066_115 * log(s_0066 / ic0066))) - (cell * v0_170 * (1 + ep0066_170 * log(s_0066 / ic0066) + ep1198_170 * log(s_1198 / ic1198) + ep1203_170 * log(s_1203 / ic1203) + ep1271_170 * log(s_1271 / ic1271)));
    der(s_0075) = (cell * v0_125 * (1 + ep0764_125 * log(s_0764 / ic0764) + ep1198_125 * log(s_1198 / ic1198) + ep1322_125 * log(s_1322 / ic1322) + ep0075_125 * log(s_0075 / ic0075) + ep1203_125 * log(s_1203 / ic1203))) - (cell * v0_204 * (1 + ep0075_204 * log(s_0075 / ic0075) + ep0394_204 * log(s_0394 / ic0394) + ep0260_204 * log(s_0260 / ic0260) + ep0434_204 * log(s_0434 / ic0434)));
    der(s_0076) = (cell * v0_215 * (1 + ep1187_215 * log(s_1187 / ic1187) + ep0076_215 * log(s_0076 / ic0076))) - (cell * v0_154 * (1 + ep0076_154 * log(s_0076 / ic0076) + ep0086_154 * log(s_0086 / ic0086) + ep0456_154 * log(s_0456 / ic0456)));
    der(s_0077) = (cell * v0_211 * (1 + ep0078_211 * log(s_0078 / ic0078) + ep0077_211 * log(s_0077 / ic0077))) - (cell * v0_2 * (1 + ep0077_2 * log(s_0077 / ic0077) + ep0312_2 * log(s_0312 / ic0312)));
    der(s_0078) = (cell * v0_212 * (1 + ep0326_212 * log(s_0326 / ic0326) + ep0078_212 * log(s_0078 / ic0078) + ep0633_212 * log(s_0633 / ic0633))) - (cell * v0_211 * (1 + ep0078_211 * log(s_0078 / ic0078) + ep0077_211 * log(s_0077 / ic0077)));
    der(s_0082) = (cell * v0_127 * (1 + ep0380_127 * log(s_0380 / ic0380) + ep0767_127 * log(s_0767 / ic0767) + ep0082_127 * log(s_0082 / ic0082) + ep0529_127 * log(s_0529 / ic0529))) - (cell * v0_3 * (1 + ep0082_3 * log(s_0082 / ic0082) + ep0380_3 * log(s_0380 / ic0380) + ep0529_3 * log(s_0529 / ic0529) + ep1331_3 * log(s_1331 / ic1331)));
    der(s_0086) = (cell * v0_154 * (1 + ep0076_154 * log(s_0076 / ic0076) + ep0086_154 * log(s_0086 / ic0086) + ep0456_154 * log(s_0456 / ic0456))) - (cell * v0_262 * (1 + ep0086_262 * log(s_0086 / ic0086) + ep1039_262 * log(s_1039 / ic1039) + ep0764_262 * log(s_0764 / ic0764) + ep1048_262 * log(s_1048 / ic1048)));
    der(s_0089) = (cell * v0_197 * (1 + ep0471_197 * log(s_0471 / ic0471) + ep1153_197 * log(s_1153 / ic1153) + ep0089_197 * log(s_0089 / ic0089) + ep0526_197 * log(s_0526 / ic0526))) - (cell * v0_157 * (1 + ep0089_157 * log(s_0089 / ic0089) + ep0499_157 * log(s_0499 / ic0499) + ep0619_157 * log(s_0619 / ic0619) + ep0918_157 * log(s_0918 / ic0918))) - (0.001583 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0118) = (cell * v0_4 * (1 + ep0991_4 * log(s_0991 / ic0991) + ep1203_4 * log(s_1203 / ic1203) + ep0118_4 * log(s_0118 / ic0118) + ep1198_4 * log(s_1198 / ic1198))) - (cell * v0_226 * (1 + ep0118_226 * log(s_0118 / ic0118) + ep1212_226 * log(s_1212 / ic1212) + ep1035_226 * log(s_1035 / ic1035) + ep1207_226 * log(s_1207 / ic1207)));
    der(s_0120) = (cell * v0_173 * (1 + ep0304_173 * log(s_0304 / ic0304) + ep0120_173 * log(s_0120 / ic0120))) - (cell * v0_113 * (1 + ep0120_113 * log(s_0120 / ic0120) + ep0394_113 * log(s_0394 / ic0394) + ep1322_113 * log(s_1322 / ic1322) + ep0434_113 * log(s_0434 / ic0434) + ep0722_113 * log(s_0722 / ic0722) + ep1487_113 * log(s_1487 / ic1487))) - (cell * v0_128 * (1 + ep0120_128 * log(s_0120 / ic0120) + ep0325_128 * log(s_0325 / ic0325) + ep0301_128 * log(s_0301 / ic0301) + ep1487_128 * log(s_1487 / ic1487))) - (cell * v0_214 * (1 + ep0120_214 * log(s_0120 / ic0120) + ep0403_214 * log(s_0403 / ic0403) + ep1365_214 * log(s_1365 / ic1365) + ep1487_214 * log(s_1487 / ic1487)));
    der(s_0122) = (cell * v0_53 * (1 + ep0262_53 * log(s_0262 / ic0262) + ep1212_53 * log(s_1212 / ic1212) + ep0122_53 * log(s_0122 / ic0122) + ep1207_53 * log(s_1207 / ic1207))) - (cell * v0_62 * (1 + ep0122_62 * log(s_0122 / ic0122) + ep1212_62 * log(s_1212 / ic1212) + ep1275_62 * log(s_1275 / ic1275) + ep0297_62 * log(s_0297 / ic0297) + ep1207_62 * log(s_1207 / ic1207))) - (5.6e-05 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0126) = (cell * v0_182 * (1 + ep0568_182 * log(s_0568 / ic0568) + ep0126_182 * log(s_0126 / ic0126))) - (cell * v0_181 * (1 + ep0126_181 * log(s_0126 / ic0126) + ep1153_181 * log(s_1153 / ic1153) + ep1322_181 * log(s_1322 / ic1322)));
    der(s_0141) = (cell * v0_134 * (1 + ep0785_134 * log(s_0785 / ic0785) + ep0141_134 * log(s_0141 / ic0141) + ep0633_134 * log(s_0633 / ic0633) + ep0722_134 * log(s_0722 / ic0722))) - (cell * v0_6 * (1 + ep0141_6 * log(s_0141 / ic0141) + ep1212_6 * log(s_1212 / ic1212) + ep0142_6 * log(s_0142 / ic0142) + ep1207_6 * log(s_1207 / ic1207)));
    der(s_0142) = (cell * v0_6 * (1 + ep0141_6 * log(s_0141 / ic0141) + ep1212_6 * log(s_1212 / ic1212) + ep0142_6 * log(s_0142 / ic0142) + ep1207_6 * log(s_1207 / ic1207))) - (cell * v0_5 * (1 + ep0142_5 * log(s_0142 / ic0142) + ep0313_5 * log(s_0313 / ic0313) + ep0419_5 * log(s_0419 / ic0419)));
    der(s_0145) = (cell * v0_183 * (1 + ep1191_183 * log(s_1191 / ic1191) + ep1212_183 * log(s_1212 / ic1212) + ep0145_183 * log(s_0145 / ic0145) + ep1207_183 * log(s_1207 / ic1207) + ep1322_183 * log(s_1322 / ic1322))) - (cell * v0_30 * (1 + ep0145_30 * log(s_0145 / ic0145) + ep0991_30 * log(s_0991 / ic0991) + ep0180_30 * log(s_0180 / ic0180) + ep1182_30 * log(s_1182 / ic1182)));
    der(s_0146) = (cell * v0_25 * (1 + ep1399_25 * log(s_1399 / ic1399) + ep0146_25 * log(s_0146 / ic0146) + ep0456_25 * log(s_0456 / ic0456))) - (cell * v0_24 * (1 + ep0146_24 * log(s_0146 / ic0146) + ep1212_24 * log(s_1212 / ic1212) + ep0016_24 * log(s_0016 / ic0016) + ep1207_24 * log(s_1207 / ic1207)));
    der(s_0158) = (cell * v0_15 * (1 + ep0577_15 * log(s_0577 / ic0577) + ep0158_15 * log(s_0158 / ic0158) + ep0722_15 * log(s_0722 / ic0722))) - (cell * v0_230 * (1 + ep0158_230 * log(s_0158 / ic0158) + ep0314_230 * log(s_0314 / ic0314) + ep0328_230 * log(s_0328 / ic0328) + ep1322_230 * log(s_1322 / ic1322)));
    der(s_0162) = (cell * v0_11 * (1 + ep0232_11 * log(s_0232 / ic0232) + ep0373_11 * log(s_0373 / ic0373) + ep0162_11 * log(s_0162 / ic0162) + ep0529_11 * log(s_0529 / ic0529))) - (cell * v0_10 * (1 + ep0162_10 * log(s_0162 / ic0162) + ep0165_10 * log(s_0165 / ic0165)));
    der(s_0165) = (cell * v0_10 * (1 + ep0162_10 * log(s_0162 / ic0162) + ep0165_10 * log(s_0165 / ic0165))) - (cell * v0_19 * (1 + ep0165_19 * log(s_0165 / ic0165) + ep0009_19 * log(s_0009 / ic0009)));
    der(s_0176) = (cell * v0_144 * (1 + ep0836_144 * log(s_0836 / ic0836) + ep1198_144 * log(s_1198 / ic1198) + ep0176_144 * log(s_0176 / ic0176) + ep1203_144 * log(s_1203 / ic1203) + ep0456_144 * log(s_0456 / ic0456))) - (cell * v0_8 * (1 + ep0176_8 * log(s_0176 / ic0176) + ep0991_8 * log(s_0991 / ic0991) + ep0180_8 * log(s_0180 / ic0180) + ep0953_8 * log(s_0953 / ic0953)));
    der(s_0178) = (cell * v0_78 * (1 + ep0980_78 * log(s_0980 / ic0980) + ep0178_78 * log(s_0178 / ic0178) + ep0419_78 * log(s_0419 / ic0419) + ep0981_78 * log(s_0981 / ic0981))) - (cell * v0_7 * (1 + ep0178_7 * log(s_0178 / ic0178) + ep1399_7 * log(s_1399 / ic1399) + ep0039_7 * log(s_0039 / ic0039) + ep0456_7 * log(s_0456 / ic0456)));
    der(s_0180) = (cell * v0_8 * (1 + ep0176_8 * log(s_0176 / ic0176) + ep0991_8 * log(s_0991 / ic0991) + ep0180_8 * log(s_0180 / ic0180) + ep0953_8 * log(s_0953 / ic0953))) + (cell * v0_30 * (1 + ep0145_30 * log(s_0145 / ic0145) + ep0991_30 * log(s_0991 / ic0991) + ep0180_30 * log(s_0180 / ic0180) + ep1182_30 * log(s_1182 / ic1182))) + (cell * v0_49 * (1 + ep0991_49 * log(s_0991 / ic0991) + ep1271_49 * log(s_1271 / ic1271) + ep0180_49 * log(s_0180 / ic0180) + ep0973_49 * log(s_0973 / ic0973))) + (cell * v0_140 * (1 + ep0207_140 * log(s_0207 / ic0207) + ep0991_140 * log(s_0991 / ic0991) + ep0180_140 * log(s_0180 / ic0180) + ep1011_140 * log(s_1011 / ic1011))) + (cell * v0_158 * (1 + ep0940_158 * log(s_0940 / ic0940) + ep1198_158 * log(s_1198 / ic1198) + ep0180_158 * log(s_0180 / ic0180) + ep0456_158 * log(s_0456 / ic0456) + ep1203_158 * log(s_1203 / ic1203))) + (cell * v0_159 * (1 + ep0940_159 * log(s_0940 / ic0940) + ep1207_159 * log(s_1207 / ic1207) + ep0180_159 * log(s_0180 / ic0180) + ep0456_159 * log(s_0456 / ic0456) + ep1212_159 * log(s_1212 / ic1212))) + (cell * v0_160 * (1 + ep0056_160 * log(s_0056 / ic0056) + ep0991_160 * log(s_0991 / ic0991) + ep0180_160 * log(s_0180 / ic0180) + ep1016_160 * log(s_1016 / ic1016))) + (cell * v0_164 * (1 + ep0991_164 * log(s_0991 / ic0991) + ep1399_164 * log(s_1399 / ic1399) + ep0180_164 * log(s_0180 / ic0180) + ep0955_164 * log(s_0955 / ic0955))) + (cell * v0_167 * (1 + ep0291_167 * log(s_0291 / ic0291) + ep0991_167 * log(s_0991 / ic0991) + ep0180_167 * log(s_0180 / ic0180) + ep1021_167 * log(s_1021 / ic1021))) + (cell * v0_193 * (1 + ep0951_193 * log(s_0951 / ic0951) + ep0991_193 * log(s_0991 / ic0991) + ep0180_193 * log(s_0180 / ic0180) + ep1032_193 * log(s_1032 / ic1032))) + (cell * v0_220 * (1 + ep0258_220 * log(s_0258 / ic0258) + ep0991_220 * log(s_0991 / ic0991) + ep0180_220 * log(s_0180 / ic0180) + ep0259_220 * log(s_0259 / ic0259))) + (cell * v0_240 * (1 + ep1038_240 * log(s_1038 / ic1038) + ep1198_240 * log(s_1198 / ic1198) + ep0180_240 * log(s_0180 / ic0180) + ep1025_240 * log(s_1025 / ic1025) + ep1203_240 * log(s_1203 / ic1203))) + (cell * v0_264 * (1 + ep0204_264 * log(s_0204 / ic0204) + ep0991_264 * log(s_0991 / ic0991) + ep0180_264 * log(s_0180 / ic0180) + ep1051_264 * log(s_1051 / ic1051))) + (cell * v0_268 * (1 + ep0232_268 * log(s_0232 / ic0232) + ep0991_268 * log(s_0991 / ic0991) + ep0180_268 * log(s_0180 / ic0180) + ep1056_268 * log(s_1056 / ic1056))) - (cell * v0_118 * (1 + ep0180_118 * log(s_0180 / ic0180) + ep0419_118 * log(s_0419 / ic0419) + ep1203_118 * log(s_1203 / ic1203) + ep0991_118 * log(s_0991 / ic0991) + ep1198_118 * log(s_1198 / ic1198))) - (cell * v0_119 * (1 + ep0180_119 * log(s_0180 / ic0180) + ep0419_119 * log(s_0419 / ic0419) + ep1212_119 * log(s_1212 / ic1212) + ep0991_119 * log(s_0991 / ic0991) + ep1207_119 * log(s_1207 / ic1207))) - (cell * v0_143 * (1 + ep0180_143 * log(s_0180 / ic0180) + ep0373_143 * log(s_0373 / ic0373) + ep0529_143 * log(s_0529 / ic0529) + ep0835_143 * log(s_0835 / ic0835)));
    der(s_0188) = (cell * v0_205 * (1 + ep0260_205 * log(s_0260 / ic0260) + ep0188_205 * log(s_0188 / ic0188))) - (cell * v0_96 * (1 + ep0188_96 * log(s_0188 / ic0188) + ep1360_96 * log(s_1360 / ic1360)));
    der(s_0190) = (cell * v0_116 * (1 + ep0745_116 * log(s_0745 / ic0745) + ep0943_116 * log(s_0943 / ic0943) + ep0190_116 * log(s_0190 / ic0190) + ep0633_116 * log(s_0633 / ic0633))) - (2.0 * cell * v0_248 * (1 + ep0190_248 * log(s_0190 / ic0190) + ep1212_248 * log(s_1212 / ic1212) + ep0633_248 * log(s_0633 / ic0633) + ep1207_248 * log(s_1207 / ic1207) + ep1447_248 * log(s_1447 / ic1447)));
    der(s_0201) = (cell * v0_37 * (1 + ep0298_37 * log(s_0298 / ic0298) + ep0434_37 * log(s_0434 / ic0434) + ep0201_37 * log(s_0201 / ic0201) + ep0394_37 * log(s_0394 / ic0394))) - (cell * v0_200 * (1 + ep0201_200 * log(s_0201 / ic0201) + ep1616_200 * log(s_1616 / ic1616) + ep0390_200 * log(s_0390 / ic0390) + ep1469_200 * log(s_1469 / ic1469) + ep1620_200 * log(s_1620 / ic1620)));
    der(s_0204) = (cell * v0_224 * (1 + ep1207_224 * log(s_1207 / ic1207) + ep1377_224 * log(s_1377 / ic1377) + ep0204_224 * log(s_0204 / ic0204) + ep0456_224 * log(s_0456 / ic0456) + ep1212_224 * log(s_1212 / ic1212))) - (cell * v0_264 * (1 + ep0204_264 * log(s_0204 / ic0204) + ep0991_264 * log(s_0991 / ic0991) + ep0180_264 * log(s_0180 / ic0180) + ep1051_264 * log(s_1051 / ic1051)));
    der(s_0207) = (cell * v0_152 * (1 + ep0550_152 * log(s_0550 / ic0550) + ep0207_152 * log(s_0207 / ic0207))) - (cell * v0_140 * (1 + ep0207_140 * log(s_0207 / ic0207) + ep0991_140 * log(s_0991 / ic0991) + ep0180_140 * log(s_0180 / ic0180) + ep1011_140 * log(s_1011 / ic1011)));
    der(s_0209) = (cell * v0_56 * (1 + ep0297_56 * log(s_0297 / ic0297) + ep1198_56 * log(s_1198 / ic1198) + ep0209_56 * log(s_0209 / ic0209) + ep0456_56 * log(s_0456 / ic0456) + ep1203_56 * log(s_1203 / ic1203))) - (cell * v0_57 * (1 + ep0209_57 * log(s_0209 / ic0209) + ep1212_57 * log(s_1212 / ic1212) + ep0296_57 * log(s_0296 / ic0296) + ep1207_57 * log(s_1207 / ic1207)));
    der(s_0210) = (cell * v0_17 * (1 + ep0349_17 * log(s_0349 / ic0349) + ep0210_17 * log(s_0210 / ic0210) + ep1322_17 * log(s_1322 / ic1322))) - (cell * v0_16 * (1 + ep0210_16 * log(s_0210 / ic0210) + ep0211_16 * log(s_0211 / ic0211)));
    der(s_0211) = (cell * v0_16 * (1 + ep0210_16 * log(s_0210 / ic0210) + ep0211_16 * log(s_0211 / ic0211))) - (cell * v0_244 * (1 + ep0211_244 * log(s_0211 / ic0211) + ep1212_244 * log(s_1212 / ic1212) + ep1207_244 * log(s_1207 / ic1207) + ep1429_244 * log(s_1429 / ic1429)));
    der(s_0218) = (cell * v0_150 * (1 + ep0367_150 * log(s_0367 / ic0367) + ep0373_150 * log(s_0373 / ic0373) + ep0218_150 * log(s_0218 / ic0218) + ep0529_150 * log(s_0529 / ic0529))) - (cell * v0_149 * (1 + ep0218_149 * log(s_0218 / ic0218) + ep1212_149 * log(s_1212 / ic1212) + ep0028_149 * log(s_0028 / ic0028) + ep0529_149 * log(s_0529 / ic0529) + ep1207_149 * log(s_1207 / ic1207)));
    der(s_0231) = (cell * v0_242 * (1 + ep1039_242 * log(s_1039 / ic1039) + ep1302_242 * log(s_1302 / ic1302) + ep0231_242 * log(s_0231 / ic0231) + ep0456_242 * log(s_0456 / ic0456) + ep0529_242 * log(s_0529 / ic0529))) - (cell * v0_18 * (1 + ep0231_18 * log(s_0231 / ic0231) + ep1212_18 * log(s_1212 / ic1212) + ep1207_18 * log(s_1207 / ic1207) + ep1445_18 * log(s_1445 / ic1445)));
    der(s_0232) = (cell * v0_90 * (1 + ep0016_90 * log(s_0016 / ic0016) + ep0232_90 * log(s_0232 / ic0232))) - (cell * v0_11 * (1 + ep0232_11 * log(s_0232 / ic0232) + ep0373_11 * log(s_0373 / ic0373) + ep0162_11 * log(s_0162 / ic0162) + ep0529_11 * log(s_0529 / ic0529))) - (cell * v0_268 * (1 + ep0232_268 * log(s_0232 / ic0232) + ep0991_268 * log(s_0991 / ic0991) + ep0180_268 * log(s_0180 / ic0180) + ep1056_268 * log(s_1056 / ic1056)));
    der(s_0258) = (cell * v0_203 * (1 + ep0260_203 * log(s_0260 / ic0260) + ep1198_203 * log(s_1198 / ic1198) + ep0258_203 * log(s_0258 / ic0258) + ep1203_203 * log(s_1203 / ic1203))) - (cell * v0_220 * (1 + ep0258_220 * log(s_0258 / ic0258) + ep0991_220 * log(s_0991 / ic0991) + ep0180_220 * log(s_0180 / ic0180) + ep0259_220 * log(s_0259 / ic0259)));
    der(s_0259) = (cell * v0_220 * (1 + ep0258_220 * log(s_0258 / ic0258) + ep0991_220 * log(s_0991 / ic0991) + ep0180_220 * log(s_0180 / ic0180) + ep0259_220 * log(s_0259 / ic0259))) - (cell * v0_219 * (1 + ep0259_219 * log(s_0259 / ic0259) + ep1039_219 * log(s_1039 / ic1039) + ep1322_219 * log(s_1322 / ic1322)));
    der(s_0260) = (cell * v0_204 * (1 + ep0075_204 * log(s_0075 / ic0075) + ep0394_204 * log(s_0394 / ic0394) + ep0260_204 * log(s_0260 / ic0260) + ep0434_204 * log(s_0434 / ic0434))) - (cell * v0_203 * (1 + ep0260_203 * log(s_0260 / ic0260) + ep1198_203 * log(s_1198 / ic1198) + ep0258_203 * log(s_0258 / ic0258) + ep1203_203 * log(s_1203 / ic1203))) - (cell * v0_205 * (1 + ep0260_205 * log(s_0260 / ic0260) + ep0188_205 * log(s_0188 / ic0188)));
    der(s_0261) = (cell * v0_245 * (1 + ep0434_245 * log(s_0434 / ic0434) + ep1429_245 * log(s_1429 / ic1429) + ep0261_245 * log(s_0261 / ic0261) + ep0394_245 * log(s_0394 / ic0394))) - (cell * v0_21 * (1 + ep0261_21 * log(s_0261 / ic0261) + ep1360_21 * log(s_1360 / ic1360) + ep0324_21 * log(s_0324 / ic0324) + ep1322_21 * log(s_1322 / ic1322)));
    der(s_0262) = (cell * v0_81 * (1 + ep1059_81 * log(s_1059 / ic1059) + ep1212_81 * log(s_1212 / ic1212) + ep1275_81 * log(s_1275 / ic1275) + ep0262_81 * log(s_0262 / ic0262) + ep0722_81 * log(s_0722 / ic0722) + ep1207_81 * log(s_1207 / ic1207))) - (cell * v0_53 * (1 + ep0262_53 * log(s_0262 / ic0262) + ep1212_53 * log(s_1212 / ic1212) + ep0122_53 * log(s_0122 / ic0122) + ep1207_53 * log(s_1207 / ic1207)));
    der(s_0291) = (cell * v0_13 * (1 + ep0010_13 * log(s_0010 / ic0010) + ep0291_13 * log(s_0291 / ic0291) + ep0456_13 * log(s_0456 / ic0456))) - (cell * v0_167 * (1 + ep0291_167 * log(s_0291 / ic0291) + ep0991_167 * log(s_0991 / ic0991) + ep0180_167 * log(s_0180 / ic0180) + ep1021_167 * log(s_1021 / ic1021)));
    der(s_0295) = (cell * v0_48 * (1 + ep0434_48 * log(s_0434 / ic0434) + ep0973_48 * log(s_0973 / ic0973) + ep0295_48 * log(s_0295 / ic0295) + ep0394_48 * log(s_0394 / ic0394))) - (cell * v0_50 * (1 + ep0295_50 * log(s_0295 / ic0295) + ep1212_50 * log(s_1212 / ic1212) + ep0978_50 * log(s_0978 / ic0978) + ep1207_50 * log(s_1207 / ic1207) + ep1322_50 * log(s_1322 / ic1322)));
    der(s_0296) = (cell * v0_57 * (1 + ep0209_57 * log(s_0209 / ic0209) + ep1212_57 * log(s_1212 / ic1212) + ep0296_57 * log(s_0296 / ic0296) + ep1207_57 * log(s_1207 / ic1207))) - (cell * v0_59 * (1 + ep0296_59 * log(s_0296 / ic0296) + ep1212_59 * log(s_1212 / ic1212) + ep1275_59 * log(s_1275 / ic1275) + ep1207_59 * log(s_1207 / ic1207) + ep1576_59 * log(s_1576 / ic1576)));
    der(s_0297) = (cell * v0_62 * (1 + ep0122_62 * log(s_0122 / ic0122) + ep1212_62 * log(s_1212 / ic1212) + ep1275_62 * log(s_1275 / ic1275) + ep0297_62 * log(s_0297 / ic0297) + ep1207_62 * log(s_1207 / ic1207))) - (cell * v0_56 * (1 + ep0297_56 * log(s_0297 / ic0297) + ep1198_56 * log(s_1198 / ic1198) + ep0209_56 * log(s_0209 / ic0209) + ep0456_56 * log(s_0456 / ic0456) + ep1203_56 * log(s_1203 / ic1203)));
    der(s_0298) = (cell * v0_250 * (1 + ep0394_250 * log(s_0394 / ic0394) + ep1467_250 * log(s_1467 / ic1467) + ep0298_250 * log(s_0298 / ic0298) + ep1322_250 * log(s_1322 / ic1322))) - (cell * v0_37 * (1 + ep0298_37 * log(s_0298 / ic0298) + ep0434_37 * log(s_0434 / ic0434) + ep0201_37 * log(s_0201 / ic0201) + ep0394_37 * log(s_0394 / ic0394)));
    der(s_0299) = (cell * v0_210 * (1 + ep0434_210 * log(s_0434 / ic0434) + ep0973_210 * log(s_0973 / ic0973) + ep1364_210 * log(s_1364 / ic1364) + ep0299_210 * log(s_0299 / ic0299) + ep0394_210 * log(s_0394 / ic0394) + ep1322_210 * log(s_1322 / ic1322))) - (cell * v0_34 * (1 + ep0299_34 * log(s_0299 / ic0299) + ep0403_34 * log(s_0403 / ic0403) + ep0725_34 * log(s_0725 / ic0725)));
    der(s_0300) = (cell * v0_195 * (1 + ep0302_195 * log(s_0302 / ic0302) + ep0434_195 * log(s_0434 / ic0434) + ep0300_195 * log(s_0300 / ic0300) + ep0394_195 * log(s_0394 / ic0394) + ep1322_195 * log(s_1322 / ic1322))) - (cell * v0_213 * (1 + ep0300_213 * log(s_0300 / ic0300) + ep0456_213 * log(s_0456 / ic0456) + ep0434_213 * log(s_0434 / ic0434) + ep1364_213 * log(s_1364 / ic1364) + ep0394_213 * log(s_0394 / ic0394) + ep1322_213 * log(s_1322 / ic1322)));
    der(s_0301) = (cell * v0_128 * (1 + ep0120_128 * log(s_0120 / ic0120) + ep0325_128 * log(s_0325 / ic0325) + ep0301_128 * log(s_0301 / ic0301) + ep1487_128 * log(s_1487 / ic1487))) - (cell * v0_22 * (1 + ep0301_22 * log(s_0301 / ic0301) + ep0434_22 * log(s_0434 / ic0434) + ep0999_22 * log(s_0999 / ic0999) + ep0302_22 * log(s_0302 / ic0302) + ep0394_22 * log(s_0394 / ic0394) + ep0991_22 * log(s_0991 / ic0991) + ep1322_22 * log(s_1322 / ic1322)));
    der(s_0302) = (cell * v0_22 * (1 + ep0301_22 * log(s_0301 / ic0301) + ep0434_22 * log(s_0434 / ic0434) + ep0999_22 * log(s_0999 / ic0999) + ep0302_22 * log(s_0302 / ic0302) + ep0394_22 * log(s_0394 / ic0394) + ep0991_22 * log(s_0991 / ic0991) + ep1322_22 * log(s_1322 / ic1322))) - (cell * v0_195 * (1 + ep0302_195 * log(s_0302 / ic0302) + ep0434_195 * log(s_0434 / ic0434) + ep0300_195 * log(s_0300 / ic0300) + ep0394_195 * log(s_0394 / ic0394) + ep1322_195 * log(s_1322 / ic1322)));
    der(s_0304) = (cell * v0_177 * (1 + ep0306_177 * log(s_0306 / ic0306) + ep1198_177 * log(s_1198 / ic1198) + ep0304_177 * log(s_0304 / ic0304) + ep1203_177 * log(s_1203 / ic1203))) + (cell * v0_178 * (1 + ep0306_178 * log(s_0306 / ic0306) + ep1207_178 * log(s_1207 / ic1207) + ep0304_178 * log(s_0304 / ic0304) + ep1212_178 * log(s_1212 / ic1212))) - (cell * v0_173 * (1 + ep0304_173 * log(s_0304 / ic0304) + ep0120_173 * log(s_0120 / ic0120)));
    der(s_0306) = (cell * v0_129 * (1 + ep1003_129 * log(s_1003 / ic1003) + ep1198_129 * log(s_1198 / ic1198) + ep1487_129 * log(s_1487 / ic1487) + ep0306_129 * log(s_0306 / ic0306) + ep0419_129 * log(s_0419 / ic0419) + ep0456_129 * log(s_0456 / ic0456) + ep1203_129 * log(s_1203 / ic1203))) + (cell * v0_130 * (1 + ep1039_130 * log(s_1039 / ic1039) + ep1487_130 * log(s_1487 / ic1487) + ep0306_130 * log(s_0306 / ic0306) + ep1003_130 * log(s_1003 / ic1003))) - (cell * v0_23 * (1 + ep0306_23 * log(s_0306 / ic0306) + ep1212_23 * log(s_1212 / ic1212) + ep0322_23 * log(s_0322 / ic0322) + ep1207_23 * log(s_1207 / ic1207))) - (cell * v0_177 * (1 + ep0306_177 * log(s_0306 / ic0306) + ep1198_177 * log(s_1198 / ic1198) + ep0304_177 * log(s_0304 / ic0304) + ep1203_177 * log(s_1203 / ic1203))) - (cell * v0_178 * (1 + ep0306_178 * log(s_0306 / ic0306) + ep1207_178 * log(s_1207 / ic1207) + ep0304_178 * log(s_0304 / ic0304) + ep1212_178 * log(s_1212 / ic1212))) - (cell * v0_255 * (1 + ep0306_255 * log(s_0306 / ic0306) + ep0654_255 * log(s_0654 / ic0654) + ep0625_255 * log(s_0625 / ic0625) + ep0649_255 * log(s_0649 / ic0649)));
    der(s_0312) = (cell * v0_2 * (1 + ep0077_2 * log(s_0077 / ic0077) + ep0312_2 * log(s_0312 / ic0312))) - (cell * v0_151 * (1 + ep0312_151 * log(s_0312 / ic0312) + ep0999_151 * log(s_0999 / ic0999) + ep0403_151 * log(s_0403 / ic0403) + ep0550_151 * log(s_0550 / ic0550) + ep0991_151 * log(s_0991 / ic0991)));
    der(s_0313) = (cell * v0_5 * (1 + ep0142_5 * log(s_0142 / ic0142) + ep0313_5 * log(s_0313 / ic0313) + ep0419_5 * log(s_0419 / ic0419))) - (cell * v0_280 * (1 + ep0313_280 * log(s_0313 / ic0313) + ep0314_280 * log(s_0314 / ic0314) + ep1322_280 * log(s_1322 / ic1322)));
    der(s_0314) = (cell * v0_231 * (1 + ep0328_231 * log(s_0328 / ic0328) + ep0314_231 * log(s_0314 / ic0314) + ep1405_231 * log(s_1405 / ic1405))) + (cell * v0_280 * (1 + ep0313_280 * log(s_0313 / ic0313) + ep0314_280 * log(s_0314 / ic0314) + ep1322_280 * log(s_1322 / ic1322))) - (cell * v0_230 * (1 + ep0158_230 * log(s_0158 / ic0158) + ep0314_230 * log(s_0314 / ic0314) + ep0328_230 * log(s_0328 / ic0328) + ep1322_230 * log(s_1322 / ic1322)));
    der(s_0322) = (cell * v0_23 * (1 + ep0306_23 * log(s_0306 / ic0306) + ep1212_23 * log(s_1212 / ic1212) + ep0322_23 * log(s_0322 / ic0322) + ep1207_23 * log(s_1207 / ic1207))) - (cell * v0_175 * (1 + ep0322_175 * log(s_0322 / ic0322) + ep1012_175 * log(s_1012 / ic1012) + ep1029_175 * log(s_1029 / ic1029) + ep1487_175 * log(s_1487 / ic1487)));
    der(s_0324) = (cell * v0_21 * (1 + ep0261_21 * log(s_0261 / ic0261) + ep1360_21 * log(s_1360 / ic1360) + ep0324_21 * log(s_0324 / ic0324) + ep1322_21 * log(s_1322 / ic1322))) - (cell * v0_72 * (1 + ep0324_72 * log(s_0324 / ic0324) + ep0515_72 * log(s_0515 / ic0515) + ep1322_72 * log(s_1322 / ic1322)));
    der(s_0325) = (cell * v0_216 * (1 + ep0327_216 * log(s_0327 / ic0327) + ep0434_216 * log(s_0434 / ic0434) + ep1003_216 * log(s_1003 / ic1003) + ep0325_216 * log(s_0325 / ic0325) + ep0394_216 * log(s_0394 / ic0394) + ep1322_216 * log(s_1322 / ic1322))) - (cell * v0_128 * (1 + ep0120_128 * log(s_0120 / ic0120) + ep0325_128 * log(s_0325 / ic0325) + ep0301_128 * log(s_0301 / ic0301) + ep1487_128 * log(s_1487 / ic1487)));
    der(s_0326) = (cell * v0_52 * (1 + ep0434_52 * log(s_0434 / ic0434) + ep1386_52 * log(s_1386 / ic1386) + ep0326_52 * log(s_0326 / ic0326) + ep0633_52 * log(s_0633 / ic0633))) - (cell * v0_212 * (1 + ep0326_212 * log(s_0326 / ic0326) + ep0078_212 * log(s_0078 / ic0078) + ep0633_212 * log(s_0633 / ic0633)));
    der(s_0327) = (cell * v0_217 * (1 + ep0999_217 * log(s_0999 / ic0999) + ep1386_217 * log(s_1386 / ic1386) + ep0327_217 * log(s_0327 / ic0327) + ep0633_217 * log(s_0633 / ic0633) + ep0991_217 * log(s_0991 / ic0991))) - (cell * v0_216 * (1 + ep0327_216 * log(s_0327 / ic0327) + ep0434_216 * log(s_0434 / ic0434) + ep1003_216 * log(s_1003 / ic1003) + ep0325_216 * log(s_0325 / ic0325) + ep0394_216 * log(s_0394 / ic0394) + ep1322_216 * log(s_1322 / ic1322)));
    der(s_0328) = (cell * v0_230 * (1 + ep0158_230 * log(s_0158 / ic0158) + ep0314_230 * log(s_0314 / ic0314) + ep0328_230 * log(s_0328 / ic0328) + ep1322_230 * log(s_1322 / ic1322))) - (2.0 * cell * v0_231 * (1 + ep0328_231 * log(s_0328 / ic0328) + ep0314_231 * log(s_0314 / ic0314) + ep1405_231 * log(s_1405 / ic1405)));
    der(s_0349) = (cell * v0_9 * (1 + ep0551_9 * log(s_0551 / ic0551) + ep1360_9 * log(s_1360 / ic1360) + ep0349_9 * log(s_0349 / ic0349) + ep1322_9 * log(s_1322 / ic1322))) - (cell * v0_17 * (1 + ep0349_17 * log(s_0349 / ic0349) + ep0210_17 * log(s_0210 / ic0210) + ep1322_17 * log(s_1322 / ic1322)));
    der(s_0362) = (cell * v0_79 * (1 + ep0981_79 * log(s_0981 / ic0981) + ep1233_79 * log(s_1233 / ic1233) + ep0362_79 * log(s_0362 / ic0362) + ep0980_79 * log(s_0980 / ic0980))) + (cell * v0_188 * (1 + ep0841_188 * log(s_0841 / ic0841) + ep1233_188 * log(s_1233 / ic1233) + ep0362_188 * log(s_0362 / ic0362) + ep1012_188 * log(s_1012 / ic1012))) - (cell * v0_28 * (1 + ep0362_28 * log(s_0362 / ic0362) + ep0529_28 * log(s_0529 / ic0529) + ep0373_28 * log(s_0373 / ic0373)));
    der(s_0367) = (cell * v0_26 * (1 + ep0373_26 * log(s_0373 / ic0373) + ep0367_26 * log(s_0367 / ic0367) + ep0529_26 * log(s_0529 / ic0529))) - (cell * v0_150 * (1 + ep0367_150 * log(s_0367 / ic0367) + ep0373_150 * log(s_0373 / ic0373) + ep0218_150 * log(s_0218 / ic0218) + ep0529_150 * log(s_0529 / ic0529)));
    der(s_0373) = (cell * v0_28 * (1 + ep0362_28 * log(s_0362 / ic0362) + ep0529_28 * log(s_0529 / ic0529) + ep0373_28 * log(s_0373 / ic0373))) + (cell * v0_228 * (1 + ep0529_228 * log(s_0529 / ic0529) + ep1198_228 * log(s_1198 / ic1198) + ep1399_228 * log(s_1399 / ic1399) + ep0373_228 * log(s_0373 / ic0373) + ep0456_228 * log(s_0456 / ic0456) + ep1203_228 * log(s_1203 / ic1203))) - (cell * v0_11 * (1 + ep0232_11 * log(s_0232 / ic0232) + ep0373_11 * log(s_0373 / ic0373) + ep0162_11 * log(s_0162 / ic0162) + ep0529_11 * log(s_0529 / ic0529))) - (2.0 * cell * v0_26 * (1 + ep0373_26 * log(s_0373 / ic0373) + ep0367_26 * log(s_0367 / ic0367) + ep0529_26 * log(s_0529 / ic0529))) - (cell * v0_27 * (1 + ep0373_27 * log(s_0373 / ic0373) + ep0434_27 * log(s_0434 / ic0434) + ep0445_27 * log(s_0445 / ic0445) + ep0394_27 * log(s_0394 / ic0394) + ep1101_27 * log(s_1101 / ic1101) + ep1322_27 * log(s_1322 / ic1322))) - (cell * v0_74 * (1 + ep0373_74 * log(s_0373 / ic0373) + ep1271_74 * log(s_1271 / ic1271) + ep0522_74 * log(s_0522 / ic0522) + ep0529_74 * log(s_0529 / ic0529))) - (cell * v0_103 * (1 + ep0373_103 * log(s_0373 / ic0373) + ep1101_103 * log(s_1101 / ic1101) + ep1212_103 * log(s_1212 / ic1212) + ep0456_103 * log(s_0456 / ic0456) + ep0529_103 * log(s_0529 / ic0529) + ep1207_103 * log(s_1207 / ic1207) + ep1255_103 * log(s_1255 / ic1255))) - (cell * v0_143 * (1 + ep0180_143 * log(s_0180 / ic0180) + ep0373_143 * log(s_0373 / ic0373) + ep0529_143 * log(s_0529 / ic0529) + ep0835_143 * log(s_0835 / ic0835))) - (cell * v0_147 * (1 + ep0373_147 * log(s_0373 / ic0373) + ep1014_147 * log(s_1014 / ic1014) + ep0529_147 * log(s_0529 / ic0529) + ep1233_147 * log(s_1233 / ic1233))) - (cell * v0_150 * (1 + ep0367_150 * log(s_0367 / ic0367) + ep0373_150 * log(s_0373 / ic0373) + ep0218_150 * log(s_0218 / ic0218) + ep0529_150 * log(s_0529 / ic0529)));
    der(s_0380) = (cell * v0_84 * (1 + ep0529_84 * log(s_0529 / ic0529) + ep1524_84 * log(s_1524 / ic1524) + ep0380_84 * log(s_0380 / ic0380) + ep0619_84 * log(s_0619 / ic0619))) - (cell * v0_3 * (1 + ep0082_3 * log(s_0082 / ic0082) + ep0380_3 * log(s_0380 / ic0380) + ep0529_3 * log(s_0529 / ic0529) + ep1331_3 * log(s_1331 / ic1331))) - (cell * v0_127 * (1 + ep0380_127 * log(s_0380 / ic0380) + ep0767_127 * log(s_0767 / ic0767) + ep0082_127 * log(s_0082 / ic0082) + ep0529_127 * log(s_0529 / ic0529)));
    der(s_0386) = (cell * v0_32 * (1 + ep1413_32 * log(s_1413 / ic1413) + ep0386_32 * log(s_0386 / ic0386) + ep1012_32 * log(s_1012 / ic1012))) - (cell * v0_31 * (1 + ep0386_31 * log(s_0386 / ic0386) + ep0434_31 * log(s_0434 / ic0434) + ep0394_31 * log(s_0394 / ic0394) + ep0423_31 * log(s_0423 / ic0423)));
    der(s_0390) = (cell * v0_200 * (1 + ep0201_200 * log(s_0201 / ic0201) + ep1616_200 * log(s_1616 / ic1616) + ep0390_200 * log(s_0390 / ic0390) + ep1469_200 * log(s_1469 / ic1469) + ep1620_200 * log(s_1620 / ic1620))) - (cell * v0_14 * (1 + ep0390_14 * log(s_0390 / ic0390) + ep0423_14 * log(s_0423 / ic0423) + ep1322_14 * log(s_1322 / ic1322)));
    der(s_0393) = (cell * v0_36 * (1 + ep0785_36 * log(s_0785 / ic0785) + ep0849_36 * log(s_0849 / ic0849) + ep0973_36 * log(s_0973 / ic0973) + ep0393_36 * log(s_0393 / ic0393) + ep0739_36 * log(s_0739 / ic0739) + ep1322_36 * log(s_1322 / ic1322))) - (cell * v0_35 * (1 + ep0393_35 * log(s_0393 / ic0393) + ep0423_35 * log(s_0423 / ic0423) + ep0725_35 * log(s_0725 / ic0725)));
    der(s_0394) = (cell * v0_22 * (1 + ep0301_22 * log(s_0301 / ic0301) + ep0434_22 * log(s_0434 / ic0434) + ep0999_22 * log(s_0999 / ic0999) + ep0302_22 * log(s_0302 / ic0302) + ep0394_22 * log(s_0394 / ic0394) + ep0991_22 * log(s_0991 / ic0991) + ep1322_22 * log(s_1322 / ic1322))) + (cell * v0_27 * (1 + ep0373_27 * log(s_0373 / ic0373) + ep0434_27 * log(s_0434 / ic0434) + ep0445_27 * log(s_0445 / ic0445) + ep0394_27 * log(s_0394 / ic0394) + ep1101_27 * log(s_1101 / ic1101) + ep1322_27 * log(s_1322 / ic1322))) + (cell * v0_29 * (1 + ep0434_29 * log(s_0434 / ic0434) + ep1192_29 * log(s_1192 / ic1192) + ep0394_29 * log(s_0394 / ic0394) + ep1191_29 * log(s_1191 / ic1191))) + (cell * v0_31 * (1 + ep0386_31 * log(s_0386 / ic0386) + ep0434_31 * log(s_0434 / ic0434) + ep0394_31 * log(s_0394 / ic0394) + ep0423_31 * log(s_0423 / ic0423))) + (2.0 * cell * v0_33 * (1 + ep0423_33 * log(s_0423 / ic0423) + ep0434_33 * log(s_0434 / ic0434) + ep0394_33 * log(s_0394 / ic0394))) + (cell * v0_37 * (1 + ep0298_37 * log(s_0298 / ic0298) + ep0434_37 * log(s_0434 / ic0434) + ep0201_37 * log(s_0201 / ic0201) + ep0394_37 * log(s_0394 / ic0394))) + (cell * v0_48 * (1 + ep0434_48 * log(s_0434 / ic0434) + ep0973_48 * log(s_0973 / ic0973) + ep0295_48 * log(s_0295 / ic0295) + ep0394_48 * log(s_0394 / ic0394))) + (2.0 * cell * v0_66 * (1 + ep0434_66 * log(s_0434 / ic0434) + ep0445_66 * log(s_0445 / ic0445) + ep0999_66 * log(s_0999 / ic0999) + ep0394_66 * log(s_0394 / ic0394) + ep0455_66 * log(s_0455 / ic0455) + ep0991_66 * log(s_0991 / ic0991) + ep1322_66 * log(s_1322 / ic1322))) + (cell * v0_76 * (1 + ep0419_76 * log(s_0419 / ic0419) + ep0434_76 * log(s_0434 / ic0434) + ep1559_76 * log(s_1559 / ic1559) + ep0394_76 * log(s_0394 / ic0394) + ep0539_76 * log(s_0539 / ic0539) + ep1322_76 * log(s_1322 / ic1322))) + (cell * v0_120 * (1 + ep0419_120 * log(s_0419 / ic0419) + ep0434_120 * log(s_0434 / ic0434) + ep0991_120 * log(s_0991 / ic0991) + ep0394_120 * log(s_0394 / ic0394) + ep0999_120 * log(s_0999 / ic0999) + ep1322_120 * log(s_1322 / ic1322))) + (cell * v0_135 * (1 + ep0434_135 * log(s_0434 / ic0434) + ep0782_135 * log(s_0782 / ic0782) + ep0394_135 * log(s_0394 / ic0394) + ep0739_135 * log(s_0739 / ic0739))) + (cell * v0_137 * (1 + ep0434_137 * log(s_0434 / ic0434) + ep0563_137 * log(s_0563 / ic0563) + ep0394_137 * log(s_0394 / ic0394) + ep0568_137 * log(s_0568 / ic0568))) + (cell * v0_146 * (1 + ep0434_146 * log(s_0434 / ic0434) + ep1014_146 * log(s_1014 / ic1014) + ep0394_146 * log(s_0394 / ic0394) + ep1238_146 * log(s_1238 / ic1238))) + (cell * v0_180 * (1 + ep0018_180 * log(s_0018 / ic0018) + ep0434_180 * log(s_0434 / ic0434) + ep0394_180 * log(s_0394 / ic0394) + ep0456_180 * log(s_0456 / ic0456) + ep0943_180 * log(s_0943 / ic0943) + ep1322_180 * log(s_1322 / ic1322))) + (cell * v0_186 * (1 + ep0434_186 * log(s_0434 / ic0434) + ep0739_186 * log(s_0739 / ic0739) + ep0394_186 * log(s_0394 / ic0394) + ep0785_186 * log(s_0785 / ic0785))) + (cell * v0_187 * (1 + ep0434_187 * log(s_0434 / ic0434) + ep1538_187 * log(s_1538 / ic1538) + ep0394_187 * log(s_0394 / ic0394) + ep1559_187 * log(s_1559 / ic1559))) + (cell * v0_195 * (1 + ep0302_195 * log(s_0302 / ic0302) + ep0434_195 * log(s_0434 / ic0434) + ep0300_195 * log(s_0300 / ic0300) + ep0394_195 * log(s_0394 / ic0394) + ep1322_195 * log(s_1322 / ic1322))) + (cell * v0_201 * (1 + ep0434_201 * log(s_0434 / ic0434) + ep0557_201 * log(s_0557 / ic0557) + ep0394_201 * log(s_0394 / ic0394) + ep0555_201 * log(s_0555 / ic0555))) + (cell * v0_209 * (1 + ep0019_209 * log(s_0019 / ic0019) + ep0434_209 * log(s_0434 / ic0434) + ep0018_209 * log(s_0018 / ic0018) + ep0394_209 * log(s_0394 / ic0394))) + (cell * v0_210 * (1 + ep0434_210 * log(s_0434 / ic0434) + ep0973_210 * log(s_0973 / ic0973) + ep1364_210 * log(s_1364 / ic1364) + ep0299_210 * log(s_0299 / ic0299) + ep0394_210 * log(s_0394 / ic0394) + ep1322_210 * log(s_1322 / ic1322))) + (cell * v0_213 * (1 + ep0300_213 * log(s_0300 / ic0300) + ep0456_213 * log(s_0456 / ic0456) + ep0434_213 * log(s_0434 / ic0434) + ep1364_213 * log(s_1364 / ic1364) + ep0394_213 * log(s_0394 / ic0394) + ep1322_213 * log(s_1322 / ic1322))) + (cell * v0_216 * (1 + ep0327_216 * log(s_0327 / ic0327) + ep0434_216 * log(s_0434 / ic0434) + ep1003_216 * log(s_1003 / ic1003) + ep0325_216 * log(s_0325 / ic0325) + ep0394_216 * log(s_0394 / ic0394) + ep1322_216 * log(s_1322 / ic1322))) + (cell * v0_227 * (1 + ep0434_227 * log(s_0434 / ic0434) + ep0445_227 * log(s_0445 / ic0445) + ep1399_227 * log(s_1399 / ic1399) + ep0394_227 * log(s_0394 / ic0394) + ep1271_227 * log(s_1271 / ic1271) + ep1322_227 * log(s_1322 / ic1322))) + (cell * v0_245 * (1 + ep0434_245 * log(s_0434 / ic0434) + ep1429_245 * log(s_1429 / ic1429) + ep0261_245 * log(s_0261 / ic0261) + ep0394_245 * log(s_0394 / ic0394))) + (cell * v0_266 * (1 + ep0434_266 * log(s_0434 / ic0434) + ep1545_266 * log(s_1545 / ic1545) + ep0394_266 * log(s_0394 / ic0394) + ep1538_266 * log(s_1538 / ic1538))) + (59.276 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux)) - (cell * v0_83 * (1 + ep0394_83 * log(s_0394 / ic0394) + ep0613_83 * log(s_0613 / ic0613) + ep0434_83 * log(s_0434 / ic0434) + ep0615_83 * log(s_0615 / ic0615))) - (cell * v0_113 * (1 + ep0120_113 * log(s_0120 / ic0120) + ep0394_113 * log(s_0394 / ic0394) + ep1322_113 * log(s_1322 / ic1322) + ep0434_113 * log(s_0434 / ic0434) + ep0722_113 * log(s_0722 / ic0722) + ep1487_113 * log(s_1487 / ic1487))) - (cell * v0_204 * (1 + ep0075_204 * log(s_0075 / ic0075) + ep0394_204 * log(s_0394 / ic0394) + ep0260_204 * log(s_0260 / ic0260) + ep0434_204 * log(s_0434 / ic0434))) - (cell * v0_229 * (1 + ep0394_229 * log(s_0394 / ic0394) + ep1360_229 * log(s_1360 / ic1360) + ep0434_229 * log(s_0434 / ic0434) + ep1399_229 * log(s_1399 / ic1399))) - (cell * v0_234 * (1 + ep0394_234 * log(s_0394 / ic0394) + ep1616_234 * log(s_1616 / ic1616) + ep0582_234 * log(s_0582 / ic0582) + ep1620_234 * log(s_1620 / ic1620))) - (cell * v0_250 * (1 + ep0394_250 * log(s_0394 / ic0394) + ep1467_250 * log(s_1467 / ic1467) + ep0298_250 * log(s_0298 / ic0298) + ep1322_250 * log(s_1322 / ic1322))) - (cell * v0_276 * (1 + ep0394_276 * log(s_0394 / ic0394) + ep0587_276 * log(s_0587 / ic0587) + ep0434_276 * log(s_0434 / ic0434) + ep0589_276 * log(s_0589 / ic0589))) - (cell * v0_277 * (1 + ep0394_277 * log(s_0394 / ic0394) + ep0582_277 * log(s_0582 / ic0582) + ep0434_277 * log(s_0434 / ic0434) + ep0584_277 * log(s_0584 / ic0584)));
    der(s_0403) = (cell * v0_34 * (1 + ep0299_34 * log(s_0299 / ic0299) + ep0403_34 * log(s_0403 / ic0403) + ep0725_34 * log(s_0725 / ic0725))) + (cell * v0_151 * (1 + ep0312_151 * log(s_0312 / ic0312) + ep0999_151 * log(s_0999 / ic0999) + ep0403_151 * log(s_0403 / ic0403) + ep0550_151 * log(s_0550 / ic0550) + ep0991_151 * log(s_0991 / ic0991))) - (cell * v0_214 * (1 + ep0120_214 * log(s_0120 / ic0120) + ep0403_214 * log(s_0403 / ic0403) + ep1365_214 * log(s_1365 / ic1365) + ep1487_214 * log(s_1487 / ic1487)));
    der(s_0404) = (cell * v0_38 * (1 + ep0434_38 * log(s_0434 / ic0434) + ep0955_38 * log(s_0955 / ic0955) + ep1582_38 * log(s_1582 / ic1582) + ep0404_38 * log(s_0404 / ic0404) + ep0423_38 * log(s_0423 / ic0423) + ep0633_38 * log(s_0633 / ic0633))) - (0.4588 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0409) = (cell * v0_39 * (1 + ep0568_39 * log(s_0568 / ic0568) + ep1543_39 * log(s_1543 / ic1543) + ep0409_39 * log(s_0409 / ic0409) + ep1538_39 * log(s_1538 / ic1538))) - (cell * v0_259 * (1 + ep0409_259 * log(s_0409 / ic0409) + ep1322_259 * log(s_1322 / ic1322) + ep1520_259 * log(s_1520 / ic1520)));
    der(s_0419) = (cell * v0_5 * (1 + ep0142_5 * log(s_0142 / ic0142) + ep0313_5 * log(s_0313 / ic0313) + ep0419_5 * log(s_0419 / ic0419))) + (cell * v0_78 * (1 + ep0980_78 * log(s_0980 / ic0980) + ep0178_78 * log(s_0178 / ic0178) + ep0419_78 * log(s_0419 / ic0419) + ep0981_78 * log(s_0981 / ic0981))) + (cell * v0_82 * (1 + ep0589_82 * log(s_0589 / ic0589) + ep0419_82 * log(s_0419 / ic0419) + ep0654_82 * log(s_0654 / ic0654))) + (cell * v0_129 * (1 + ep1003_129 * log(s_1003 / ic1003) + ep1198_129 * log(s_1198 / ic1198) + ep1487_129 * log(s_1487 / ic1487) + ep0306_129 * log(s_0306 / ic0306) + ep0419_129 * log(s_0419 / ic0419) + ep0456_129 * log(s_0456 / ic0456) + ep1203_129 * log(s_1203 / ic1203))) + (cell * v0_270 * (1 + ep0420_270 * log(s_0420 / ic0420) + ep0419_270 * log(s_0419 / ic0419))) - (cell * v0_76 * (1 + ep0419_76 * log(s_0419 / ic0419) + ep0434_76 * log(s_0434 / ic0434) + ep1559_76 * log(s_1559 / ic1559) + ep0394_76 * log(s_0394 / ic0394) + ep0539_76 * log(s_0539 / ic0539) + ep1322_76 * log(s_1322 / ic1322))) - (cell * v0_118 * (1 + ep0180_118 * log(s_0180 / ic0180) + ep0419_118 * log(s_0419 / ic0419) + ep1203_118 * log(s_1203 / ic1203) + ep0991_118 * log(s_0991 / ic0991) + ep1198_118 * log(s_1198 / ic1198))) - (cell * v0_119 * (1 + ep0180_119 * log(s_0180 / ic0180) + ep0419_119 * log(s_0419 / ic0419) + ep1212_119 * log(s_1212 / ic1212) + ep0991_119 * log(s_0991 / ic0991) + ep1207_119 * log(s_1207 / ic1207))) - (cell * v0_120 * (1 + ep0419_120 * log(s_0419 / ic0419) + ep0434_120 * log(s_0434 / ic0434) + ep0991_120 * log(s_0991 / ic0991) + ep0394_120 * log(s_0394 / ic0394) + ep0999_120 * log(s_0999 / ic0999) + ep1322_120 * log(s_1322 / ic1322)));
    der(s_0420) = 0.0;
    der(s_0423) = (cell * v0_14 * (1 + ep0390_14 * log(s_0390 / ic0390) + ep0423_14 * log(s_0423 / ic0423) + ep1322_14 * log(s_1322 / ic1322))) + (cell * v0_31 * (1 + ep0386_31 * log(s_0386 / ic0386) + ep0434_31 * log(s_0434 / ic0434) + ep0394_31 * log(s_0394 / ic0394) + ep0423_31 * log(s_0423 / ic0423))) + (cell * v0_35 * (1 + ep0393_35 * log(s_0393 / ic0393) + ep0423_35 * log(s_0423 / ic0423) + ep0725_35 * log(s_0725 / ic0725))) + (cell * v0_38 * (1 + ep0434_38 * log(s_0434 / ic0434) + ep0955_38 * log(s_0955 / ic0955) + ep1582_38 * log(s_1582 / ic1582) + ep0404_38 * log(s_0404 / ic0404) + ep0423_38 * log(s_0423 / ic0423) + ep0633_38 * log(s_0633 / ic0633))) + (cell * v0_43 * (1 + ep0434_43 * log(s_0434 / ic0434) + ep0973_43 * log(s_0973 / ic0973) + ep0979_43 * log(s_0979 / ic0979) + ep0015_43 * log(s_0015 / ic0015) + ep0423_43 * log(s_0423 / ic0423) + ep0633_43 * log(s_0633 / ic0633))) + (cell * v0_44 * (1 + ep0434_44 * log(s_0434 / ic0434) + ep0965_44 * log(s_0965 / ic0965) + ep1583_44 * log(s_1583 / ic1583) + ep0423_44 * log(s_0423 / ic0423) + ep0428_44 * log(s_0428 / ic0428) + ep0633_44 * log(s_0633 / ic0633))) + (cell * v0_45 * (1 + ep0434_45 * log(s_0434 / ic0434) + ep0973_45 * log(s_0973 / ic0973) + ep0999_45 * log(s_0999 / ic0999) + ep0423_45 * log(s_0423 / ic0423) + ep0633_45 * log(s_0633 / ic0633) + ep0969_45 * log(s_0969 / ic0969) + ep0991_45 * log(s_0991 / ic0991))) + (cell * v0_46 * (1 + ep0434_46 * log(s_0434 / ic0434) + ep0969_46 * log(s_0969 / ic0969) + ep1585_46 * log(s_1585 / ic1585) + ep0423_46 * log(s_0423 / ic0423) + ep0430_46 * log(s_0430 / ic0430) + ep0633_46 * log(s_0633 / ic0633))) + (cell * v0_51 * (1 + ep0434_51 * log(s_0434 / ic0434) + ep0973_51 * log(s_0973 / ic0973) + ep1587_51 * log(s_1587 / ic1587) + ep0423_51 * log(s_0423 / ic0423) + ep0432_51 * log(s_0432 / ic0432) + ep0633_51 * log(s_0633 / ic0633))) + (cell * v0_80 * (1 + ep0434_80 * log(s_0434 / ic0434) + ep0981_80 * log(s_0981 / ic0981) + ep1589_80 * log(s_1589 / ic1589) + ep0423_80 * log(s_0423 / ic0423) + ep0542_80 * log(s_0542 / ic0542) + ep0633_80 * log(s_0633 / ic0633))) + (cell * v0_121 * (1 + ep0434_121 * log(s_0434 / ic0434) + ep0999_121 * log(s_0999 / ic0999) + ep1590_121 * log(s_1590 / ic1590) + ep0423_121 * log(s_0423 / ic0423) + ep0633_121 * log(s_0633 / ic0633) + ep0747_121 * log(s_0747 / ic0747))) + (cell * v0_122 * (1 + ep0434_122 * log(s_0434 / ic0434) + ep0991_122 * log(s_0991 / ic0991) + ep1591_122 * log(s_1591 / ic1591) + ep0423_122 * log(s_0423 / ic0423) + ep0633_122 * log(s_0633 / ic0633) + ep0748_122 * log(s_0748 / ic0748))) + (cell * v0_132 * (1 + ep0434_132 * log(s_0434 / ic0434) + ep1003_132 * log(s_1003 / ic1003) + ep1593_132 * log(s_1593 / ic1593) + ep0423_132 * log(s_0423 / ic0423) + ep0633_132 * log(s_0633 / ic0633) + ep0757_132 * log(s_0757 / ic0757))) + (cell * v0_133 * (1 + ep0434_133 * log(s_0434 / ic0434) + ep0999_133 * log(s_0999 / ic0999) + ep1565_133 * log(s_1565 / ic1565) + ep0423_133 * log(s_0423 / ic0423) + ep0633_133 * log(s_0633 / ic0633) + ep0782_133 * log(s_0782 / ic0782) + ep0991_133 * log(s_0991 / ic0991))) + (cell * v0_141 * (1 + ep0434_141 * log(s_0434 / ic0434) + ep1006_141 * log(s_1006 / ic1006) + ep1594_141 * log(s_1594 / ic1594) + ep0423_141 * log(s_0423 / ic0423) + ep0633_141 * log(s_0633 / ic0633) + ep0832_141 * log(s_0832 / ic0832))) + (cell * v0_161 * (1 + ep0434_161 * log(s_0434 / ic0434) + ep1016_161 * log(s_1016 / ic1016) + ep1596_161 * log(s_1596 / ic1596) + ep0423_161 * log(s_0423 / ic0423) + ep0633_161 * log(s_0633 / ic0633) + ep0847_161 * log(s_0847 / ic0847))) + (cell * v0_168 * (1 + ep0434_168 * log(s_0434 / ic0434) + ep1021_168 * log(s_1021 / ic1021) + ep1598_168 * log(s_1598 / ic1598) + ep0423_168 * log(s_0423 / ic0423) + ep0633_168 * log(s_0633 / ic0633) + ep1077_168 * log(s_1077 / ic1077))) + (cell * v0_169 * (1 + ep0434_169 * log(s_0434 / ic0434) + ep1025_169 * log(s_1025 / ic1025) + ep1600_169 * log(s_1600 / ic1600) + ep0423_169 * log(s_0423 / ic0423) + ep0633_169 * log(s_0633 / ic0633) + ep1099_169 * log(s_1099 / ic1099))) + (cell * v0_176 * (1 + ep0434_176 * log(s_0434 / ic0434) + ep1029_176 * log(s_1029 / ic1029) + ep1602_176 * log(s_1602 / ic1602) + ep0423_176 * log(s_0423 / ic0423) + ep0633_176 * log(s_0633 / ic0633) + ep1148_176 * log(s_1148 / ic1148))) + (cell * v0_194 * (1 + ep0434_194 * log(s_0434 / ic0434) + ep1032_194 * log(s_1032 / ic1032) + ep1604_194 * log(s_1604 / ic1604) + ep0423_194 * log(s_0423 / ic0423) + ep0633_194 * log(s_0633 / ic0633) + ep1314_194 * log(s_1314 / ic1314))) + (cell * v0_218 * (1 + ep0434_218 * log(s_0434 / ic0434) + ep1408_218 * log(s_1408 / ic1408) + ep0423_218 * log(s_0423 / ic0423) + ep1386_218 * log(s_1386 / ic1386))) + (cell * v0_225 * (1 + ep0434_225 * log(s_0434 / ic0434) + ep1035_225 * log(s_1035 / ic1035) + ep1606_225 * log(s_1606 / ic1606) + ep0423_225 * log(s_0423 / ic0423) + ep0633_225 * log(s_0633 / ic0633) + ep1379_225 * log(s_1379 / ic1379))) + (cell * v0_243 * (1 + ep0434_243 * log(s_0434 / ic0434) + ep1039_243 * log(s_1039 / ic1039) + ep1607_243 * log(s_1607 / ic1607) + ep0423_243 * log(s_0423 / ic0423) + ep0633_243 * log(s_0633 / ic0633) + ep1428_243 * log(s_1428 / ic1428))) + (cell * v0_254 * (1 + ep0434_254 * log(s_0434 / ic0434) + ep1045_254 * log(s_1045 / ic1045) + ep1608_254 * log(s_1608 / ic1608) + ep0423_254 * log(s_0423 / ic0423) + ep0633_254 * log(s_0633 / ic0633) + ep1491_254 * log(s_1491 / ic1491))) + (cell * v0_263 * (1 + ep0434_263 * log(s_0434 / ic0434) + ep1048_263 * log(s_1048 / ic1048) + ep1610_263 * log(s_1610 / ic1610) + ep0423_263 * log(s_0423 / ic0423) + ep0633_263 * log(s_0633 / ic0633) + ep1527_263 * log(s_1527 / ic1527))) + (cell * v0_265 * (1 + ep0434_265 * log(s_0434 / ic0434) + ep1051_265 * log(s_1051 / ic1051) + ep1612_265 * log(s_1612 / ic1612) + ep0423_265 * log(s_0423 / ic0423) + ep0633_265 * log(s_0633 / ic0633) + ep1533_265 * log(s_1533 / ic1533))) + (cell * v0_269 * (1 + ep0434_269 * log(s_0434 / ic0434) + ep1056_269 * log(s_1056 / ic1056) + ep1614_269 * log(s_1614 / ic1614) + ep0423_269 * log(s_0423 / ic0423) + ep0633_269 * log(s_0633 / ic0633) + ep1561_269 * log(s_1561 / ic1561))) - (cell * v0_33 * (1 + ep0423_33 * log(s_0423 / ic0423) + ep0434_33 * log(s_0434 / ic0434) + ep0394_33 * log(s_0394 / ic0394))) - (cell * v0_104 * (1 + ep0423_104 * log(s_0423 / ic0423) + ep0602_104 * log(s_0602 / ic0602) + ep0633_104 * log(s_0633 / ic0633) + ep0434_104 * log(s_0434 / ic0434) + ep0529_104 * log(s_0529 / ic0529) + ep0595_104 * log(s_0595 / ic0595))) - (cell * v0_105 * (1 + ep0423_105 * log(s_0423 / ic0423) + ep0633_105 * log(s_0633 / ic0633) + ep1073_105 * log(s_1073 / ic1073) + ep0434_105 * log(s_0434 / ic0434) + ep0529_105 * log(s_0529 / ic0529) + ep1065_105 * log(s_1065 / ic1065))) - (cell * v0_106 * (1 + ep0423_106 * log(s_0423 / ic0423) + ep0633_106 * log(s_0633 / ic0633) + ep1454_106 * log(s_1454 / ic1454) + ep0434_106 * log(s_0434 / ic0434) + ep0529_106 * log(s_0529 / ic0529) + ep1449_106 * log(s_1449 / ic1449))) - (0.046 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0427) = (cell * v0_41 * (1 + ep0515_41 * log(s_0515 / ic0515) + ep0999_41 * log(s_0999 / ic0999) + ep0427_41 * log(s_0427 / ic0427) + ep0991_41 * log(s_0991 / ic0991) + ep1399_41 * log(s_1399 / ic1399))) - (cell * v0_40 * (1 + ep0427_40 * log(s_0427 / ic0427) + ep1386_40 * log(s_1386 / ic1386) + ep0633_40 * log(s_0633 / ic0633) + ep1187_40 * log(s_1187 / ic1187)));
    der(s_0428) = (cell * v0_44 * (1 + ep0434_44 * log(s_0434 / ic0434) + ep0965_44 * log(s_0965 / ic0965) + ep1583_44 * log(s_1583 / ic1583) + ep0423_44 * log(s_0423 / ic0423) + ep0428_44 * log(s_0428 / ic0428) + ep0633_44 * log(s_0633 / ic0633))) - (0.1607 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0430) = (cell * v0_46 * (1 + ep0434_46 * log(s_0434 / ic0434) + ep0969_46 * log(s_0969 / ic0969) + ep1585_46 * log(s_1585 / ic1585) + ep0423_46 * log(s_0423 / ic0423) + ep0430_46 * log(s_0430 / ic0430) + ep0633_46 * log(s_0633 / ic0633))) - (0.1017 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0432) = (cell * v0_51 * (1 + ep0434_51 * log(s_0434 / ic0434) + ep0973_51 * log(s_0973 / ic0973) + ep1587_51 * log(s_1587 / ic1587) + ep0423_51 * log(s_0423 / ic0423) + ep0432_51 * log(s_0432 / ic0432) + ep0633_51 * log(s_0633 / ic0633))) - (0.2975 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0434) = (cell * v0_83 * (1 + ep0394_83 * log(s_0394 / ic0394) + ep0613_83 * log(s_0613 / ic0613) + ep0434_83 * log(s_0434 / ic0434) + ep0615_83 * log(s_0615 / ic0615))) + (cell * v0_104 * (1 + ep0423_104 * log(s_0423 / ic0423) + ep0602_104 * log(s_0602 / ic0602) + ep0633_104 * log(s_0633 / ic0633) + ep0434_104 * log(s_0434 / ic0434) + ep0529_104 * log(s_0529 / ic0529) + ep0595_104 * log(s_0595 / ic0595))) + (cell * v0_105 * (1 + ep0423_105 * log(s_0423 / ic0423) + ep0633_105 * log(s_0633 / ic0633) + ep1073_105 * log(s_1073 / ic1073) + ep0434_105 * log(s_0434 / ic0434) + ep0529_105 * log(s_0529 / ic0529) + ep1065_105 * log(s_1065 / ic1065))) + (cell * v0_106 * (1 + ep0423_106 * log(s_0423 / ic0423) + ep0633_106 * log(s_0633 / ic0633) + ep1454_106 * log(s_1454 / ic1454) + ep0434_106 * log(s_0434 / ic0434) + ep0529_106 * log(s_0529 / ic0529) + ep1449_106 * log(s_1449 / ic1449))) + (cell * v0_113 * (1 + ep0120_113 * log(s_0120 / ic0120) + ep0394_113 * log(s_0394 / ic0394) + ep1322_113 * log(s_1322 / ic1322) + ep0434_113 * log(s_0434 / ic0434) + ep0722_113 * log(s_0722 / ic0722) + ep1487_113 * log(s_1487 / ic1487))) + (cell * v0_204 * (1 + ep0075_204 * log(s_0075 / ic0075) + ep0394_204 * log(s_0394 / ic0394) + ep0260_204 * log(s_0260 / ic0260) + ep0434_204 * log(s_0434 / ic0434))) + (cell * v0_229 * (1 + ep0394_229 * log(s_0394 / ic0394) + ep1360_229 * log(s_1360 / ic1360) + ep0434_229 * log(s_0434 / ic0434) + ep1399_229 * log(s_1399 / ic1399))) + (cell * v0_276 * (1 + ep0394_276 * log(s_0394 / ic0394) + ep0587_276 * log(s_0587 / ic0587) + ep0434_276 * log(s_0434 / ic0434) + ep0589_276 * log(s_0589 / ic0589))) + (cell * v0_277 * (1 + ep0394_277 * log(s_0394 / ic0394) + ep0582_277 * log(s_0582 / ic0582) + ep0434_277 * log(s_0434 / ic0434) + ep0584_277 * log(s_0584 / ic0584))) - (cell * v0_22 * (1 + ep0301_22 * log(s_0301 / ic0301) + ep0434_22 * log(s_0434 / ic0434) + ep0999_22 * log(s_0999 / ic0999) + ep0302_22 * log(s_0302 / ic0302) + ep0394_22 * log(s_0394 / ic0394) + ep0991_22 * log(s_0991 / ic0991) + ep1322_22 * log(s_1322 / ic1322))) - (cell * v0_27 * (1 + ep0373_27 * log(s_0373 / ic0373) + ep0434_27 * log(s_0434 / ic0434) + ep0445_27 * log(s_0445 / ic0445) + ep0394_27 * log(s_0394 / ic0394) + ep1101_27 * log(s_1101 / ic1101) + ep1322_27 * log(s_1322 / ic1322))) - (cell * v0_29 * (1 + ep0434_29 * log(s_0434 / ic0434) + ep1192_29 * log(s_1192 / ic1192) + ep0394_29 * log(s_0394 / ic0394) + ep1191_29 * log(s_1191 / ic1191))) - (cell * v0_31 * (1 + ep0386_31 * log(s_0386 / ic0386) + ep0434_31 * log(s_0434 / ic0434) + ep0394_31 * log(s_0394 / ic0394) + ep0423_31 * log(s_0423 / ic0423))) - (cell * v0_33 * (1 + ep0423_33 * log(s_0423 / ic0423) + ep0434_33 * log(s_0434 / ic0434) + ep0394_33 * log(s_0394 / ic0394))) - (cell * v0_37 * (1 + ep0298_37 * log(s_0298 / ic0298) + ep0434_37 * log(s_0434 / ic0434) + ep0201_37 * log(s_0201 / ic0201) + ep0394_37 * log(s_0394 / ic0394))) - (cell * v0_38 * (1 + ep0434_38 * log(s_0434 / ic0434) + ep0955_38 * log(s_0955 / ic0955) + ep1582_38 * log(s_1582 / ic1582) + ep0404_38 * log(s_0404 / ic0404) + ep0423_38 * log(s_0423 / ic0423) + ep0633_38 * log(s_0633 / ic0633))) - (cell * v0_43 * (1 + ep0434_43 * log(s_0434 / ic0434) + ep0973_43 * log(s_0973 / ic0973) + ep0979_43 * log(s_0979 / ic0979) + ep0015_43 * log(s_0015 / ic0015) + ep0423_43 * log(s_0423 / ic0423) + ep0633_43 * log(s_0633 / ic0633))) - (cell * v0_44 * (1 + ep0434_44 * log(s_0434 / ic0434) + ep0965_44 * log(s_0965 / ic0965) + ep1583_44 * log(s_1583 / ic1583) + ep0423_44 * log(s_0423 / ic0423) + ep0428_44 * log(s_0428 / ic0428) + ep0633_44 * log(s_0633 / ic0633))) - (cell * v0_45 * (1 + ep0434_45 * log(s_0434 / ic0434) + ep0973_45 * log(s_0973 / ic0973) + ep0999_45 * log(s_0999 / ic0999) + ep0423_45 * log(s_0423 / ic0423) + ep0633_45 * log(s_0633 / ic0633) + ep0969_45 * log(s_0969 / ic0969) + ep0991_45 * log(s_0991 / ic0991))) - (cell * v0_46 * (1 + ep0434_46 * log(s_0434 / ic0434) + ep0969_46 * log(s_0969 / ic0969) + ep1585_46 * log(s_1585 / ic1585) + ep0423_46 * log(s_0423 / ic0423) + ep0430_46 * log(s_0430 / ic0430) + ep0633_46 * log(s_0633 / ic0633))) - (cell * v0_48 * (1 + ep0434_48 * log(s_0434 / ic0434) + ep0973_48 * log(s_0973 / ic0973) + ep0295_48 * log(s_0295 / ic0295) + ep0394_48 * log(s_0394 / ic0394))) - (cell * v0_51 * (1 + ep0434_51 * log(s_0434 / ic0434) + ep0973_51 * log(s_0973 / ic0973) + ep1587_51 * log(s_1587 / ic1587) + ep0423_51 * log(s_0423 / ic0423) + ep0432_51 * log(s_0432 / ic0432) + ep0633_51 * log(s_0633 / ic0633))) - (cell * v0_52 * (1 + ep0434_52 * log(s_0434 / ic0434) + ep1386_52 * log(s_1386 / ic1386) + ep0326_52 * log(s_0326 / ic0326) + ep0633_52 * log(s_0633 / ic0633))) - (2.0 * cell * v0_66 * (1 + ep0434_66 * log(s_0434 / ic0434) + ep0445_66 * log(s_0445 / ic0445) + ep0999_66 * log(s_0999 / ic0999) + ep0394_66 * log(s_0394 / ic0394) + ep0455_66 * log(s_0455 / ic0455) + ep0991_66 * log(s_0991 / ic0991) + ep1322_66 * log(s_1322 / ic1322))) - (cell * v0_76 * (1 + ep0419_76 * log(s_0419 / ic0419) + ep0434_76 * log(s_0434 / ic0434) + ep1559_76 * log(s_1559 / ic1559) + ep0394_76 * log(s_0394 / ic0394) + ep0539_76 * log(s_0539 / ic0539) + ep1322_76 * log(s_1322 / ic1322))) - (cell * v0_80 * (1 + ep0434_80 * log(s_0434 / ic0434) + ep0981_80 * log(s_0981 / ic0981) + ep1589_80 * log(s_1589 / ic1589) + ep0423_80 * log(s_0423 / ic0423) + ep0542_80 * log(s_0542 / ic0542) + ep0633_80 * log(s_0633 / ic0633))) - (cell * v0_120 * (1 + ep0419_120 * log(s_0419 / ic0419) + ep0434_120 * log(s_0434 / ic0434) + ep0991_120 * log(s_0991 / ic0991) + ep0394_120 * log(s_0394 / ic0394) + ep0999_120 * log(s_0999 / ic0999) + ep1322_120 * log(s_1322 / ic1322))) - (cell * v0_121 * (1 + ep0434_121 * log(s_0434 / ic0434) + ep0999_121 * log(s_0999 / ic0999) + ep1590_121 * log(s_1590 / ic1590) + ep0423_121 * log(s_0423 / ic0423) + ep0633_121 * log(s_0633 / ic0633) + ep0747_121 * log(s_0747 / ic0747))) - (cell * v0_122 * (1 + ep0434_122 * log(s_0434 / ic0434) + ep0991_122 * log(s_0991 / ic0991) + ep1591_122 * log(s_1591 / ic1591) + ep0423_122 * log(s_0423 / ic0423) + ep0633_122 * log(s_0633 / ic0633) + ep0748_122 * log(s_0748 / ic0748))) - (cell * v0_132 * (1 + ep0434_132 * log(s_0434 / ic0434) + ep1003_132 * log(s_1003 / ic1003) + ep1593_132 * log(s_1593 / ic1593) + ep0423_132 * log(s_0423 / ic0423) + ep0633_132 * log(s_0633 / ic0633) + ep0757_132 * log(s_0757 / ic0757))) - (cell * v0_133 * (1 + ep0434_133 * log(s_0434 / ic0434) + ep0999_133 * log(s_0999 / ic0999) + ep1565_133 * log(s_1565 / ic1565) + ep0423_133 * log(s_0423 / ic0423) + ep0633_133 * log(s_0633 / ic0633) + ep0782_133 * log(s_0782 / ic0782) + ep0991_133 * log(s_0991 / ic0991))) - (cell * v0_135 * (1 + ep0434_135 * log(s_0434 / ic0434) + ep0782_135 * log(s_0782 / ic0782) + ep0394_135 * log(s_0394 / ic0394) + ep0739_135 * log(s_0739 / ic0739))) - (cell * v0_137 * (1 + ep0434_137 * log(s_0434 / ic0434) + ep0563_137 * log(s_0563 / ic0563) + ep0394_137 * log(s_0394 / ic0394) + ep0568_137 * log(s_0568 / ic0568))) - (cell * v0_141 * (1 + ep0434_141 * log(s_0434 / ic0434) + ep1006_141 * log(s_1006 / ic1006) + ep1594_141 * log(s_1594 / ic1594) + ep0423_141 * log(s_0423 / ic0423) + ep0633_141 * log(s_0633 / ic0633) + ep0832_141 * log(s_0832 / ic0832))) - (cell * v0_146 * (1 + ep0434_146 * log(s_0434 / ic0434) + ep1014_146 * log(s_1014 / ic1014) + ep0394_146 * log(s_0394 / ic0394) + ep1238_146 * log(s_1238 / ic1238))) - (cell * v0_161 * (1 + ep0434_161 * log(s_0434 / ic0434) + ep1016_161 * log(s_1016 / ic1016) + ep1596_161 * log(s_1596 / ic1596) + ep0423_161 * log(s_0423 / ic0423) + ep0633_161 * log(s_0633 / ic0633) + ep0847_161 * log(s_0847 / ic0847))) - (cell * v0_168 * (1 + ep0434_168 * log(s_0434 / ic0434) + ep1021_168 * log(s_1021 / ic1021) + ep1598_168 * log(s_1598 / ic1598) + ep0423_168 * log(s_0423 / ic0423) + ep0633_168 * log(s_0633 / ic0633) + ep1077_168 * log(s_1077 / ic1077))) - (cell * v0_169 * (1 + ep0434_169 * log(s_0434 / ic0434) + ep1025_169 * log(s_1025 / ic1025) + ep1600_169 * log(s_1600 / ic1600) + ep0423_169 * log(s_0423 / ic0423) + ep0633_169 * log(s_0633 / ic0633) + ep1099_169 * log(s_1099 / ic1099))) - (cell * v0_174 * (1 + ep0434_174 * log(s_0434 / ic0434) + ep1029_174 * log(s_1029 / ic1029) + ep0633_174 * log(s_0633 / ic0633) + ep1322_174 * log(s_1322 / ic1322) + ep1416_174 * log(s_1416 / ic1416))) - (cell * v0_176 * (1 + ep0434_176 * log(s_0434 / ic0434) + ep1029_176 * log(s_1029 / ic1029) + ep1602_176 * log(s_1602 / ic1602) + ep0423_176 * log(s_0423 / ic0423) + ep0633_176 * log(s_0633 / ic0633) + ep1148_176 * log(s_1148 / ic1148))) - (cell * v0_180 * (1 + ep0018_180 * log(s_0018 / ic0018) + ep0434_180 * log(s_0434 / ic0434) + ep0394_180 * log(s_0394 / ic0394) + ep0456_180 * log(s_0456 / ic0456) + ep0943_180 * log(s_0943 / ic0943) + ep1322_180 * log(s_1322 / ic1322))) - (cell * v0_186 * (1 + ep0434_186 * log(s_0434 / ic0434) + ep0739_186 * log(s_0739 / ic0739) + ep0394_186 * log(s_0394 / ic0394) + ep0785_186 * log(s_0785 / ic0785))) - (cell * v0_187 * (1 + ep0434_187 * log(s_0434 / ic0434) + ep1538_187 * log(s_1538 / ic1538) + ep0394_187 * log(s_0394 / ic0394) + ep1559_187 * log(s_1559 / ic1559))) - (cell * v0_194 * (1 + ep0434_194 * log(s_0434 / ic0434) + ep1032_194 * log(s_1032 / ic1032) + ep1604_194 * log(s_1604 / ic1604) + ep0423_194 * log(s_0423 / ic0423) + ep0633_194 * log(s_0633 / ic0633) + ep1314_194 * log(s_1314 / ic1314))) - (cell * v0_195 * (1 + ep0302_195 * log(s_0302 / ic0302) + ep0434_195 * log(s_0434 / ic0434) + ep0300_195 * log(s_0300 / ic0300) + ep0394_195 * log(s_0394 / ic0394) + ep1322_195 * log(s_1322 / ic1322))) - (cell * v0_201 * (1 + ep0434_201 * log(s_0434 / ic0434) + ep0557_201 * log(s_0557 / ic0557) + ep0394_201 * log(s_0394 / ic0394) + ep0555_201 * log(s_0555 / ic0555))) - (cell * v0_209 * (1 + ep0019_209 * log(s_0019 / ic0019) + ep0434_209 * log(s_0434 / ic0434) + ep0018_209 * log(s_0018 / ic0018) + ep0394_209 * log(s_0394 / ic0394))) - (cell * v0_210 * (1 + ep0434_210 * log(s_0434 / ic0434) + ep0973_210 * log(s_0973 / ic0973) + ep1364_210 * log(s_1364 / ic1364) + ep0299_210 * log(s_0299 / ic0299) + ep0394_210 * log(s_0394 / ic0394) + ep1322_210 * log(s_1322 / ic1322))) - (cell * v0_213 * (1 + ep0300_213 * log(s_0300 / ic0300) + ep0456_213 * log(s_0456 / ic0456) + ep0434_213 * log(s_0434 / ic0434) + ep1364_213 * log(s_1364 / ic1364) + ep0394_213 * log(s_0394 / ic0394) + ep1322_213 * log(s_1322 / ic1322))) - (cell * v0_216 * (1 + ep0327_216 * log(s_0327 / ic0327) + ep0434_216 * log(s_0434 / ic0434) + ep1003_216 * log(s_1003 / ic1003) + ep0325_216 * log(s_0325 / ic0325) + ep0394_216 * log(s_0394 / ic0394) + ep1322_216 * log(s_1322 / ic1322))) - (cell * v0_218 * (1 + ep0434_218 * log(s_0434 / ic0434) + ep1408_218 * log(s_1408 / ic1408) + ep0423_218 * log(s_0423 / ic0423) + ep1386_218 * log(s_1386 / ic1386))) - (cell * v0_225 * (1 + ep0434_225 * log(s_0434 / ic0434) + ep1035_225 * log(s_1035 / ic1035) + ep1606_225 * log(s_1606 / ic1606) + ep0423_225 * log(s_0423 / ic0423) + ep0633_225 * log(s_0633 / ic0633) + ep1379_225 * log(s_1379 / ic1379))) - (cell * v0_227 * (1 + ep0434_227 * log(s_0434 / ic0434) + ep0445_227 * log(s_0445 / ic0445) + ep1399_227 * log(s_1399 / ic1399) + ep0394_227 * log(s_0394 / ic0394) + ep1271_227 * log(s_1271 / ic1271) + ep1322_227 * log(s_1322 / ic1322))) - (cell * v0_232 * (1 + ep0434_232 * log(s_0434 / ic0434) + ep1616_232 * log(s_1616 / ic1616) + ep0586_232 * log(s_0586 / ic0586) + ep1620_232 * log(s_1620 / ic1620))) - (cell * v0_243 * (1 + ep0434_243 * log(s_0434 / ic0434) + ep1039_243 * log(s_1039 / ic1039) + ep1607_243 * log(s_1607 / ic1607) + ep0423_243 * log(s_0423 / ic0423) + ep0633_243 * log(s_0633 / ic0633) + ep1428_243 * log(s_1428 / ic1428))) - (cell * v0_245 * (1 + ep0434_245 * log(s_0434 / ic0434) + ep1429_245 * log(s_1429 / ic1429) + ep0261_245 * log(s_0261 / ic0261) + ep0394_245 * log(s_0394 / ic0394))) - (cell * v0_254 * (1 + ep0434_254 * log(s_0434 / ic0434) + ep1045_254 * log(s_1045 / ic1045) + ep1608_254 * log(s_1608 / ic1608) + ep0423_254 * log(s_0423 / ic0423) + ep0633_254 * log(s_0633 / ic0633) + ep1491_254 * log(s_1491 / ic1491))) - (cell * v0_263 * (1 + ep0434_263 * log(s_0434 / ic0434) + ep1048_263 * log(s_1048 / ic1048) + ep1610_263 * log(s_1610 / ic1610) + ep0423_263 * log(s_0423 / ic0423) + ep0633_263 * log(s_0633 / ic0633) + ep1527_263 * log(s_1527 / ic1527))) - (cell * v0_265 * (1 + ep0434_265 * log(s_0434 / ic0434) + ep1051_265 * log(s_1051 / ic1051) + ep1612_265 * log(s_1612 / ic1612) + ep0423_265 * log(s_0423 / ic0423) + ep0633_265 * log(s_0633 / ic0633) + ep1533_265 * log(s_1533 / ic1533))) - (cell * v0_266 * (1 + ep0434_266 * log(s_0434 / ic0434) + ep1545_266 * log(s_1545 / ic1545) + ep0394_266 * log(s_0394 / ic0394) + ep1538_266 * log(s_1538 / ic1538))) - (cell * v0_269 * (1 + ep0434_269 * log(s_0434 / ic0434) + ep1056_269 * log(s_1056 / ic1056) + ep1614_269 * log(s_1614 / ic1614) + ep0423_269 * log(s_0423 / ic0423) + ep0633_269 * log(s_0633 / ic0633) + ep1561_269 * log(s_1561 / ic1561))) - (59.276 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0445) = (cell * v0_274 * (1 + ep0456_274 * log(s_0456 / ic0456) + ep0445_274 * log(s_0445 / ic0445))) - (cell * v0_27 * (1 + ep0373_27 * log(s_0373 / ic0373) + ep0434_27 * log(s_0434 / ic0434) + ep0445_27 * log(s_0445 / ic0445) + ep0394_27 * log(s_0394 / ic0394) + ep1101_27 * log(s_1101 / ic1101) + ep1322_27 * log(s_1322 / ic1322))) - (cell * v0_66 * (1 + ep0434_66 * log(s_0434 / ic0434) + ep0445_66 * log(s_0445 / ic0445) + ep0999_66 * log(s_0999 / ic0999) + ep0394_66 * log(s_0394 / ic0394) + ep0455_66 * log(s_0455 / ic0455) + ep0991_66 * log(s_0991 / ic0991) + ep1322_66 * log(s_1322 / ic1322))) - (cell * v0_227 * (1 + ep0434_227 * log(s_0434 / ic0434) + ep0445_227 * log(s_0445 / ic0445) + ep1399_227 * log(s_1399 / ic1399) + ep0394_227 * log(s_0394 / ic0394) + ep1271_227 * log(s_1271 / ic1271) + ep1322_227 * log(s_1322 / ic1322)));
    der(s_0454) = (cell * v0_12 * (1 + ep0835_12 * log(s_0835 / ic0835) + ep0454_12 * log(s_0454 / ic0454))) - (cell * v0_142 * (1 + ep0454_142 * log(s_0454 / ic0454) + ep0836_142 * log(s_0836 / ic0836)));
    der(s_0455) = (cell * v0_66 * (1 + ep0434_66 * log(s_0434 / ic0434) + ep0445_66 * log(s_0445 / ic0445) + ep0999_66 * log(s_0999 / ic0999) + ep0394_66 * log(s_0394 / ic0394) + ep0455_66 * log(s_0455 / ic0455) + ep0991_66 * log(s_0991 / ic0991) + ep1322_66 * log(s_1322 / ic1322))) - (cell * v0_47 * (1 + ep0455_47 * log(s_0455 / ic0455) + ep0973_47 * log(s_0973 / ic0973) + ep1194_47 * log(s_1194 / ic1194) + ep1322_47 * log(s_1322 / ic1322))) - (cell * v0_189 * (1 + ep0455_189 * log(s_0455 / ic0455) + ep1266_189 * log(s_1266 / ic1266) + ep0979_189 * log(s_0979 / ic0979) + ep1322_189 * log(s_1322 / ic1322)));
    der(s_0456) = (cell * v0_7 * (1 + ep0178_7 * log(s_0178 / ic0178) + ep1399_7 * log(s_1399 / ic1399) + ep0039_7 * log(s_0039 / ic0039) + ep0456_7 * log(s_0456 / ic0456))) + (cell * v0_13 * (1 + ep0010_13 * log(s_0010 / ic0010) + ep0291_13 * log(s_0291 / ic0291) + ep0456_13 * log(s_0456 / ic0456))) + (cell * v0_25 * (1 + ep1399_25 * log(s_1399 / ic1399) + ep0146_25 * log(s_0146 / ic0146) + ep0456_25 * log(s_0456 / ic0456))) + (cell * v0_55 * (1 + ep1207_55 * log(s_1207 / ic1207) + ep1578_55 * log(s_1578 / ic1578) + ep0456_55 * log(s_0456 / ic0456) + ep1212_55 * log(s_1212 / ic1212) + ep1579_55 * log(s_1579 / ic1579))) + (cell * v0_56 * (1 + ep0297_56 * log(s_0297 / ic0297) + ep1198_56 * log(s_1198 / ic1198) + ep0209_56 * log(s_0209 / ic0209) + ep0456_56 * log(s_0456 / ic0456) + ep1203_56 * log(s_1203 / ic1203))) + (cell * v0_97 * (1 + ep0595_97 * log(s_0595 / ic0595) + ep1101_97 * log(s_1101 / ic1101) + ep1212_97 * log(s_1212 / ic1212) + ep0456_97 * log(s_0456 / ic0456) + ep0529_97 * log(s_0529 / ic0529) + ep1065_97 * log(s_1065 / ic1065) + ep1207_97 * log(s_1207 / ic1207))) + (cell * v0_98 * (1 + ep1065_98 * log(s_1065 / ic1065) + ep1101_98 * log(s_1101 / ic1101) + ep1212_98 * log(s_1212 / ic1212) + ep0456_98 * log(s_0456 / ic0456) + ep0529_98 * log(s_0529 / ic0529) + ep1161_98 * log(s_1161 / ic1161) + ep1207_98 * log(s_1207 / ic1207))) + (cell * v0_99 * (1 + ep1101_99 * log(s_1101 / ic1101) + ep1161_99 * log(s_1161 / ic1161) + ep1212_99 * log(s_1212 / ic1212) + ep0456_99 * log(s_0456 / ic0456) + ep0529_99 * log(s_0529 / ic0529) + ep1207_99 * log(s_1207 / ic1207) + ep1286_99 * log(s_1286 / ic1286))) + (cell * v0_100 * (1 + ep1101_100 * log(s_1101 / ic1101) + ep1212_100 * log(s_1212 / ic1212) + ep1286_100 * log(s_1286 / ic1286) + ep0456_100 * log(s_0456 / ic0456) + ep0529_100 * log(s_0529 / ic0529) + ep1207_100 * log(s_1207 / ic1207) + ep1449_100 * log(s_1449 / ic1449))) + (3.0 * cell * v0_101 * (1 + ep1101_101 * log(s_1101 / ic1101) + ep1212_101 * log(s_1212 / ic1212) + ep1449_101 * log(s_1449 / ic1449) + ep0456_101 * log(s_0456 / ic0456) + ep0529_101 * log(s_0529 / ic0529) + ep1084_101 * log(s_1084 / ic1084) + ep1207_101 * log(s_1207 / ic1207))) + (cell * v0_102 * (1 + ep1101_102 * log(s_1101 / ic1101) + ep1212_102 * log(s_1212 / ic1212) + ep1255_102 * log(s_1255 / ic1255) + ep0456_102 * log(s_0456 / ic0456) + ep0529_102 * log(s_0529 / ic0529) + ep0602_102 * log(s_0602 / ic0602) + ep1207_102 * log(s_1207 / ic1207))) + (3.0 * cell * v0_103 * (1 + ep0373_103 * log(s_0373 / ic0373) + ep1101_103 * log(s_1101 / ic1101) + ep1212_103 * log(s_1212 / ic1212) + ep0456_103 * log(s_0456 / ic0456) + ep0529_103 * log(s_0529 / ic0529) + ep1207_103 * log(s_1207 / ic1207) + ep1255_103 * log(s_1255 / ic1255))) + (cell * v0_107 * (1 + ep0602_107 * log(s_0602 / ic0602) + ep1101_107 * log(s_1101 / ic1101) + ep1212_107 * log(s_1212 / ic1212) + ep0456_107 * log(s_0456 / ic0456) + ep0529_107 * log(s_0529 / ic0529) + ep1073_107 * log(s_1073 / ic1073) + ep1207_107 * log(s_1207 / ic1207))) + (cell * v0_108 * (1 + ep1073_108 * log(s_1073 / ic1073) + ep1101_108 * log(s_1101 / ic1101) + ep1212_108 * log(s_1212 / ic1212) + ep0456_108 * log(s_0456 / ic0456) + ep0529_108 * log(s_0529 / ic0529) + ep1176_108 * log(s_1176 / ic1176) + ep1207_108 * log(s_1207 / ic1207))) + (cell * v0_109 * (1 + ep1101_109 * log(s_1101 / ic1101) + ep1176_109 * log(s_1176 / ic1176) + ep1212_109 * log(s_1212 / ic1212) + ep0456_109 * log(s_0456 / ic0456) + ep0529_109 * log(s_0529 / ic0529) + ep1207_109 * log(s_1207 / ic1207) + ep1302_109 * log(s_1302 / ic1302))) + (cell * v0_110 * (1 + ep1101_110 * log(s_1101 / ic1101) + ep1212_110 * log(s_1212 / ic1212) + ep1302_110 * log(s_1302 / ic1302) + ep0456_110 * log(s_0456 / ic0456) + ep0529_110 * log(s_0529 / ic0529) + ep1207_110 * log(s_1207 / ic1207) + ep1454_110 * log(s_1454 / ic1454))) + (cell * v0_129 * (1 + ep1003_129 * log(s_1003 / ic1003) + ep1198_129 * log(s_1198 / ic1198) + ep1487_129 * log(s_1487 / ic1487) + ep0306_129 * log(s_0306 / ic0306) + ep0419_129 * log(s_0419 / ic0419) + ep0456_129 * log(s_0456 / ic0456) + ep1203_129 * log(s_1203 / ic1203))) + (cell * v0_144 * (1 + ep0836_144 * log(s_0836 / ic0836) + ep1198_144 * log(s_1198 / ic1198) + ep0176_144 * log(s_0176 / ic0176) + ep1203_144 * log(s_1203 / ic1203) + ep0456_144 * log(s_0456 / ic0456))) + (cell * v0_154 * (1 + ep0076_154 * log(s_0076 / ic0076) + ep0086_154 * log(s_0086 / ic0086) + ep0456_154 * log(s_0456 / ic0456))) + (cell * v0_158 * (1 + ep0940_158 * log(s_0940 / ic0940) + ep1198_158 * log(s_1198 / ic1198) + ep0180_158 * log(s_0180 / ic0180) + ep0456_158 * log(s_0456 / ic0456) + ep1203_158 * log(s_1203 / ic1203))) + (cell * v0_159 * (1 + ep0940_159 * log(s_0940 / ic0940) + ep1207_159 * log(s_1207 / ic1207) + ep0180_159 * log(s_0180 / ic0180) + ep0456_159 * log(s_0456 / ic0456) + ep1212_159 * log(s_1212 / ic1212))) + (cell * v0_180 * (1 + ep0018_180 * log(s_0018 / ic0018) + ep0434_180 * log(s_0434 / ic0434) + ep0394_180 * log(s_0394 / ic0394) + ep0456_180 * log(s_0456 / ic0456) + ep0943_180 * log(s_0943 / ic0943) + ep1322_180 * log(s_1322 / ic1322))) + (cell * v0_192 * (1 + ep1270_192 * log(s_1270 / ic1270) + ep0456_192 * log(s_0456 / ic0456) + ep1545_192 * log(s_1545 / ic1545))) + (cell * v0_198 * (1 + ep1337_198 * log(s_1337 / ic1337) + ep0456_198 * log(s_0456 / ic0456) + ep1351_198 * log(s_1351 / ic1351))) + (cell * v0_223 * (1 + ep1377_223 * log(s_1377 / ic1377) + ep0456_223 * log(s_0456 / ic0456) + ep0951_223 * log(s_0951 / ic0951))) + (cell * v0_224 * (1 + ep1207_224 * log(s_1207 / ic1207) + ep1377_224 * log(s_1377 / ic1377) + ep0204_224 * log(s_0204 / ic0204) + ep0456_224 * log(s_0456 / ic0456) + ep1212_224 * log(s_1212 / ic1212))) + (cell * v0_228 * (1 + ep0529_228 * log(s_0529 / ic0529) + ep1198_228 * log(s_1198 / ic1198) + ep1399_228 * log(s_1399 / ic1399) + ep0373_228 * log(s_0373 / ic0373) + ep0456_228 * log(s_0456 / ic0456) + ep1203_228 * log(s_1203 / ic1203))) + (cell * v0_242 * (1 + ep1039_242 * log(s_1039 / ic1039) + ep1302_242 * log(s_1302 / ic1302) + ep0231_242 * log(s_0231 / ic0231) + ep0456_242 * log(s_0456 / ic0456) + ep0529_242 * log(s_0529 / ic0529))) - (cell * v0_213 * (1 + ep0300_213 * log(s_0300 / ic0300) + ep0456_213 * log(s_0456 / ic0456) + ep0434_213 * log(s_0434 / ic0434) + ep1364_213 * log(s_1364 / ic1364) + ep0394_213 * log(s_0394 / ic0394) + ep1322_213 * log(s_1322 / ic1322))) - (cell * v0_274 * (1 + ep0456_274 * log(s_0456 / ic0456) + ep0445_274 * log(s_0445 / ic0445))) - (cell * max(v0_275 * (1 + ep0456_275 * log(s_0456 / ic0456)), zero_flux));
    der(s_0458) = 0.0;
    der(s_0467) = (cell * v0_179 * (1 + ep0028_179 * log(s_0028 / ic0028) + ep0539_179 * log(s_0539 / ic0539) + ep0019_179 * log(s_0019 / ic0019) + ep0467_179 * log(s_0467 / ic0467))) - (cell * v0_185 * (1 + ep0467_185 * log(s_0467 / ic0467) + ep0526_185 * log(s_0526 / ic0526) + ep1322_185 * log(s_1322 / ic1322))) - (cell * v0_235 * (1 + ep0467_235 * log(s_0467 / ic0467) + ep1616_235 * log(s_1616 / ic1616) + ep0587_235 * log(s_0587 / ic0587) + ep1620_235 * log(s_1620 / ic1620)));
    der(s_0471) = (cell * v0_67 * (1 + ep0539_67 * log(s_0539 / ic0539) + ep1331_67 * log(s_1331 / ic1331) + ep0471_67 * log(s_0471 / ic0471) + ep0633_67 * log(s_0633 / ic0633))) - (cell * v0_197 * (1 + ep0471_197 * log(s_0471 / ic0471) + ep1153_197 * log(s_1153 / ic1153) + ep0089_197 * log(s_0089 / ic0089) + ep0526_197 * log(s_0526 / ic0526))) - (cell * v0_199 * (1 + ep0471_199 * log(s_0471 / ic0471) + ep1039_199 * log(s_1039 / ic1039) + ep0526_199 * log(s_0526 / ic0526) + ep1337_199 * log(s_1337 / ic1337)));
    der(s_0475) = (cell * v0_87 * (1 + ep1084_87 * log(s_1084 / ic1084) + ep1445_87 * log(s_1445 / ic1445) + ep0475_87 * log(s_0475 / ic0475))) - (cell * v0_68 * (1 + ep0475_68 * log(s_0475 / ic0475) + ep1212_68 * log(s_1212 / ic1212) + ep1275_68 * log(s_1275 / ic1275) + ep0481_68 * log(s_0481 / ic0481) + ep1207_68 * log(s_1207 / ic1207)));
    der(s_0481) = (cell * v0_68 * (1 + ep0475_68 * log(s_0475 / ic0475) + ep1212_68 * log(s_1212 / ic1212) + ep1275_68 * log(s_1275 / ic1275) + ep0481_68 * log(s_0481 / ic0481) + ep1207_68 * log(s_1207 / ic1207))) + (cell * v0_221 * (1 + ep1084_221 * log(s_1084 / ic1084) + ep1366_221 * log(s_1366 / ic1366) + ep0481_221 * log(s_0481 / ic0481))) - (cell * v0_69 * (1 + ep0481_69 * log(s_0481 / ic0481) + ep1212_69 * log(s_1212 / ic1212) + ep1275_69 * log(s_1275 / ic1275) + ep0493_69 * log(s_0493 / ic0493) + ep1207_69 * log(s_1207 / ic1207)));
    der(s_0493) = (cell * v0_69 * (1 + ep0481_69 * log(s_0481 / ic0481) + ep1212_69 * log(s_1212 / ic1212) + ep1275_69 * log(s_1275 / ic1275) + ep0493_69 * log(s_0493 / ic0493) + ep1207_69 * log(s_1207 / ic1207))) - (cell * v0_70 * (1 + ep0493_70 * log(s_0493 / ic0493) + ep1212_70 * log(s_1212 / ic1212) + ep1275_70 * log(s_1275 / ic1275) + ep0499_70 * log(s_0499 / ic0499) + ep1207_70 * log(s_1207 / ic1207)));
    der(s_0499) = (cell * v0_70 * (1 + ep0493_70 * log(s_0493 / ic0493) + ep1212_70 * log(s_1212 / ic1212) + ep1275_70 * log(s_1275 / ic1275) + ep0499_70 * log(s_0499 / ic0499) + ep1207_70 * log(s_1207 / ic1207))) - (cell * v0_157 * (1 + ep0089_157 * log(s_0089 / ic0089) + ep0499_157 * log(s_0499 / ic0499) + ep0619_157 * log(s_0619 / ic0619) + ep0918_157 * log(s_0918 / ic0918)));
    der(s_0515) = (cell * v0_72 * (1 + ep0324_72 * log(s_0324 / ic0324) + ep0515_72 * log(s_0515 / ic0515) + ep1322_72 * log(s_1322 / ic1322))) - (cell * v0_41 * (1 + ep0515_41 * log(s_0515 / ic0515) + ep0999_41 * log(s_0999 / ic0999) + ep0427_41 * log(s_0427 / ic0427) + ep0991_41 * log(s_0991 / ic0991) + ep1399_41 * log(s_1399 / ic1399))) - (cell * v0_71 * (1 + ep0515_71 * log(s_0515 / ic0515) + ep1377_71 * log(s_1377 / ic1377)));
    der(s_0516) = (cell * v0_75 * (1 + ep0522_75 * log(s_0522 / ic0522) + ep0516_75 * log(s_0516 / ic0516))) - (cell * v0_73 * (1 + ep0516_73 * log(s_0516 / ic0516) + ep0940_73 * log(s_0940 / ic0940)));
    der(s_0522) = (cell * v0_74 * (1 + ep0373_74 * log(s_0373 / ic0373) + ep1271_74 * log(s_1271 / ic1271) + ep0522_74 * log(s_0522 / ic0522) + ep0529_74 * log(s_0529 / ic0529))) - (cell * v0_75 * (1 + ep0522_75 * log(s_0522 / ic0522) + ep0516_75 * log(s_0516 / ic0516)));
    der(s_0526) = (cell * v0_185 * (1 + ep0467_185 * log(s_0467 / ic0467) + ep0526_185 * log(s_0526 / ic0526) + ep1322_185 * log(s_1322 / ic1322))) + (cell * v0_197 * (1 + ep0471_197 * log(s_0471 / ic0471) + ep1153_197 * log(s_1153 / ic1153) + ep0089_197 * log(s_0089 / ic0089) + ep0526_197 * log(s_0526 / ic0526))) + (cell * v0_199 * (1 + ep0471_199 * log(s_0471 / ic0471) + ep1039_199 * log(s_1039 / ic1039) + ep0526_199 * log(s_0526 / ic0526) + ep1337_199 * log(s_1337 / ic1337))) - (0.0447 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0529) = (cell * v0_3 * (1 + ep0082_3 * log(s_0082 / ic0082) + ep0380_3 * log(s_0380 / ic0380) + ep0529_3 * log(s_0529 / ic0529) + ep1331_3 * log(s_1331 / ic1331))) + (cell * v0_11 * (1 + ep0232_11 * log(s_0232 / ic0232) + ep0373_11 * log(s_0373 / ic0373) + ep0162_11 * log(s_0162 / ic0162) + ep0529_11 * log(s_0529 / ic0529))) + (cell * v0_26 * (1 + ep0373_26 * log(s_0373 / ic0373) + ep0367_26 * log(s_0367 / ic0367) + ep0529_26 * log(s_0529 / ic0529))) + (cell * v0_74 * (1 + ep0373_74 * log(s_0373 / ic0373) + ep1271_74 * log(s_1271 / ic1271) + ep0522_74 * log(s_0522 / ic0522) + ep0529_74 * log(s_0529 / ic0529))) + (cell * v0_97 * (1 + ep0595_97 * log(s_0595 / ic0595) + ep1101_97 * log(s_1101 / ic1101) + ep1212_97 * log(s_1212 / ic1212) + ep0456_97 * log(s_0456 / ic0456) + ep0529_97 * log(s_0529 / ic0529) + ep1065_97 * log(s_1065 / ic1065) + ep1207_97 * log(s_1207 / ic1207))) + (cell * v0_98 * (1 + ep1065_98 * log(s_1065 / ic1065) + ep1101_98 * log(s_1101 / ic1101) + ep1212_98 * log(s_1212 / ic1212) + ep0456_98 * log(s_0456 / ic0456) + ep0529_98 * log(s_0529 / ic0529) + ep1161_98 * log(s_1161 / ic1161) + ep1207_98 * log(s_1207 / ic1207))) + (cell * v0_99 * (1 + ep1101_99 * log(s_1101 / ic1101) + ep1161_99 * log(s_1161 / ic1161) + ep1212_99 * log(s_1212 / ic1212) + ep0456_99 * log(s_0456 / ic0456) + ep0529_99 * log(s_0529 / ic0529) + ep1207_99 * log(s_1207 / ic1207) + ep1286_99 * log(s_1286 / ic1286))) + (cell * v0_100 * (1 + ep1101_100 * log(s_1101 / ic1101) + ep1212_100 * log(s_1212 / ic1212) + ep1286_100 * log(s_1286 / ic1286) + ep0456_100 * log(s_0456 / ic0456) + ep0529_100 * log(s_0529 / ic0529) + ep1207_100 * log(s_1207 / ic1207) + ep1449_100 * log(s_1449 / ic1449))) + (3.0 * cell * v0_101 * (1 + ep1101_101 * log(s_1101 / ic1101) + ep1212_101 * log(s_1212 / ic1212) + ep1449_101 * log(s_1449 / ic1449) + ep0456_101 * log(s_0456 / ic0456) + ep0529_101 * log(s_0529 / ic0529) + ep1084_101 * log(s_1084 / ic1084) + ep1207_101 * log(s_1207 / ic1207))) + (cell * v0_102 * (1 + ep1101_102 * log(s_1101 / ic1101) + ep1212_102 * log(s_1212 / ic1212) + ep1255_102 * log(s_1255 / ic1255) + ep0456_102 * log(s_0456 / ic0456) + ep0529_102 * log(s_0529 / ic0529) + ep0602_102 * log(s_0602 / ic0602) + ep1207_102 * log(s_1207 / ic1207))) + (3.0 * cell * v0_103 * (1 + ep0373_103 * log(s_0373 / ic0373) + ep1101_103 * log(s_1101 / ic1101) + ep1212_103 * log(s_1212 / ic1212) + ep0456_103 * log(s_0456 / ic0456) + ep0529_103 * log(s_0529 / ic0529) + ep1207_103 * log(s_1207 / ic1207) + ep1255_103 * log(s_1255 / ic1255))) + (cell * v0_104 * (1 + ep0423_104 * log(s_0423 / ic0423) + ep0602_104 * log(s_0602 / ic0602) + ep0633_104 * log(s_0633 / ic0633) + ep0434_104 * log(s_0434 / ic0434) + ep0529_104 * log(s_0529 / ic0529) + ep0595_104 * log(s_0595 / ic0595))) + (cell * v0_105 * (1 + ep0423_105 * log(s_0423 / ic0423) + ep0633_105 * log(s_0633 / ic0633) + ep1073_105 * log(s_1073 / ic1073) + ep0434_105 * log(s_0434 / ic0434) + ep0529_105 * log(s_0529 / ic0529) + ep1065_105 * log(s_1065 / ic1065))) + (cell * v0_106 * (1 + ep0423_106 * log(s_0423 / ic0423) + ep0633_106 * log(s_0633 / ic0633) + ep1454_106 * log(s_1454 / ic1454) + ep0434_106 * log(s_0434 / ic0434) + ep0529_106 * log(s_0529 / ic0529) + ep1449_106 * log(s_1449 / ic1449))) + (cell * v0_107 * (1 + ep0602_107 * log(s_0602 / ic0602) + ep1101_107 * log(s_1101 / ic1101) + ep1212_107 * log(s_1212 / ic1212) + ep0456_107 * log(s_0456 / ic0456) + ep0529_107 * log(s_0529 / ic0529) + ep1073_107 * log(s_1073 / ic1073) + ep1207_107 * log(s_1207 / ic1207))) + (cell * v0_108 * (1 + ep1073_108 * log(s_1073 / ic1073) + ep1101_108 * log(s_1101 / ic1101) + ep1212_108 * log(s_1212 / ic1212) + ep0456_108 * log(s_0456 / ic0456) + ep0529_108 * log(s_0529 / ic0529) + ep1176_108 * log(s_1176 / ic1176) + ep1207_108 * log(s_1207 / ic1207))) + (cell * v0_109 * (1 + ep1101_109 * log(s_1101 / ic1101) + ep1176_109 * log(s_1176 / ic1176) + ep1212_109 * log(s_1212 / ic1212) + ep0456_109 * log(s_0456 / ic0456) + ep0529_109 * log(s_0529 / ic0529) + ep1207_109 * log(s_1207 / ic1207) + ep1302_109 * log(s_1302 / ic1302))) + (cell * v0_110 * (1 + ep1101_110 * log(s_1101 / ic1101) + ep1212_110 * log(s_1212 / ic1212) + ep1302_110 * log(s_1302 / ic1302) + ep0456_110 * log(s_0456 / ic0456) + ep0529_110 * log(s_0529 / ic0529) + ep1207_110 * log(s_1207 / ic1207) + ep1454_110 * log(s_1454 / ic1454))) + (cell * v0_127 * (1 + ep0380_127 * log(s_0380 / ic0380) + ep0767_127 * log(s_0767 / ic0767) + ep0082_127 * log(s_0082 / ic0082) + ep0529_127 * log(s_0529 / ic0529))) + (cell * v0_143 * (1 + ep0180_143 * log(s_0180 / ic0180) + ep0373_143 * log(s_0373 / ic0373) + ep0529_143 * log(s_0529 / ic0529) + ep0835_143 * log(s_0835 / ic0835))) + (cell * v0_147 * (1 + ep0373_147 * log(s_0373 / ic0373) + ep1014_147 * log(s_1014 / ic1014) + ep0529_147 * log(s_0529 / ic0529) + ep1233_147 * log(s_1233 / ic1233))) + (cell * v0_149 * (1 + ep0218_149 * log(s_0218 / ic0218) + ep1212_149 * log(s_1212 / ic1212) + ep0028_149 * log(s_0028 / ic0028) + ep0529_149 * log(s_0529 / ic0529) + ep1207_149 * log(s_1207 / ic1207))) + (cell * v0_150 * (1 + ep0367_150 * log(s_0367 / ic0367) + ep0373_150 * log(s_0373 / ic0373) + ep0218_150 * log(s_0218 / ic0218) + ep0529_150 * log(s_0529 / ic0529))) + (cell * v0_242 * (1 + ep1039_242 * log(s_1039 / ic1039) + ep1302_242 * log(s_1302 / ic1302) + ep0231_242 * log(s_0231 / ic0231) + ep0456_242 * log(s_0456 / ic0456) + ep0529_242 * log(s_0529 / ic0529))) - (cell * v0_28 * (1 + ep0362_28 * log(s_0362 / ic0362) + ep0529_28 * log(s_0529 / ic0529) + ep0373_28 * log(s_0373 / ic0373))) - (cell * v0_84 * (1 + ep0529_84 * log(s_0529 / ic0529) + ep1524_84 * log(s_1524 / ic1524) + ep0380_84 * log(s_0380 / ic0380) + ep0619_84 * log(s_0619 / ic0619))) - (cell * v0_228 * (1 + ep0529_228 * log(s_0529 / ic0529) + ep1198_228 * log(s_1198 / ic1198) + ep1399_228 * log(s_1399 / ic1399) + ep0373_228 * log(s_0373 / ic0373) + ep0456_228 * log(s_0456 / ic0456) + ep1203_228 * log(s_1203 / ic1203)));
    der(s_0539) = (cell * v0_76 * (1 + ep0419_76 * log(s_0419 / ic0419) + ep0434_76 * log(s_0434 / ic0434) + ep1559_76 * log(s_1559 / ic1559) + ep0394_76 * log(s_0394 / ic0394) + ep0539_76 * log(s_0539 / ic0539) + ep1322_76 * log(s_1322 / ic1322))) - (cell * v0_67 * (1 + ep0539_67 * log(s_0539 / ic0539) + ep1331_67 * log(s_1331 / ic1331) + ep0471_67 * log(s_0471 / ic0471) + ep0633_67 * log(s_0633 / ic0633))) - (cell * v0_179 * (1 + ep0028_179 * log(s_0028 / ic0028) + ep0539_179 * log(s_0539 / ic0539) + ep0019_179 * log(s_0019 / ic0019) + ep0467_179 * log(s_0467 / ic0467)));
    der(s_0542) = (cell * v0_80 * (1 + ep0434_80 * log(s_0434 / ic0434) + ep0981_80 * log(s_0981 / ic0981) + ep1589_80 * log(s_1589 / ic1589) + ep0423_80 * log(s_0423 / ic0423) + ep0542_80 * log(s_0542 / ic0542) + ep0633_80 * log(s_0633 / ic0633))) - (0.0066 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0550) = (cell * v0_151 * (1 + ep0312_151 * log(s_0312 / ic0312) + ep0999_151 * log(s_0999 / ic0999) + ep0403_151 * log(s_0403 / ic0403) + ep0550_151 * log(s_0550 / ic0550) + ep0991_151 * log(s_0991 / ic0991))) - (cell * v0_152 * (1 + ep0550_152 * log(s_0550 / ic0550) + ep0207_152 * log(s_0207 / ic0207)));
    der(s_0551) = (cell * v0_258 * (1 + ep0557_258 * log(s_0557 / ic0557) + ep0764_258 * log(s_0764 / ic0764) + ep0551_258 * log(s_0551 / ic0551) + ep0581_258 * log(s_0581 / ic0581))) - (cell * v0_9 * (1 + ep0551_9 * log(s_0551 / ic0551) + ep1360_9 * log(s_1360 / ic1360) + ep0349_9 * log(s_0349 / ic0349) + ep1322_9 * log(s_1322 / ic1322))) - (cell * v0_256 * (1 + ep0551_256 * log(s_0551 / ic0551) + ep0557_256 * log(s_0557 / ic0557) + ep0764_256 * log(s_0764 / ic0764) + ep1427_256 * log(s_1427 / ic1427)));
    der(s_0555) = (cell * v0_201 * (1 + ep0434_201 * log(s_0434 / ic0434) + ep0557_201 * log(s_0557 / ic0557) + ep0394_201 * log(s_0394 / ic0394) + ep0555_201 * log(s_0555 / ic0555))) - (cell * v0_114 * (1 + ep0555_114 * log(s_0555 / ic0555) + ep0629_114 * log(s_0629 / ic0629) + ep0764_114 * log(s_0764 / ic0764)));
    der(s_0557) = (cell * v0_117 * (1 + ep0568_117 * log(s_0568 / ic0568) + ep0557_117 * log(s_0557 / ic0557))) - (cell * v0_172 * (1 + ep0557_172 * log(s_0557 / ic0557) + ep0574_172 * log(s_0574 / ic0574))) - (cell * v0_201 * (1 + ep0434_201 * log(s_0434 / ic0434) + ep0557_201 * log(s_0557 / ic0557) + ep0394_201 * log(s_0394 / ic0394) + ep0555_201 * log(s_0555 / ic0555))) - (cell * v0_256 * (1 + ep0551_256 * log(s_0551 / ic0551) + ep0557_256 * log(s_0557 / ic0557) + ep0764_256 * log(s_0764 / ic0764) + ep1427_256 * log(s_1427 / ic1427))) - (cell * v0_258 * (1 + ep0557_258 * log(s_0557 / ic0557) + ep0764_258 * log(s_0764 / ic0764) + ep0551_258 * log(s_0551 / ic0551) + ep0581_258 * log(s_0581 / ic0581)));
    der(s_0563) = (cell * v0_271 * (1 + ep0565_271 * log(s_0565 / ic0565) + ep0563_271 * log(s_0563 / ic0563))) - (cell * v0_137 * (1 + ep0434_137 * log(s_0434 / ic0434) + ep0563_137 * log(s_0563 / ic0563) + ep0394_137 * log(s_0394 / ic0394) + ep0568_137 * log(s_0568 / ic0568)));
    der(s_0565) = 0.0;
    der(s_0567) = (cell * v0_202 * (1 + ep0568_202 * log(s_0568 / ic0568) + ep0567_202 * log(s_0567 / ic0567))) - (cell * v0_267 * (1 + ep0567_267 * log(s_0567 / ic0567) + ep1559_267 * log(s_1559 / ic1559) + ep0633_267 * log(s_0633 / ic0633) + ep1543_267 * log(s_1543 / ic1543)));
    der(s_0568) = (cell * v0_137 * (1 + ep0434_137 * log(s_0434 / ic0434) + ep0563_137 * log(s_0563 / ic0563) + ep0394_137 * log(s_0394 / ic0394) + ep0568_137 * log(s_0568 / ic0568))) - (cell * v0_39 * (1 + ep0568_39 * log(s_0568 / ic0568) + ep1543_39 * log(s_1543 / ic1543) + ep0409_39 * log(s_0409 / ic0409) + ep1538_39 * log(s_1538 / ic1538))) - (cell * v0_117 * (1 + ep0568_117 * log(s_0568 / ic0568) + ep0557_117 * log(s_0557 / ic0557))) - (cell * v0_182 * (1 + ep0568_182 * log(s_0568 / ic0568) + ep0126_182 * log(s_0126 / ic0126))) - (cell * v0_202 * (1 + ep0568_202 * log(s_0568 / ic0568) + ep0567_202 * log(s_0567 / ic0567)));
    der(s_0573) = (cell * v0_208 * (1 + ep0574_208 * log(s_0574 / ic0574) + ep0573_208 * log(s_0573 / ic0573))) - (cell * v0_171 * (1 + ep0573_171 * log(s_0573 / ic0573) + ep0785_171 * log(s_0785 / ic0785) + ep0633_171 * log(s_0633 / ic0633) + ep0743_171 * log(s_0743 / ic0743)));
    der(s_0574) = (cell * v0_172 * (1 + ep0557_172 * log(s_0557 / ic0557) + ep0574_172 * log(s_0574 / ic0574))) - (cell * v0_208 * (1 + ep0574_208 * log(s_0574 / ic0574) + ep0573_208 * log(s_0573 / ic0573)));
    der(s_0577) = (cell * v0_238 * (1 + ep0581_238 * log(s_0581 / ic0581) + ep0577_238 * log(s_0577 / ic0577))) - (cell * v0_15 * (1 + ep0577_15 * log(s_0577 / ic0577) + ep0158_15 * log(s_0158 / ic0158) + ep0722_15 * log(s_0722 / ic0722))) - (cell * v0_237 * (1 + ep0577_237 * log(s_0577 / ic0577) + ep1408_237 * log(s_1408 / ic1408)));
    der(s_0581) = (cell * v0_257 * (1 + ep0764_257 * log(s_0764 / ic0764) + ep1427_257 * log(s_1427 / ic1427) + ep0581_257 * log(s_0581 / ic0581) + ep1408_257 * log(s_1408 / ic1408))) + (cell * v0_258 * (1 + ep0557_258 * log(s_0557 / ic0557) + ep0764_258 * log(s_0764 / ic0764) + ep0551_258 * log(s_0551 / ic0551) + ep0581_258 * log(s_0581 / ic0581))) - (cell * v0_238 * (1 + ep0581_238 * log(s_0581 / ic0581) + ep0577_238 * log(s_0577 / ic0577)));
    der(s_0582) = (cell * v0_136 * (1 + ep0586_136 * log(s_0586 / ic0586) + ep0782_136 * log(s_0782 / ic0782) + ep0582_136 * log(s_0582 / ic0582) + ep0739_136 * log(s_0739 / ic0739))) + (cell * v0_234 * (1 + ep0394_234 * log(s_0394 / ic0394) + ep1616_234 * log(s_1616 / ic1616) + ep0582_234 * log(s_0582 / ic0582) + ep1620_234 * log(s_1620 / ic1620))) - (cell * v0_277 * (1 + ep0394_277 * log(s_0394 / ic0394) + ep0582_277 * log(s_0582 / ic0582) + ep0434_277 * log(s_0434 / ic0434) + ep0584_277 * log(s_0584 / ic0584)));
    der(s_0584) = (cell * v0_277 * (1 + ep0394_277 * log(s_0394 / ic0394) + ep0582_277 * log(s_0582 / ic0582) + ep0434_277 * log(s_0434 / ic0434) + ep0584_277 * log(s_0584 / ic0584))) - (0.0036 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0586) = (cell * v0_232 * (1 + ep0434_232 * log(s_0434 / ic0434) + ep1616_232 * log(s_1616 / ic1616) + ep0586_232 * log(s_0586 / ic0586) + ep1620_232 * log(s_1620 / ic1620))) - (cell * v0_136 * (1 + ep0586_136 * log(s_0586 / ic0586) + ep0782_136 * log(s_0782 / ic0782) + ep0582_136 * log(s_0582 / ic0582) + ep0739_136 * log(s_0739 / ic0739)));
    der(s_0587) = (cell * v0_235 * (1 + ep0467_235 * log(s_0467 / ic0467) + ep1616_235 * log(s_1616 / ic1616) + ep0587_235 * log(s_0587 / ic0587) + ep1620_235 * log(s_1620 / ic1620))) - (cell * v0_276 * (1 + ep0394_276 * log(s_0394 / ic0394) + ep0587_276 * log(s_0587 / ic0587) + ep0434_276 * log(s_0434 / ic0434) + ep0589_276 * log(s_0589 / ic0589)));
    der(s_0589) = (cell * v0_276 * (1 + ep0394_276 * log(s_0394 / ic0394) + ep0587_276 * log(s_0587 / ic0587) + ep0434_276 * log(s_0434 / ic0434) + ep0589_276 * log(s_0589 / ic0589))) - (cell * v0_82 * (1 + ep0589_82 * log(s_0589 / ic0589) + ep0419_82 * log(s_0419 / ic0419) + ep0654_82 * log(s_0654 / ic0654))) - (0.0024 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0595) = (cell * v0_104 * (1 + ep0423_104 * log(s_0423 / ic0423) + ep0602_104 * log(s_0602 / ic0602) + ep0633_104 * log(s_0633 / ic0633) + ep0434_104 * log(s_0434 / ic0434) + ep0529_104 * log(s_0529 / ic0529) + ep0595_104 * log(s_0595 / ic0595))) - (cell * v0_97 * (1 + ep0595_97 * log(s_0595 / ic0595) + ep1101_97 * log(s_1101 / ic1101) + ep1212_97 * log(s_1212 / ic1212) + ep0456_97 * log(s_0456 / ic0456) + ep0529_97 * log(s_0529 / ic0529) + ep1065_97 * log(s_1065 / ic1065) + ep1207_97 * log(s_1207 / ic1207)));
    der(s_0602) = (cell * v0_102 * (1 + ep1101_102 * log(s_1101 / ic1101) + ep1212_102 * log(s_1212 / ic1212) + ep1255_102 * log(s_1255 / ic1255) + ep0456_102 * log(s_0456 / ic0456) + ep0529_102 * log(s_0529 / ic0529) + ep0602_102 * log(s_0602 / ic0602) + ep1207_102 * log(s_1207 / ic1207))) - (cell * v0_104 * (1 + ep0423_104 * log(s_0423 / ic0423) + ep0602_104 * log(s_0602 / ic0602) + ep0633_104 * log(s_0633 / ic0633) + ep0434_104 * log(s_0434 / ic0434) + ep0529_104 * log(s_0529 / ic0529) + ep0595_104 * log(s_0595 / ic0595))) - (cell * v0_107 * (1 + ep0602_107 * log(s_0602 / ic0602) + ep1101_107 * log(s_1101 / ic1101) + ep1212_107 * log(s_1212 / ic1212) + ep0456_107 * log(s_0456 / ic0456) + ep0529_107 * log(s_0529 / ic0529) + ep1073_107 * log(s_1073 / ic1073) + ep1207_107 * log(s_1207 / ic1207)));
    der(s_0613) = (cell * v0_236 * (1 + ep0739_236 * log(s_0739 / ic0739) + ep1616_236 * log(s_1616 / ic1616) + ep0613_236 * log(s_0613 / ic0613) + ep1620_236 * log(s_1620 / ic1620))) - (cell * v0_83 * (1 + ep0394_83 * log(s_0394 / ic0394) + ep0613_83 * log(s_0613 / ic0613) + ep0434_83 * log(s_0434 / ic0434) + ep0615_83 * log(s_0615 / ic0615)));
    der(s_0615) = (cell * v0_83 * (1 + ep0394_83 * log(s_0394 / ic0394) + ep0613_83 * log(s_0613 / ic0613) + ep0434_83 * log(s_0434 / ic0434) + ep0615_83 * log(s_0615 / ic0615))) - (0.0024 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0619) = (cell * v0_84 * (1 + ep0529_84 * log(s_0529 / ic0529) + ep1524_84 * log(s_1524 / ic1524) + ep0380_84 * log(s_0380 / ic0380) + ep0619_84 * log(s_0619 / ic0619))) + (cell * v0_85 * (1 + ep1331_85 * log(s_1331 / ic1331) + ep0619_85 * log(s_0619 / ic0619) + ep1322_85 * log(s_1322 / ic1322))) + (cell * v0_157 * (1 + ep0089_157 * log(s_0089 / ic0089) + ep0499_157 * log(s_0499 / ic0499) + ep0619_157 * log(s_0619 / ic0619) + ep0918_157 * log(s_0918 / ic0918))) - (cell * v0_260 * (1 + ep0619_260 * log(s_0619 / ic0619) + ep0056_260 * log(s_0056 / ic0056) + ep1524_260 * log(s_1524 / ic1524)));
    der(s_0625) = (cell * v0_255 * (1 + ep0306_255 * log(s_0306 / ic0306) + ep0654_255 * log(s_0654 / ic0654) + ep0625_255 * log(s_0625 / ic0625) + ep0649_255 * log(s_0649 / ic0649))) - (cell * v0_88 * (1 + ep0625_88 * log(s_0625 / ic0625) + ep1212_88 * log(s_1212 / ic1212) + ep1207_88 * log(s_1207 / ic1207) + ep1487_88 * log(s_1487 / ic1487)));
    der(s_0629) = (cell * v0_114 * (1 + ep0555_114 * log(s_0555 / ic0555) + ep0629_114 * log(s_0629 / ic0629) + ep0764_114 * log(s_0764 / ic0764))) - (cell * v0_126 * (1 + ep0629_126 * log(s_0629 / ic0629) + ep1203_126 * log(s_1203 / ic1203) + ep0767_126 * log(s_0767 / ic0767) + ep1198_126 * log(s_1198 / ic1198))) - (cell * v0_261 * (1 + ep0629_261 * log(s_0629 / ic0629) + ep0764_261 * log(s_0764 / ic0764)));
    der(s_0633) = (cell * v0_38 * (1 + ep0434_38 * log(s_0434 / ic0434) + ep0955_38 * log(s_0955 / ic0955) + ep1582_38 * log(s_1582 / ic1582) + ep0404_38 * log(s_0404 / ic0404) + ep0423_38 * log(s_0423 / ic0423) + ep0633_38 * log(s_0633 / ic0633))) + (cell * v0_40 * (1 + ep0427_40 * log(s_0427 / ic0427) + ep1386_40 * log(s_1386 / ic1386) + ep0633_40 * log(s_0633 / ic0633) + ep1187_40 * log(s_1187 / ic1187))) + (cell * v0_43 * (1 + ep0434_43 * log(s_0434 / ic0434) + ep0973_43 * log(s_0973 / ic0973) + ep0979_43 * log(s_0979 / ic0979) + ep0015_43 * log(s_0015 / ic0015) + ep0423_43 * log(s_0423 / ic0423) + ep0633_43 * log(s_0633 / ic0633))) + (cell * v0_44 * (1 + ep0434_44 * log(s_0434 / ic0434) + ep0965_44 * log(s_0965 / ic0965) + ep1583_44 * log(s_1583 / ic1583) + ep0423_44 * log(s_0423 / ic0423) + ep0428_44 * log(s_0428 / ic0428) + ep0633_44 * log(s_0633 / ic0633))) + (cell * v0_45 * (1 + ep0434_45 * log(s_0434 / ic0434) + ep0973_45 * log(s_0973 / ic0973) + ep0999_45 * log(s_0999 / ic0999) + ep0423_45 * log(s_0423 / ic0423) + ep0633_45 * log(s_0633 / ic0633) + ep0969_45 * log(s_0969 / ic0969) + ep0991_45 * log(s_0991 / ic0991))) + (cell * v0_46 * (1 + ep0434_46 * log(s_0434 / ic0434) + ep0969_46 * log(s_0969 / ic0969) + ep1585_46 * log(s_1585 / ic1585) + ep0423_46 * log(s_0423 / ic0423) + ep0430_46 * log(s_0430 / ic0430) + ep0633_46 * log(s_0633 / ic0633))) + (cell * v0_51 * (1 + ep0434_51 * log(s_0434 / ic0434) + ep0973_51 * log(s_0973 / ic0973) + ep1587_51 * log(s_1587 / ic1587) + ep0423_51 * log(s_0423 / ic0423) + ep0432_51 * log(s_0432 / ic0432) + ep0633_51 * log(s_0633 / ic0633))) + (cell * v0_52 * (1 + ep0434_52 * log(s_0434 / ic0434) + ep1386_52 * log(s_1386 / ic1386) + ep0326_52 * log(s_0326 / ic0326) + ep0633_52 * log(s_0633 / ic0633))) + (cell * v0_67 * (1 + ep0539_67 * log(s_0539 / ic0539) + ep1331_67 * log(s_1331 / ic1331) + ep0471_67 * log(s_0471 / ic0471) + ep0633_67 * log(s_0633 / ic0633))) + (cell * v0_80 * (1 + ep0434_80 * log(s_0434 / ic0434) + ep0981_80 * log(s_0981 / ic0981) + ep1589_80 * log(s_1589 / ic1589) + ep0423_80 * log(s_0423 / ic0423) + ep0542_80 * log(s_0542 / ic0542) + ep0633_80 * log(s_0633 / ic0633))) + (cell * v0_92 * (1 + ep0943_92 * log(s_0943 / ic0943) + ep1376_92 * log(s_1376 / ic1376) + ep0633_92 * log(s_0633 / ic0633) + ep0745_92 * log(s_0745 / ic0745))) + (cell * v0_95 * (1 + ep0656_95 * log(s_0656 / ic0656) + ep0633_95 * log(s_0633 / ic0633) + ep0654_95 * log(s_0654 / ic0654))) + (cell * v0_116 * (1 + ep0745_116 * log(s_0745 / ic0745) + ep0943_116 * log(s_0943 / ic0943) + ep0190_116 * log(s_0190 / ic0190) + ep0633_116 * log(s_0633 / ic0633))) + (cell * v0_121 * (1 + ep0434_121 * log(s_0434 / ic0434) + ep0999_121 * log(s_0999 / ic0999) + ep1590_121 * log(s_1590 / ic1590) + ep0423_121 * log(s_0423 / ic0423) + ep0633_121 * log(s_0633 / ic0633) + ep0747_121 * log(s_0747 / ic0747))) + (cell * v0_122 * (1 + ep0434_122 * log(s_0434 / ic0434) + ep0991_122 * log(s_0991 / ic0991) + ep1591_122 * log(s_1591 / ic1591) + ep0423_122 * log(s_0423 / ic0423) + ep0633_122 * log(s_0633 / ic0633) + ep0748_122 * log(s_0748 / ic0748))) + (cell * v0_132 * (1 + ep0434_132 * log(s_0434 / ic0434) + ep1003_132 * log(s_1003 / ic1003) + ep1593_132 * log(s_1593 / ic1593) + ep0423_132 * log(s_0423 / ic0423) + ep0633_132 * log(s_0633 / ic0633) + ep0757_132 * log(s_0757 / ic0757))) + (cell * v0_133 * (1 + ep0434_133 * log(s_0434 / ic0434) + ep0999_133 * log(s_0999 / ic0999) + ep1565_133 * log(s_1565 / ic1565) + ep0423_133 * log(s_0423 / ic0423) + ep0633_133 * log(s_0633 / ic0633) + ep0782_133 * log(s_0782 / ic0782) + ep0991_133 * log(s_0991 / ic0991))) + (cell * v0_134 * (1 + ep0785_134 * log(s_0785 / ic0785) + ep0141_134 * log(s_0141 / ic0141) + ep0633_134 * log(s_0633 / ic0633) + ep0722_134 * log(s_0722 / ic0722))) + (cell * v0_141 * (1 + ep0434_141 * log(s_0434 / ic0434) + ep1006_141 * log(s_1006 / ic1006) + ep1594_141 * log(s_1594 / ic1594) + ep0423_141 * log(s_0423 / ic0423) + ep0633_141 * log(s_0633 / ic0633) + ep0832_141 * log(s_0832 / ic0832))) + (cell * v0_161 * (1 + ep0434_161 * log(s_0434 / ic0434) + ep1016_161 * log(s_1016 / ic1016) + ep1596_161 * log(s_1596 / ic1596) + ep0423_161 * log(s_0423 / ic0423) + ep0633_161 * log(s_0633 / ic0633) + ep0847_161 * log(s_0847 / ic0847))) + (cell * v0_168 * (1 + ep0434_168 * log(s_0434 / ic0434) + ep1021_168 * log(s_1021 / ic1021) + ep1598_168 * log(s_1598 / ic1598) + ep0423_168 * log(s_0423 / ic0423) + ep0633_168 * log(s_0633 / ic0633) + ep1077_168 * log(s_1077 / ic1077))) + (cell * v0_169 * (1 + ep0434_169 * log(s_0434 / ic0434) + ep1025_169 * log(s_1025 / ic1025) + ep1600_169 * log(s_1600 / ic1600) + ep0423_169 * log(s_0423 / ic0423) + ep0633_169 * log(s_0633 / ic0633) + ep1099_169 * log(s_1099 / ic1099))) + (cell * v0_171 * (1 + ep0573_171 * log(s_0573 / ic0573) + ep0785_171 * log(s_0785 / ic0785) + ep0633_171 * log(s_0633 / ic0633) + ep0743_171 * log(s_0743 / ic0743))) + (cell * v0_174 * (1 + ep0434_174 * log(s_0434 / ic0434) + ep1029_174 * log(s_1029 / ic1029) + ep0633_174 * log(s_0633 / ic0633) + ep1322_174 * log(s_1322 / ic1322) + ep1416_174 * log(s_1416 / ic1416))) + (cell * v0_176 * (1 + ep0434_176 * log(s_0434 / ic0434) + ep1029_176 * log(s_1029 / ic1029) + ep1602_176 * log(s_1602 / ic1602) + ep0423_176 * log(s_0423 / ic0423) + ep0633_176 * log(s_0633 / ic0633) + ep1148_176 * log(s_1148 / ic1148))) + (cell * v0_191 * (1 + ep1269_191 * log(s_1269 / ic1269) + ep1386_191 * log(s_1386 / ic1386) + ep0633_191 * log(s_0633 / ic0633) + ep1270_191 * log(s_1270 / ic1270))) + (cell * v0_194 * (1 + ep0434_194 * log(s_0434 / ic0434) + ep1032_194 * log(s_1032 / ic1032) + ep1604_194 * log(s_1604 / ic1604) + ep0423_194 * log(s_0423 / ic0423) + ep0633_194 * log(s_0633 / ic0633) + ep1314_194 * log(s_1314 / ic1314))) + (cell * v0_212 * (1 + ep0326_212 * log(s_0326 / ic0326) + ep0078_212 * log(s_0078 / ic0078) + ep0633_212 * log(s_0633 / ic0633))) + (cell * v0_217 * (1 + ep0999_217 * log(s_0999 / ic0999) + ep1386_217 * log(s_1386 / ic1386) + ep0327_217 * log(s_0327 / ic0327) + ep0633_217 * log(s_0633 / ic0633) + ep0991_217 * log(s_0991 / ic0991))) + (cell * v0_225 * (1 + ep0434_225 * log(s_0434 / ic0434) + ep1035_225 * log(s_1035 / ic1035) + ep1606_225 * log(s_1606 / ic1606) + ep0423_225 * log(s_0423 / ic0423) + ep0633_225 * log(s_0633 / ic0633) + ep1379_225 * log(s_1379 / ic1379))) + (cell * v0_243 * (1 + ep0434_243 * log(s_0434 / ic0434) + ep1039_243 * log(s_1039 / ic1039) + ep1607_243 * log(s_1607 / ic1607) + ep0423_243 * log(s_0423 / ic0423) + ep0633_243 * log(s_0633 / ic0633) + ep1428_243 * log(s_1428 / ic1428))) + (2.0 * cell * v0_248 * (1 + ep0190_248 * log(s_0190 / ic0190) + ep1212_248 * log(s_1212 / ic1212) + ep0633_248 * log(s_0633 / ic0633) + ep1207_248 * log(s_1207 / ic1207) + ep1447_248 * log(s_1447 / ic1447))) + (cell * v0_254 * (1 + ep0434_254 * log(s_0434 / ic0434) + ep1045_254 * log(s_1045 / ic1045) + ep1608_254 * log(s_1608 / ic1608) + ep0423_254 * log(s_0423 / ic0423) + ep0633_254 * log(s_0633 / ic0633) + ep1491_254 * log(s_1491 / ic1491))) + (cell * v0_263 * (1 + ep0434_263 * log(s_0434 / ic0434) + ep1048_263 * log(s_1048 / ic1048) + ep1610_263 * log(s_1610 / ic1610) + ep0423_263 * log(s_0423 / ic0423) + ep0633_263 * log(s_0633 / ic0633) + ep1527_263 * log(s_1527 / ic1527))) + (cell * v0_265 * (1 + ep0434_265 * log(s_0434 / ic0434) + ep1051_265 * log(s_1051 / ic1051) + ep1612_265 * log(s_1612 / ic1612) + ep0423_265 * log(s_0423 / ic0423) + ep0633_265 * log(s_0633 / ic0633) + ep1533_265 * log(s_1533 / ic1533))) + (cell * v0_267 * (1 + ep0567_267 * log(s_0567 / ic0567) + ep1559_267 * log(s_1559 / ic1559) + ep0633_267 * log(s_0633 / ic0633) + ep1543_267 * log(s_1543 / ic1543))) + (cell * v0_269 * (1 + ep0434_269 * log(s_0434 / ic0434) + ep1056_269 * log(s_1056 / ic1056) + ep1614_269 * log(s_1614 / ic1614) + ep0423_269 * log(s_0423 / ic0423) + ep0633_269 * log(s_0633 / ic0633) + ep1561_269 * log(s_1561 / ic1561))) - (cell * v0_104 * (1 + ep0423_104 * log(s_0423 / ic0423) + ep0602_104 * log(s_0602 / ic0602) + ep0633_104 * log(s_0633 / ic0633) + ep0434_104 * log(s_0434 / ic0434) + ep0529_104 * log(s_0529 / ic0529) + ep0595_104 * log(s_0595 / ic0595))) - (cell * v0_105 * (1 + ep0423_105 * log(s_0423 / ic0423) + ep0633_105 * log(s_0633 / ic0633) + ep1073_105 * log(s_1073 / ic1073) + ep0434_105 * log(s_0434 / ic0434) + ep0529_105 * log(s_0529 / ic0529) + ep1065_105 * log(s_1065 / ic1065))) - (cell * v0_106 * (1 + ep0423_106 * log(s_0423 / ic0423) + ep0633_106 * log(s_0633 / ic0633) + ep1454_106 * log(s_1454 / ic1454) + ep0434_106 * log(s_0434 / ic0434) + ep0529_106 * log(s_0529 / ic0529) + ep1449_106 * log(s_1449 / ic1449))) - (cell * v0_155 * (1 + ep0633_155 * log(s_0633 / ic0633) + ep1322_155 * log(s_1322 / ic1322)));
    der(s_0644) = (cell * v0_93 * (1 + ep0645_93 * log(s_0645 / ic0645) + ep0743_93 * log(s_0743 / ic0743) + ep0644_93 * log(s_0644 / ic0644) + ep0739_93 * log(s_0739 / ic0739))) - (cell * v0_94 * (1 + ep0644_94 * log(s_0644 / ic0644) + ep0645_94 * log(s_0645 / ic0645) + ep1107_94 * log(s_1107 / ic1107)));
    der(s_0645) = (cell * v0_94 * (1 + ep0644_94 * log(s_0644 / ic0644) + ep0645_94 * log(s_0645 / ic0645) + ep1107_94 * log(s_1107 / ic1107))) - (cell * v0_93 * (1 + ep0645_93 * log(s_0645 / ic0645) + ep0743_93 * log(s_0743 / ic0743) + ep0644_93 * log(s_0644 / ic0644) + ep0739_93 * log(s_0739 / ic0739)));
    der(s_0649) = (cell * v0_255 * (1 + ep0306_255 * log(s_0306 / ic0306) + ep0654_255 * log(s_0654 / ic0654) + ep0625_255 * log(s_0625 / ic0625) + ep0649_255 * log(s_0649 / ic0649))) - (0.0036 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0654) = (cell * v0_82 * (1 + ep0589_82 * log(s_0589 / ic0589) + ep0419_82 * log(s_0419 / ic0419) + ep0654_82 * log(s_0654 / ic0654))) + (cell * v0_95 * (1 + ep0656_95 * log(s_0656 / ic0656) + ep0633_95 * log(s_0633 / ic0633) + ep0654_95 * log(s_0654 / ic0654))) - (cell * v0_255 * (1 + ep0306_255 * log(s_0306 / ic0306) + ep0654_255 * log(s_0654 / ic0654) + ep0625_255 * log(s_0625 / ic0625) + ep0649_255 * log(s_0649 / ic0649)));
    der(s_0656) = (cell * v0_233 * (1 + ep1559_233 * log(s_1559 / ic1559) + ep1616_233 * log(s_1616 / ic1616) + ep0656_233 * log(s_0656 / ic0656) + ep1620_233 * log(s_1620 / ic1620))) - (cell * v0_95 * (1 + ep0656_95 * log(s_0656 / ic0656) + ep0633_95 * log(s_0633 / ic0633) + ep0654_95 * log(s_0654 / ic0654)));
    der(s_0657) = (cell * v0_64 * (1 + ep0700_64 * log(s_0700 / ic0700) + ep0657_64 * log(s_0657 / ic0657))) - (cell * v0_63 * (1 + ep0657_63 * log(s_0657 / ic0657) + ep1212_63 * log(s_1212 / ic1212) + ep1275_63 * log(s_1275 / ic1275) + ep0664_63 * log(s_0664 / ic0664) + ep1207_63 * log(s_1207 / ic1207))) - (9.6e-05 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0662) = (cell * v0_54 * (1 + ep0664_54 * log(s_0664 / ic0664) + ep1212_54 * log(s_1212 / ic1212) + ep1275_54 * log(s_1275 / ic1275) + ep0662_54 * log(s_0662 / ic0662) + ep1207_54 * log(s_1207 / ic1207))) - (cell * v0_65 * (1 + ep0662_65 * log(s_0662 / ic0662) + ep1212_65 * log(s_1212 / ic1212) + ep0666_65 * log(s_0666 / ic0666) + ep1207_65 * log(s_1207 / ic1207))) - (0.000125 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0664) = (cell * v0_63 * (1 + ep0657_63 * log(s_0657 / ic0657) + ep1212_63 * log(s_1212 / ic1212) + ep1275_63 * log(s_1275 / ic1275) + ep0664_63 * log(s_0664 / ic0664) + ep1207_63 * log(s_1207 / ic1207))) - (cell * v0_54 * (1 + ep0664_54 * log(s_0664 / ic0664) + ep1212_54 * log(s_1212 / ic1212) + ep1275_54 * log(s_1275 / ic1275) + ep0662_54 * log(s_0662 / ic0662) + ep1207_54 * log(s_1207 / ic1207)));
    der(s_0666) = (cell * v0_65 * (1 + ep0662_65 * log(s_0662 / ic0662) + ep1212_65 * log(s_1212 / ic1212) + ep0666_65 * log(s_0666 / ic0666) + ep1207_65 * log(s_1207 / ic1207))) - (cell * v0_249 * (1 + ep0666_249 * log(s_0666 / ic0666) + ep0056_249 * log(s_0056 / ic0056) + ep0672_249 * log(s_0672 / ic0672))) - (0.0056 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0672) = (cell * v0_249 * (1 + ep0666_249 * log(s_0666 / ic0666) + ep0056_249 * log(s_0056 / ic0056) + ep0672_249 * log(s_0672 / ic0672))) - (0.000812 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0700) = (cell * v0_239 * (1 + ep1416_239 * log(s_1416 / ic1416) + ep1569_239 * log(s_1569 / ic1569) + ep0700_239 * log(s_0700 / ic0700) + ep1413_239 * log(s_1413 / ic1413))) - (cell * v0_64 * (1 + ep0700_64 * log(s_0700 / ic0700) + ep0657_64 * log(s_0657 / ic0657))) - (0.000114 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0709) = (4.0 * cell * v0_111 * (1 + ep0710_111 * log(s_0710 / ic0710) + ep1275_111 * log(s_1275 / ic1275) + ep0709_111 * log(s_0709 / ic0709))) - (2.0 * cell * v0_112 * (1 + ep0709_112 * log(s_0709 / ic0709) + ep1535_112 * log(s_1535 / ic1535) + ep0710_112 * log(s_0710 / ic0710) + ep1537_112 * log(s_1537 / ic1537)));
    der(s_0710) = (2.0 * cell * v0_112 * (1 + ep0709_112 * log(s_0709 / ic0709) + ep1535_112 * log(s_1535 / ic1535) + ep0710_112 * log(s_0710 / ic0710) + ep1537_112 * log(s_1537 / ic1537))) - (4.0 * cell * v0_111 * (1 + ep0710_111 * log(s_0710 / ic0710) + ep1275_111 * log(s_1275 / ic1275) + ep0709_111 * log(s_0709 / ic0709)));
    der(s_0722) = (cell * v0_15 * (1 + ep0577_15 * log(s_0577 / ic0577) + ep0158_15 * log(s_0158 / ic0158) + ep0722_15 * log(s_0722 / ic0722))) + (cell * v0_81 * (1 + ep1059_81 * log(s_1059 / ic1059) + ep1212_81 * log(s_1212 / ic1212) + ep1275_81 * log(s_1275 / ic1275) + ep0262_81 * log(s_0262 / ic0262) + ep0722_81 * log(s_0722 / ic0722) + ep1207_81 * log(s_1207 / ic1207))) + (cell * v0_113 * (1 + ep0120_113 * log(s_0120 / ic0120) + ep0394_113 * log(s_0394 / ic0394) + ep1322_113 * log(s_1322 / ic1322) + ep0434_113 * log(s_0434 / ic0434) + ep0722_113 * log(s_0722 / ic0722) + ep1487_113 * log(s_1487 / ic1487))) + (cell * v0_134 * (1 + ep0785_134 * log(s_0785 / ic0785) + ep0141_134 * log(s_0141 / ic0141) + ep0633_134 * log(s_0633 / ic0633) + ep0722_134 * log(s_0722 / ic0722))) - (cell * max(v0_278 * (1 + ep0722_278 * log(s_0722 / ic0722)), zero_flux));
    der(s_0723) = 0.0;
    der(s_0725) = (cell * v0_34 * (1 + ep0299_34 * log(s_0299 / ic0299) + ep0403_34 * log(s_0403 / ic0403) + ep0725_34 * log(s_0725 / ic0725))) + (cell * v0_35 * (1 + ep0393_35 * log(s_0393 / ic0393) + ep0423_35 * log(s_0423 / ic0423) + ep0725_35 * log(s_0725 / ic0725))) + (cell * v0_42 * (1 + ep0015_42 * log(s_0015 / ic0015) + ep0725_42 * log(s_0725 / ic0725) + ep0965_42 * log(s_0965 / ic0965))) - (cell * v0_115 * (1 + ep0725_115 * log(s_0725 / ic0725) + ep0066_115 * log(s_0066 / ic0066)));
    der(s_0739) = (cell * v0_36 * (1 + ep0785_36 * log(s_0785 / ic0785) + ep0849_36 * log(s_0849 / ic0849) + ep0973_36 * log(s_0973 / ic0973) + ep0393_36 * log(s_0393 / ic0393) + ep0739_36 * log(s_0739 / ic0739) + ep1322_36 * log(s_1322 / ic1322))) + (cell * v0_93 * (1 + ep0645_93 * log(s_0645 / ic0645) + ep0743_93 * log(s_0743 / ic0743) + ep0644_93 * log(s_0644 / ic0644) + ep0739_93 * log(s_0739 / ic0739))) + (cell * v0_135 * (1 + ep0434_135 * log(s_0434 / ic0434) + ep0782_135 * log(s_0782 / ic0782) + ep0394_135 * log(s_0394 / ic0394) + ep0739_135 * log(s_0739 / ic0739))) + (cell * v0_136 * (1 + ep0586_136 * log(s_0586 / ic0586) + ep0782_136 * log(s_0782 / ic0782) + ep0582_136 * log(s_0582 / ic0582) + ep0739_136 * log(s_0739 / ic0739))) - (cell * v0_186 * (1 + ep0434_186 * log(s_0434 / ic0434) + ep0739_186 * log(s_0739 / ic0739) + ep0394_186 * log(s_0394 / ic0394) + ep0785_186 * log(s_0785 / ic0785))) - (cell * v0_236 * (1 + ep0739_236 * log(s_0739 / ic0739) + ep1616_236 * log(s_1616 / ic1616) + ep0613_236 * log(s_0613 / ic0613) + ep1620_236 * log(s_1620 / ic1620)));
    der(s_0743) = (cell * v0_171 * (1 + ep0573_171 * log(s_0573 / ic0573) + ep0785_171 * log(s_0785 / ic0785) + ep0633_171 * log(s_0633 / ic0633) + ep0743_171 * log(s_0743 / ic0743))) - (cell * v0_93 * (1 + ep0645_93 * log(s_0645 / ic0645) + ep0743_93 * log(s_0743 / ic0743) + ep0644_93 * log(s_0644 / ic0644) + ep0739_93 * log(s_0739 / ic0739)));
    der(s_0745) = (cell * v0_92 * (1 + ep0943_92 * log(s_0943 / ic0943) + ep1376_92 * log(s_1376 / ic1376) + ep0633_92 * log(s_0633 / ic0633) + ep0745_92 * log(s_0745 / ic0745))) - (cell * v0_116 * (1 + ep0745_116 * log(s_0745 / ic0745) + ep0943_116 * log(s_0943 / ic0943) + ep0190_116 * log(s_0190 / ic0190) + ep0633_116 * log(s_0633 / ic0633)));
    der(s_0747) = (cell * v0_121 * (1 + ep0434_121 * log(s_0434 / ic0434) + ep0999_121 * log(s_0999 / ic0999) + ep1590_121 * log(s_1590 / ic1590) + ep0423_121 * log(s_0423 / ic0423) + ep0633_121 * log(s_0633 / ic0633) + ep0747_121 * log(s_0747 / ic0747))) - (0.1054 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0748) = (cell * v0_122 * (1 + ep0434_122 * log(s_0434 / ic0434) + ep0991_122 * log(s_0991 / ic0991) + ep1591_122 * log(s_1591 / ic1591) + ep0423_122 * log(s_0423 / ic0423) + ep0633_122 * log(s_0633 / ic0633) + ep0748_122 * log(s_0748 / ic0748))) - (0.3018 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0750) = (2.0 * cell * v0_123 * (1 + ep0754_123 * log(s_0754 / ic0754) + ep1212_123 * log(s_1212 / ic1212) + ep0750_123 * log(s_0750 / ic0750) + ep1207_123 * log(s_1207 / ic1207))) - (2.0 * cell * v0_124 * (1 + ep0750_124 * log(s_0750 / ic0750) + ep0837_124 * log(s_0837 / ic0837) + ep0754_124 * log(s_0754 / ic0754)));
    der(s_0754) = (cell * v0_124 * (1 + ep0750_124 * log(s_0750 / ic0750) + ep0837_124 * log(s_0837 / ic0837) + ep0754_124 * log(s_0754 / ic0754))) - (cell * v0_123 * (1 + ep0754_123 * log(s_0754 / ic0754) + ep1212_123 * log(s_1212 / ic1212) + ep0750_123 * log(s_0750 / ic0750) + ep1207_123 * log(s_1207 / ic1207)));
    der(s_0757) = (cell * v0_132 * (1 + ep0434_132 * log(s_0434 / ic0434) + ep1003_132 * log(s_1003 / ic1003) + ep1593_132 * log(s_1593 / ic1593) + ep0423_132 * log(s_0423 / ic0423) + ep0633_132 * log(s_0633 / ic0633) + ep0757_132 * log(s_0757 / ic0757))) - (0.2904 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0764) = (cell * v0_114 * (1 + ep0555_114 * log(s_0555 / ic0555) + ep0629_114 * log(s_0629 / ic0629) + ep0764_114 * log(s_0764 / ic0764))) + (cell * v0_256 * (1 + ep0551_256 * log(s_0551 / ic0551) + ep0557_256 * log(s_0557 / ic0557) + ep0764_256 * log(s_0764 / ic0764) + ep1427_256 * log(s_1427 / ic1427))) + (cell * v0_261 * (1 + ep0629_261 * log(s_0629 / ic0629) + ep0764_261 * log(s_0764 / ic0764))) + (cell * v0_262 * (1 + ep0086_262 * log(s_0086 / ic0086) + ep1039_262 * log(s_1039 / ic1039) + ep0764_262 * log(s_0764 / ic0764) + ep1048_262 * log(s_1048 / ic1048))) - (cell * v0_125 * (1 + ep0764_125 * log(s_0764 / ic0764) + ep1198_125 * log(s_1198 / ic1198) + ep1322_125 * log(s_1322 / ic1322) + ep0075_125 * log(s_0075 / ic0075) + ep1203_125 * log(s_1203 / ic1203))) - (cell * v0_257 * (1 + ep0764_257 * log(s_0764 / ic0764) + ep1427_257 * log(s_1427 / ic1427) + ep0581_257 * log(s_0581 / ic0581) + ep1408_257 * log(s_1408 / ic1408))) - (cell * v0_258 * (1 + ep0557_258 * log(s_0557 / ic0557) + ep0764_258 * log(s_0764 / ic0764) + ep0551_258 * log(s_0551 / ic0551) + ep0581_258 * log(s_0581 / ic0581)));
    der(s_0767) = (cell * v0_126 * (1 + ep0629_126 * log(s_0629 / ic0629) + ep1203_126 * log(s_1203 / ic1203) + ep0767_126 * log(s_0767 / ic0767) + ep1198_126 * log(s_1198 / ic1198))) - (cell * v0_127 * (1 + ep0380_127 * log(s_0380 / ic0380) + ep0767_127 * log(s_0767 / ic0767) + ep0082_127 * log(s_0082 / ic0082) + ep0529_127 * log(s_0529 / ic0529)));
    der(s_0773) = (cell * v0_131 * (1 + ep1543_131 * log(s_1543 / ic1543) + ep0773_131 * log(s_0773 / ic0773) + ep1538_131 * log(s_1538 / ic1538))) - (0.5185 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0782) = (cell * v0_133 * (1 + ep0434_133 * log(s_0434 / ic0434) + ep0999_133 * log(s_0999 / ic0999) + ep1565_133 * log(s_1565 / ic1565) + ep0423_133 * log(s_0423 / ic0423) + ep0633_133 * log(s_0633 / ic0633) + ep0782_133 * log(s_0782 / ic0782) + ep0991_133 * log(s_0991 / ic0991))) - (cell * v0_135 * (1 + ep0434_135 * log(s_0434 / ic0434) + ep0782_135 * log(s_0782 / ic0782) + ep0394_135 * log(s_0394 / ic0394) + ep0739_135 * log(s_0739 / ic0739))) - (cell * v0_136 * (1 + ep0586_136 * log(s_0586 / ic0586) + ep0782_136 * log(s_0782 / ic0782) + ep0582_136 * log(s_0582 / ic0582) + ep0739_136 * log(s_0739 / ic0739))) - (0.046 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0785) = (cell * v0_186 * (1 + ep0434_186 * log(s_0434 / ic0434) + ep0739_186 * log(s_0739 / ic0739) + ep0394_186 * log(s_0394 / ic0394) + ep0785_186 * log(s_0785 / ic0785))) - (cell * v0_36 * (1 + ep0785_36 * log(s_0785 / ic0785) + ep0849_36 * log(s_0849 / ic0849) + ep0973_36 * log(s_0973 / ic0973) + ep0393_36 * log(s_0393 / ic0393) + ep0739_36 * log(s_0739 / ic0739) + ep1322_36 * log(s_1322 / ic1322))) - (cell * v0_134 * (1 + ep0785_134 * log(s_0785 / ic0785) + ep0141_134 * log(s_0141 / ic0141) + ep0633_134 * log(s_0633 / ic0633) + ep0722_134 * log(s_0722 / ic0722))) - (cell * v0_171 * (1 + ep0573_171 * log(s_0573 / ic0573) + ep0785_171 * log(s_0785 / ic0785) + ep0633_171 * log(s_0633 / ic0633) + ep0743_171 * log(s_0743 / ic0743)));
    der(s_0832) = (cell * v0_141 * (1 + ep0434_141 * log(s_0434 / ic0434) + ep1006_141 * log(s_1006 / ic1006) + ep1594_141 * log(s_1594 / ic1594) + ep0423_141 * log(s_0423 / ic0423) + ep0633_141 * log(s_0633 / ic0633) + ep0832_141 * log(s_0832 / ic0832))) - (0.0663 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0835) = (cell * v0_143 * (1 + ep0180_143 * log(s_0180 / ic0180) + ep0373_143 * log(s_0373 / ic0373) + ep0529_143 * log(s_0529 / ic0529) + ep0835_143 * log(s_0835 / ic0835))) - (cell * v0_12 * (1 + ep0835_12 * log(s_0835 / ic0835) + ep0454_12 * log(s_0454 / ic0454)));
    der(s_0836) = (cell * v0_142 * (1 + ep0454_142 * log(s_0454 / ic0454) + ep0836_142 * log(s_0836 / ic0836))) - (cell * v0_144 * (1 + ep0836_144 * log(s_0836 / ic0836) + ep1198_144 * log(s_1198 / ic1198) + ep0176_144 * log(s_0176 / ic0176) + ep1203_144 * log(s_1203 / ic1203) + ep0456_144 * log(s_0456 / ic0456)));
    der(s_0837) = (cell * v0_86 * (1 + ep0061_86 * log(s_0061 / ic0061) + ep1275_86 * log(s_1275 / ic1275) + ep0837_86 * log(s_0837 / ic0837) + ep1269_86 * log(s_1269 / ic1269))) - (cell * v0_124 * (1 + ep0750_124 * log(s_0750 / ic0750) + ep0837_124 * log(s_0837 / ic0837) + ep0754_124 * log(s_0754 / ic0754))) - (cell * v0_148 * (1 + ep0837_148 * log(s_0837 / ic0837) + ep1616_148 * log(s_1616 / ic1616) + ep1620_148 * log(s_1620 / ic1620)));
    der(s_0841) = (cell * v0_251 * (1 + ep1212_251 * log(s_1212 / ic1212) + ep1469_251 * log(s_1469 / ic1469) + ep0841_251 * log(s_0841 / ic0841) + ep1207_251 * log(s_1207 / ic1207))) - (cell * v0_188 * (1 + ep0841_188 * log(s_0841 / ic0841) + ep1233_188 * log(s_1233 / ic1233) + ep0362_188 * log(s_0362 / ic0362) + ep1012_188 * log(s_1012 / ic1012)));
    der(s_0847) = (cell * v0_161 * (1 + ep0434_161 * log(s_0434 / ic0434) + ep1016_161 * log(s_1016 / ic1016) + ep1596_161 * log(s_1596 / ic1596) + ep0423_161 * log(s_0423 / ic0423) + ep0633_161 * log(s_0633 / ic0633) + ep0847_161 * log(s_0847 / ic0847))) - (0.1927 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0849) = (cell * v0_156 * (1 + ep1365_156 * log(s_1365 / ic1365) + ep0849_156 * log(s_0849 / ic0849))) - (cell * v0_36 * (1 + ep0785_36 * log(s_0785 / ic0785) + ep0849_36 * log(s_0849 / ic0849) + ep0973_36 * log(s_0973 / ic0973) + ep0393_36 * log(s_0393 / ic0393) + ep0739_36 * log(s_0739 / ic0739) + ep1322_36 * log(s_1322 / ic1322))) - (cell * v0_153 * (1 + ep0849_153 * log(s_0849 / ic0849) + ep1198_153 * log(s_1198 / ic1198) + ep1203_153 * log(s_1203 / ic1203) + ep1565_153 * log(s_1565 / ic1565)));
    der(s_0918) = (cell * v0_157 * (1 + ep0089_157 * log(s_0089 / ic0089) + ep0499_157 * log(s_0499 / ic0499) + ep0619_157 * log(s_0619 / ic0619) + ep0918_157 * log(s_0918 / ic0918))) - (0.000538625 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_0940) = (cell * v0_73 * (1 + ep0516_73 * log(s_0516 / ic0516) + ep0940_73 * log(s_0940 / ic0940))) - (cell * v0_158 * (1 + ep0940_158 * log(s_0940 / ic0940) + ep1198_158 * log(s_1198 / ic1198) + ep0180_158 * log(s_0180 / ic0180) + ep0456_158 * log(s_0456 / ic0456) + ep1203_158 * log(s_1203 / ic1203))) - (cell * v0_159 * (1 + ep0940_159 * log(s_0940 / ic0940) + ep1207_159 * log(s_1207 / ic1207) + ep0180_159 * log(s_0180 / ic0180) + ep0456_159 * log(s_0456 / ic0456) + ep1212_159 * log(s_1212 / ic1212)));
    der(s_0943) = (cell * v0_180 * (1 + ep0018_180 * log(s_0018 / ic0018) + ep0434_180 * log(s_0434 / ic0434) + ep0394_180 * log(s_0394 / ic0394) + ep0456_180 * log(s_0456 / ic0456) + ep0943_180 * log(s_0943 / ic0943) + ep1322_180 * log(s_1322 / ic1322))) - (cell * v0_92 * (1 + ep0943_92 * log(s_0943 / ic0943) + ep1376_92 * log(s_1376 / ic1376) + ep0633_92 * log(s_0633 / ic0633) + ep0745_92 * log(s_0745 / ic0745))) - (cell * v0_116 * (1 + ep0745_116 * log(s_0745 / ic0745) + ep0943_116 * log(s_0943 / ic0943) + ep0190_116 * log(s_0190 / ic0190) + ep0633_116 * log(s_0633 / ic0633))) - (cell * v0_162 * (1 + ep0943_162 * log(s_0943 / ic0943) + ep1376_162 * log(s_1376 / ic1376)));
    der(s_0951) = (cell * v0_223 * (1 + ep1377_223 * log(s_1377 / ic1377) + ep0456_223 * log(s_0456 / ic0456) + ep0951_223 * log(s_0951 / ic0951))) - (cell * v0_193 * (1 + ep0951_193 * log(s_0951 / ic0951) + ep0991_193 * log(s_0991 / ic0991) + ep0180_193 * log(s_0180 / ic0180) + ep1032_193 * log(s_1032 / ic1032)));
    der(s_0953) = (cell * v0_8 * (1 + ep0176_8 * log(s_0176 / ic0176) + ep0991_8 * log(s_0991 / ic0991) + ep0180_8 * log(s_0180 / ic0180) + ep0953_8 * log(s_0953 / ic0953))) - (cell * v0_165 * (1 + ep0953_165 * log(s_0953 / ic0953) + ep1212_165 * log(s_1212 / ic1212) + ep0959_165 * log(s_0959 / ic0959) + ep1207_165 * log(s_1207 / ic1207)));
    der(s_0955) = (cell * v0_164 * (1 + ep0991_164 * log(s_0991 / ic0991) + ep1399_164 * log(s_1399 / ic1399) + ep0180_164 * log(s_0180 / ic0180) + ep0955_164 * log(s_0955 / ic0955))) - (cell * v0_38 * (1 + ep0434_38 * log(s_0434 / ic0434) + ep0955_38 * log(s_0955 / ic0955) + ep1582_38 * log(s_1582 / ic1582) + ep0404_38 * log(s_0404 / ic0404) + ep0423_38 * log(s_0423 / ic0423) + ep0633_38 * log(s_0633 / ic0633)));
    der(s_0959) = (cell * v0_165 * (1 + ep0953_165 * log(s_0953 / ic0953) + ep1212_165 * log(s_1212 / ic1212) + ep0959_165 * log(s_0959 / ic0959) + ep1207_165 * log(s_1207 / ic1207))) - (cell * v0_241 * (1 + ep0959_241 * log(s_0959 / ic0959) + ep0991_241 * log(s_0991 / ic0991) + ep1212_241 * log(s_1212 / ic1212) + ep1038_241 * log(s_1038 / ic1038) + ep1207_241 * log(s_1207 / ic1207)));
    der(s_0965) = (cell * v0_42 * (1 + ep0015_42 * log(s_0015 / ic0015) + ep0725_42 * log(s_0725 / ic0725) + ep0965_42 * log(s_0965 / ic0965))) - (cell * v0_44 * (1 + ep0434_44 * log(s_0434 / ic0434) + ep0965_44 * log(s_0965 / ic0965) + ep1583_44 * log(s_1583 / ic1583) + ep0423_44 * log(s_0423 / ic0423) + ep0428_44 * log(s_0428 / ic0428) + ep0633_44 * log(s_0633 / ic0633)));
    der(s_0969) = (cell * v0_45 * (1 + ep0434_45 * log(s_0434 / ic0434) + ep0973_45 * log(s_0973 / ic0973) + ep0999_45 * log(s_0999 / ic0999) + ep0423_45 * log(s_0423 / ic0423) + ep0633_45 * log(s_0633 / ic0633) + ep0969_45 * log(s_0969 / ic0969) + ep0991_45 * log(s_0991 / ic0991))) - (cell * v0_46 * (1 + ep0434_46 * log(s_0434 / ic0434) + ep0969_46 * log(s_0969 / ic0969) + ep1585_46 * log(s_1585 / ic1585) + ep0423_46 * log(s_0423 / ic0423) + ep0430_46 * log(s_0430 / ic0430) + ep0633_46 * log(s_0633 / ic0633)));
    der(s_0973) = (cell * v0_49 * (1 + ep0991_49 * log(s_0991 / ic0991) + ep1271_49 * log(s_1271 / ic1271) + ep0180_49 * log(s_0180 / ic0180) + ep0973_49 * log(s_0973 / ic0973))) - (cell * v0_36 * (1 + ep0785_36 * log(s_0785 / ic0785) + ep0849_36 * log(s_0849 / ic0849) + ep0973_36 * log(s_0973 / ic0973) + ep0393_36 * log(s_0393 / ic0393) + ep0739_36 * log(s_0739 / ic0739) + ep1322_36 * log(s_1322 / ic1322))) - (cell * v0_43 * (1 + ep0434_43 * log(s_0434 / ic0434) + ep0973_43 * log(s_0973 / ic0973) + ep0979_43 * log(s_0979 / ic0979) + ep0015_43 * log(s_0015 / ic0015) + ep0423_43 * log(s_0423 / ic0423) + ep0633_43 * log(s_0633 / ic0633))) - (cell * v0_45 * (1 + ep0434_45 * log(s_0434 / ic0434) + ep0973_45 * log(s_0973 / ic0973) + ep0999_45 * log(s_0999 / ic0999) + ep0423_45 * log(s_0423 / ic0423) + ep0633_45 * log(s_0633 / ic0633) + ep0969_45 * log(s_0969 / ic0969) + ep0991_45 * log(s_0991 / ic0991))) - (cell * v0_47 * (1 + ep0455_47 * log(s_0455 / ic0455) + ep0973_47 * log(s_0973 / ic0973) + ep1194_47 * log(s_1194 / ic1194) + ep1322_47 * log(s_1322 / ic1322))) - (cell * v0_48 * (1 + ep0434_48 * log(s_0434 / ic0434) + ep0973_48 * log(s_0973 / ic0973) + ep0295_48 * log(s_0295 / ic0295) + ep0394_48 * log(s_0394 / ic0394))) - (cell * v0_51 * (1 + ep0434_51 * log(s_0434 / ic0434) + ep0973_51 * log(s_0973 / ic0973) + ep1587_51 * log(s_1587 / ic1587) + ep0423_51 * log(s_0423 / ic0423) + ep0432_51 * log(s_0432 / ic0432) + ep0633_51 * log(s_0633 / ic0633))) - (cell * v0_210 * (1 + ep0434_210 * log(s_0434 / ic0434) + ep0973_210 * log(s_0973 / ic0973) + ep1364_210 * log(s_1364 / ic1364) + ep0299_210 * log(s_0299 / ic0299) + ep0394_210 * log(s_0394 / ic0394) + ep1322_210 * log(s_1322 / ic1322)));
    der(s_0978) = (cell * v0_50 * (1 + ep0295_50 * log(s_0295 / ic0295) + ep1212_50 * log(s_1212 / ic1212) + ep0978_50 * log(s_0978 / ic0978) + ep1207_50 * log(s_1207 / ic1207) + ep1322_50 * log(s_1322 / ic1322))) - (cell * v0_145 * (1 + ep0978_145 * log(s_0978 / ic0978) + ep1212_145 * log(s_1212 / ic1212) + ep1014_145 * log(s_1014 / ic1014) + ep1207_145 * log(s_1207 / ic1207)));
    der(s_0979) = (cell * v0_189 * (1 + ep0455_189 * log(s_0455 / ic0455) + ep1266_189 * log(s_1266 / ic1266) + ep0979_189 * log(s_0979 / ic0979) + ep1322_189 * log(s_1322 / ic1322))) - (cell * v0_43 * (1 + ep0434_43 * log(s_0434 / ic0434) + ep0973_43 * log(s_0973 / ic0973) + ep0979_43 * log(s_0979 / ic0979) + ep0015_43 * log(s_0015 / ic0015) + ep0423_43 * log(s_0423 / ic0423) + ep0633_43 * log(s_0633 / ic0633)));
    der(s_0980) = (cell * v0_77 * (1 + ep1012_77 * log(s_1012 / ic1012) + ep1039_77 * log(s_1039 / ic1039) + ep0980_77 * log(s_0980 / ic0980))) + (cell * v0_79 * (1 + ep0981_79 * log(s_0981 / ic0981) + ep1233_79 * log(s_1233 / ic1233) + ep0362_79 * log(s_0362 / ic0362) + ep0980_79 * log(s_0980 / ic0980))) - (cell * v0_78 * (1 + ep0980_78 * log(s_0980 / ic0980) + ep0178_78 * log(s_0178 / ic0178) + ep0419_78 * log(s_0419 / ic0419) + ep0981_78 * log(s_0981 / ic0981)));
    der(s_0981) = (cell * v0_78 * (1 + ep0980_78 * log(s_0980 / ic0980) + ep0178_78 * log(s_0178 / ic0178) + ep0419_78 * log(s_0419 / ic0419) + ep0981_78 * log(s_0981 / ic0981))) - (cell * v0_79 * (1 + ep0981_79 * log(s_0981 / ic0981) + ep1233_79 * log(s_1233 / ic1233) + ep0362_79 * log(s_0362 / ic0362) + ep0980_79 * log(s_0980 / ic0980))) - (cell * v0_80 * (1 + ep0434_80 * log(s_0434 / ic0434) + ep0981_80 * log(s_0981 / ic0981) + ep1589_80 * log(s_1589 / ic1589) + ep0423_80 * log(s_0423 / ic0423) + ep0542_80 * log(s_0542 / ic0542) + ep0633_80 * log(s_0633 / ic0633)));
    der(s_0991) = (cell * v0_22 * (1 + ep0301_22 * log(s_0301 / ic0301) + ep0434_22 * log(s_0434 / ic0434) + ep0999_22 * log(s_0999 / ic0999) + ep0302_22 * log(s_0302 / ic0302) + ep0394_22 * log(s_0394 / ic0394) + ep0991_22 * log(s_0991 / ic0991) + ep1322_22 * log(s_1322 / ic1322))) + (cell * v0_41 * (1 + ep0515_41 * log(s_0515 / ic0515) + ep0999_41 * log(s_0999 / ic0999) + ep0427_41 * log(s_0427 / ic0427) + ep0991_41 * log(s_0991 / ic0991) + ep1399_41 * log(s_1399 / ic1399))) + (cell * v0_45 * (1 + ep0434_45 * log(s_0434 / ic0434) + ep0973_45 * log(s_0973 / ic0973) + ep0999_45 * log(s_0999 / ic0999) + ep0423_45 * log(s_0423 / ic0423) + ep0633_45 * log(s_0633 / ic0633) + ep0969_45 * log(s_0969 / ic0969) + ep0991_45 * log(s_0991 / ic0991))) + (cell * v0_66 * (1 + ep0434_66 * log(s_0434 / ic0434) + ep0445_66 * log(s_0445 / ic0445) + ep0999_66 * log(s_0999 / ic0999) + ep0394_66 * log(s_0394 / ic0394) + ep0455_66 * log(s_0455 / ic0455) + ep0991_66 * log(s_0991 / ic0991) + ep1322_66 * log(s_1322 / ic1322))) + (cell * v0_118 * (1 + ep0180_118 * log(s_0180 / ic0180) + ep0419_118 * log(s_0419 / ic0419) + ep1203_118 * log(s_1203 / ic1203) + ep0991_118 * log(s_0991 / ic0991) + ep1198_118 * log(s_1198 / ic1198))) + (cell * v0_119 * (1 + ep0180_119 * log(s_0180 / ic0180) + ep0419_119 * log(s_0419 / ic0419) + ep1212_119 * log(s_1212 / ic1212) + ep0991_119 * log(s_0991 / ic0991) + ep1207_119 * log(s_1207 / ic1207))) + (cell * v0_133 * (1 + ep0434_133 * log(s_0434 / ic0434) + ep0999_133 * log(s_0999 / ic0999) + ep1565_133 * log(s_1565 / ic1565) + ep0423_133 * log(s_0423 / ic0423) + ep0633_133 * log(s_0633 / ic0633) + ep0782_133 * log(s_0782 / ic0782) + ep0991_133 * log(s_0991 / ic0991))) + (cell * v0_151 * (1 + ep0312_151 * log(s_0312 / ic0312) + ep0999_151 * log(s_0999 / ic0999) + ep0403_151 * log(s_0403 / ic0403) + ep0550_151 * log(s_0550 / ic0550) + ep0991_151 * log(s_0991 / ic0991))) + (cell * v0_217 * (1 + ep0999_217 * log(s_0999 / ic0999) + ep1386_217 * log(s_1386 / ic1386) + ep0327_217 * log(s_0327 / ic0327) + ep0633_217 * log(s_0633 / ic0633) + ep0991_217 * log(s_0991 / ic0991))) - (cell * v0_4 * (1 + ep0991_4 * log(s_0991 / ic0991) + ep1203_4 * log(s_1203 / ic1203) + ep0118_4 * log(s_0118 / ic0118) + ep1198_4 * log(s_1198 / ic1198))) - (cell * v0_8 * (1 + ep0176_8 * log(s_0176 / ic0176) + ep0991_8 * log(s_0991 / ic0991) + ep0180_8 * log(s_0180 / ic0180) + ep0953_8 * log(s_0953 / ic0953))) - (cell * v0_30 * (1 + ep0145_30 * log(s_0145 / ic0145) + ep0991_30 * log(s_0991 / ic0991) + ep0180_30 * log(s_0180 / ic0180) + ep1182_30 * log(s_1182 / ic1182))) - (cell * v0_49 * (1 + ep0991_49 * log(s_0991 / ic0991) + ep1271_49 * log(s_1271 / ic1271) + ep0180_49 * log(s_0180 / ic0180) + ep0973_49 * log(s_0973 / ic0973))) - (cell * v0_120 * (1 + ep0419_120 * log(s_0419 / ic0419) + ep0434_120 * log(s_0434 / ic0434) + ep0991_120 * log(s_0991 / ic0991) + ep0394_120 * log(s_0394 / ic0394) + ep0999_120 * log(s_0999 / ic0999) + ep1322_120 * log(s_1322 / ic1322))) - (cell * v0_122 * (1 + ep0434_122 * log(s_0434 / ic0434) + ep0991_122 * log(s_0991 / ic0991) + ep1591_122 * log(s_1591 / ic1591) + ep0423_122 * log(s_0423 / ic0423) + ep0633_122 * log(s_0633 / ic0633) + ep0748_122 * log(s_0748 / ic0748))) - (cell * v0_140 * (1 + ep0207_140 * log(s_0207 / ic0207) + ep0991_140 * log(s_0991 / ic0991) + ep0180_140 * log(s_0180 / ic0180) + ep1011_140 * log(s_1011 / ic1011))) - (cell * v0_160 * (1 + ep0056_160 * log(s_0056 / ic0056) + ep0991_160 * log(s_0991 / ic0991) + ep0180_160 * log(s_0180 / ic0180) + ep1016_160 * log(s_1016 / ic1016))) - (cell * v0_164 * (1 + ep0991_164 * log(s_0991 / ic0991) + ep1399_164 * log(s_1399 / ic1399) + ep0180_164 * log(s_0180 / ic0180) + ep0955_164 * log(s_0955 / ic0955))) - (cell * v0_167 * (1 + ep0291_167 * log(s_0291 / ic0291) + ep0991_167 * log(s_0991 / ic0991) + ep0180_167 * log(s_0180 / ic0180) + ep1021_167 * log(s_1021 / ic1021))) - (cell * v0_190 * (1 + ep0991_190 * log(s_0991 / ic0991) + ep1182_190 * log(s_1182 / ic1182) + ep1192_190 * log(s_1192 / ic1192) + ep1266_190 * log(s_1266 / ic1266))) - (cell * v0_193 * (1 + ep0951_193 * log(s_0951 / ic0951) + ep0991_193 * log(s_0991 / ic0991) + ep0180_193 * log(s_0180 / ic0180) + ep1032_193 * log(s_1032 / ic1032))) - (cell * v0_220 * (1 + ep0258_220 * log(s_0258 / ic0258) + ep0991_220 * log(s_0991 / ic0991) + ep0180_220 * log(s_0180 / ic0180) + ep0259_220 * log(s_0259 / ic0259))) - (cell * v0_241 * (1 + ep0959_241 * log(s_0959 / ic0959) + ep0991_241 * log(s_0991 / ic0991) + ep1212_241 * log(s_1212 / ic1212) + ep1038_241 * log(s_1038 / ic1038) + ep1207_241 * log(s_1207 / ic1207))) - (cell * v0_264 * (1 + ep0204_264 * log(s_0204 / ic0204) + ep0991_264 * log(s_0991 / ic0991) + ep0180_264 * log(s_0180 / ic0180) + ep1051_264 * log(s_1051 / ic1051))) - (cell * v0_268 * (1 + ep0232_268 * log(s_0232 / ic0232) + ep0991_268 * log(s_0991 / ic0991) + ep0180_268 * log(s_0180 / ic0180) + ep1056_268 * log(s_1056 / ic1056)));
    der(s_0999) = (cell * v0_120 * (1 + ep0419_120 * log(s_0419 / ic0419) + ep0434_120 * log(s_0434 / ic0434) + ep0991_120 * log(s_0991 / ic0991) + ep0394_120 * log(s_0394 / ic0394) + ep0999_120 * log(s_0999 / ic0999) + ep1322_120 * log(s_1322 / ic1322))) - (cell * v0_22 * (1 + ep0301_22 * log(s_0301 / ic0301) + ep0434_22 * log(s_0434 / ic0434) + ep0999_22 * log(s_0999 / ic0999) + ep0302_22 * log(s_0302 / ic0302) + ep0394_22 * log(s_0394 / ic0394) + ep0991_22 * log(s_0991 / ic0991) + ep1322_22 * log(s_1322 / ic1322))) - (cell * v0_41 * (1 + ep0515_41 * log(s_0515 / ic0515) + ep0999_41 * log(s_0999 / ic0999) + ep0427_41 * log(s_0427 / ic0427) + ep0991_41 * log(s_0991 / ic0991) + ep1399_41 * log(s_1399 / ic1399))) - (cell * v0_45 * (1 + ep0434_45 * log(s_0434 / ic0434) + ep0973_45 * log(s_0973 / ic0973) + ep0999_45 * log(s_0999 / ic0999) + ep0423_45 * log(s_0423 / ic0423) + ep0633_45 * log(s_0633 / ic0633) + ep0969_45 * log(s_0969 / ic0969) + ep0991_45 * log(s_0991 / ic0991))) - (cell * v0_66 * (1 + ep0434_66 * log(s_0434 / ic0434) + ep0445_66 * log(s_0445 / ic0445) + ep0999_66 * log(s_0999 / ic0999) + ep0394_66 * log(s_0394 / ic0394) + ep0455_66 * log(s_0455 / ic0455) + ep0991_66 * log(s_0991 / ic0991) + ep1322_66 * log(s_1322 / ic1322))) - (cell * v0_121 * (1 + ep0434_121 * log(s_0434 / ic0434) + ep0999_121 * log(s_0999 / ic0999) + ep1590_121 * log(s_1590 / ic1590) + ep0423_121 * log(s_0423 / ic0423) + ep0633_121 * log(s_0633 / ic0633) + ep0747_121 * log(s_0747 / ic0747))) - (cell * v0_133 * (1 + ep0434_133 * log(s_0434 / ic0434) + ep0999_133 * log(s_0999 / ic0999) + ep1565_133 * log(s_1565 / ic1565) + ep0423_133 * log(s_0423 / ic0423) + ep0633_133 * log(s_0633 / ic0633) + ep0782_133 * log(s_0782 / ic0782) + ep0991_133 * log(s_0991 / ic0991))) - (cell * v0_151 * (1 + ep0312_151 * log(s_0312 / ic0312) + ep0999_151 * log(s_0999 / ic0999) + ep0403_151 * log(s_0403 / ic0403) + ep0550_151 * log(s_0550 / ic0550) + ep0991_151 * log(s_0991 / ic0991))) - (cell * v0_217 * (1 + ep0999_217 * log(s_0999 / ic0999) + ep1386_217 * log(s_1386 / ic1386) + ep0327_217 * log(s_0327 / ic0327) + ep0633_217 * log(s_0633 / ic0633) + ep0991_217 * log(s_0991 / ic0991)));
    der(s_1003) = (cell * v0_130 * (1 + ep1039_130 * log(s_1039 / ic1039) + ep1487_130 * log(s_1487 / ic1487) + ep0306_130 * log(s_0306 / ic0306) + ep1003_130 * log(s_1003 / ic1003))) - (cell * v0_129 * (1 + ep1003_129 * log(s_1003 / ic1003) + ep1198_129 * log(s_1198 / ic1198) + ep1487_129 * log(s_1487 / ic1487) + ep0306_129 * log(s_0306 / ic0306) + ep0419_129 * log(s_0419 / ic0419) + ep0456_129 * log(s_0456 / ic0456) + ep1203_129 * log(s_1203 / ic1203))) - (cell * v0_132 * (1 + ep0434_132 * log(s_0434 / ic0434) + ep1003_132 * log(s_1003 / ic1003) + ep1593_132 * log(s_1593 / ic1593) + ep0423_132 * log(s_0423 / ic0423) + ep0633_132 * log(s_0633 / ic0633) + ep0757_132 * log(s_0757 / ic0757))) - (cell * v0_216 * (1 + ep0327_216 * log(s_0327 / ic0327) + ep0434_216 * log(s_0434 / ic0434) + ep1003_216 * log(s_1003 / ic1003) + ep0325_216 * log(s_0325 / ic0325) + ep0394_216 * log(s_0394 / ic0394) + ep1322_216 * log(s_1322 / ic1322)));
    der(s_1006) = (cell * v0_138 * (1 + ep1010_138 * log(s_1010 / ic1010) + ep1198_138 * log(s_1198 / ic1198) + ep1006_138 * log(s_1006 / ic1006) + ep1203_138 * log(s_1203 / ic1203))) - (cell * v0_141 * (1 + ep0434_141 * log(s_0434 / ic0434) + ep1006_141 * log(s_1006 / ic1006) + ep1594_141 * log(s_1594 / ic1594) + ep0423_141 * log(s_0423 / ic0423) + ep0633_141 * log(s_0633 / ic0633) + ep0832_141 * log(s_0832 / ic0832)));
    der(s_1010) = (cell * v0_139 * (1 + ep1011_139 * log(s_1011 / ic1011) + ep1010_139 * log(s_1010 / ic1010) + ep1322_139 * log(s_1322 / ic1322))) - (cell * v0_138 * (1 + ep1010_138 * log(s_1010 / ic1010) + ep1198_138 * log(s_1198 / ic1198) + ep1006_138 * log(s_1006 / ic1006) + ep1203_138 * log(s_1203 / ic1203)));
    der(s_1011) = (cell * v0_140 * (1 + ep0207_140 * log(s_0207 / ic0207) + ep0991_140 * log(s_0991 / ic0991) + ep0180_140 * log(s_0180 / ic0180) + ep1011_140 * log(s_1011 / ic1011))) - (cell * v0_139 * (1 + ep1011_139 * log(s_1011 / ic1011) + ep1010_139 * log(s_1010 / ic1010) + ep1322_139 * log(s_1322 / ic1322)));
    der(s_1012) = (cell * v0_32 * (1 + ep1413_32 * log(s_1413 / ic1413) + ep0386_32 * log(s_0386 / ic0386) + ep1012_32 * log(s_1012 / ic1012))) + (cell * v0_188 * (1 + ep0841_188 * log(s_0841 / ic0841) + ep1233_188 * log(s_1233 / ic1233) + ep0362_188 * log(s_0362 / ic0362) + ep1012_188 * log(s_1012 / ic1012))) - (cell * v0_77 * (1 + ep1012_77 * log(s_1012 / ic1012) + ep1039_77 * log(s_1039 / ic1039) + ep0980_77 * log(s_0980 / ic0980))) - (cell * v0_175 * (1 + ep0322_175 * log(s_0322 / ic0322) + ep1012_175 * log(s_1012 / ic1012) + ep1029_175 * log(s_1029 / ic1029) + ep1487_175 * log(s_1487 / ic1487)));
    der(s_1014) = (cell * v0_145 * (1 + ep0978_145 * log(s_0978 / ic0978) + ep1212_145 * log(s_1212 / ic1212) + ep1014_145 * log(s_1014 / ic1014) + ep1207_145 * log(s_1207 / ic1207))) - (cell * v0_146 * (1 + ep0434_146 * log(s_0434 / ic0434) + ep1014_146 * log(s_1014 / ic1014) + ep0394_146 * log(s_0394 / ic0394) + ep1238_146 * log(s_1238 / ic1238))) - (cell * v0_147 * (1 + ep0373_147 * log(s_0373 / ic0373) + ep1014_147 * log(s_1014 / ic1014) + ep0529_147 * log(s_0529 / ic0529) + ep1233_147 * log(s_1233 / ic1233)));
    der(s_1016) = (cell * v0_160 * (1 + ep0056_160 * log(s_0056 / ic0056) + ep0991_160 * log(s_0991 / ic0991) + ep0180_160 * log(s_0180 / ic0180) + ep1016_160 * log(s_1016 / ic1016))) - (cell * v0_161 * (1 + ep0434_161 * log(s_0434 / ic0434) + ep1016_161 * log(s_1016 / ic1016) + ep1596_161 * log(s_1596 / ic1596) + ep0423_161 * log(s_0423 / ic0423) + ep0633_161 * log(s_0633 / ic0633) + ep0847_161 * log(s_0847 / ic0847)));
    der(s_1021) = (cell * v0_167 * (1 + ep0291_167 * log(s_0291 / ic0291) + ep0991_167 * log(s_0991 / ic0991) + ep0180_167 * log(s_0180 / ic0180) + ep1021_167 * log(s_1021 / ic1021))) - (cell * v0_168 * (1 + ep0434_168 * log(s_0434 / ic0434) + ep1021_168 * log(s_1021 / ic1021) + ep1598_168 * log(s_1598 / ic1598) + ep0423_168 * log(s_0423 / ic0423) + ep0633_168 * log(s_0633 / ic0633) + ep1077_168 * log(s_1077 / ic1077)));
    der(s_1025) = (cell * v0_240 * (1 + ep1038_240 * log(s_1038 / ic1038) + ep1198_240 * log(s_1198 / ic1198) + ep0180_240 * log(s_0180 / ic0180) + ep1025_240 * log(s_1025 / ic1025) + ep1203_240 * log(s_1203 / ic1203))) - (cell * v0_169 * (1 + ep0434_169 * log(s_0434 / ic0434) + ep1025_169 * log(s_1025 / ic1025) + ep1600_169 * log(s_1600 / ic1600) + ep0423_169 * log(s_0423 / ic0423) + ep0633_169 * log(s_0633 / ic0633) + ep1099_169 * log(s_1099 / ic1099)));
    der(s_1029) = (cell * v0_175 * (1 + ep0322_175 * log(s_0322 / ic0322) + ep1012_175 * log(s_1012 / ic1012) + ep1029_175 * log(s_1029 / ic1029) + ep1487_175 * log(s_1487 / ic1487))) - (cell * v0_174 * (1 + ep0434_174 * log(s_0434 / ic0434) + ep1029_174 * log(s_1029 / ic1029) + ep0633_174 * log(s_0633 / ic0633) + ep1322_174 * log(s_1322 / ic1322) + ep1416_174 * log(s_1416 / ic1416))) - (cell * v0_176 * (1 + ep0434_176 * log(s_0434 / ic0434) + ep1029_176 * log(s_1029 / ic1029) + ep1602_176 * log(s_1602 / ic1602) + ep0423_176 * log(s_0423 / ic0423) + ep0633_176 * log(s_0633 / ic0633) + ep1148_176 * log(s_1148 / ic1148)));
    der(s_1032) = (cell * v0_193 * (1 + ep0951_193 * log(s_0951 / ic0951) + ep0991_193 * log(s_0991 / ic0991) + ep0180_193 * log(s_0180 / ic0180) + ep1032_193 * log(s_1032 / ic1032))) - (cell * v0_194 * (1 + ep0434_194 * log(s_0434 / ic0434) + ep1032_194 * log(s_1032 / ic1032) + ep1604_194 * log(s_1604 / ic1604) + ep0423_194 * log(s_0423 / ic0423) + ep0633_194 * log(s_0633 / ic0633) + ep1314_194 * log(s_1314 / ic1314)));
    der(s_1035) = (cell * v0_226 * (1 + ep0118_226 * log(s_0118 / ic0118) + ep1212_226 * log(s_1212 / ic1212) + ep1035_226 * log(s_1035 / ic1035) + ep1207_226 * log(s_1207 / ic1207))) - (cell * v0_225 * (1 + ep0434_225 * log(s_0434 / ic0434) + ep1035_225 * log(s_1035 / ic1035) + ep1606_225 * log(s_1606 / ic1606) + ep0423_225 * log(s_0423 / ic0423) + ep0633_225 * log(s_0633 / ic0633) + ep1379_225 * log(s_1379 / ic1379)));
    der(s_1038) = (cell * v0_241 * (1 + ep0959_241 * log(s_0959 / ic0959) + ep0991_241 * log(s_0991 / ic0991) + ep1212_241 * log(s_1212 / ic1212) + ep1038_241 * log(s_1038 / ic1038) + ep1207_241 * log(s_1207 / ic1207))) - (cell * v0_240 * (1 + ep1038_240 * log(s_1038 / ic1038) + ep1198_240 * log(s_1198 / ic1198) + ep0180_240 * log(s_0180 / ic0180) + ep1025_240 * log(s_1025 / ic1025) + ep1203_240 * log(s_1203 / ic1203)));
    der(s_1039) = (cell * v0_219 * (1 + ep0259_219 * log(s_0259 / ic0259) + ep1039_219 * log(s_1039 / ic1039) + ep1322_219 * log(s_1322 / ic1322))) - (cell * v0_77 * (1 + ep1012_77 * log(s_1012 / ic1012) + ep1039_77 * log(s_1039 / ic1039) + ep0980_77 * log(s_0980 / ic0980))) - (cell * v0_130 * (1 + ep1039_130 * log(s_1039 / ic1039) + ep1487_130 * log(s_1487 / ic1487) + ep0306_130 * log(s_0306 / ic0306) + ep1003_130 * log(s_1003 / ic1003))) - (cell * v0_199 * (1 + ep0471_199 * log(s_0471 / ic0471) + ep1039_199 * log(s_1039 / ic1039) + ep0526_199 * log(s_0526 / ic0526) + ep1337_199 * log(s_1337 / ic1337))) - (cell * v0_242 * (1 + ep1039_242 * log(s_1039 / ic1039) + ep1302_242 * log(s_1302 / ic1302) + ep0231_242 * log(s_0231 / ic0231) + ep0456_242 * log(s_0456 / ic0456) + ep0529_242 * log(s_0529 / ic0529))) - (cell * v0_243 * (1 + ep0434_243 * log(s_0434 / ic0434) + ep1039_243 * log(s_1039 / ic1039) + ep1607_243 * log(s_1607 / ic1607) + ep0423_243 * log(s_0423 / ic0423) + ep0633_243 * log(s_0633 / ic0633) + ep1428_243 * log(s_1428 / ic1428))) - (cell * v0_262 * (1 + ep0086_262 * log(s_0086 / ic0086) + ep1039_262 * log(s_1039 / ic1039) + ep0764_262 * log(s_0764 / ic0764) + ep1048_262 * log(s_1048 / ic1048)));
    der(s_1045) = (cell * v0_253 * (1 + ep1238_253 * log(s_1238 / ic1238) + ep1045_253 * log(s_1045 / ic1045) + ep1322_253 * log(s_1322 / ic1322))) - (cell * v0_254 * (1 + ep0434_254 * log(s_0434 / ic0434) + ep1045_254 * log(s_1045 / ic1045) + ep1608_254 * log(s_1608 / ic1608) + ep0423_254 * log(s_0423 / ic0423) + ep0633_254 * log(s_0633 / ic0633) + ep1491_254 * log(s_1491 / ic1491)));
    der(s_1048) = (cell * v0_262 * (1 + ep0086_262 * log(s_0086 / ic0086) + ep1039_262 * log(s_1039 / ic1039) + ep0764_262 * log(s_0764 / ic0764) + ep1048_262 * log(s_1048 / ic1048))) - (cell * v0_263 * (1 + ep0434_263 * log(s_0434 / ic0434) + ep1048_263 * log(s_1048 / ic1048) + ep1610_263 * log(s_1610 / ic1610) + ep0423_263 * log(s_0423 / ic0423) + ep0633_263 * log(s_0633 / ic0633) + ep1527_263 * log(s_1527 / ic1527)));
    der(s_1051) = (cell * v0_264 * (1 + ep0204_264 * log(s_0204 / ic0204) + ep0991_264 * log(s_0991 / ic0991) + ep0180_264 * log(s_0180 / ic0180) + ep1051_264 * log(s_1051 / ic1051))) - (cell * v0_265 * (1 + ep0434_265 * log(s_0434 / ic0434) + ep1051_265 * log(s_1051 / ic1051) + ep1612_265 * log(s_1612 / ic1612) + ep0423_265 * log(s_0423 / ic0423) + ep0633_265 * log(s_0633 / ic0633) + ep1533_265 * log(s_1533 / ic1533)));
    der(s_1056) = (cell * v0_268 * (1 + ep0232_268 * log(s_0232 / ic0232) + ep0991_268 * log(s_0991 / ic0991) + ep0180_268 * log(s_0180 / ic0180) + ep1056_268 * log(s_1056 / ic1056))) - (cell * v0_269 * (1 + ep0434_269 * log(s_0434 / ic0434) + ep1056_269 * log(s_1056 / ic1056) + ep1614_269 * log(s_1614 / ic1614) + ep0423_269 * log(s_0423 / ic0423) + ep0633_269 * log(s_0633 / ic0633) + ep1561_269 * log(s_1561 / ic1561)));
    der(s_1059) = (cell * v0_166 * (1 + ep0037_166 * log(s_0037 / ic0037) + ep1059_166 * log(s_1059 / ic1059))) - (cell * v0_81 * (1 + ep1059_81 * log(s_1059 / ic1059) + ep1212_81 * log(s_1212 / ic1212) + ep1275_81 * log(s_1275 / ic1275) + ep0262_81 * log(s_0262 / ic0262) + ep0722_81 * log(s_0722 / ic0722) + ep1207_81 * log(s_1207 / ic1207))) - (3.2e-05 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_1065) = (cell * v0_97 * (1 + ep0595_97 * log(s_0595 / ic0595) + ep1101_97 * log(s_1101 / ic1101) + ep1212_97 * log(s_1212 / ic1212) + ep0456_97 * log(s_0456 / ic0456) + ep0529_97 * log(s_0529 / ic0529) + ep1065_97 * log(s_1065 / ic1065) + ep1207_97 * log(s_1207 / ic1207))) + (cell * v0_105 * (1 + ep0423_105 * log(s_0423 / ic0423) + ep0633_105 * log(s_0633 / ic0633) + ep1073_105 * log(s_1073 / ic1073) + ep0434_105 * log(s_0434 / ic0434) + ep0529_105 * log(s_0529 / ic0529) + ep1065_105 * log(s_1065 / ic1065))) - (cell * v0_98 * (1 + ep1065_98 * log(s_1065 / ic1065) + ep1101_98 * log(s_1101 / ic1101) + ep1212_98 * log(s_1212 / ic1212) + ep0456_98 * log(s_0456 / ic0456) + ep0529_98 * log(s_0529 / ic0529) + ep1161_98 * log(s_1161 / ic1161) + ep1207_98 * log(s_1207 / ic1207)));
    der(s_1073) = (cell * v0_107 * (1 + ep0602_107 * log(s_0602 / ic0602) + ep1101_107 * log(s_1101 / ic1101) + ep1212_107 * log(s_1212 / ic1212) + ep0456_107 * log(s_0456 / ic0456) + ep0529_107 * log(s_0529 / ic0529) + ep1073_107 * log(s_1073 / ic1073) + ep1207_107 * log(s_1207 / ic1207))) - (cell * v0_105 * (1 + ep0423_105 * log(s_0423 / ic0423) + ep0633_105 * log(s_0633 / ic0633) + ep1073_105 * log(s_1073 / ic1073) + ep0434_105 * log(s_0434 / ic0434) + ep0529_105 * log(s_0529 / ic0529) + ep1065_105 * log(s_1065 / ic1065))) - (cell * v0_108 * (1 + ep1073_108 * log(s_1073 / ic1073) + ep1101_108 * log(s_1101 / ic1101) + ep1212_108 * log(s_1212 / ic1212) + ep0456_108 * log(s_0456 / ic0456) + ep0529_108 * log(s_0529 / ic0529) + ep1176_108 * log(s_1176 / ic1176) + ep1207_108 * log(s_1207 / ic1207)));
    der(s_1077) = (cell * v0_168 * (1 + ep0434_168 * log(s_0434 / ic0434) + ep1021_168 * log(s_1021 / ic1021) + ep1598_168 * log(s_1598 / ic1598) + ep0423_168 * log(s_0423 / ic0423) + ep0633_168 * log(s_0633 / ic0633) + ep1077_168 * log(s_1077 / ic1077))) - (0.2964 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_1084) = (cell * v0_101 * (1 + ep1101_101 * log(s_1101 / ic1101) + ep1212_101 * log(s_1212 / ic1212) + ep1449_101 * log(s_1449 / ic1449) + ep0456_101 * log(s_0456 / ic0456) + ep0529_101 * log(s_0529 / ic0529) + ep1084_101 * log(s_1084 / ic1084) + ep1207_101 * log(s_1207 / ic1207))) - (cell * v0_87 * (1 + ep1084_87 * log(s_1084 / ic1084) + ep1445_87 * log(s_1445 / ic1445) + ep0475_87 * log(s_0475 / ic0475))) - (cell * v0_221 * (1 + ep1084_221 * log(s_1084 / ic1084) + ep1366_221 * log(s_1366 / ic1366) + ep0481_221 * log(s_0481 / ic0481)));
    der(s_1099) = (cell * v0_169 * (1 + ep0434_169 * log(s_0434 / ic0434) + ep1025_169 * log(s_1025 / ic1025) + ep1600_169 * log(s_1600 / ic1600) + ep0423_169 * log(s_0423 / ic0423) + ep0633_169 * log(s_0633 / ic0633) + ep1099_169 * log(s_1099 / ic1099))) - (0.2862 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_1101) = (cell * v0_27 * (1 + ep0373_27 * log(s_0373 / ic0373) + ep0434_27 * log(s_0434 / ic0434) + ep0445_27 * log(s_0445 / ic0445) + ep0394_27 * log(s_0394 / ic0394) + ep1101_27 * log(s_1101 / ic1101) + ep1322_27 * log(s_1322 / ic1322))) - (cell * v0_97 * (1 + ep0595_97 * log(s_0595 / ic0595) + ep1101_97 * log(s_1101 / ic1101) + ep1212_97 * log(s_1212 / ic1212) + ep0456_97 * log(s_0456 / ic0456) + ep0529_97 * log(s_0529 / ic0529) + ep1065_97 * log(s_1065 / ic1065) + ep1207_97 * log(s_1207 / ic1207))) - (cell * v0_98 * (1 + ep1065_98 * log(s_1065 / ic1065) + ep1101_98 * log(s_1101 / ic1101) + ep1212_98 * log(s_1212 / ic1212) + ep0456_98 * log(s_0456 / ic0456) + ep0529_98 * log(s_0529 / ic0529) + ep1161_98 * log(s_1161 / ic1161) + ep1207_98 * log(s_1207 / ic1207))) - (cell * v0_99 * (1 + ep1101_99 * log(s_1101 / ic1101) + ep1161_99 * log(s_1161 / ic1161) + ep1212_99 * log(s_1212 / ic1212) + ep0456_99 * log(s_0456 / ic0456) + ep0529_99 * log(s_0529 / ic0529) + ep1207_99 * log(s_1207 / ic1207) + ep1286_99 * log(s_1286 / ic1286))) - (cell * v0_100 * (1 + ep1101_100 * log(s_1101 / ic1101) + ep1212_100 * log(s_1212 / ic1212) + ep1286_100 * log(s_1286 / ic1286) + ep0456_100 * log(s_0456 / ic0456) + ep0529_100 * log(s_0529 / ic0529) + ep1207_100 * log(s_1207 / ic1207) + ep1449_100 * log(s_1449 / ic1449))) - (3.0 * cell * v0_101 * (1 + ep1101_101 * log(s_1101 / ic1101) + ep1212_101 * log(s_1212 / ic1212) + ep1449_101 * log(s_1449 / ic1449) + ep0456_101 * log(s_0456 / ic0456) + ep0529_101 * log(s_0529 / ic0529) + ep1084_101 * log(s_1084 / ic1084) + ep1207_101 * log(s_1207 / ic1207))) - (cell * v0_102 * (1 + ep1101_102 * log(s_1101 / ic1101) + ep1212_102 * log(s_1212 / ic1212) + ep1255_102 * log(s_1255 / ic1255) + ep0456_102 * log(s_0456 / ic0456) + ep0529_102 * log(s_0529 / ic0529) + ep0602_102 * log(s_0602 / ic0602) + ep1207_102 * log(s_1207 / ic1207))) - (3.0 * cell * v0_103 * (1 + ep0373_103 * log(s_0373 / ic0373) + ep1101_103 * log(s_1101 / ic1101) + ep1212_103 * log(s_1212 / ic1212) + ep0456_103 * log(s_0456 / ic0456) + ep0529_103 * log(s_0529 / ic0529) + ep1207_103 * log(s_1207 / ic1207) + ep1255_103 * log(s_1255 / ic1255))) - (cell * v0_107 * (1 + ep0602_107 * log(s_0602 / ic0602) + ep1101_107 * log(s_1101 / ic1101) + ep1212_107 * log(s_1212 / ic1212) + ep0456_107 * log(s_0456 / ic0456) + ep0529_107 * log(s_0529 / ic0529) + ep1073_107 * log(s_1073 / ic1073) + ep1207_107 * log(s_1207 / ic1207))) - (cell * v0_108 * (1 + ep1073_108 * log(s_1073 / ic1073) + ep1101_108 * log(s_1101 / ic1101) + ep1212_108 * log(s_1212 / ic1212) + ep0456_108 * log(s_0456 / ic0456) + ep0529_108 * log(s_0529 / ic0529) + ep1176_108 * log(s_1176 / ic1176) + ep1207_108 * log(s_1207 / ic1207))) - (cell * v0_109 * (1 + ep1101_109 * log(s_1101 / ic1101) + ep1176_109 * log(s_1176 / ic1176) + ep1212_109 * log(s_1212 / ic1212) + ep0456_109 * log(s_0456 / ic0456) + ep0529_109 * log(s_0529 / ic0529) + ep1207_109 * log(s_1207 / ic1207) + ep1302_109 * log(s_1302 / ic1302))) - (cell * v0_110 * (1 + ep1101_110 * log(s_1101 / ic1101) + ep1212_110 * log(s_1212 / ic1212) + ep1302_110 * log(s_1302 / ic1302) + ep0456_110 * log(s_0456 / ic0456) + ep0529_110 * log(s_0529 / ic0529) + ep1207_110 * log(s_1207 / ic1207) + ep1454_110 * log(s_1454 / ic1454)));
    der(s_1107) = (cell * v0_94 * (1 + ep0644_94 * log(s_0644 / ic0644) + ep0645_94 * log(s_0645 / ic0645) + ep1107_94 * log(s_1107 / ic1107))) - (0.8079 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_1148) = (cell * v0_176 * (1 + ep0434_176 * log(s_0434 / ic0434) + ep1029_176 * log(s_1029 / ic1029) + ep1602_176 * log(s_1602 / ic1602) + ep0423_176 * log(s_0423 / ic0423) + ep0633_176 * log(s_0633 / ic0633) + ep1148_176 * log(s_1148 / ic1148))) - (0.0507 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_1153) = (cell * v0_181 * (1 + ep0126_181 * log(s_0126 / ic0126) + ep1153_181 * log(s_1153 / ic1153) + ep1322_181 * log(s_1322 / ic1322))) - (cell * v0_197 * (1 + ep0471_197 * log(s_0471 / ic0471) + ep1153_197 * log(s_1153 / ic1153) + ep0089_197 * log(s_0089 / ic0089) + ep0526_197 * log(s_0526 / ic0526)));
    der(s_1161) = (cell * v0_98 * (1 + ep1065_98 * log(s_1065 / ic1065) + ep1101_98 * log(s_1101 / ic1101) + ep1212_98 * log(s_1212 / ic1212) + ep0456_98 * log(s_0456 / ic0456) + ep0529_98 * log(s_0529 / ic0529) + ep1161_98 * log(s_1161 / ic1161) + ep1207_98 * log(s_1207 / ic1207))) - (cell * v0_99 * (1 + ep1101_99 * log(s_1101 / ic1101) + ep1161_99 * log(s_1161 / ic1161) + ep1212_99 * log(s_1212 / ic1212) + ep0456_99 * log(s_0456 / ic0456) + ep0529_99 * log(s_0529 / ic0529) + ep1207_99 * log(s_1207 / ic1207) + ep1286_99 * log(s_1286 / ic1286)));
    der(s_1176) = (cell * v0_108 * (1 + ep1073_108 * log(s_1073 / ic1073) + ep1101_108 * log(s_1101 / ic1101) + ep1212_108 * log(s_1212 / ic1212) + ep0456_108 * log(s_0456 / ic0456) + ep0529_108 * log(s_0529 / ic0529) + ep1176_108 * log(s_1176 / ic1176) + ep1207_108 * log(s_1207 / ic1207))) - (cell * v0_109 * (1 + ep1101_109 * log(s_1101 / ic1101) + ep1176_109 * log(s_1176 / ic1176) + ep1212_109 * log(s_1212 / ic1212) + ep0456_109 * log(s_0456 / ic0456) + ep0529_109 * log(s_0529 / ic0529) + ep1207_109 * log(s_1207 / ic1207) + ep1302_109 * log(s_1302 / ic1302)));
    der(s_1182) = (cell * v0_30 * (1 + ep0145_30 * log(s_0145 / ic0145) + ep0991_30 * log(s_0991 / ic0991) + ep0180_30 * log(s_0180 / ic0180) + ep1182_30 * log(s_1182 / ic1182))) - (cell * v0_190 * (1 + ep0991_190 * log(s_0991 / ic0991) + ep1182_190 * log(s_1182 / ic1182) + ep1192_190 * log(s_1192 / ic1192) + ep1266_190 * log(s_1266 / ic1266)));
    der(s_1187) = (cell * v0_40 * (1 + ep0427_40 * log(s_0427 / ic0427) + ep1386_40 * log(s_1386 / ic1386) + ep0633_40 * log(s_0633 / ic0633) + ep1187_40 * log(s_1187 / ic1187))) - (cell * v0_215 * (1 + ep1187_215 * log(s_1187 / ic1187) + ep0076_215 * log(s_0076 / ic0076)));
    der(s_1191) = (cell * v0_29 * (1 + ep0434_29 * log(s_0434 / ic0434) + ep1192_29 * log(s_1192 / ic1192) + ep0394_29 * log(s_0394 / ic0394) + ep1191_29 * log(s_1191 / ic1191))) - (cell * v0_183 * (1 + ep1191_183 * log(s_1191 / ic1191) + ep1212_183 * log(s_1212 / ic1212) + ep0145_183 * log(s_0145 / ic0145) + ep1207_183 * log(s_1207 / ic1207) + ep1322_183 * log(s_1322 / ic1322)));
    der(s_1192) = (cell * v0_190 * (1 + ep0991_190 * log(s_0991 / ic0991) + ep1182_190 * log(s_1182 / ic1182) + ep1192_190 * log(s_1192 / ic1192) + ep1266_190 * log(s_1266 / ic1266))) - (cell * v0_29 * (1 + ep0434_29 * log(s_0434 / ic0434) + ep1192_29 * log(s_1192 / ic1192) + ep0394_29 * log(s_0394 / ic0394) + ep1191_29 * log(s_1191 / ic1191)));
    der(s_1194) = (cell * v0_47 * (1 + ep0455_47 * log(s_0455 / ic0455) + ep0973_47 * log(s_0973 / ic0973) + ep1194_47 * log(s_1194 / ic1194) + ep1322_47 * log(s_1322 / ic1322))) - (cell * v0_89 * (1 + ep1194_89 * log(s_1194 / ic1194) + ep0061_89 * log(s_0061 / ic0061)));
    der(s_1198) = (cell * v0_4 * (1 + ep0991_4 * log(s_0991 / ic0991) + ep1203_4 * log(s_1203 / ic1203) + ep0118_4 * log(s_0118 / ic0118) + ep1198_4 * log(s_1198 / ic1198))) + (cell * v0_118 * (1 + ep0180_118 * log(s_0180 / ic0180) + ep0419_118 * log(s_0419 / ic0419) + ep1203_118 * log(s_1203 / ic1203) + ep0991_118 * log(s_0991 / ic0991) + ep1198_118 * log(s_1198 / ic1198))) + (cell * v0_126 * (1 + ep0629_126 * log(s_0629 / ic0629) + ep1203_126 * log(s_1203 / ic1203) + ep0767_126 * log(s_0767 / ic0767) + ep1198_126 * log(s_1198 / ic1198))) + (cell * v0_184 * (1 + ep1203_184 * log(s_1203 / ic1203) + ep1537_184 * log(s_1537 / ic1537) + ep1198_184 * log(s_1198 / ic1198) + ep1535_184 * log(s_1535 / ic1535))) + (cell * v0_246 * (1 + ep1203_246 * log(s_1203 / ic1203) + ep1275_246 * log(s_1275 / ic1275) + ep1447_246 * log(s_1447 / ic1447) + ep0037_246 * log(s_0037 / ic0037) + ep1198_246 * log(s_1198 / ic1198))) - (cell * v0_20 * (1 + ep0009_20 * log(s_0009 / ic0009) + ep1198_20 * log(s_1198 / ic1198) + ep0010_20 * log(s_0010 / ic0010) + ep1203_20 * log(s_1203 / ic1203))) - (cell * v0_56 * (1 + ep0297_56 * log(s_0297 / ic0297) + ep1198_56 * log(s_1198 / ic1198) + ep0209_56 * log(s_0209 / ic0209) + ep0456_56 * log(s_0456 / ic0456) + ep1203_56 * log(s_1203 / ic1203))) - (cell * v0_125 * (1 + ep0764_125 * log(s_0764 / ic0764) + ep1198_125 * log(s_1198 / ic1198) + ep1322_125 * log(s_1322 / ic1322) + ep0075_125 * log(s_0075 / ic0075) + ep1203_125 * log(s_1203 / ic1203))) - (cell * v0_129 * (1 + ep1003_129 * log(s_1003 / ic1003) + ep1198_129 * log(s_1198 / ic1198) + ep1487_129 * log(s_1487 / ic1487) + ep0306_129 * log(s_0306 / ic0306) + ep0419_129 * log(s_0419 / ic0419) + ep0456_129 * log(s_0456 / ic0456) + ep1203_129 * log(s_1203 / ic1203))) - (2.0 * cell * v0_138 * (1 + ep1010_138 * log(s_1010 / ic1010) + ep1198_138 * log(s_1198 / ic1198) + ep1006_138 * log(s_1006 / ic1006) + ep1203_138 * log(s_1203 / ic1203))) - (cell * v0_144 * (1 + ep0836_144 * log(s_0836 / ic0836) + ep1198_144 * log(s_1198 / ic1198) + ep0176_144 * log(s_0176 / ic0176) + ep1203_144 * log(s_1203 / ic1203) + ep0456_144 * log(s_0456 / ic0456))) - (cell * v0_153 * (1 + ep0849_153 * log(s_0849 / ic0849) + ep1198_153 * log(s_1198 / ic1198) + ep1203_153 * log(s_1203 / ic1203) + ep1565_153 * log(s_1565 / ic1565))) - (cell * v0_158 * (1 + ep0940_158 * log(s_0940 / ic0940) + ep1198_158 * log(s_1198 / ic1198) + ep0180_158 * log(s_0180 / ic0180) + ep0456_158 * log(s_0456 / ic0456) + ep1203_158 * log(s_1203 / ic1203))) - (cell * v0_170 * (1 + ep0066_170 * log(s_0066 / ic0066) + ep1198_170 * log(s_1198 / ic1198) + ep1203_170 * log(s_1203 / ic1203) + ep1271_170 * log(s_1271 / ic1271))) - (cell * v0_177 * (1 + ep0306_177 * log(s_0306 / ic0306) + ep1198_177 * log(s_1198 / ic1198) + ep0304_177 * log(s_0304 / ic0304) + ep1203_177 * log(s_1203 / ic1203))) - (cell * v0_203 * (1 + ep0260_203 * log(s_0260 / ic0260) + ep1198_203 * log(s_1198 / ic1198) + ep0258_203 * log(s_0258 / ic0258) + ep1203_203 * log(s_1203 / ic1203))) - (cell * v0_228 * (1 + ep0529_228 * log(s_0529 / ic0529) + ep1198_228 * log(s_1198 / ic1198) + ep1399_228 * log(s_1399 / ic1399) + ep0373_228 * log(s_0373 / ic0373) + ep0456_228 * log(s_0456 / ic0456) + ep1203_228 * log(s_1203 / ic1203))) - (cell * v0_240 * (1 + ep1038_240 * log(s_1038 / ic1038) + ep1198_240 * log(s_1198 / ic1198) + ep0180_240 * log(s_0180 / ic0180) + ep1025_240 * log(s_1025 / ic1025) + ep1203_240 * log(s_1203 / ic1203)));
    der(s_1203) = (cell * v0_20 * (1 + ep0009_20 * log(s_0009 / ic0009) + ep1198_20 * log(s_1198 / ic1198) + ep0010_20 * log(s_0010 / ic0010) + ep1203_20 * log(s_1203 / ic1203))) + (cell * v0_56 * (1 + ep0297_56 * log(s_0297 / ic0297) + ep1198_56 * log(s_1198 / ic1198) + ep0209_56 * log(s_0209 / ic0209) + ep0456_56 * log(s_0456 / ic0456) + ep1203_56 * log(s_1203 / ic1203))) + (cell * v0_125 * (1 + ep0764_125 * log(s_0764 / ic0764) + ep1198_125 * log(s_1198 / ic1198) + ep1322_125 * log(s_1322 / ic1322) + ep0075_125 * log(s_0075 / ic0075) + ep1203_125 * log(s_1203 / ic1203))) + (cell * v0_129 * (1 + ep1003_129 * log(s_1003 / ic1003) + ep1198_129 * log(s_1198 / ic1198) + ep1487_129 * log(s_1487 / ic1487) + ep0306_129 * log(s_0306 / ic0306) + ep0419_129 * log(s_0419 / ic0419) + ep0456_129 * log(s_0456 / ic0456) + ep1203_129 * log(s_1203 / ic1203))) + (2.0 * cell * v0_138 * (1 + ep1010_138 * log(s_1010 / ic1010) + ep1198_138 * log(s_1198 / ic1198) + ep1006_138 * log(s_1006 / ic1006) + ep1203_138 * log(s_1203 / ic1203))) + (cell * v0_144 * (1 + ep0836_144 * log(s_0836 / ic0836) + ep1198_144 * log(s_1198 / ic1198) + ep0176_144 * log(s_0176 / ic0176) + ep1203_144 * log(s_1203 / ic1203) + ep0456_144 * log(s_0456 / ic0456))) + (cell * v0_153 * (1 + ep0849_153 * log(s_0849 / ic0849) + ep1198_153 * log(s_1198 / ic1198) + ep1203_153 * log(s_1203 / ic1203) + ep1565_153 * log(s_1565 / ic1565))) + (cell * v0_158 * (1 + ep0940_158 * log(s_0940 / ic0940) + ep1198_158 * log(s_1198 / ic1198) + ep0180_158 * log(s_0180 / ic0180) + ep0456_158 * log(s_0456 / ic0456) + ep1203_158 * log(s_1203 / ic1203))) + (cell * v0_170 * (1 + ep0066_170 * log(s_0066 / ic0066) + ep1198_170 * log(s_1198 / ic1198) + ep1203_170 * log(s_1203 / ic1203) + ep1271_170 * log(s_1271 / ic1271))) + (cell * v0_177 * (1 + ep0306_177 * log(s_0306 / ic0306) + ep1198_177 * log(s_1198 / ic1198) + ep0304_177 * log(s_0304 / ic0304) + ep1203_177 * log(s_1203 / ic1203))) + (cell * v0_203 * (1 + ep0260_203 * log(s_0260 / ic0260) + ep1198_203 * log(s_1198 / ic1198) + ep0258_203 * log(s_0258 / ic0258) + ep1203_203 * log(s_1203 / ic1203))) + (cell * v0_228 * (1 + ep0529_228 * log(s_0529 / ic0529) + ep1198_228 * log(s_1198 / ic1198) + ep1399_228 * log(s_1399 / ic1399) + ep0373_228 * log(s_0373 / ic0373) + ep0456_228 * log(s_0456 / ic0456) + ep1203_228 * log(s_1203 / ic1203))) + (cell * v0_240 * (1 + ep1038_240 * log(s_1038 / ic1038) + ep1198_240 * log(s_1198 / ic1198) + ep0180_240 * log(s_0180 / ic0180) + ep1025_240 * log(s_1025 / ic1025) + ep1203_240 * log(s_1203 / ic1203))) - (cell * v0_4 * (1 + ep0991_4 * log(s_0991 / ic0991) + ep1203_4 * log(s_1203 / ic1203) + ep0118_4 * log(s_0118 / ic0118) + ep1198_4 * log(s_1198 / ic1198))) - (cell * v0_118 * (1 + ep0180_118 * log(s_0180 / ic0180) + ep0419_118 * log(s_0419 / ic0419) + ep1203_118 * log(s_1203 / ic1203) + ep0991_118 * log(s_0991 / ic0991) + ep1198_118 * log(s_1198 / ic1198))) - (cell * v0_126 * (1 + ep0629_126 * log(s_0629 / ic0629) + ep1203_126 * log(s_1203 / ic1203) + ep0767_126 * log(s_0767 / ic0767) + ep1198_126 * log(s_1198 / ic1198))) - (cell * v0_184 * (1 + ep1203_184 * log(s_1203 / ic1203) + ep1537_184 * log(s_1537 / ic1537) + ep1198_184 * log(s_1198 / ic1198) + ep1535_184 * log(s_1535 / ic1535))) - (cell * v0_246 * (1 + ep1203_246 * log(s_1203 / ic1203) + ep1275_246 * log(s_1275 / ic1275) + ep1447_246 * log(s_1447 / ic1447) + ep0037_246 * log(s_0037 / ic0037) + ep1198_246 * log(s_1198 / ic1198)));
    der(s_1207) = (cell * v0_6 * (1 + ep0141_6 * log(s_0141 / ic0141) + ep1212_6 * log(s_1212 / ic1212) + ep0142_6 * log(s_0142 / ic0142) + ep1207_6 * log(s_1207 / ic1207))) + (cell * v0_18 * (1 + ep0231_18 * log(s_0231 / ic0231) + ep1212_18 * log(s_1212 / ic1212) + ep1207_18 * log(s_1207 / ic1207) + ep1445_18 * log(s_1445 / ic1445))) + (cell * v0_23 * (1 + ep0306_23 * log(s_0306 / ic0306) + ep1212_23 * log(s_1212 / ic1212) + ep0322_23 * log(s_0322 / ic0322) + ep1207_23 * log(s_1207 / ic1207))) + (cell * v0_24 * (1 + ep0146_24 * log(s_0146 / ic0146) + ep1212_24 * log(s_1212 / ic1212) + ep0016_24 * log(s_0016 / ic0016) + ep1207_24 * log(s_1207 / ic1207))) + (cell * v0_50 * (1 + ep0295_50 * log(s_0295 / ic0295) + ep1212_50 * log(s_1212 / ic1212) + ep0978_50 * log(s_0978 / ic0978) + ep1207_50 * log(s_1207 / ic1207) + ep1322_50 * log(s_1322 / ic1322))) + (cell * v0_53 * (1 + ep0262_53 * log(s_0262 / ic0262) + ep1212_53 * log(s_1212 / ic1212) + ep0122_53 * log(s_0122 / ic0122) + ep1207_53 * log(s_1207 / ic1207))) + (cell * v0_54 * (1 + ep0664_54 * log(s_0664 / ic0664) + ep1212_54 * log(s_1212 / ic1212) + ep1275_54 * log(s_1275 / ic1275) + ep0662_54 * log(s_0662 / ic0662) + ep1207_54 * log(s_1207 / ic1207))) + (cell * v0_57 * (1 + ep0209_57 * log(s_0209 / ic0209) + ep1212_57 * log(s_1212 / ic1212) + ep0296_57 * log(s_0296 / ic0296) + ep1207_57 * log(s_1207 / ic1207))) + (cell * v0_58 * (1 + ep1212_58 * log(s_1212 / ic1212) + ep1579_58 * log(s_1579 / ic1579) + ep1207_58 * log(s_1207 / ic1207) + ep1569_58 * log(s_1569 / ic1569))) + (cell * v0_59 * (1 + ep0296_59 * log(s_0296 / ic0296) + ep1212_59 * log(s_1212 / ic1212) + ep1275_59 * log(s_1275 / ic1275) + ep1207_59 * log(s_1207 / ic1207) + ep1576_59 * log(s_1576 / ic1576))) + (cell * v0_60 * (1 + ep1212_60 * log(s_1212 / ic1212) + ep1275_60 * log(s_1275 / ic1275) + ep1576_60 * log(s_1576 / ic1576) + ep1207_60 * log(s_1207 / ic1207) + ep1577_60 * log(s_1577 / ic1577))) + (cell * v0_61 * (1 + ep1212_61 * log(s_1212 / ic1212) + ep1275_61 * log(s_1275 / ic1275) + ep1577_61 * log(s_1577 / ic1577) + ep1207_61 * log(s_1207 / ic1207) + ep1578_61 * log(s_1578 / ic1578))) + (3.0 * cell * v0_62 * (1 + ep0122_62 * log(s_0122 / ic0122) + ep1212_62 * log(s_1212 / ic1212) + ep1275_62 * log(s_1275 / ic1275) + ep0297_62 * log(s_0297 / ic0297) + ep1207_62 * log(s_1207 / ic1207))) + (cell * v0_63 * (1 + ep0657_63 * log(s_0657 / ic0657) + ep1212_63 * log(s_1212 / ic1212) + ep1275_63 * log(s_1275 / ic1275) + ep0664_63 * log(s_0664 / ic0664) + ep1207_63 * log(s_1207 / ic1207))) + (cell * v0_65 * (1 + ep0662_65 * log(s_0662 / ic0662) + ep1212_65 * log(s_1212 / ic1212) + ep0666_65 * log(s_0666 / ic0666) + ep1207_65 * log(s_1207 / ic1207))) + (cell * v0_68 * (1 + ep0475_68 * log(s_0475 / ic0475) + ep1212_68 * log(s_1212 / ic1212) + ep1275_68 * log(s_1275 / ic1275) + ep0481_68 * log(s_0481 / ic0481) + ep1207_68 * log(s_1207 / ic1207))) + (cell * v0_69 * (1 + ep0481_69 * log(s_0481 / ic0481) + ep1212_69 * log(s_1212 / ic1212) + ep1275_69 * log(s_1275 / ic1275) + ep0493_69 * log(s_0493 / ic0493) + ep1207_69 * log(s_1207 / ic1207))) + (cell * v0_70 * (1 + ep0493_70 * log(s_0493 / ic0493) + ep1212_70 * log(s_1212 / ic1212) + ep1275_70 * log(s_1275 / ic1275) + ep0499_70 * log(s_0499 / ic0499) + ep1207_70 * log(s_1207 / ic1207))) + (3.0 * cell * v0_81 * (1 + ep1059_81 * log(s_1059 / ic1059) + ep1212_81 * log(s_1212 / ic1212) + ep1275_81 * log(s_1275 / ic1275) + ep0262_81 * log(s_0262 / ic0262) + ep0722_81 * log(s_0722 / ic0722) + ep1207_81 * log(s_1207 / ic1207))) + (cell * v0_88 * (1 + ep0625_88 * log(s_0625 / ic0625) + ep1212_88 * log(s_1212 / ic1212) + ep1207_88 * log(s_1207 / ic1207) + ep1487_88 * log(s_1487 / ic1487))) + (2.0 * cell * v0_97 * (1 + ep0595_97 * log(s_0595 / ic0595) + ep1101_97 * log(s_1101 / ic1101) + ep1212_97 * log(s_1212 / ic1212) + ep0456_97 * log(s_0456 / ic0456) + ep0529_97 * log(s_0529 / ic0529) + ep1065_97 * log(s_1065 / ic1065) + ep1207_97 * log(s_1207 / ic1207))) + (2.0 * cell * v0_98 * (1 + ep1065_98 * log(s_1065 / ic1065) + ep1101_98 * log(s_1101 / ic1101) + ep1212_98 * log(s_1212 / ic1212) + ep0456_98 * log(s_0456 / ic0456) + ep0529_98 * log(s_0529 / ic0529) + ep1161_98 * log(s_1161 / ic1161) + ep1207_98 * log(s_1207 / ic1207))) + (2.0 * cell * v0_99 * (1 + ep1101_99 * log(s_1101 / ic1101) + ep1161_99 * log(s_1161 / ic1161) + ep1212_99 * log(s_1212 / ic1212) + ep0456_99 * log(s_0456 / ic0456) + ep0529_99 * log(s_0529 / ic0529) + ep1207_99 * log(s_1207 / ic1207) + ep1286_99 * log(s_1286 / ic1286))) + (2.0 * cell * v0_100 * (1 + ep1101_100 * log(s_1101 / ic1101) + ep1212_100 * log(s_1212 / ic1212) + ep1286_100 * log(s_1286 / ic1286) + ep0456_100 * log(s_0456 / ic0456) + ep0529_100 * log(s_0529 / ic0529) + ep1207_100 * log(s_1207 / ic1207) + ep1449_100 * log(s_1449 / ic1449))) + (6.0 * cell * v0_101 * (1 + ep1101_101 * log(s_1101 / ic1101) + ep1212_101 * log(s_1212 / ic1212) + ep1449_101 * log(s_1449 / ic1449) + ep0456_101 * log(s_0456 / ic0456) + ep0529_101 * log(s_0529 / ic0529) + ep1084_101 * log(s_1084 / ic1084) + ep1207_101 * log(s_1207 / ic1207))) + (2.0 * cell * v0_102 * (1 + ep1101_102 * log(s_1101 / ic1101) + ep1212_102 * log(s_1212 / ic1212) + ep1255_102 * log(s_1255 / ic1255) + ep0456_102 * log(s_0456 / ic0456) + ep0529_102 * log(s_0529 / ic0529) + ep0602_102 * log(s_0602 / ic0602) + ep1207_102 * log(s_1207 / ic1207))) + (6.0 * cell * v0_103 * (1 + ep0373_103 * log(s_0373 / ic0373) + ep1101_103 * log(s_1101 / ic1101) + ep1212_103 * log(s_1212 / ic1212) + ep0456_103 * log(s_0456 / ic0456) + ep0529_103 * log(s_0529 / ic0529) + ep1207_103 * log(s_1207 / ic1207) + ep1255_103 * log(s_1255 / ic1255))) + (2.0 * cell * v0_107 * (1 + ep0602_107 * log(s_0602 / ic0602) + ep1101_107 * log(s_1101 / ic1101) + ep1212_107 * log(s_1212 / ic1212) + ep0456_107 * log(s_0456 / ic0456) + ep0529_107 * log(s_0529 / ic0529) + ep1073_107 * log(s_1073 / ic1073) + ep1207_107 * log(s_1207 / ic1207))) + (2.0 * cell * v0_108 * (1 + ep1073_108 * log(s_1073 / ic1073) + ep1101_108 * log(s_1101 / ic1101) + ep1212_108 * log(s_1212 / ic1212) + ep0456_108 * log(s_0456 / ic0456) + ep0529_108 * log(s_0529 / ic0529) + ep1176_108 * log(s_1176 / ic1176) + ep1207_108 * log(s_1207 / ic1207))) + (2.0 * cell * v0_109 * (1 + ep1101_109 * log(s_1101 / ic1101) + ep1176_109 * log(s_1176 / ic1176) + ep1212_109 * log(s_1212 / ic1212) + ep0456_109 * log(s_0456 / ic0456) + ep0529_109 * log(s_0529 / ic0529) + ep1207_109 * log(s_1207 / ic1207) + ep1302_109 * log(s_1302 / ic1302))) + (2.0 * cell * v0_110 * (1 + ep1101_110 * log(s_1101 / ic1101) + ep1212_110 * log(s_1212 / ic1212) + ep1302_110 * log(s_1302 / ic1302) + ep0456_110 * log(s_0456 / ic0456) + ep0529_110 * log(s_0529 / ic0529) + ep1207_110 * log(s_1207 / ic1207) + ep1454_110 * log(s_1454 / ic1454))) + (cell * v0_119 * (1 + ep0180_119 * log(s_0180 / ic0180) + ep0419_119 * log(s_0419 / ic0419) + ep1212_119 * log(s_1212 / ic1212) + ep0991_119 * log(s_0991 / ic0991) + ep1207_119 * log(s_1207 / ic1207))) + (cell * v0_123 * (1 + ep0754_123 * log(s_0754 / ic0754) + ep1212_123 * log(s_1212 / ic1212) + ep0750_123 * log(s_0750 / ic0750) + ep1207_123 * log(s_1207 / ic1207))) + (cell * v0_145 * (1 + ep0978_145 * log(s_0978 / ic0978) + ep1212_145 * log(s_1212 / ic1212) + ep1014_145 * log(s_1014 / ic1014) + ep1207_145 * log(s_1207 / ic1207))) + (2.0 * cell * v0_149 * (1 + ep0218_149 * log(s_0218 / ic0218) + ep1212_149 * log(s_1212 / ic1212) + ep0028_149 * log(s_0028 / ic0028) + ep0529_149 * log(s_0529 / ic0529) + ep1207_149 * log(s_1207 / ic1207))) + (cell * v0_163 * (1 + ep0039_163 * log(s_0039 / ic0039) + ep1212_163 * log(s_1212 / ic1212) + ep0008_163 * log(s_0008 / ic0008) + ep1207_163 * log(s_1207 / ic1207))) + (cell * v0_165 * (1 + ep0953_165 * log(s_0953 / ic0953) + ep1212_165 * log(s_1212 / ic1212) + ep0959_165 * log(s_0959 / ic0959) + ep1207_165 * log(s_1207 / ic1207))) + (cell * v0_183 * (1 + ep1191_183 * log(s_1191 / ic1191) + ep1212_183 * log(s_1212 / ic1212) + ep0145_183 * log(s_0145 / ic0145) + ep1207_183 * log(s_1207 / ic1207) + ep1322_183 * log(s_1322 / ic1322))) + (cell * v0_222 * (1 + ep1212_222 * log(s_1212 / ic1212) + ep1275_222 * log(s_1275 / ic1275) + ep1445_222 * log(s_1445 / ic1445) + ep1207_222 * log(s_1207 / ic1207) + ep1366_222 * log(s_1366 / ic1366))) + (cell * v0_226 * (1 + ep0118_226 * log(s_0118 / ic0118) + ep1212_226 * log(s_1212 / ic1212) + ep1035_226 * log(s_1035 / ic1035) + ep1207_226 * log(s_1207 / ic1207))) + (cell * v0_241 * (1 + ep0959_241 * log(s_0959 / ic0959) + ep0991_241 * log(s_0991 / ic0991) + ep1212_241 * log(s_1212 / ic1212) + ep1038_241 * log(s_1038 / ic1038) + ep1207_241 * log(s_1207 / ic1207))) + (cell * v0_244 * (1 + ep0211_244 * log(s_0211 / ic0211) + ep1212_244 * log(s_1212 / ic1212) + ep1207_244 * log(s_1207 / ic1207) + ep1429_244 * log(s_1429 / ic1429))) + (cell * v0_247 * (1 + ep1212_247 * log(s_1212 / ic1212) + ep1275_247 * log(s_1275 / ic1275) + ep1447_247 * log(s_1447 / ic1447) + ep0037_247 * log(s_0037 / ic0037) + ep1207_247 * log(s_1207 / ic1207))) + (cell * v0_248 * (1 + ep0190_248 * log(s_0190 / ic0190) + ep1212_248 * log(s_1212 / ic1212) + ep0633_248 * log(s_0633 / ic0633) + ep1207_248 * log(s_1207 / ic1207) + ep1447_248 * log(s_1447 / ic1447))) + (3.0 * cell * v0_251 * (1 + ep1212_251 * log(s_1212 / ic1212) + ep1469_251 * log(s_1469 / ic1469) + ep0841_251 * log(s_0841 / ic0841) + ep1207_251 * log(s_1207 / ic1207))) + (cell * v0_252 * (1 + ep1212_252 * log(s_1212 / ic1212) + ep1620_252 * log(s_1620 / ic1620) + ep1207_252 * log(s_1207 / ic1207) + ep1616_252 * log(s_1616 / ic1616))) - (cell * v0_55 * (1 + ep1207_55 * log(s_1207 / ic1207) + ep1578_55 * log(s_1578 / ic1578) + ep0456_55 * log(s_0456 / ic0456) + ep1212_55 * log(s_1212 / ic1212) + ep1579_55 * log(s_1579 / ic1579))) - (cell * v0_159 * (1 + ep0940_159 * log(s_0940 / ic0940) + ep1207_159 * log(s_1207 / ic1207) + ep0180_159 * log(s_0180 / ic0180) + ep0456_159 * log(s_0456 / ic0456) + ep1212_159 * log(s_1212 / ic1212))) - (cell * v0_178 * (1 + ep0306_178 * log(s_0306 / ic0306) + ep1207_178 * log(s_1207 / ic1207) + ep0304_178 * log(s_0304 / ic0304) + ep1212_178 * log(s_1212 / ic1212))) - (cell * v0_224 * (1 + ep1207_224 * log(s_1207 / ic1207) + ep1377_224 * log(s_1377 / ic1377) + ep0204_224 * log(s_0204 / ic0204) + ep0456_224 * log(s_0456 / ic0456) + ep1212_224 * log(s_1212 / ic1212)));
    der(s_1212) = (cell * v0_55 * (1 + ep1207_55 * log(s_1207 / ic1207) + ep1578_55 * log(s_1578 / ic1578) + ep0456_55 * log(s_0456 / ic0456) + ep1212_55 * log(s_1212 / ic1212) + ep1579_55 * log(s_1579 / ic1579))) + (cell * v0_159 * (1 + ep0940_159 * log(s_0940 / ic0940) + ep1207_159 * log(s_1207 / ic1207) + ep0180_159 * log(s_0180 / ic0180) + ep0456_159 * log(s_0456 / ic0456) + ep1212_159 * log(s_1212 / ic1212))) + (cell * v0_178 * (1 + ep0306_178 * log(s_0306 / ic0306) + ep1207_178 * log(s_1207 / ic1207) + ep0304_178 * log(s_0304 / ic0304) + ep1212_178 * log(s_1212 / ic1212))) + (cell * v0_224 * (1 + ep1207_224 * log(s_1207 / ic1207) + ep1377_224 * log(s_1377 / ic1377) + ep0204_224 * log(s_0204 / ic0204) + ep0456_224 * log(s_0456 / ic0456) + ep1212_224 * log(s_1212 / ic1212))) - (cell * v0_6 * (1 + ep0141_6 * log(s_0141 / ic0141) + ep1212_6 * log(s_1212 / ic1212) + ep0142_6 * log(s_0142 / ic0142) + ep1207_6 * log(s_1207 / ic1207))) - (cell * v0_18 * (1 + ep0231_18 * log(s_0231 / ic0231) + ep1212_18 * log(s_1212 / ic1212) + ep1207_18 * log(s_1207 / ic1207) + ep1445_18 * log(s_1445 / ic1445))) - (cell * v0_23 * (1 + ep0306_23 * log(s_0306 / ic0306) + ep1212_23 * log(s_1212 / ic1212) + ep0322_23 * log(s_0322 / ic0322) + ep1207_23 * log(s_1207 / ic1207))) - (cell * v0_24 * (1 + ep0146_24 * log(s_0146 / ic0146) + ep1212_24 * log(s_1212 / ic1212) + ep0016_24 * log(s_0016 / ic0016) + ep1207_24 * log(s_1207 / ic1207))) - (cell * v0_50 * (1 + ep0295_50 * log(s_0295 / ic0295) + ep1212_50 * log(s_1212 / ic1212) + ep0978_50 * log(s_0978 / ic0978) + ep1207_50 * log(s_1207 / ic1207) + ep1322_50 * log(s_1322 / ic1322))) - (cell * v0_53 * (1 + ep0262_53 * log(s_0262 / ic0262) + ep1212_53 * log(s_1212 / ic1212) + ep0122_53 * log(s_0122 / ic0122) + ep1207_53 * log(s_1207 / ic1207))) - (cell * v0_54 * (1 + ep0664_54 * log(s_0664 / ic0664) + ep1212_54 * log(s_1212 / ic1212) + ep1275_54 * log(s_1275 / ic1275) + ep0662_54 * log(s_0662 / ic0662) + ep1207_54 * log(s_1207 / ic1207))) - (cell * v0_57 * (1 + ep0209_57 * log(s_0209 / ic0209) + ep1212_57 * log(s_1212 / ic1212) + ep0296_57 * log(s_0296 / ic0296) + ep1207_57 * log(s_1207 / ic1207))) - (cell * v0_58 * (1 + ep1212_58 * log(s_1212 / ic1212) + ep1579_58 * log(s_1579 / ic1579) + ep1207_58 * log(s_1207 / ic1207) + ep1569_58 * log(s_1569 / ic1569))) - (cell * v0_59 * (1 + ep0296_59 * log(s_0296 / ic0296) + ep1212_59 * log(s_1212 / ic1212) + ep1275_59 * log(s_1275 / ic1275) + ep1207_59 * log(s_1207 / ic1207) + ep1576_59 * log(s_1576 / ic1576))) - (cell * v0_60 * (1 + ep1212_60 * log(s_1212 / ic1212) + ep1275_60 * log(s_1275 / ic1275) + ep1576_60 * log(s_1576 / ic1576) + ep1207_60 * log(s_1207 / ic1207) + ep1577_60 * log(s_1577 / ic1577))) - (cell * v0_61 * (1 + ep1212_61 * log(s_1212 / ic1212) + ep1275_61 * log(s_1275 / ic1275) + ep1577_61 * log(s_1577 / ic1577) + ep1207_61 * log(s_1207 / ic1207) + ep1578_61 * log(s_1578 / ic1578))) - (3.0 * cell * v0_62 * (1 + ep0122_62 * log(s_0122 / ic0122) + ep1212_62 * log(s_1212 / ic1212) + ep1275_62 * log(s_1275 / ic1275) + ep0297_62 * log(s_0297 / ic0297) + ep1207_62 * log(s_1207 / ic1207))) - (cell * v0_63 * (1 + ep0657_63 * log(s_0657 / ic0657) + ep1212_63 * log(s_1212 / ic1212) + ep1275_63 * log(s_1275 / ic1275) + ep0664_63 * log(s_0664 / ic0664) + ep1207_63 * log(s_1207 / ic1207))) - (cell * v0_65 * (1 + ep0662_65 * log(s_0662 / ic0662) + ep1212_65 * log(s_1212 / ic1212) + ep0666_65 * log(s_0666 / ic0666) + ep1207_65 * log(s_1207 / ic1207))) - (cell * v0_68 * (1 + ep0475_68 * log(s_0475 / ic0475) + ep1212_68 * log(s_1212 / ic1212) + ep1275_68 * log(s_1275 / ic1275) + ep0481_68 * log(s_0481 / ic0481) + ep1207_68 * log(s_1207 / ic1207))) - (cell * v0_69 * (1 + ep0481_69 * log(s_0481 / ic0481) + ep1212_69 * log(s_1212 / ic1212) + ep1275_69 * log(s_1275 / ic1275) + ep0493_69 * log(s_0493 / ic0493) + ep1207_69 * log(s_1207 / ic1207))) - (cell * v0_70 * (1 + ep0493_70 * log(s_0493 / ic0493) + ep1212_70 * log(s_1212 / ic1212) + ep1275_70 * log(s_1275 / ic1275) + ep0499_70 * log(s_0499 / ic0499) + ep1207_70 * log(s_1207 / ic1207))) - (3.0 * cell * v0_81 * (1 + ep1059_81 * log(s_1059 / ic1059) + ep1212_81 * log(s_1212 / ic1212) + ep1275_81 * log(s_1275 / ic1275) + ep0262_81 * log(s_0262 / ic0262) + ep0722_81 * log(s_0722 / ic0722) + ep1207_81 * log(s_1207 / ic1207))) - (cell * v0_88 * (1 + ep0625_88 * log(s_0625 / ic0625) + ep1212_88 * log(s_1212 / ic1212) + ep1207_88 * log(s_1207 / ic1207) + ep1487_88 * log(s_1487 / ic1487))) - (2.0 * cell * v0_97 * (1 + ep0595_97 * log(s_0595 / ic0595) + ep1101_97 * log(s_1101 / ic1101) + ep1212_97 * log(s_1212 / ic1212) + ep0456_97 * log(s_0456 / ic0456) + ep0529_97 * log(s_0529 / ic0529) + ep1065_97 * log(s_1065 / ic1065) + ep1207_97 * log(s_1207 / ic1207))) - (2.0 * cell * v0_98 * (1 + ep1065_98 * log(s_1065 / ic1065) + ep1101_98 * log(s_1101 / ic1101) + ep1212_98 * log(s_1212 / ic1212) + ep0456_98 * log(s_0456 / ic0456) + ep0529_98 * log(s_0529 / ic0529) + ep1161_98 * log(s_1161 / ic1161) + ep1207_98 * log(s_1207 / ic1207))) - (2.0 * cell * v0_99 * (1 + ep1101_99 * log(s_1101 / ic1101) + ep1161_99 * log(s_1161 / ic1161) + ep1212_99 * log(s_1212 / ic1212) + ep0456_99 * log(s_0456 / ic0456) + ep0529_99 * log(s_0529 / ic0529) + ep1207_99 * log(s_1207 / ic1207) + ep1286_99 * log(s_1286 / ic1286))) - (2.0 * cell * v0_100 * (1 + ep1101_100 * log(s_1101 / ic1101) + ep1212_100 * log(s_1212 / ic1212) + ep1286_100 * log(s_1286 / ic1286) + ep0456_100 * log(s_0456 / ic0456) + ep0529_100 * log(s_0529 / ic0529) + ep1207_100 * log(s_1207 / ic1207) + ep1449_100 * log(s_1449 / ic1449))) - (6.0 * cell * v0_101 * (1 + ep1101_101 * log(s_1101 / ic1101) + ep1212_101 * log(s_1212 / ic1212) + ep1449_101 * log(s_1449 / ic1449) + ep0456_101 * log(s_0456 / ic0456) + ep0529_101 * log(s_0529 / ic0529) + ep1084_101 * log(s_1084 / ic1084) + ep1207_101 * log(s_1207 / ic1207))) - (2.0 * cell * v0_102 * (1 + ep1101_102 * log(s_1101 / ic1101) + ep1212_102 * log(s_1212 / ic1212) + ep1255_102 * log(s_1255 / ic1255) + ep0456_102 * log(s_0456 / ic0456) + ep0529_102 * log(s_0529 / ic0529) + ep0602_102 * log(s_0602 / ic0602) + ep1207_102 * log(s_1207 / ic1207))) - (6.0 * cell * v0_103 * (1 + ep0373_103 * log(s_0373 / ic0373) + ep1101_103 * log(s_1101 / ic1101) + ep1212_103 * log(s_1212 / ic1212) + ep0456_103 * log(s_0456 / ic0456) + ep0529_103 * log(s_0529 / ic0529) + ep1207_103 * log(s_1207 / ic1207) + ep1255_103 * log(s_1255 / ic1255))) - (2.0 * cell * v0_107 * (1 + ep0602_107 * log(s_0602 / ic0602) + ep1101_107 * log(s_1101 / ic1101) + ep1212_107 * log(s_1212 / ic1212) + ep0456_107 * log(s_0456 / ic0456) + ep0529_107 * log(s_0529 / ic0529) + ep1073_107 * log(s_1073 / ic1073) + ep1207_107 * log(s_1207 / ic1207))) - (2.0 * cell * v0_108 * (1 + ep1073_108 * log(s_1073 / ic1073) + ep1101_108 * log(s_1101 / ic1101) + ep1212_108 * log(s_1212 / ic1212) + ep0456_108 * log(s_0456 / ic0456) + ep0529_108 * log(s_0529 / ic0529) + ep1176_108 * log(s_1176 / ic1176) + ep1207_108 * log(s_1207 / ic1207))) - (2.0 * cell * v0_109 * (1 + ep1101_109 * log(s_1101 / ic1101) + ep1176_109 * log(s_1176 / ic1176) + ep1212_109 * log(s_1212 / ic1212) + ep0456_109 * log(s_0456 / ic0456) + ep0529_109 * log(s_0529 / ic0529) + ep1207_109 * log(s_1207 / ic1207) + ep1302_109 * log(s_1302 / ic1302))) - (2.0 * cell * v0_110 * (1 + ep1101_110 * log(s_1101 / ic1101) + ep1212_110 * log(s_1212 / ic1212) + ep1302_110 * log(s_1302 / ic1302) + ep0456_110 * log(s_0456 / ic0456) + ep0529_110 * log(s_0529 / ic0529) + ep1207_110 * log(s_1207 / ic1207) + ep1454_110 * log(s_1454 / ic1454))) - (cell * v0_119 * (1 + ep0180_119 * log(s_0180 / ic0180) + ep0419_119 * log(s_0419 / ic0419) + ep1212_119 * log(s_1212 / ic1212) + ep0991_119 * log(s_0991 / ic0991) + ep1207_119 * log(s_1207 / ic1207))) - (cell * v0_123 * (1 + ep0754_123 * log(s_0754 / ic0754) + ep1212_123 * log(s_1212 / ic1212) + ep0750_123 * log(s_0750 / ic0750) + ep1207_123 * log(s_1207 / ic1207))) - (cell * v0_145 * (1 + ep0978_145 * log(s_0978 / ic0978) + ep1212_145 * log(s_1212 / ic1212) + ep1014_145 * log(s_1014 / ic1014) + ep1207_145 * log(s_1207 / ic1207))) - (2.0 * cell * v0_149 * (1 + ep0218_149 * log(s_0218 / ic0218) + ep1212_149 * log(s_1212 / ic1212) + ep0028_149 * log(s_0028 / ic0028) + ep0529_149 * log(s_0529 / ic0529) + ep1207_149 * log(s_1207 / ic1207))) - (cell * v0_163 * (1 + ep0039_163 * log(s_0039 / ic0039) + ep1212_163 * log(s_1212 / ic1212) + ep0008_163 * log(s_0008 / ic0008) + ep1207_163 * log(s_1207 / ic1207))) - (cell * v0_165 * (1 + ep0953_165 * log(s_0953 / ic0953) + ep1212_165 * log(s_1212 / ic1212) + ep0959_165 * log(s_0959 / ic0959) + ep1207_165 * log(s_1207 / ic1207))) - (cell * v0_183 * (1 + ep1191_183 * log(s_1191 / ic1191) + ep1212_183 * log(s_1212 / ic1212) + ep0145_183 * log(s_0145 / ic0145) + ep1207_183 * log(s_1207 / ic1207) + ep1322_183 * log(s_1322 / ic1322))) - (cell * v0_222 * (1 + ep1212_222 * log(s_1212 / ic1212) + ep1275_222 * log(s_1275 / ic1275) + ep1445_222 * log(s_1445 / ic1445) + ep1207_222 * log(s_1207 / ic1207) + ep1366_222 * log(s_1366 / ic1366))) - (cell * v0_226 * (1 + ep0118_226 * log(s_0118 / ic0118) + ep1212_226 * log(s_1212 / ic1212) + ep1035_226 * log(s_1035 / ic1035) + ep1207_226 * log(s_1207 / ic1207))) - (cell * v0_241 * (1 + ep0959_241 * log(s_0959 / ic0959) + ep0991_241 * log(s_0991 / ic0991) + ep1212_241 * log(s_1212 / ic1212) + ep1038_241 * log(s_1038 / ic1038) + ep1207_241 * log(s_1207 / ic1207))) - (cell * v0_244 * (1 + ep0211_244 * log(s_0211 / ic0211) + ep1212_244 * log(s_1212 / ic1212) + ep1207_244 * log(s_1207 / ic1207) + ep1429_244 * log(s_1429 / ic1429))) - (cell * v0_247 * (1 + ep1212_247 * log(s_1212 / ic1212) + ep1275_247 * log(s_1275 / ic1275) + ep1447_247 * log(s_1447 / ic1447) + ep0037_247 * log(s_0037 / ic0037) + ep1207_247 * log(s_1207 / ic1207))) - (cell * v0_248 * (1 + ep0190_248 * log(s_0190 / ic0190) + ep1212_248 * log(s_1212 / ic1212) + ep0633_248 * log(s_0633 / ic0633) + ep1207_248 * log(s_1207 / ic1207) + ep1447_248 * log(s_1447 / ic1447))) - (3.0 * cell * v0_251 * (1 + ep1212_251 * log(s_1212 / ic1212) + ep1469_251 * log(s_1469 / ic1469) + ep0841_251 * log(s_0841 / ic0841) + ep1207_251 * log(s_1207 / ic1207))) - (cell * v0_252 * (1 + ep1212_252 * log(s_1212 / ic1212) + ep1620_252 * log(s_1620 / ic1620) + ep1207_252 * log(s_1207 / ic1207) + ep1616_252 * log(s_1616 / ic1616)));
    der(s_1233) = (cell * v0_147 * (1 + ep0373_147 * log(s_0373 / ic0373) + ep1014_147 * log(s_1014 / ic1014) + ep0529_147 * log(s_0529 / ic0529) + ep1233_147 * log(s_1233 / ic1233))) - (cell * v0_79 * (1 + ep0981_79 * log(s_0981 / ic0981) + ep1233_79 * log(s_1233 / ic1233) + ep0362_79 * log(s_0362 / ic0362) + ep0980_79 * log(s_0980 / ic0980))) - (cell * v0_188 * (1 + ep0841_188 * log(s_0841 / ic0841) + ep1233_188 * log(s_1233 / ic1233) + ep0362_188 * log(s_0362 / ic0362) + ep1012_188 * log(s_1012 / ic1012)));
    der(s_1238) = (cell * v0_146 * (1 + ep0434_146 * log(s_0434 / ic0434) + ep1014_146 * log(s_1014 / ic1014) + ep0394_146 * log(s_0394 / ic0394) + ep1238_146 * log(s_1238 / ic1238))) - (cell * v0_253 * (1 + ep1238_253 * log(s_1238 / ic1238) + ep1045_253 * log(s_1045 / ic1045) + ep1322_253 * log(s_1322 / ic1322)));
    der(s_1255) = (cell * v0_103 * (1 + ep0373_103 * log(s_0373 / ic0373) + ep1101_103 * log(s_1101 / ic1101) + ep1212_103 * log(s_1212 / ic1212) + ep0456_103 * log(s_0456 / ic0456) + ep0529_103 * log(s_0529 / ic0529) + ep1207_103 * log(s_1207 / ic1207) + ep1255_103 * log(s_1255 / ic1255))) - (cell * v0_102 * (1 + ep1101_102 * log(s_1101 / ic1101) + ep1212_102 * log(s_1212 / ic1212) + ep1255_102 * log(s_1255 / ic1255) + ep0456_102 * log(s_0456 / ic0456) + ep0529_102 * log(s_0529 / ic0529) + ep0602_102 * log(s_0602 / ic0602) + ep1207_102 * log(s_1207 / ic1207)));
    der(s_1266) = (cell * v0_190 * (1 + ep0991_190 * log(s_0991 / ic0991) + ep1182_190 * log(s_1182 / ic1182) + ep1192_190 * log(s_1192 / ic1192) + ep1266_190 * log(s_1266 / ic1266))) - (cell * v0_189 * (1 + ep0455_189 * log(s_0455 / ic0455) + ep1266_189 * log(s_1266 / ic1266) + ep0979_189 * log(s_0979 / ic0979) + ep1322_189 * log(s_1322 / ic1322)));
    der(s_1269) = (cell * v0_86 * (1 + ep0061_86 * log(s_0061 / ic0061) + ep1275_86 * log(s_1275 / ic1275) + ep0837_86 * log(s_0837 / ic0837) + ep1269_86 * log(s_1269 / ic1269))) - (cell * v0_191 * (1 + ep1269_191 * log(s_1269 / ic1269) + ep1386_191 * log(s_1386 / ic1386) + ep0633_191 * log(s_0633 / ic0633) + ep1270_191 * log(s_1270 / ic1270)));
    der(s_1270) = (cell * v0_191 * (1 + ep1269_191 * log(s_1269 / ic1269) + ep1386_191 * log(s_1386 / ic1386) + ep0633_191 * log(s_0633 / ic0633) + ep1270_191 * log(s_1270 / ic1270))) - (cell * v0_192 * (1 + ep1270_192 * log(s_1270 / ic1270) + ep0456_192 * log(s_0456 / ic0456) + ep1545_192 * log(s_1545 / ic1545)));
    der(s_1271) = (cell * v0_170 * (1 + ep0066_170 * log(s_0066 / ic0066) + ep1198_170 * log(s_1198 / ic1198) + ep1203_170 * log(s_1203 / ic1203) + ep1271_170 * log(s_1271 / ic1271))) + (cell * v0_227 * (1 + ep0434_227 * log(s_0434 / ic0434) + ep0445_227 * log(s_0445 / ic0445) + ep1399_227 * log(s_1399 / ic1399) + ep0394_227 * log(s_0394 / ic0394) + ep1271_227 * log(s_1271 / ic1271) + ep1322_227 * log(s_1322 / ic1322))) - (cell * v0_49 * (1 + ep0991_49 * log(s_0991 / ic0991) + ep1271_49 * log(s_1271 / ic1271) + ep0180_49 * log(s_0180 / ic0180) + ep0973_49 * log(s_0973 / ic0973))) - (cell * v0_74 * (1 + ep0373_74 * log(s_0373 / ic0373) + ep1271_74 * log(s_1271 / ic1271) + ep0522_74 * log(s_0522 / ic0522) + ep0529_74 * log(s_0529 / ic0529)));
    der(s_1275) = (cell * v0_279 * (1 + ep1277_279 * log(s_1277 / ic1277) + ep1275_279 * log(s_1275 / ic1275))) - (cell * v0_54 * (1 + ep0664_54 * log(s_0664 / ic0664) + ep1212_54 * log(s_1212 / ic1212) + ep1275_54 * log(s_1275 / ic1275) + ep0662_54 * log(s_0662 / ic0662) + ep1207_54 * log(s_1207 / ic1207))) - (cell * v0_59 * (1 + ep0296_59 * log(s_0296 / ic0296) + ep1212_59 * log(s_1212 / ic1212) + ep1275_59 * log(s_1275 / ic1275) + ep1207_59 * log(s_1207 / ic1207) + ep1576_59 * log(s_1576 / ic1576))) - (cell * v0_60 * (1 + ep1212_60 * log(s_1212 / ic1212) + ep1275_60 * log(s_1275 / ic1275) + ep1576_60 * log(s_1576 / ic1576) + ep1207_60 * log(s_1207 / ic1207) + ep1577_60 * log(s_1577 / ic1577))) - (cell * v0_61 * (1 + ep1212_61 * log(s_1212 / ic1212) + ep1275_61 * log(s_1275 / ic1275) + ep1577_61 * log(s_1577 / ic1577) + ep1207_61 * log(s_1207 / ic1207) + ep1578_61 * log(s_1578 / ic1578))) - (3.0 * cell * v0_62 * (1 + ep0122_62 * log(s_0122 / ic0122) + ep1212_62 * log(s_1212 / ic1212) + ep1275_62 * log(s_1275 / ic1275) + ep0297_62 * log(s_0297 / ic0297) + ep1207_62 * log(s_1207 / ic1207))) - (cell * v0_63 * (1 + ep0657_63 * log(s_0657 / ic0657) + ep1212_63 * log(s_1212 / ic1212) + ep1275_63 * log(s_1275 / ic1275) + ep0664_63 * log(s_0664 / ic0664) + ep1207_63 * log(s_1207 / ic1207))) - (cell * v0_68 * (1 + ep0475_68 * log(s_0475 / ic0475) + ep1212_68 * log(s_1212 / ic1212) + ep1275_68 * log(s_1275 / ic1275) + ep0481_68 * log(s_0481 / ic0481) + ep1207_68 * log(s_1207 / ic1207))) - (cell * v0_69 * (1 + ep0481_69 * log(s_0481 / ic0481) + ep1212_69 * log(s_1212 / ic1212) + ep1275_69 * log(s_1275 / ic1275) + ep0493_69 * log(s_0493 / ic0493) + ep1207_69 * log(s_1207 / ic1207))) - (cell * v0_70 * (1 + ep0493_70 * log(s_0493 / ic0493) + ep1212_70 * log(s_1212 / ic1212) + ep1275_70 * log(s_1275 / ic1275) + ep0499_70 * log(s_0499 / ic0499) + ep1207_70 * log(s_1207 / ic1207))) - (3.0 * cell * v0_81 * (1 + ep1059_81 * log(s_1059 / ic1059) + ep1212_81 * log(s_1212 / ic1212) + ep1275_81 * log(s_1275 / ic1275) + ep0262_81 * log(s_0262 / ic0262) + ep0722_81 * log(s_0722 / ic0722) + ep1207_81 * log(s_1207 / ic1207))) - (cell * v0_86 * (1 + ep0061_86 * log(s_0061 / ic0061) + ep1275_86 * log(s_1275 / ic1275) + ep0837_86 * log(s_0837 / ic0837) + ep1269_86 * log(s_1269 / ic1269))) - (cell * v0_111 * (1 + ep0710_111 * log(s_0710 / ic0710) + ep1275_111 * log(s_1275 / ic1275) + ep0709_111 * log(s_0709 / ic0709))) - (cell * v0_222 * (1 + ep1212_222 * log(s_1212 / ic1212) + ep1275_222 * log(s_1275 / ic1275) + ep1445_222 * log(s_1445 / ic1445) + ep1207_222 * log(s_1207 / ic1207) + ep1366_222 * log(s_1366 / ic1366))) - (cell * v0_246 * (1 + ep1203_246 * log(s_1203 / ic1203) + ep1275_246 * log(s_1275 / ic1275) + ep1447_246 * log(s_1447 / ic1447) + ep0037_246 * log(s_0037 / ic0037) + ep1198_246 * log(s_1198 / ic1198))) - (cell * v0_247 * (1 + ep1212_247 * log(s_1212 / ic1212) + ep1275_247 * log(s_1275 / ic1275) + ep1447_247 * log(s_1447 / ic1447) + ep0037_247 * log(s_0037 / ic0037) + ep1207_247 * log(s_1207 / ic1207)));
    der(s_1277) = 0.0;
    der(s_1286) = (cell * v0_99 * (1 + ep1101_99 * log(s_1101 / ic1101) + ep1161_99 * log(s_1161 / ic1161) + ep1212_99 * log(s_1212 / ic1212) + ep0456_99 * log(s_0456 / ic0456) + ep0529_99 * log(s_0529 / ic0529) + ep1207_99 * log(s_1207 / ic1207) + ep1286_99 * log(s_1286 / ic1286))) - (cell * v0_100 * (1 + ep1101_100 * log(s_1101 / ic1101) + ep1212_100 * log(s_1212 / ic1212) + ep1286_100 * log(s_1286 / ic1286) + ep0456_100 * log(s_0456 / ic0456) + ep0529_100 * log(s_0529 / ic0529) + ep1207_100 * log(s_1207 / ic1207) + ep1449_100 * log(s_1449 / ic1449)));
    der(s_1302) = (cell * v0_109 * (1 + ep1101_109 * log(s_1101 / ic1101) + ep1176_109 * log(s_1176 / ic1176) + ep1212_109 * log(s_1212 / ic1212) + ep0456_109 * log(s_0456 / ic0456) + ep0529_109 * log(s_0529 / ic0529) + ep1207_109 * log(s_1207 / ic1207) + ep1302_109 * log(s_1302 / ic1302))) - (cell * v0_110 * (1 + ep1101_110 * log(s_1101 / ic1101) + ep1212_110 * log(s_1212 / ic1212) + ep1302_110 * log(s_1302 / ic1302) + ep0456_110 * log(s_0456 / ic0456) + ep0529_110 * log(s_0529 / ic0529) + ep1207_110 * log(s_1207 / ic1207) + ep1454_110 * log(s_1454 / ic1454))) - (cell * v0_242 * (1 + ep1039_242 * log(s_1039 / ic1039) + ep1302_242 * log(s_1302 / ic1302) + ep0231_242 * log(s_0231 / ic0231) + ep0456_242 * log(s_0456 / ic0456) + ep0529_242 * log(s_0529 / ic0529)));
    der(s_1314) = (cell * v0_194 * (1 + ep0434_194 * log(s_0434 / ic0434) + ep1032_194 * log(s_1032 / ic1032) + ep1604_194 * log(s_1604 / ic1604) + ep0423_194 * log(s_0423 / ic0423) + ep0633_194 * log(s_0633 / ic0633) + ep1314_194 * log(s_1314 / ic1314))) - (0.1339 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_1322) = (cell * v0_9 * (1 + ep0551_9 * log(s_0551 / ic0551) + ep1360_9 * log(s_1360 / ic1360) + ep0349_9 * log(s_0349 / ic0349) + ep1322_9 * log(s_1322 / ic1322))) + (cell * v0_14 * (1 + ep0390_14 * log(s_0390 / ic0390) + ep0423_14 * log(s_0423 / ic0423) + ep1322_14 * log(s_1322 / ic1322))) + (cell * v0_17 * (1 + ep0349_17 * log(s_0349 / ic0349) + ep0210_17 * log(s_0210 / ic0210) + ep1322_17 * log(s_1322 / ic1322))) + (cell * v0_21 * (1 + ep0261_21 * log(s_0261 / ic0261) + ep1360_21 * log(s_1360 / ic1360) + ep0324_21 * log(s_0324 / ic0324) + ep1322_21 * log(s_1322 / ic1322))) + (cell * v0_22 * (1 + ep0301_22 * log(s_0301 / ic0301) + ep0434_22 * log(s_0434 / ic0434) + ep0999_22 * log(s_0999 / ic0999) + ep0302_22 * log(s_0302 / ic0302) + ep0394_22 * log(s_0394 / ic0394) + ep0991_22 * log(s_0991 / ic0991) + ep1322_22 * log(s_1322 / ic1322))) + (cell * v0_27 * (1 + ep0373_27 * log(s_0373 / ic0373) + ep0434_27 * log(s_0434 / ic0434) + ep0445_27 * log(s_0445 / ic0445) + ep0394_27 * log(s_0394 / ic0394) + ep1101_27 * log(s_1101 / ic1101) + ep1322_27 * log(s_1322 / ic1322))) + (cell * v0_36 * (1 + ep0785_36 * log(s_0785 / ic0785) + ep0849_36 * log(s_0849 / ic0849) + ep0973_36 * log(s_0973 / ic0973) + ep0393_36 * log(s_0393 / ic0393) + ep0739_36 * log(s_0739 / ic0739) + ep1322_36 * log(s_1322 / ic1322))) + (cell * v0_47 * (1 + ep0455_47 * log(s_0455 / ic0455) + ep0973_47 * log(s_0973 / ic0973) + ep1194_47 * log(s_1194 / ic1194) + ep1322_47 * log(s_1322 / ic1322))) + (cell * v0_50 * (1 + ep0295_50 * log(s_0295 / ic0295) + ep1212_50 * log(s_1212 / ic1212) + ep0978_50 * log(s_0978 / ic0978) + ep1207_50 * log(s_1207 / ic1207) + ep1322_50 * log(s_1322 / ic1322))) + (cell * v0_66 * (1 + ep0434_66 * log(s_0434 / ic0434) + ep0445_66 * log(s_0445 / ic0445) + ep0999_66 * log(s_0999 / ic0999) + ep0394_66 * log(s_0394 / ic0394) + ep0455_66 * log(s_0455 / ic0455) + ep0991_66 * log(s_0991 / ic0991) + ep1322_66 * log(s_1322 / ic1322))) + (cell * v0_72 * (1 + ep0324_72 * log(s_0324 / ic0324) + ep0515_72 * log(s_0515 / ic0515) + ep1322_72 * log(s_1322 / ic1322))) + (cell * v0_76 * (1 + ep0419_76 * log(s_0419 / ic0419) + ep0434_76 * log(s_0434 / ic0434) + ep1559_76 * log(s_1559 / ic1559) + ep0394_76 * log(s_0394 / ic0394) + ep0539_76 * log(s_0539 / ic0539) + ep1322_76 * log(s_1322 / ic1322))) + (cell * v0_85 * (1 + ep1331_85 * log(s_1331 / ic1331) + ep0619_85 * log(s_0619 / ic0619) + ep1322_85 * log(s_1322 / ic1322))) + (cell * v0_120 * (1 + ep0419_120 * log(s_0419 / ic0419) + ep0434_120 * log(s_0434 / ic0434) + ep0991_120 * log(s_0991 / ic0991) + ep0394_120 * log(s_0394 / ic0394) + ep0999_120 * log(s_0999 / ic0999) + ep1322_120 * log(s_1322 / ic1322))) + (cell * v0_139 * (1 + ep1011_139 * log(s_1011 / ic1011) + ep1010_139 * log(s_1010 / ic1010) + ep1322_139 * log(s_1322 / ic1322))) + (2.0 * cell * v0_155 * (1 + ep0633_155 * log(s_0633 / ic0633) + ep1322_155 * log(s_1322 / ic1322))) + (cell * v0_174 * (1 + ep0434_174 * log(s_0434 / ic0434) + ep1029_174 * log(s_1029 / ic1029) + ep0633_174 * log(s_0633 / ic0633) + ep1322_174 * log(s_1322 / ic1322) + ep1416_174 * log(s_1416 / ic1416))) + (cell * v0_180 * (1 + ep0018_180 * log(s_0018 / ic0018) + ep0434_180 * log(s_0434 / ic0434) + ep0394_180 * log(s_0394 / ic0394) + ep0456_180 * log(s_0456 / ic0456) + ep0943_180 * log(s_0943 / ic0943) + ep1322_180 * log(s_1322 / ic1322))) + (cell * v0_181 * (1 + ep0126_181 * log(s_0126 / ic0126) + ep1153_181 * log(s_1153 / ic1153) + ep1322_181 * log(s_1322 / ic1322))) + (cell * v0_183 * (1 + ep1191_183 * log(s_1191 / ic1191) + ep1212_183 * log(s_1212 / ic1212) + ep0145_183 * log(s_0145 / ic0145) + ep1207_183 * log(s_1207 / ic1207) + ep1322_183 * log(s_1322 / ic1322))) + (cell * v0_185 * (1 + ep0467_185 * log(s_0467 / ic0467) + ep0526_185 * log(s_0526 / ic0526) + ep1322_185 * log(s_1322 / ic1322))) + (cell * v0_189 * (1 + ep0455_189 * log(s_0455 / ic0455) + ep1266_189 * log(s_1266 / ic1266) + ep0979_189 * log(s_0979 / ic0979) + ep1322_189 * log(s_1322 / ic1322))) + (cell * v0_195 * (1 + ep0302_195 * log(s_0302 / ic0302) + ep0434_195 * log(s_0434 / ic0434) + ep0300_195 * log(s_0300 / ic0300) + ep0394_195 * log(s_0394 / ic0394) + ep1322_195 * log(s_1322 / ic1322))) + (cell * v0_210 * (1 + ep0434_210 * log(s_0434 / ic0434) + ep0973_210 * log(s_0973 / ic0973) + ep1364_210 * log(s_1364 / ic1364) + ep0299_210 * log(s_0299 / ic0299) + ep0394_210 * log(s_0394 / ic0394) + ep1322_210 * log(s_1322 / ic1322))) + (cell * v0_213 * (1 + ep0300_213 * log(s_0300 / ic0300) + ep0456_213 * log(s_0456 / ic0456) + ep0434_213 * log(s_0434 / ic0434) + ep1364_213 * log(s_1364 / ic1364) + ep0394_213 * log(s_0394 / ic0394) + ep1322_213 * log(s_1322 / ic1322))) + (cell * v0_216 * (1 + ep0327_216 * log(s_0327 / ic0327) + ep0434_216 * log(s_0434 / ic0434) + ep1003_216 * log(s_1003 / ic1003) + ep0325_216 * log(s_0325 / ic0325) + ep0394_216 * log(s_0394 / ic0394) + ep1322_216 * log(s_1322 / ic1322))) + (cell * v0_219 * (1 + ep0259_219 * log(s_0259 / ic0259) + ep1039_219 * log(s_1039 / ic1039) + ep1322_219 * log(s_1322 / ic1322))) + (cell * v0_227 * (1 + ep0434_227 * log(s_0434 / ic0434) + ep0445_227 * log(s_0445 / ic0445) + ep1399_227 * log(s_1399 / ic1399) + ep0394_227 * log(s_0394 / ic0394) + ep1271_227 * log(s_1271 / ic1271) + ep1322_227 * log(s_1322 / ic1322))) + (cell * v0_230 * (1 + ep0158_230 * log(s_0158 / ic0158) + ep0314_230 * log(s_0314 / ic0314) + ep0328_230 * log(s_0328 / ic0328) + ep1322_230 * log(s_1322 / ic1322))) + (cell * v0_250 * (1 + ep0394_250 * log(s_0394 / ic0394) + ep1467_250 * log(s_1467 / ic1467) + ep0298_250 * log(s_0298 / ic0298) + ep1322_250 * log(s_1322 / ic1322))) + (cell * v0_253 * (1 + ep1238_253 * log(s_1238 / ic1238) + ep1045_253 * log(s_1045 / ic1045) + ep1322_253 * log(s_1322 / ic1322))) + (cell * v0_259 * (1 + ep0409_259 * log(s_0409 / ic0409) + ep1322_259 * log(s_1322 / ic1322) + ep1520_259 * log(s_1520 / ic1520))) + (cell * v0_272 * (1 + ep1324_272 * log(s_1324 / ic1324) + ep1322_272 * log(s_1322 / ic1322))) + (cell * v0_280 * (1 + ep0313_280 * log(s_0313 / ic0313) + ep0314_280 * log(s_0314 / ic0314) + ep1322_280 * log(s_1322 / ic1322))) + (58.70001 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux)) - (cell * v0_113 * (1 + ep0120_113 * log(s_0120 / ic0120) + ep0394_113 * log(s_0394 / ic0394) + ep1322_113 * log(s_1322 / ic1322) + ep0434_113 * log(s_0434 / ic0434) + ep0722_113 * log(s_0722 / ic0722) + ep1487_113 * log(s_1487 / ic1487))) - (cell * v0_125 * (1 + ep0764_125 * log(s_0764 / ic0764) + ep1198_125 * log(s_1198 / ic1198) + ep1322_125 * log(s_1322 / ic1322) + ep0075_125 * log(s_0075 / ic0075) + ep1203_125 * log(s_1203 / ic1203)));
    der(s_1324) = 0.0;
    der(s_1331) = (cell * v0_3 * (1 + ep0082_3 * log(s_0082 / ic0082) + ep0380_3 * log(s_0380 / ic0380) + ep0529_3 * log(s_0529 / ic0529) + ep1331_3 * log(s_1331 / ic1331))) - (cell * v0_67 * (1 + ep0539_67 * log(s_0539 / ic0539) + ep1331_67 * log(s_1331 / ic1331) + ep0471_67 * log(s_0471 / ic0471) + ep0633_67 * log(s_0633 / ic0633))) - (cell * v0_85 * (1 + ep1331_85 * log(s_1331 / ic1331) + ep0619_85 * log(s_0619 / ic0619) + ep1322_85 * log(s_1322 / ic1322)));
    der(s_1337) = (cell * v0_199 * (1 + ep0471_199 * log(s_0471 / ic0471) + ep1039_199 * log(s_1039 / ic1039) + ep0526_199 * log(s_0526 / ic0526) + ep1337_199 * log(s_1337 / ic1337))) - (cell * v0_198 * (1 + ep1337_198 * log(s_1337 / ic1337) + ep0456_198 * log(s_0456 / ic0456) + ep1351_198 * log(s_1351 / ic1351))) - (0.00039 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_1342) = (cell * v0_207 * (1 + ep1343_207 * log(s_1343 / ic1343) + ep1416_207 * log(s_1416 / ic1416) + ep1342_207 * log(s_1342 / ic1342) + ep1413_207 * log(s_1413 / ic1413))) - (cell * v0_206 * (1 + ep1342_206 * log(s_1342 / ic1342) + ep1416_206 * log(s_1416 / ic1416) + ep1346_206 * log(s_1346 / ic1346) + ep1413_206 * log(s_1413 / ic1413)));
    der(s_1343) = (cell * v0_196 * (1 + ep1351_196 * log(s_1351 / ic1351) + ep1416_196 * log(s_1416 / ic1416) + ep1343_196 * log(s_1343 / ic1343) + ep1413_196 * log(s_1413 / ic1413))) - (cell * v0_207 * (1 + ep1343_207 * log(s_1343 / ic1343) + ep1416_207 * log(s_1416 / ic1416) + ep1342_207 * log(s_1342 / ic1342) + ep1413_207 * log(s_1413 / ic1413)));
    der(s_1346) = (cell * v0_206 * (1 + ep1342_206 * log(s_1342 / ic1342) + ep1416_206 * log(s_1416 / ic1416) + ep1346_206 * log(s_1346 / ic1346) + ep1413_206 * log(s_1413 / ic1413))) - (0.00288 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_1351) = (cell * v0_198 * (1 + ep1337_198 * log(s_1337 / ic1337) + ep0456_198 * log(s_0456 / ic0456) + ep1351_198 * log(s_1351 / ic1351))) - (cell * v0_196 * (1 + ep1351_196 * log(s_1351 / ic1351) + ep1416_196 * log(s_1416 / ic1416) + ep1343_196 * log(s_1343 / ic1343) + ep1413_196 * log(s_1413 / ic1413))) - (0.000697 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_1360) = (cell * v0_96 * (1 + ep0188_96 * log(s_0188 / ic0188) + ep1360_96 * log(s_1360 / ic1360))) - (cell * v0_9 * (1 + ep0551_9 * log(s_0551 / ic0551) + ep1360_9 * log(s_1360 / ic1360) + ep0349_9 * log(s_0349 / ic0349) + ep1322_9 * log(s_1322 / ic1322))) - (cell * v0_21 * (1 + ep0261_21 * log(s_0261 / ic0261) + ep1360_21 * log(s_1360 / ic1360) + ep0324_21 * log(s_0324 / ic0324) + ep1322_21 * log(s_1322 / ic1322))) - (cell * v0_229 * (1 + ep0394_229 * log(s_0394 / ic0394) + ep1360_229 * log(s_1360 / ic1360) + ep0434_229 * log(s_0434 / ic0434) + ep1399_229 * log(s_1399 / ic1399)));
    der(s_1364) = (cell * v0_213 * (1 + ep0300_213 * log(s_0300 / ic0300) + ep0456_213 * log(s_0456 / ic0456) + ep0434_213 * log(s_0434 / ic0434) + ep1364_213 * log(s_1364 / ic1364) + ep0394_213 * log(s_0394 / ic0394) + ep1322_213 * log(s_1322 / ic1322))) - (cell * v0_210 * (1 + ep0434_210 * log(s_0434 / ic0434) + ep0973_210 * log(s_0973 / ic0973) + ep1364_210 * log(s_1364 / ic1364) + ep0299_210 * log(s_0299 / ic0299) + ep0394_210 * log(s_0394 / ic0394) + ep1322_210 * log(s_1322 / ic1322)));
    der(s_1365) = (cell * v0_214 * (1 + ep0120_214 * log(s_0120 / ic0120) + ep0403_214 * log(s_0403 / ic0403) + ep1365_214 * log(s_1365 / ic1365) + ep1487_214 * log(s_1487 / ic1487))) - (cell * v0_156 * (1 + ep1365_156 * log(s_1365 / ic1365) + ep0849_156 * log(s_0849 / ic0849)));
    der(s_1366) = (cell * v0_222 * (1 + ep1212_222 * log(s_1212 / ic1212) + ep1275_222 * log(s_1275 / ic1275) + ep1445_222 * log(s_1445 / ic1445) + ep1207_222 * log(s_1207 / ic1207) + ep1366_222 * log(s_1366 / ic1366))) - (cell * v0_221 * (1 + ep1084_221 * log(s_1084 / ic1084) + ep1366_221 * log(s_1366 / ic1366) + ep0481_221 * log(s_0481 / ic0481)));
    der(s_1376) = (cell * v0_162 * (1 + ep0943_162 * log(s_0943 / ic0943) + ep1376_162 * log(s_1376 / ic1376))) - (cell * v0_92 * (1 + ep0943_92 * log(s_0943 / ic0943) + ep1376_92 * log(s_1376 / ic1376) + ep0633_92 * log(s_0633 / ic0633) + ep0745_92 * log(s_0745 / ic0745)));
    der(s_1377) = (cell * v0_71 * (1 + ep0515_71 * log(s_0515 / ic0515) + ep1377_71 * log(s_1377 / ic1377))) - (cell * v0_223 * (1 + ep1377_223 * log(s_1377 / ic1377) + ep0456_223 * log(s_0456 / ic0456) + ep0951_223 * log(s_0951 / ic0951))) - (cell * v0_224 * (1 + ep1207_224 * log(s_1207 / ic1207) + ep1377_224 * log(s_1377 / ic1377) + ep0204_224 * log(s_0204 / ic0204) + ep0456_224 * log(s_0456 / ic0456) + ep1212_224 * log(s_1212 / ic1212)));
    der(s_1379) = (cell * v0_225 * (1 + ep0434_225 * log(s_0434 / ic0434) + ep1035_225 * log(s_1035 / ic1035) + ep1606_225 * log(s_1606 / ic1606) + ep0423_225 * log(s_0423 / ic0423) + ep0633_225 * log(s_0633 / ic0633) + ep1379_225 * log(s_1379 / ic1379))) - (0.1647 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_1386) = (cell * v0_218 * (1 + ep0434_218 * log(s_0434 / ic0434) + ep1408_218 * log(s_1408 / ic1408) + ep0423_218 * log(s_0423 / ic0423) + ep1386_218 * log(s_1386 / ic1386))) - (cell * v0_40 * (1 + ep0427_40 * log(s_0427 / ic0427) + ep1386_40 * log(s_1386 / ic1386) + ep0633_40 * log(s_0633 / ic0633) + ep1187_40 * log(s_1187 / ic1187))) - (cell * v0_52 * (1 + ep0434_52 * log(s_0434 / ic0434) + ep1386_52 * log(s_1386 / ic1386) + ep0326_52 * log(s_0326 / ic0326) + ep0633_52 * log(s_0633 / ic0633))) - (cell * v0_191 * (1 + ep1269_191 * log(s_1269 / ic1269) + ep1386_191 * log(s_1386 / ic1386) + ep0633_191 * log(s_0633 / ic0633) + ep1270_191 * log(s_1270 / ic1270))) - (cell * v0_217 * (1 + ep0999_217 * log(s_0999 / ic0999) + ep1386_217 * log(s_1386 / ic1386) + ep0327_217 * log(s_0327 / ic0327) + ep0633_217 * log(s_0633 / ic0633) + ep0991_217 * log(s_0991 / ic0991)));
    der(s_1399) = (cell * v0_41 * (1 + ep0515_41 * log(s_0515 / ic0515) + ep0999_41 * log(s_0999 / ic0999) + ep0427_41 * log(s_0427 / ic0427) + ep0991_41 * log(s_0991 / ic0991) + ep1399_41 * log(s_1399 / ic1399))) + (cell * v0_229 * (1 + ep0394_229 * log(s_0394 / ic0394) + ep1360_229 * log(s_1360 / ic1360) + ep0434_229 * log(s_0434 / ic0434) + ep1399_229 * log(s_1399 / ic1399))) - (cell * v0_7 * (1 + ep0178_7 * log(s_0178 / ic0178) + ep1399_7 * log(s_1399 / ic1399) + ep0039_7 * log(s_0039 / ic0039) + ep0456_7 * log(s_0456 / ic0456))) - (2.0 * cell * v0_25 * (1 + ep1399_25 * log(s_1399 / ic1399) + ep0146_25 * log(s_0146 / ic0146) + ep0456_25 * log(s_0456 / ic0456))) - (cell * v0_164 * (1 + ep0991_164 * log(s_0991 / ic0991) + ep1399_164 * log(s_1399 / ic1399) + ep0180_164 * log(s_0180 / ic0180) + ep0955_164 * log(s_0955 / ic0955))) - (cell * v0_227 * (1 + ep0434_227 * log(s_0434 / ic0434) + ep0445_227 * log(s_0445 / ic0445) + ep1399_227 * log(s_1399 / ic1399) + ep0394_227 * log(s_0394 / ic0394) + ep1271_227 * log(s_1271 / ic1271) + ep1322_227 * log(s_1322 / ic1322))) - (cell * v0_228 * (1 + ep0529_228 * log(s_0529 / ic0529) + ep1198_228 * log(s_1198 / ic1198) + ep1399_228 * log(s_1399 / ic1399) + ep0373_228 * log(s_0373 / ic0373) + ep0456_228 * log(s_0456 / ic0456) + ep1203_228 * log(s_1203 / ic1203)));
    der(s_1405) = (cell * v0_231 * (1 + ep0328_231 * log(s_0328 / ic0328) + ep0314_231 * log(s_0314 / ic0314) + ep1405_231 * log(s_1405 / ic1405))) - (0.00099 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_1408) = (cell * v0_237 * (1 + ep0577_237 * log(s_0577 / ic0577) + ep1408_237 * log(s_1408 / ic1408))) + (cell * v0_257 * (1 + ep0764_257 * log(s_0764 / ic0764) + ep1427_257 * log(s_1427 / ic1427) + ep0581_257 * log(s_0581 / ic0581) + ep1408_257 * log(s_1408 / ic1408))) - (cell * v0_218 * (1 + ep0434_218 * log(s_0434 / ic0434) + ep1408_218 * log(s_1408 / ic1408) + ep0423_218 * log(s_0423 / ic0423) + ep1386_218 * log(s_1386 / ic1386)));
    der(s_1413) = (cell * v0_196 * (1 + ep1351_196 * log(s_1351 / ic1351) + ep1416_196 * log(s_1416 / ic1416) + ep1343_196 * log(s_1343 / ic1343) + ep1413_196 * log(s_1413 / ic1413))) + (cell * v0_206 * (1 + ep1342_206 * log(s_1342 / ic1342) + ep1416_206 * log(s_1416 / ic1416) + ep1346_206 * log(s_1346 / ic1346) + ep1413_206 * log(s_1413 / ic1413))) + (cell * v0_207 * (1 + ep1343_207 * log(s_1343 / ic1343) + ep1416_207 * log(s_1416 / ic1416) + ep1342_207 * log(s_1342 / ic1342) + ep1413_207 * log(s_1413 / ic1413))) + (cell * v0_239 * (1 + ep1416_239 * log(s_1416 / ic1416) + ep1569_239 * log(s_1569 / ic1569) + ep0700_239 * log(s_0700 / ic0700) + ep1413_239 * log(s_1413 / ic1413))) - (cell * v0_32 * (1 + ep1413_32 * log(s_1413 / ic1413) + ep0386_32 * log(s_0386 / ic0386) + ep1012_32 * log(s_1012 / ic1012)));
    der(s_1416) = (cell * v0_174 * (1 + ep0434_174 * log(s_0434 / ic0434) + ep1029_174 * log(s_1029 / ic1029) + ep0633_174 * log(s_0633 / ic0633) + ep1322_174 * log(s_1322 / ic1322) + ep1416_174 * log(s_1416 / ic1416))) - (cell * v0_196 * (1 + ep1351_196 * log(s_1351 / ic1351) + ep1416_196 * log(s_1416 / ic1416) + ep1343_196 * log(s_1343 / ic1343) + ep1413_196 * log(s_1413 / ic1413))) - (cell * v0_206 * (1 + ep1342_206 * log(s_1342 / ic1342) + ep1416_206 * log(s_1416 / ic1416) + ep1346_206 * log(s_1346 / ic1346) + ep1413_206 * log(s_1413 / ic1413))) - (cell * v0_207 * (1 + ep1343_207 * log(s_1343 / ic1343) + ep1416_207 * log(s_1416 / ic1416) + ep1342_207 * log(s_1342 / ic1342) + ep1413_207 * log(s_1413 / ic1413))) - (cell * v0_239 * (1 + ep1416_239 * log(s_1416 / ic1416) + ep1569_239 * log(s_1569 / ic1569) + ep0700_239 * log(s_0700 / ic0700) + ep1413_239 * log(s_1413 / ic1413)));
    der(s_1427) = (cell * v0_256 * (1 + ep0551_256 * log(s_0551 / ic0551) + ep0557_256 * log(s_0557 / ic0557) + ep0764_256 * log(s_0764 / ic0764) + ep1427_256 * log(s_1427 / ic1427))) - (cell * v0_257 * (1 + ep0764_257 * log(s_0764 / ic0764) + ep1427_257 * log(s_1427 / ic1427) + ep0581_257 * log(s_0581 / ic0581) + ep1408_257 * log(s_1408 / ic1408)));
    der(s_1428) = (cell * v0_243 * (1 + ep0434_243 * log(s_0434 / ic0434) + ep1039_243 * log(s_1039 / ic1039) + ep1607_243 * log(s_1607 / ic1607) + ep0423_243 * log(s_0423 / ic0423) + ep0633_243 * log(s_0633 / ic0633) + ep1428_243 * log(s_1428 / ic1428))) - (0.1854 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_1429) = (cell * v0_244 * (1 + ep0211_244 * log(s_0211 / ic0211) + ep1212_244 * log(s_1212 / ic1212) + ep1207_244 * log(s_1207 / ic1207) + ep1429_244 * log(s_1429 / ic1429))) - (cell * v0_245 * (1 + ep0434_245 * log(s_0434 / ic0434) + ep1429_245 * log(s_1429 / ic1429) + ep0261_245 * log(s_0261 / ic0261) + ep0394_245 * log(s_0394 / ic0394)));
    der(s_1445) = (cell * v0_18 * (1 + ep0231_18 * log(s_0231 / ic0231) + ep1212_18 * log(s_1212 / ic1212) + ep1207_18 * log(s_1207 / ic1207) + ep1445_18 * log(s_1445 / ic1445))) - (cell * v0_87 * (1 + ep1084_87 * log(s_1084 / ic1084) + ep1445_87 * log(s_1445 / ic1445) + ep0475_87 * log(s_0475 / ic0475))) - (cell * v0_222 * (1 + ep1212_222 * log(s_1212 / ic1212) + ep1275_222 * log(s_1275 / ic1275) + ep1445_222 * log(s_1445 / ic1445) + ep1207_222 * log(s_1207 / ic1207) + ep1366_222 * log(s_1366 / ic1366)));
    der(s_1447) = (cell * v0_248 * (1 + ep0190_248 * log(s_0190 / ic0190) + ep1212_248 * log(s_1212 / ic1212) + ep0633_248 * log(s_0633 / ic0633) + ep1207_248 * log(s_1207 / ic1207) + ep1447_248 * log(s_1447 / ic1447))) - (cell * v0_246 * (1 + ep1203_246 * log(s_1203 / ic1203) + ep1275_246 * log(s_1275 / ic1275) + ep1447_246 * log(s_1447 / ic1447) + ep0037_246 * log(s_0037 / ic0037) + ep1198_246 * log(s_1198 / ic1198))) - (cell * v0_247 * (1 + ep1212_247 * log(s_1212 / ic1212) + ep1275_247 * log(s_1275 / ic1275) + ep1447_247 * log(s_1447 / ic1447) + ep0037_247 * log(s_0037 / ic0037) + ep1207_247 * log(s_1207 / ic1207)));
    der(s_1449) = (cell * v0_100 * (1 + ep1101_100 * log(s_1101 / ic1101) + ep1212_100 * log(s_1212 / ic1212) + ep1286_100 * log(s_1286 / ic1286) + ep0456_100 * log(s_0456 / ic0456) + ep0529_100 * log(s_0529 / ic0529) + ep1207_100 * log(s_1207 / ic1207) + ep1449_100 * log(s_1449 / ic1449))) + (cell * v0_106 * (1 + ep0423_106 * log(s_0423 / ic0423) + ep0633_106 * log(s_0633 / ic0633) + ep1454_106 * log(s_1454 / ic1454) + ep0434_106 * log(s_0434 / ic0434) + ep0529_106 * log(s_0529 / ic0529) + ep1449_106 * log(s_1449 / ic1449))) - (cell * v0_101 * (1 + ep1101_101 * log(s_1101 / ic1101) + ep1212_101 * log(s_1212 / ic1212) + ep1449_101 * log(s_1449 / ic1449) + ep0456_101 * log(s_0456 / ic0456) + ep0529_101 * log(s_0529 / ic0529) + ep1084_101 * log(s_1084 / ic1084) + ep1207_101 * log(s_1207 / ic1207)));
    der(s_1454) = (cell * v0_110 * (1 + ep1101_110 * log(s_1101 / ic1101) + ep1212_110 * log(s_1212 / ic1212) + ep1302_110 * log(s_1302 / ic1302) + ep0456_110 * log(s_0456 / ic0456) + ep0529_110 * log(s_0529 / ic0529) + ep1207_110 * log(s_1207 / ic1207) + ep1454_110 * log(s_1454 / ic1454))) - (cell * v0_106 * (1 + ep0423_106 * log(s_0423 / ic0423) + ep0633_106 * log(s_0633 / ic0633) + ep1454_106 * log(s_1454 / ic1454) + ep0434_106 * log(s_0434 / ic0434) + ep0529_106 * log(s_0529 / ic0529) + ep1449_106 * log(s_1449 / ic1449)));
    der(s_1467) = (cell * v0_273 * (1 + ep1468_273 * log(s_1468 / ic1468) + ep1467_273 * log(s_1467 / ic1467))) - (cell * v0_250 * (1 + ep0394_250 * log(s_0394 / ic0394) + ep1467_250 * log(s_1467 / ic1467) + ep0298_250 * log(s_0298 / ic0298) + ep1322_250 * log(s_1322 / ic1322))) - (0.02 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_1468) = 0.0;
    der(s_1469) = (cell * v0_200 * (1 + ep0201_200 * log(s_0201 / ic0201) + ep1616_200 * log(s_1616 / ic1616) + ep0390_200 * log(s_0390 / ic0390) + ep1469_200 * log(s_1469 / ic1469) + ep1620_200 * log(s_1620 / ic1620))) - (cell * v0_251 * (1 + ep1212_251 * log(s_1212 / ic1212) + ep1469_251 * log(s_1469 / ic1469) + ep0841_251 * log(s_0841 / ic0841) + ep1207_251 * log(s_1207 / ic1207)));
    der(s_1487) = (cell * v0_88 * (1 + ep0625_88 * log(s_0625 / ic0625) + ep1212_88 * log(s_1212 / ic1212) + ep1207_88 * log(s_1207 / ic1207) + ep1487_88 * log(s_1487 / ic1487))) + (cell * v0_113 * (1 + ep0120_113 * log(s_0120 / ic0120) + ep0394_113 * log(s_0394 / ic0394) + ep1322_113 * log(s_1322 / ic1322) + ep0434_113 * log(s_0434 / ic0434) + ep0722_113 * log(s_0722 / ic0722) + ep1487_113 * log(s_1487 / ic1487))) + (cell * v0_128 * (1 + ep0120_128 * log(s_0120 / ic0120) + ep0325_128 * log(s_0325 / ic0325) + ep0301_128 * log(s_0301 / ic0301) + ep1487_128 * log(s_1487 / ic1487))) + (cell * v0_175 * (1 + ep0322_175 * log(s_0322 / ic0322) + ep1012_175 * log(s_1012 / ic1012) + ep1029_175 * log(s_1029 / ic1029) + ep1487_175 * log(s_1487 / ic1487))) + (cell * v0_214 * (1 + ep0120_214 * log(s_0120 / ic0120) + ep0403_214 * log(s_0403 / ic0403) + ep1365_214 * log(s_1365 / ic1365) + ep1487_214 * log(s_1487 / ic1487))) - (cell * v0_129 * (1 + ep1003_129 * log(s_1003 / ic1003) + ep1198_129 * log(s_1198 / ic1198) + ep1487_129 * log(s_1487 / ic1487) + ep0306_129 * log(s_0306 / ic0306) + ep0419_129 * log(s_0419 / ic0419) + ep0456_129 * log(s_0456 / ic0456) + ep1203_129 * log(s_1203 / ic1203))) - (cell * v0_130 * (1 + ep1039_130 * log(s_1039 / ic1039) + ep1487_130 * log(s_1487 / ic1487) + ep0306_130 * log(s_0306 / ic0306) + ep1003_130 * log(s_1003 / ic1003)));
    der(s_1491) = (cell * v0_254 * (1 + ep0434_254 * log(s_0434 / ic0434) + ep1045_254 * log(s_1045 / ic1045) + ep1608_254 * log(s_1608 / ic1608) + ep0423_254 * log(s_0423 / ic0423) + ep0633_254 * log(s_0633 / ic0633) + ep1491_254 * log(s_1491 / ic1491))) - (0.1914 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_1520) = (cell * v0_259 * (1 + ep0409_259 * log(s_0409 / ic0409) + ep1322_259 * log(s_1322 / ic1322) + ep1520_259 * log(s_1520 / ic1520))) - (0.0234 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_1524) = (cell * v0_260 * (1 + ep0619_260 * log(s_0619 / ic0619) + ep0056_260 * log(s_0056 / ic0056) + ep1524_260 * log(s_1524 / ic1524))) - (cell * v0_84 * (1 + ep0529_84 * log(s_0529 / ic0529) + ep1524_84 * log(s_1524 / ic1524) + ep0380_84 * log(s_0380 / ic0380) + ep0619_84 * log(s_0619 / ic0619))) - (0.000781 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_1527) = (cell * v0_263 * (1 + ep0434_263 * log(s_0434 / ic0434) + ep1048_263 * log(s_1048 / ic1048) + ep1610_263 * log(s_1610 / ic1610) + ep0423_263 * log(s_0423 / ic0423) + ep0633_263 * log(s_0633 / ic0633) + ep1527_263 * log(s_1527 / ic1527))) - (0.0284 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_1533) = (cell * v0_265 * (1 + ep0434_265 * log(s_0434 / ic0434) + ep1051_265 * log(s_1051 / ic1051) + ep1612_265 * log(s_1612 / ic1612) + ep0423_265 * log(s_0423 / ic0423) + ep0633_265 * log(s_0633 / ic0633) + ep1533_265 * log(s_1533 / ic1533))) - (0.102 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_1535) = (cell * v0_184 * (1 + ep1203_184 * log(s_1203 / ic1203) + ep1537_184 * log(s_1537 / ic1537) + ep1198_184 * log(s_1198 / ic1198) + ep1535_184 * log(s_1535 / ic1535))) - (cell * v0_112 * (1 + ep0709_112 * log(s_0709 / ic0709) + ep1535_112 * log(s_1535 / ic1535) + ep0710_112 * log(s_0710 / ic0710) + ep1537_112 * log(s_1537 / ic1537)));
    der(s_1537) = (cell * v0_112 * (1 + ep0709_112 * log(s_0709 / ic0709) + ep1535_112 * log(s_1535 / ic1535) + ep0710_112 * log(s_0710 / ic0710) + ep1537_112 * log(s_1537 / ic1537))) - (cell * v0_184 * (1 + ep1203_184 * log(s_1203 / ic1203) + ep1537_184 * log(s_1537 / ic1537) + ep1198_184 * log(s_1198 / ic1198) + ep1535_184 * log(s_1535 / ic1535)));
    der(s_1538) = (cell * v0_0 * (1 + ep1543_0 * log(s_1543 / ic1543) + ep0002_0 * log(s_0002 / ic0002) + ep1538_0 * log(s_1538 / ic1538))) + (cell * v0_1 * (1 + ep1543_1 * log(s_1543 / ic1543) + ep0004_1 * log(s_0004 / ic0004) + ep1538_1 * log(s_1538 / ic1538))) + (cell * v0_39 * (1 + ep0568_39 * log(s_0568 / ic0568) + ep1543_39 * log(s_1543 / ic1543) + ep0409_39 * log(s_0409 / ic0409) + ep1538_39 * log(s_1538 / ic1538))) + (cell * v0_131 * (1 + ep1543_131 * log(s_1543 / ic1543) + ep0773_131 * log(s_0773 / ic0773) + ep1538_131 * log(s_1538 / ic1538))) + (cell * v0_266 * (1 + ep0434_266 * log(s_0434 / ic0434) + ep1545_266 * log(s_1545 / ic1545) + ep0394_266 * log(s_0394 / ic0394) + ep1538_266 * log(s_1538 / ic1538))) - (cell * v0_187 * (1 + ep0434_187 * log(s_0434 / ic0434) + ep1538_187 * log(s_1538 / ic1538) + ep0394_187 * log(s_0394 / ic0394) + ep1559_187 * log(s_1559 / ic1559)));
    der(s_1543) = (cell * v0_267 * (1 + ep0567_267 * log(s_0567 / ic0567) + ep1559_267 * log(s_1559 / ic1559) + ep0633_267 * log(s_0633 / ic0633) + ep1543_267 * log(s_1543 / ic1543))) - (cell * v0_0 * (1 + ep1543_0 * log(s_1543 / ic1543) + ep0002_0 * log(s_0002 / ic0002) + ep1538_0 * log(s_1538 / ic1538))) - (cell * v0_1 * (1 + ep1543_1 * log(s_1543 / ic1543) + ep0004_1 * log(s_0004 / ic0004) + ep1538_1 * log(s_1538 / ic1538))) - (cell * v0_39 * (1 + ep0568_39 * log(s_0568 / ic0568) + ep1543_39 * log(s_1543 / ic1543) + ep0409_39 * log(s_0409 / ic0409) + ep1538_39 * log(s_1538 / ic1538))) - (cell * v0_131 * (1 + ep1543_131 * log(s_1543 / ic1543) + ep0773_131 * log(s_0773 / ic0773) + ep1538_131 * log(s_1538 / ic1538)));
    der(s_1545) = (cell * v0_192 * (1 + ep1270_192 * log(s_1270 / ic1270) + ep0456_192 * log(s_0456 / ic0456) + ep1545_192 * log(s_1545 / ic1545))) - (cell * v0_266 * (1 + ep0434_266 * log(s_0434 / ic0434) + ep1545_266 * log(s_1545 / ic1545) + ep0394_266 * log(s_0394 / ic0394) + ep1538_266 * log(s_1538 / ic1538))) - (0.0599 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_1559) = (cell * v0_187 * (1 + ep0434_187 * log(s_0434 / ic0434) + ep1538_187 * log(s_1538 / ic1538) + ep0394_187 * log(s_0394 / ic0394) + ep1559_187 * log(s_1559 / ic1559))) - (cell * v0_76 * (1 + ep0419_76 * log(s_0419 / ic0419) + ep0434_76 * log(s_0434 / ic0434) + ep1559_76 * log(s_1559 / ic1559) + ep0394_76 * log(s_0394 / ic0394) + ep0539_76 * log(s_0539 / ic0539) + ep1322_76 * log(s_1322 / ic1322))) - (cell * v0_233 * (1 + ep1559_233 * log(s_1559 / ic1559) + ep1616_233 * log(s_1616 / ic1616) + ep0656_233 * log(s_0656 / ic0656) + ep1620_233 * log(s_1620 / ic1620))) - (cell * v0_267 * (1 + ep0567_267 * log(s_0567 / ic0567) + ep1559_267 * log(s_1559 / ic1559) + ep0633_267 * log(s_0633 / ic0633) + ep1543_267 * log(s_1543 / ic1543)));
    der(s_1561) = (cell * v0_269 * (1 + ep0434_269 * log(s_0434 / ic0434) + ep1056_269 * log(s_1056 / ic1056) + ep1614_269 * log(s_1614 / ic1614) + ep0423_269 * log(s_0423 / ic0423) + ep0633_269 * log(s_0633 / ic0633) + ep1561_269 * log(s_1561 / ic1561))) - (0.2646 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_1565) = (cell * v0_153 * (1 + ep0849_153 * log(s_0849 / ic0849) + ep1198_153 * log(s_1198 / ic1198) + ep1203_153 * log(s_1203 / ic1203) + ep1565_153 * log(s_1565 / ic1565))) - (cell * v0_133 * (1 + ep0434_133 * log(s_0434 / ic0434) + ep0999_133 * log(s_0999 / ic0999) + ep1565_133 * log(s_1565 / ic1565) + ep0423_133 * log(s_0423 / ic0423) + ep0633_133 * log(s_0633 / ic0633) + ep0782_133 * log(s_0782 / ic0782) + ep0991_133 * log(s_0991 / ic0991)));
    der(s_1569) = (cell * v0_58 * (1 + ep1212_58 * log(s_1212 / ic1212) + ep1579_58 * log(s_1579 / ic1579) + ep1207_58 * log(s_1207 / ic1207) + ep1569_58 * log(s_1569 / ic1569))) - (cell * v0_239 * (1 + ep1416_239 * log(s_1416 / ic1416) + ep1569_239 * log(s_1569 / ic1569) + ep0700_239 * log(s_0700 / ic0700) + ep1413_239 * log(s_1413 / ic1413))) - (1.5e-05 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux));
    der(s_1576) = (cell * v0_59 * (1 + ep0296_59 * log(s_0296 / ic0296) + ep1212_59 * log(s_1212 / ic1212) + ep1275_59 * log(s_1275 / ic1275) + ep1207_59 * log(s_1207 / ic1207) + ep1576_59 * log(s_1576 / ic1576))) - (cell * v0_60 * (1 + ep1212_60 * log(s_1212 / ic1212) + ep1275_60 * log(s_1275 / ic1275) + ep1576_60 * log(s_1576 / ic1576) + ep1207_60 * log(s_1207 / ic1207) + ep1577_60 * log(s_1577 / ic1577)));
    der(s_1577) = (cell * v0_60 * (1 + ep1212_60 * log(s_1212 / ic1212) + ep1275_60 * log(s_1275 / ic1275) + ep1576_60 * log(s_1576 / ic1576) + ep1207_60 * log(s_1207 / ic1207) + ep1577_60 * log(s_1577 / ic1577))) - (cell * v0_61 * (1 + ep1212_61 * log(s_1212 / ic1212) + ep1275_61 * log(s_1275 / ic1275) + ep1577_61 * log(s_1577 / ic1577) + ep1207_61 * log(s_1207 / ic1207) + ep1578_61 * log(s_1578 / ic1578)));
    der(s_1578) = (cell * v0_61 * (1 + ep1212_61 * log(s_1212 / ic1212) + ep1275_61 * log(s_1275 / ic1275) + ep1577_61 * log(s_1577 / ic1577) + ep1207_61 * log(s_1207 / ic1207) + ep1578_61 * log(s_1578 / ic1578))) - (cell * v0_55 * (1 + ep1207_55 * log(s_1207 / ic1207) + ep1578_55 * log(s_1578 / ic1578) + ep0456_55 * log(s_0456 / ic0456) + ep1212_55 * log(s_1212 / ic1212) + ep1579_55 * log(s_1579 / ic1579)));
    der(s_1579) = (cell * v0_55 * (1 + ep1207_55 * log(s_1207 / ic1207) + ep1578_55 * log(s_1578 / ic1578) + ep0456_55 * log(s_0456 / ic0456) + ep1212_55 * log(s_1212 / ic1212) + ep1579_55 * log(s_1579 / ic1579))) - (cell * v0_58 * (1 + ep1212_58 * log(s_1212 / ic1212) + ep1579_58 * log(s_1579 / ic1579) + ep1207_58 * log(s_1207 / ic1207) + ep1569_58 * log(s_1569 / ic1569)));
    der(s_1582) = (0.4588 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux)) - (cell * v0_38 * (1 + ep0434_38 * log(s_0434 / ic0434) + ep0955_38 * log(s_0955 / ic0955) + ep1582_38 * log(s_1582 / ic1582) + ep0404_38 * log(s_0404 / ic0404) + ep0423_38 * log(s_0423 / ic0423) + ep0633_38 * log(s_0633 / ic0633)));
    der(s_1583) = (0.1607 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux)) - (cell * v0_44 * (1 + ep0434_44 * log(s_0434 / ic0434) + ep0965_44 * log(s_0965 / ic0965) + ep1583_44 * log(s_1583 / ic1583) + ep0423_44 * log(s_0423 / ic0423) + ep0428_44 * log(s_0428 / ic0428) + ep0633_44 * log(s_0633 / ic0633)));
    der(s_1585) = (0.1017 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux)) - (cell * v0_46 * (1 + ep0434_46 * log(s_0434 / ic0434) + ep0969_46 * log(s_0969 / ic0969) + ep1585_46 * log(s_1585 / ic1585) + ep0423_46 * log(s_0423 / ic0423) + ep0430_46 * log(s_0430 / ic0430) + ep0633_46 * log(s_0633 / ic0633)));
    der(s_1587) = (0.2975 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux)) - (cell * v0_51 * (1 + ep0434_51 * log(s_0434 / ic0434) + ep0973_51 * log(s_0973 / ic0973) + ep1587_51 * log(s_1587 / ic1587) + ep0423_51 * log(s_0423 / ic0423) + ep0432_51 * log(s_0432 / ic0432) + ep0633_51 * log(s_0633 / ic0633)));
    der(s_1589) = (0.0066 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux)) - (cell * v0_80 * (1 + ep0434_80 * log(s_0434 / ic0434) + ep0981_80 * log(s_0981 / ic0981) + ep1589_80 * log(s_1589 / ic1589) + ep0423_80 * log(s_0423 / ic0423) + ep0542_80 * log(s_0542 / ic0542) + ep0633_80 * log(s_0633 / ic0633)));
    der(s_1590) = (0.1054 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux)) - (cell * v0_121 * (1 + ep0434_121 * log(s_0434 / ic0434) + ep0999_121 * log(s_0999 / ic0999) + ep1590_121 * log(s_1590 / ic1590) + ep0423_121 * log(s_0423 / ic0423) + ep0633_121 * log(s_0633 / ic0633) + ep0747_121 * log(s_0747 / ic0747)));
    der(s_1591) = (0.3018 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux)) - (cell * v0_122 * (1 + ep0434_122 * log(s_0434 / ic0434) + ep0991_122 * log(s_0991 / ic0991) + ep1591_122 * log(s_1591 / ic1591) + ep0423_122 * log(s_0423 / ic0423) + ep0633_122 * log(s_0633 / ic0633) + ep0748_122 * log(s_0748 / ic0748)));
    der(s_1593) = (0.2904 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux)) - (cell * v0_132 * (1 + ep0434_132 * log(s_0434 / ic0434) + ep1003_132 * log(s_1003 / ic1003) + ep1593_132 * log(s_1593 / ic1593) + ep0423_132 * log(s_0423 / ic0423) + ep0633_132 * log(s_0633 / ic0633) + ep0757_132 * log(s_0757 / ic0757)));
    der(s_1594) = (0.0663 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux)) - (cell * v0_141 * (1 + ep0434_141 * log(s_0434 / ic0434) + ep1006_141 * log(s_1006 / ic1006) + ep1594_141 * log(s_1594 / ic1594) + ep0423_141 * log(s_0423 / ic0423) + ep0633_141 * log(s_0633 / ic0633) + ep0832_141 * log(s_0832 / ic0832)));
    der(s_1596) = (0.1927 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux)) - (cell * v0_161 * (1 + ep0434_161 * log(s_0434 / ic0434) + ep1016_161 * log(s_1016 / ic1016) + ep1596_161 * log(s_1596 / ic1596) + ep0423_161 * log(s_0423 / ic0423) + ep0633_161 * log(s_0633 / ic0633) + ep0847_161 * log(s_0847 / ic0847)));
    der(s_1598) = (0.2964 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux)) - (cell * v0_168 * (1 + ep0434_168 * log(s_0434 / ic0434) + ep1021_168 * log(s_1021 / ic1021) + ep1598_168 * log(s_1598 / ic1598) + ep0423_168 * log(s_0423 / ic0423) + ep0633_168 * log(s_0633 / ic0633) + ep1077_168 * log(s_1077 / ic1077)));
    der(s_1600) = (0.2862 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux)) - (cell * v0_169 * (1 + ep0434_169 * log(s_0434 / ic0434) + ep1025_169 * log(s_1025 / ic1025) + ep1600_169 * log(s_1600 / ic1600) + ep0423_169 * log(s_0423 / ic0423) + ep0633_169 * log(s_0633 / ic0633) + ep1099_169 * log(s_1099 / ic1099)));
    der(s_1602) = (0.0507 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux)) - (cell * v0_176 * (1 + ep0434_176 * log(s_0434 / ic0434) + ep1029_176 * log(s_1029 / ic1029) + ep1602_176 * log(s_1602 / ic1602) + ep0423_176 * log(s_0423 / ic0423) + ep0633_176 * log(s_0633 / ic0633) + ep1148_176 * log(s_1148 / ic1148)));
    der(s_1604) = (0.1339 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux)) - (cell * v0_194 * (1 + ep0434_194 * log(s_0434 / ic0434) + ep1032_194 * log(s_1032 / ic1032) + ep1604_194 * log(s_1604 / ic1604) + ep0423_194 * log(s_0423 / ic0423) + ep0633_194 * log(s_0633 / ic0633) + ep1314_194 * log(s_1314 / ic1314)));
    der(s_1606) = (0.1647 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux)) - (cell * v0_225 * (1 + ep0434_225 * log(s_0434 / ic0434) + ep1035_225 * log(s_1035 / ic1035) + ep1606_225 * log(s_1606 / ic1606) + ep0423_225 * log(s_0423 / ic0423) + ep0633_225 * log(s_0633 / ic0633) + ep1379_225 * log(s_1379 / ic1379)));
    der(s_1607) = (0.1854 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux)) - (cell * v0_243 * (1 + ep0434_243 * log(s_0434 / ic0434) + ep1039_243 * log(s_1039 / ic1039) + ep1607_243 * log(s_1607 / ic1607) + ep0423_243 * log(s_0423 / ic0423) + ep0633_243 * log(s_0633 / ic0633) + ep1428_243 * log(s_1428 / ic1428)));
    der(s_1608) = (0.1914 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux)) - (cell * v0_254 * (1 + ep0434_254 * log(s_0434 / ic0434) + ep1045_254 * log(s_1045 / ic1045) + ep1608_254 * log(s_1608 / ic1608) + ep0423_254 * log(s_0423 / ic0423) + ep0633_254 * log(s_0633 / ic0633) + ep1491_254 * log(s_1491 / ic1491)));
    der(s_1610) = (0.0284 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux)) - (cell * v0_263 * (1 + ep0434_263 * log(s_0434 / ic0434) + ep1048_263 * log(s_1048 / ic1048) + ep1610_263 * log(s_1610 / ic1610) + ep0423_263 * log(s_0423 / ic0423) + ep0633_263 * log(s_0633 / ic0633) + ep1527_263 * log(s_1527 / ic1527)));
    der(s_1612) = (0.102 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux)) - (cell * v0_265 * (1 + ep0434_265 * log(s_0434 / ic0434) + ep1051_265 * log(s_1051 / ic1051) + ep1612_265 * log(s_1612 / ic1612) + ep0423_265 * log(s_0423 / ic0423) + ep0633_265 * log(s_0633 / ic0633) + ep1533_265 * log(s_1533 / ic1533)));
    der(s_1614) = (0.2646 * cell * max(v0_281 * (1 + ep0002_281 * log(s_0002 / ic0002) + ep0423_281 * log(s_0423 / ic0423) + ep0434_281 * log(s_0434 / ic0434) + ep0526_281 * log(s_0526 / ic0526) + ep0584_281 * log(s_0584 / ic0584) + ep0589_281 * log(s_0589 / ic0589) + ep0615_281 * log(s_0615 / ic0615) + ep0649_281 * log(s_0649 / ic0649) + ep0773_281 * log(s_0773 / ic0773) + ep0782_281 * log(s_0782 / ic0782) + ep1107_281 * log(s_1107 / ic1107) + ep1405_281 * log(s_1405 / ic1405) + ep1467_281 * log(s_1467 / ic1467) + ep1520_281 * log(s_1520 / ic1520) + ep1545_281 * log(s_1545 / ic1545) + ep0004_281 * log(s_0004 / ic0004) + ep0404_281 * log(s_0404 / ic0404) + ep0428_281 * log(s_0428 / ic0428) + ep0430_281 * log(s_0430 / ic0430) + ep0432_281 * log(s_0432 / ic0432) + ep0542_281 * log(s_0542 / ic0542) + ep0747_281 * log(s_0747 / ic0747) + ep0748_281 * log(s_0748 / ic0748) + ep0757_281 * log(s_0757 / ic0757) + ep0832_281 * log(s_0832 / ic0832) + ep0847_281 * log(s_0847 / ic0847) + ep1077_281 * log(s_1077 / ic1077) + ep1099_281 * log(s_1099 / ic1099) + ep1148_281 * log(s_1148 / ic1148) + ep1314_281 * log(s_1314 / ic1314) + ep1379_281 * log(s_1379 / ic1379) + ep1337_281 * log(s_1337 / ic1337) + ep0089_281 * log(s_0089 / ic0089) + ep1428_281 * log(s_1428 / ic1428) + ep1491_281 * log(s_1491 / ic1491) + ep1527_281 * log(s_1527 / ic1527) + ep1533_281 * log(s_1533 / ic1533) + ep1561_281 * log(s_1561 / ic1561) + ep0122_281 * log(s_0122 / ic0122) + ep0918_281 * log(s_0918 / ic0918) + ep0657_281 * log(s_0657 / ic0657) + ep0662_281 * log(s_0662 / ic0662) + ep0666_281 * log(s_0666 / ic0666) + ep0672_281 * log(s_0672 / ic0672) + ep0056_281 * log(s_0056 / ic0056) + ep0700_281 * log(s_0700 / ic0700) + ep1059_281 * log(s_1059 / ic1059) + ep1346_281 * log(s_1346 / ic1346) + ep1351_281 * log(s_1351 / ic1351) + ep1524_281 * log(s_1524 / ic1524) + ep1569_281 * log(s_1569 / ic1569)), zero_flux)) - (cell * v0_269 * (1 + ep0434_269 * log(s_0434 / ic0434) + ep1056_269 * log(s_1056 / ic1056) + ep1614_269 * log(s_1614 / ic1614) + ep0423_269 * log(s_0423 / ic0423) + ep0633_269 * log(s_0633 / ic0633) + ep1561_269 * log(s_1561 / ic1561)));
    der(s_1616) = (cell * v0_252 * (1 + ep1212_252 * log(s_1212 / ic1212) + ep1620_252 * log(s_1620 / ic1620) + ep1207_252 * log(s_1207 / ic1207) + ep1616_252 * log(s_1616 / ic1616))) - (cell * v0_148 * (1 + ep0837_148 * log(s_0837 / ic0837) + ep1616_148 * log(s_1616 / ic1616) + ep1620_148 * log(s_1620 / ic1620))) - (cell * v0_200 * (1 + ep0201_200 * log(s_0201 / ic0201) + ep1616_200 * log(s_1616 / ic1616) + ep0390_200 * log(s_0390 / ic0390) + ep1469_200 * log(s_1469 / ic1469) + ep1620_200 * log(s_1620 / ic1620))) - (cell * v0_232 * (1 + ep0434_232 * log(s_0434 / ic0434) + ep1616_232 * log(s_1616 / ic1616) + ep0586_232 * log(s_0586 / ic0586) + ep1620_232 * log(s_1620 / ic1620))) - (cell * v0_233 * (1 + ep1559_233 * log(s_1559 / ic1559) + ep1616_233 * log(s_1616 / ic1616) + ep0656_233 * log(s_0656 / ic0656) + ep1620_233 * log(s_1620 / ic1620))) - (cell * v0_234 * (1 + ep0394_234 * log(s_0394 / ic0394) + ep1616_234 * log(s_1616 / ic1616) + ep0582_234 * log(s_0582 / ic0582) + ep1620_234 * log(s_1620 / ic1620))) - (cell * v0_235 * (1 + ep0467_235 * log(s_0467 / ic0467) + ep1616_235 * log(s_1616 / ic1616) + ep0587_235 * log(s_0587 / ic0587) + ep1620_235 * log(s_1620 / ic1620))) - (cell * v0_236 * (1 + ep0739_236 * log(s_0739 / ic0739) + ep1616_236 * log(s_1616 / ic1616) + ep0613_236 * log(s_0613 / ic0613) + ep1620_236 * log(s_1620 / ic1620)));
    der(s_1620) = (cell * v0_148 * (1 + ep0837_148 * log(s_0837 / ic0837) + ep1616_148 * log(s_1616 / ic1616) + ep1620_148 * log(s_1620 / ic1620))) + (cell * v0_200 * (1 + ep0201_200 * log(s_0201 / ic0201) + ep1616_200 * log(s_1616 / ic1616) + ep0390_200 * log(s_0390 / ic0390) + ep1469_200 * log(s_1469 / ic1469) + ep1620_200 * log(s_1620 / ic1620))) + (cell * v0_232 * (1 + ep0434_232 * log(s_0434 / ic0434) + ep1616_232 * log(s_1616 / ic1616) + ep0586_232 * log(s_0586 / ic0586) + ep1620_232 * log(s_1620 / ic1620))) + (cell * v0_233 * (1 + ep1559_233 * log(s_1559 / ic1559) + ep1616_233 * log(s_1616 / ic1616) + ep0656_233 * log(s_0656 / ic0656) + ep1620_233 * log(s_1620 / ic1620))) + (cell * v0_234 * (1 + ep0394_234 * log(s_0394 / ic0394) + ep1616_234 * log(s_1616 / ic1616) + ep0582_234 * log(s_0582 / ic0582) + ep1620_234 * log(s_1620 / ic1620))) + (cell * v0_235 * (1 + ep0467_235 * log(s_0467 / ic0467) + ep1616_235 * log(s_1616 / ic1616) + ep0587_235 * log(s_0587 / ic0587) + ep1620_235 * log(s_1620 / ic1620))) + (cell * v0_236 * (1 + ep0739_236 * log(s_0739 / ic0739) + ep1616_236 * log(s_1616 / ic1616) + ep0613_236 * log(s_0613 / ic0613) + ep1620_236 * log(s_1620 / ic1620))) - (cell * v0_252 * (1 + ep1212_252 * log(s_1212 / ic1212) + ep1620_252 * log(s_1620 / ic1620) + ep1207_252 * log(s_1207 / ic1207) + ep1616_252 * log(s_1616 / ic1616)));
    der(e_0001) = 0.0;
    der(e_0004) = 0.0;
    der(e_0006) = 0.0;
    der(e_0007) = 0.0;
    der(e_0008) = 0.0;
    der(e_0010) = 0.0;
    der(e_0011) = 0.0;
    der(e_0012) = 0.0;
    der(e_0016) = 0.0;
    der(e_0017) = 0.0;
    der(e_0020) = 0.0;
    der(e_0022) = 0.0;
    der(e_0025) = 0.0;
    der(e_0026) = 0.0;
    der(e_0028) = 0.0;
    der(e_0029) = 0.0;
    der(e_0030) = 0.0;
    der(e_0031) = 0.0;
    der(e_0038) = 0.0;
    der(e_0045) = 0.0;
    der(e_0054) = 0.0;
    der(e_0057) = 0.0;
    der(e_0062) = 0.0;
    der(e_0063) = 0.0;
    der(e_0064) = 0.0;
    der(e_0065) = 0.0;
    der(e_0071) = 0.0;
    der(e_0074) = 0.0;
    der(e_0077) = 0.0;
    der(e_0079) = 0.0;
    der(e_0084) = 0.0;
    der(e_0085) = 0.0;
    der(e_0086) = 0.0;
    der(e_0087) = 0.0;
    der(e_0088) = 0.0;
    der(e_0089) = 0.0;
    der(e_0090) = 0.0;
    der(e_0091) = 0.0;
    der(e_0092) = 0.0;
    der(e_0100) = 0.0;
    der(e_0101) = 0.0;
    der(e_0103) = 0.0;
    der(e_0104) = 0.0;
    der(e_0106) = 0.0;
    der(e_0107) = 0.0;
    der(e_0111) = 0.0;
    der(e_0113) = 0.0;
    der(e_0117) = 0.0;
    der(e_0122) = 0.0;
    der(e_0124) = 0.0;
    der(e_0128) = 0.0;
    der(e_0129) = 0.0;
    der(e_0133) = 0.0;
    der(e_0134) = 0.0;
    der(e_0135) = 0.0;
    der(e_0136) = 0.0;
    der(e_0137) = 0.0;
    der(e_0139) = 0.0;
    der(e_0141) = 0.0;
    der(e_0142) = 0.0;
    der(e_0146) = 0.0;
    der(e_0154) = 0.0;
    der(e_0160) = 0.0;
    der(e_0165) = 0.0;
    der(e_0167) = 0.0;
    der(e_0168) = 0.0;
    der(e_0169) = 0.0;
    der(e_0171) = 0.0;
    der(e_0175) = 0.0;
    der(e_0176) = 0.0;
    der(e_0177) = 0.0;
    der(e_0179) = 0.0;
    der(e_0181) = 0.0;
    der(e_0182) = 0.0;
    der(e_0186) = 0.0;
    der(e_0194) = 0.0;
    der(e_0196) = 0.0;
    der(e_0203) = 0.0;
    der(e_0204) = 0.0;
    der(e_0206) = 0.0;
    der(e_0214) = 0.0;
    der(e_0218) = 0.0;
    der(e_0219) = 0.0;
    der(e_0220) = 0.0;
    der(e_0231) = 0.0;
    der(e_0233) = 0.0;
    der(e_0234) = 0.0;
    der(e_0237) = 0.0;
    der(e_0239) = 0.0;
    der(e_0242) = 0.0;
    der(e_0243) = 0.0;
    der(e_0249) = 0.0;
    der(e_0250) = 0.0;
    der(e_0255) = 0.0;
    der(e_0269) = 0.0;
    der(e_0271) = 0.0;
    der(e_0273) = 0.0;
    der(e_0276) = 0.0;
    der(e_0278) = 0.0;
    der(e_0280) = 0.0;
    der(e_0281) = 0.0;
    der(e_0283) = 0.0;
    der(e_0290) = 0.0;
    der(e_0291) = 0.0;
    der(e_0294) = 0.0;
    der(e_0296) = 0.0;
    der(e_0297) = 0.0;
    der(e_0298) = 0.0;
    der(e_0299) = 0.0;
    der(e_0303) = 0.0;
    der(e_0304) = 0.0;
    der(e_0306) = 0.0;
    der(e_0311) = 0.0;
    der(e_0312) = 0.0;
    der(e_0314) = 0.0;
    der(e_0317) = 0.0;
    der(e_0320) = 0.0;
    der(e_0321) = 0.0;
    der(e_0322) = 0.0;
    der(e_0325) = 0.0;
    der(e_0326) = 0.0;
    der(e_0328) = 0.0;
    der(e_0329) = 0.0;
    der(e_0330) = 0.0;
    der(e_0334) = 0.0;
    der(e_0340) = 0.0;
    der(e_0342) = 0.0;
    der(e_0343) = 0.0;
    der(e_0346) = 0.0;
    der(e_0347) = 0.0;
    der(e_0348) = 0.0;
    der(e_0352) = 0.0;
    der(e_0353) = 0.0;
    der(e_0355) = 0.0;
    der(e_0364) = 0.0;
    der(e_0365) = 0.0;
    der(e_0367) = 0.0;
    der(e_0368) = 0.0;
    der(e_0372) = 0.0;
    der(e_0376) = 0.0;
    der(e_0379) = 0.0;
    der(e_0380) = 0.0;
    der(e_0381) = 0.0;
    der(e_0382) = 0.0;
    der(e_0385) = 0.0;
    der(e_0387) = 0.0;
    der(e_0389) = 0.0;
    der(e_0390) = 0.0;
    der(e_0392) = 0.0;
    der(e_0393) = 0.0;
    der(e_0396) = 0.0;
    der(e_0397) = 0.0;
    der(e_0398) = 0.0;
    der(e_0401) = 0.0;
    der(e_0405) = 0.0;
    der(e_0409) = 0.0;
    der(e_0418) = 0.0;
    der(e_0422) = 0.0;
    der(e_0424) = 0.0;
    der(e_0425) = 0.0;
    der(e_0426) = 0.0;
    der(e_0427) = 0.0;
    der(e_0428) = 0.0;
    der(e_0431) = 0.0;
    der(e_0434) = 0.0;
    der(e_0435) = 0.0;
    der(e_0436) = 0.0;
    der(e_0440) = 0.0;
    der(e_0448) = 0.0;
    der(e_0452) = 0.0;
    der(e_0454) = 0.0;
    der(e_0456) = 0.0;
    der(e_0457) = 0.0;
    der(e_0458) = 0.0;
    der(e_0462) = 0.0;
    der(e_0463) = 0.0;
    der(e_0465) = 0.0;
    der(e_0467) = 0.0;
    der(e_0469) = 0.0;
    der(e_0470) = 0.0;
    der(e_0472) = 0.0;
    der(e_0475) = 0.0;
    der(e_0476) = 0.0;
    der(e_0489) = 0.0;
    der(e_0490) = 0.0;
    der(e_0492) = 0.0;
    der(e_0495) = 0.0;
    der(e_0496) = 0.0;
    der(e_0499) = 0.0;
    der(e_0506) = 0.0;
    der(e_0508) = 0.0;
    der(e_0510) = 0.0;
    der(e_0512) = 0.0;
    der(e_0514) = 0.0;
    der(e_0515) = 0.0;
    der(e_0525) = 0.0;
    der(e_0528) = 0.0;
    der(e_0531) = 0.0;
    der(e_0536) = 0.0;
    der(e_0540) = 0.0;
    der(e_0541) = 0.0;
    der(e_0542) = 0.0;
    der(e_0545) = 0.0;
    der(e_0547) = 0.0;
    der(e_0548) = 0.0;
    der(e_0549) = 0.0;
    der(e_0550) = 0.0;
    der(e_0556) = 0.0;
    der(e_0557) = 0.0;
    der(e_0561) = 0.0;
    der(e_0563) = 0.0;
    der(e_0565) = 0.0;
    der(e_0567) = 0.0;
    der(e_0568) = 0.0;
    der(e_0571) = 0.0;
    der(e_0574) = 0.0;
    der(e_0576) = 0.0;
    der(e_0578) = 0.0;
    der(e_0582) = 0.0;
    der(e_0585) = 0.0;
    der(e_0586) = 0.0;
    der(e_0591) = 0.0;
    der(e_0594) = 0.0;
    der(e_0603) = 0.0;
    der(e_0607) = 0.0;
    der(e_0610) = 0.0;
    der(e_0611) = 0.0;
    der(e_0613) = 0.0;
    der(e_0615) = 0.0;
    der(e_0629) = 0.0;
    der(e_0631) = 0.0;
    der(e_0632) = 0.0;
    der(e_0633) = 0.0;
    der(e_0637) = 0.0;
    der(e_0638) = 0.0;
    der(e_0639) = 0.0;
    der(e_0642) = 0.0;
    der(e_0644) = 0.0;
    der(e_0645) = 0.0;
    der(e_0658) = 0.0;
    der(e_0667) = 0.0;
    der(e_0674) = 0.0;
    der(e_0675) = 0.0;
    der(e_0682) = 0.0;
    der(e_0684) = 0.0;
    der(e_0685) = 0.0;
    der(e_0686) = 0.0;
    der(e_0687) = 0.0;
    der(e_0690) = 0.0;
    der(e_0692) = 0.0;
    der(e_0693) = 0.0;
    der(e_0697) = 0.0;
    der(e_0699) = 0.0;
    der(e_0705) = 0.0;
    der(e_0708) = 0.0;
    der(e_0711) = 0.0;
    der(e_0712) = 0.0;
    der(e_0714) = 0.0;
    der(e_0716) = 0.0;
    der(e_0724) = 0.0;
    der(e_0729) = 0.0;
    der(e_0733) = 0.0;
    der(e_0734) = 0.0;
    der(e_0736) = 0.0;
    der(e_0737) = 0.0;
    der(e_0741) = 0.0;
    der(e_0742) = 0.0;
    der(e_0743) = 0.0;
    der(e_0744) = 0.0;
    der(e_0745) = 0.0;
    der(e_0746) = 0.0;
    der(e_0747) = 0.0;
    der(e_0750) = 0.0;
    der(e_0752) = 0.0;
    der(e_0753) = 0.0;
    der(e_0754) = 0.0;
    der(e_0755) = 0.0;
    der(e_0756) = 0.0;
    der(e_0757) = 0.0;
    der(e_0761) = 0.0;
    der(e_0763) = 0.0;
    der(e_0765) = 0.0;
    der(e_0769) = 0.0;
    der(e_0771) = 0.0;
    der(e_0774) = 0.0;
    der(e_0775) = 0.0;
    der(e_0778) = 0.0;
    der(e_0788) = 0.0;
    der(e_0791) = 0.0;
    der(e_0793) = 0.0;
    der(e_0799) = 0.0;
    der(e_0800) = 0.0;
    der(e_0802) = 0.0;
    der(e_0805) = 0.0;
    der(e_0808) = 0.0;
    der(e_0812) = 0.0;
    der(e_0813) = 0.0;
    der(e_0826) = 0.0;
    der(e_0827) = 0.0;
    der(e_0829) = 0.0;
    der(e_0830) = 0.0;
    der(e_0832) = 0.0;
    der(e_0836) = 0.0;
    der(e_0838) = 0.0;
    der(e_0840) = 0.0;
    der(e_0841) = 0.0;
    der(e_0848) = 0.0;
    der(e_0850) = 0.0;
    der(e_0851) = 0.0;
    der(e_0852) = 0.0;
    der(e_0855) = 0.0;
    der(e_0860) = 0.0;
    der(e_0862) = 0.0;
    der(e_0867) = 0.0;
    der(e_0869) = 0.0;
    der(e_0872) = 0.0;
    der(e_0875) = 0.0;
    der(e_0880) = 0.0;
    der(e_0883) = 0.0;
    der(e_0888) = 0.0;
    der(e_0889) = 0.0;
    der(e_0890) = 0.0;
    der(e_0894) = 0.0;
    der(e_0895) = 0.0;
    der(e_0899) = 0.0;
    der(e_0903) = 0.0;
    der(e_0904) = 0.0;
    der(e_0910) = 0.0;
    der(e_0914) = 0.0;
    der(e_0915) = 0.0;
    der(e_0922) = 0.0;
    der(e_0926) = 0.0;
    der(e_0934) = 0.0;
    der(e_0940) = 0.0;
    der(e_0947) = 0.0;
    der(e_0953) = 0.0;
    der(e_0955) = 0.0;
    der(e_0959) = 0.0;
    der(e_0962) = 0.0;
    der(e_0963) = 0.0;
    der(e_0964) = 0.0;
    der(e_0970) = 0.0;
    der(e_0973) = 0.0;
    der(e_0975) = 0.0;
    der(e_0976) = 0.0;
    der(e_0978) = 0.0;
    der(e_0980) = 0.0;




end BIOMD471;
