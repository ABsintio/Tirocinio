
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import argparse

parser = argparse.ArgumentParser()
parser.add_argument("-c", "--csv", help="Path relativo o assoluto del file CSV contenente i dati")
args = parser.parse_args()
csv_file = args.csv

# Apriamo e leggiamo il CSV in input
csv_data = pd.read_csv(csv_file)

# Prendiamo i nomi delle species con gli indici corrispettivi che utilizzeremo per il plotting
variables_to_plot = ["s_0002","s_0004","s_0008","s_0009","s_0010","s_0015","s_0016","s_0018","s_0019","s_0025","s_0028","s_0033","s_0037","s_0039","s_0056","s_0061","s_0062","s_0063","s_0066","BPG","s_0076","s_0077","s_0078","s_0082","s_0086","s_0089","s_0118","s_0120","s_0122","s_0126","s_0141","s_0142","s_0145","s_0146","s_0158","s_0162","s_0165","s_0176","s_0178","s_0180","P2G","s_0190","s_0201","s_0204","s_0207","s_0209","s_0210","s_0211","s_0218","s_0231","s_0232","P3G","s_0261","s_0262","s_0291","s_0295","s_0296","s_0297","s_0298","s_0299","s_0300","s_0301","s_0302","s_0304","s_0306","s_0312","s_0313","s_0314","s_0322","s_0324","s_0325","s_0326","s_0327","s_0328","s_0335","s_0340","s_0349","AcAld","s_0360","s_0362","s_0367","s_0373","s_0380","s_0386","s_0390","s_0393","ADP","s_0403","s_0404","s_0409","s_0419","s_0420","AMP","s_0427","s_0428","s_0430","s_0432","ATP","s_0445","s_0454","s_0455","CO2","s_0458","s_0467","s_0471","s_0478","s_0505","s_0515","s_0516","s_0522","s_0526","s_0529","s_0539","s_0542","s_0550","s_0551","F16bP","F6P","GLC","GLCx","s_0567","G6P","s_0573","s_0574","s_0577","s_0581","s_0582","s_0584","s_0586","s_0587","s_0589","s_0595","s_0602","s_0613","s_0615","s_0619","s_0625","DHAP","s_0633","s_0644","s_0645","s_0649","s_0654","s_0656","s_0657","s_0662","s_0666","s_0672","EtOH","s_0681","s_0700","s_0709","s_0710","s_0722","s_0725","s_0739","s_0743","s_0745","s_0747","s_0748","s_0750","s_0757","GAP","GLY","s_0766","s_0767","s_0773","s_0779","s_0782","s_0785","s_0816","s_0832","s_0835","s_0836","s_0841","s_0847","s_0849","s_0897","s_0940","s_0943","s_0951","s_0953","s_0955","s_0959","s_0965","s_0969","s_0973","s_0978","s_0979","s_0980","s_0981","s_0991","s_0999","s_1003","s_1006","s_1010","s_1011","s_1012","s_1014","s_1016","s_1021","s_1025","s_1029","s_1032","s_1035","s_1038","s_1039","s_1045","s_1048","s_1051","s_1056","s_1059","s_1065","s_1073","s_1077","s_1084","s_1099","s_1101","s_1107","s_1148","s_1151","s_1153","s_1161","s_1176","s_1182","s_1187","s_1191","s_1192","s_1194","NAD","NADH","s_1207","s_1212","s_1233","s_1238","s_1255","s_1266","s_1269","s_1270","s_1271","s_1275","s_1277","s_1286","s_1302","s_1314","PHO","s_1324","s_1331","s_1337","s_1342","s_1343","s_1346","s_1351","PEP","s_1364","s_1365","s_1376","s_1377","s_1379","s_1386","PYR","s_1405","s_1408","s_1413","s_1416","s_1426","s_1427","s_1428","s_1429","s_1445","s_1447","s_1449","s_1454","s_1458","s_1459","s_1467","s_1468","s_1469","s_1487","s_1491","s_1520","s_1524","s_1527","s_1533","s_1535","s_1537","s_1538","s_1543","s_1545","s_1559","s_1561","s_1565","s_1569","s_1576","s_1577","s_1578","s_1579","s_1582","s_1583","s_1585","s_1587","s_1589","s_1590","s_1591","s_1593","s_1594","s_1596","s_1598","s_1600","s_1602","s_1604","s_1606","s_1607","s_1608","s_1610","s_1612","s_1614","s_1616","s_1620","e_0001","e_0002","e_0003","e_0004","e_0005","e_0006","e_0007","e_0008","e_0010","e_0011","e_0012","e_0017","e_0020","e_0022","e_0025","e_0026","e_0028","e_0030","e_0031","e_0033","e_0038","e_0045","e_0051","e_0053","e_0054","e_0057","e_0062","e_0063","e_0064","e_0065","e_0066","e_0069","e_0071","e_0074","e_0079","e_0084","e_0087","e_0088","e_0089","e_0090","e_0091","e_0092","e_0100","e_0101","e_0103","e_0106","e_0107","e_0109","e_0111","e_0113","e_0117","e_0122","e_0124","e_0127","e_0128","e_0129","e_0133","e_0134","e_0135","e_0136","e_0137","e_0141","e_0142","e_0146","e_0151","e_0152","e_0154","e_0155","e_0160","e_0165","e_0167","e_0168","e_0169","e_0171","e_0175","e_0176","e_0177","e_0179","e_0182","e_0183","e_0186","e_0188","e_0194","e_0196","e_0202","e_0203","e_0204","e_0207","e_0213","e_0214","e_0218","e_0219","e_0220","e_0223","e_0231","e_0234","e_0237","e_0239","e_0243","e_0249","e_0250","e_0251","e_0255","e_0260","e_0263","e_0268","e_0269","e_0271","e_0273","e_0276","e_0278","e_0280","e_0281","e_0283","e_0288","e_0289","e_0290","e_0291","e_0293","e_0295","e_0296","e_0297","e_0298","e_0299","e_0303","e_0311","e_0312","e_0313","e_0314","e_0317","e_0320","e_0321","e_0322","e_0325","e_0326","e_0328","e_0329","e_0330","e_0334","e_0340","e_0342","e_0343","e_0346","e_0347","e_0348","e_0352","e_0353","e_0355","e_0356","e_0362","e_0364","e_0365","e_0367","e_0368","e_0370","e_0372","e_0376","e_0379","e_0380","e_0381","e_0382","e_0385","e_0387","e_0389","e_0390","e_0392","e_0396","e_0398","e_0401","e_0404","e_0405","e_0407","e_0409","e_0417","e_0418","e_0422","e_0424","e_0425","e_0426","e_0427","e_0428","e_0429","e_0431","e_0432","e_0434","e_0435","e_0436","e_0440","e_0447","e_0448","e_0452","e_0453","e_0454","e_0455","e_0456","e_0457","e_0458","e_0462","e_0465","e_0466","e_0467","e_0470","e_0472","e_0475","e_0476","e_0489","e_0492","e_0494","e_0495","e_0496","e_0499","e_0506","e_0508","e_0510","e_0512","e_0514","e_0515","e_0525","e_0528","e_0531","e_0536","e_0540","e_0541","e_0542","e_0544","e_0545","e_0547","e_0548","e_0549","e_0550","e_0556","e_0557","e_0558","e_0559","e_0561","e_0565","e_0567","e_0568","e_0569","e_0571","e_0574","e_0576","e_0578","e_0579","e_0581","e_0582","e_0585","e_0586","e_0588","e_0591","e_0594","e_0601","e_0603","e_0607","e_0610","e_0611","e_0612","e_0613","e_0615","e_0619","e_0621","e_0629","e_0631","e_0632","e_0633","e_0636","e_0638","e_0639","e_0642","e_0644","e_0647","e_0658","e_0667","e_0671","e_0674","e_0675","e_0682","e_0684","e_0685","e_0686","e_0687","e_0690","e_0692","e_0693","e_0695","e_0697","e_0698","e_0699","e_0704","e_0705","e_0708","e_0709","e_0711","e_0712","e_0716","e_0727","e_0729","e_0730","e_0733","e_0734","e_0736","e_0740","e_0741","e_0742","e_0743","e_0744","e_0745","e_0746","e_0747","e_0750","e_0752","e_0753","e_0754","e_0755","e_0757","e_0761","e_0762","e_0763","e_0765","e_0769","e_0771","e_0774","e_0778","e_0788","e_0791","e_0792","e_0793","e_0799","e_0800","e_0802","e_0805","e_0808","e_0812","e_0813","e_0826","e_0827","e_0829","e_0830","e_0832","e_0834","e_0836","e_0838","e_0840","e_0841","e_0842","e_0846","e_0848","e_0850","e_0851","e_0852","e_0855","e_0860","e_0862","e_0867","e_0869","e_0875","e_0880","e_0883","e_0884","e_0888","e_0889","e_0890","e_0892","e_0894","e_0895","e_0898","e_0903","e_0904","e_0911","e_0913","e_0915","e_0922","e_0924","e_0926","e_0934","e_0935","e_0940","e_0944","e_0947","e_0950","e_0953","e_0955","e_0956","e_0959","e_0962","e_0963","e_0964","e_0970","e_0973","e_0975","e_0976","e_0978","e_0980","F26bP"]
species_tuple = [(idx, specie) for idx, specie in enumerate(csv_data.head(0)) if specie in variables_to_plot and specie != "time"]

# Creiamo un array numpy per salvare i dati estrapolati dal CSV
data_numpy = np.array(csv_data)

# Prendiamo la colonna del tempo
time = data_numpy[:, 0]

# Prendiamo i valori a tuple di quattro i quali formeranno un singolo plot
plot_number = 1
for i in range(0, len(species_tuple), 4):
    current_vars = species_tuple[i:i+4]
    plt.figure(figsize=[15.0, 8.0])
    for j, var in current_vars:
        plt.plot(time, data_numpy[:, j], marker="_", label=var)
    plt.xlabel("Time")
    plt.legend(loc="upper left")
    plt.savefig("OMCPlot" + str(plot_number) + ".png")
    plot_number += 1
    plt.close()
