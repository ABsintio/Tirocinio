
#ifndef BIOMD293_PERTHREAD_SYSTEMDEFINITION_H
#define BIOMD293_PERTHREAD_SYSTEMDEFINITION_H

#include <fstream>
#include <iostream>
#include <string>


template<class Precision> __forceinline__ __device__ void PerThread_OdeFunction(
	int tid, int NT, \
	Precision*    F, Precision*    X, Precision     T, \
	Precision* cPAR, Precision* sPAR, int*      sPARi, Precision* ACC, int* ACCi  		
) {
    ACC[7]=(X[52] + (X[39] + (X[41] + (X[43] + (X[45] + (X[47] + (X[49] + (X[51] + (X[71] + (X[115] + (X[112] + (X[113] + X[111]))))))))))));
    ACC[3]=(X[110] + ACC[7]);
    ACC[5]=(X[126] + (X[127] + X[128]));
    ACC[6]=(X[129] + ((2.0 * X[130]) + (X[131] + (X[132] + (X[133] + (X[134] + (X[81] + (X[82] + (X[97] + (X[83] + (X[84] + (X[85] + (X[86] + (X[87] + (X[88] + (X[89] + (X[90] + (X[91] + (X[92] + (X[93] + (X[94] + (X[95] + X[96]))))))))))))))))))))));
    ACC[0]=(X[3] + (X[4] + (X[5] + (X[6] + (X[7] + (X[124] + (X[125] + (X[8] + (X[9] + (X[10] + (X[11] + (X[12] + (X[116] + (X[117] + (X[118] + (X[13] + (X[14] + (X[15] + (X[16] + (X[17] + (X[119] + (X[19] + (X[20] + (X[21] + (X[22] + (X[23] + (X[120] + (X[24] + (X[25] + (X[26] + (X[27] + (X[28] + (X[121] + (X[122] + X[123]))))))))))))))))))))))))))))))))));
    ACC[8]=(X[121] + ((4.0 * X[130]) + ((5.0 * X[131]) + ((6.0 * X[132]) + ((7.0 * X[133]) + ((8.0 * X[134]) + (X[31] + (X[33] + (X[54] + (X[69] + ((2.0 * (X[55] + X[56])) + ((3.0 * (X[57] + X[58])) + ((4.0 * (X[59] + X[60])) + ((5.0 * (X[61] + X[62])) + ((6.0 * (X[63] + X[64])) + ((7.0 * (X[65] + X[66])) + ((8.0 * (X[67] + X[68])) + (X[37] + ((2.0 * X[52]) + ((2.0 * (X[38] + X[39])) + ((3.0 * (X[40] + X[41])) + ((4.0 * (X[42] + X[43])) + ((5.0 * (X[44] + X[45])) + ((6.0 * (X[46] + X[47])) + ((7.0 * (X[48] + X[49])) + ((8.0 * (X[50] + X[51])) + ((4.0 * X[74]) + ((5.0 * X[75]) + ((6.0 * X[76]) + ((7.0 * X[77]) + ((8.0 * X[78]) + (X[82] + (X[97] + ((2.0 * (X[83] + X[84])) + ((3.0 * (X[85] + X[86])) + ((4.0 * (X[87] + X[88])) + ((5.0 * (X[89] + X[90])) + ((6.0 * (X[91] + X[92])) + ((7.0 * (X[93] + X[94])) + ((8.0 * (X[95] + X[96])) + ((4.0 * X[102]) + ((5.0 * X[103]) + ((6.0 * X[104]) + ((7.0 * X[105]) + ((8.0 * X[106]) + (X[115] + X[136]))))))))))))))))))))))))))))))))))))))))))))));
    ACC[4]=(ACC[8] + X[114]);
    ACC[1]=(X[53] + (X[54] + (X[69] + (X[55] + (X[56] + (X[57] + (X[58] + (X[59] + (X[60] + (X[61] + (X[62] + (X[63] + (X[64] + (X[65] + (X[66] + (X[67] + (X[68] + (X[73] + (X[74] + (X[75] + (X[76] + (X[77] + X[78]))))))))))))))))))))));
    ACC[2]=(ACC[1] + X[79]);
    F[0]=0.0;
    F[1]=0.0;
    F[108]=0.0;
    F[135]=0.0;
    F[136]=(3.0 * (sPAR[82] * (pow(X[73],6.0) / (1.1390625e+19 + pow(X[73],6.0)))));
    F[120]=((7.0 * (sPAR[11] * (X[23] * X[101]))) + ((X[107] * ((sPAR[62] * X[101]) + (sPAR[63] * (X[36] + X[37])))) + (sPAR[63] * (X[107] * (X[38] + (X[40] + (X[42] + (X[44] + (X[46] + (X[48] + (X[50] + (X[52] + (X[39] + (X[41] + (X[43] + (X[45] + (X[47] + (X[49] + X[51]))))))))))))))))));
    F[123]=((7.0 * (sPAR[9] * (X[112] * X[28]))) + (sPAR[62] * (X[107] * (X[112] + X[71]))));
    F[122]=(sPAR[63] * (X[107] * (X[52] + (X[39] + (X[41] + (X[43] + (X[45] + (X[47] + (X[49] + X[51])))))))));
    F[118]=((7.0 * (sPAR[8] * (X[73] * X[17]))) + ((sPAR[62] * (X[73] * X[107])) + (sPAR[63] * (X[107] * (X[53] + (X[54] + (X[55] + (X[57] + (X[59] + (X[61] + (X[63] + (X[65] + (X[69] + (X[56] + (X[58] + (X[60] + (X[62] + (X[64] + (X[66] + X[68])))))))))))))))))));
    F[116]=(sPAR[63] * (X[107] * (X[69] + (X[56] + (X[58] + (X[60] + (X[62] + (X[64] + (X[66] + X[68])))))))));
    F[117]=(sPAR[63] * (X[107] * (X[53] + (X[54] + (X[55] + (X[57] + (X[59] + (X[61] + (X[63] + (X[65] + (X[67] + (X[69] + (X[56] + (X[58] + (X[60] + (X[62] + (X[64] + (X[66] + X[68]))))))))))))))))));
    F[121]=((sPAR[63] * ((X[54] * X[107]) + ((2.0 * (X[55] * X[107])) + ((3.0 * (X[57] * X[107])) + ((4.0 * (X[59] * X[107])) + ((5.0 * (X[61] * X[107])) + ((6.0 * (X[63] * X[107])) + ((7.0 * (X[65] * X[107])) + ((8.0 * (X[67] * X[107])) + ((X[69] * X[107]) + ((2.0 * (X[56] * X[107])) + ((3.0 * (X[58] * X[107])) + ((4.0 * (X[60] * X[107])) + ((5.0 * (X[62] * X[107])) + ((6.0 * (X[64] * X[107])) + ((7.0 * (X[66] * X[107])) + ((8.0 * (X[68] * X[107])) + ((X[107] * (X[82] + ((2.0 * X[83]) + ((3.0 * X[85]) + ((4.0 * X[87]) + ((5.0 * X[89]) + ((6.0 * X[91]) + ((7.0 * X[93]) + ((8.0 * X[95]) + (X[97] + ((2.0 * X[84]) + ((3.0 * X[86]) + ((4.0 * X[88]) + ((5.0 * X[90]) + ((6.0 * X[92]) + ((7.0 * X[94]) + ((8.0 * X[96]) + X[37]))))))))))))))))) + ((2.0 * (X[38] * X[107])) + ((3.0 * (X[40] * X[107])) + ((4.0 * (X[42] * X[107])) + ((5.0 * (X[44] * X[107])) + ((6.0 * (X[46] * X[107])) + ((7.0 * (X[48] * X[107])) + ((8.0 * (X[50] * X[107])) + ((X[52] * X[107]) + ((2.0 * (X[39] * X[107])) + ((3.0 * (X[41] * X[107])) + ((4.0 * (X[43] * X[107])) + ((5.0 * (X[45] * X[107])) + ((6.0 * (X[47] * X[107])) + (7.0 * (X[49] * X[107]))))))))))))))))))))))))))))))))) + (8.0 * (sPAR[63] * (X[51] * X[107]))));
    F[119]=(sPAR[63] * (X[107] * (X[81] + (X[82] + (X[83] + (X[85] + (X[87] + (X[89] + (X[91] + (X[93] + (X[95] + (X[97] + (X[84] + (X[86] + (X[88] + (X[90] + (X[92] + (X[94] + X[96]))))))))))))))))));
    F[125]=((7.0 * (sPAR[9] * (X[129] * X[12]))) + ((X[107] * ((sPAR[62] * X[129]) + (sPAR[63] * X[81]))) + (sPAR[63] * (X[107] * (X[82] + (X[83] + (X[85] + (X[87] + (X[89] + (X[91] + (X[93] + (X[95] + (X[97] + (X[84] + (X[86] + (X[88] + (X[90] + (X[92] + (X[94] + X[96])))))))))))))))))));
    F[124]=((7.0 * (sPAR[13] * (X[126] * X[7]))) + (sPAR[62] * (X[107] * X[126])));
    F[109]=0.0;
    F[23]=((sPAR[11] * (X[101] * X[22])) + (X[23] * ((((-(sPAR[11])) * X[101]) - sPAR[44]) - (sPAR[14] * X[98]))));
    F[22]=((sPAR[11] * (X[101] * X[21])) + ((sPAR[44] * X[23]) + ((sPAR[61] * X[22]) + ((((-(X[22])) * (sPAR[43] + (sPAR[14] * X[98]))) - (sPAR[11] * (X[101] * X[22]))) - (sPAR[61] * X[22])))));
    F[21]=((sPAR[11] * (X[101] * X[20])) + ((sPAR[43] * X[22]) + ((sPAR[61] * X[21]) + ((((-(X[21])) * (sPAR[42] + (sPAR[14] * X[98]))) - (sPAR[11] * (X[101] * X[21]))) - (sPAR[61] * X[21])))));
    F[20]=((sPAR[11] * (X[101] * X[19])) + ((sPAR[42] * X[21]) + ((sPAR[61] * X[20]) + ((((-(X[20])) * (sPAR[41] + (sPAR[14] * X[98]))) - (sPAR[11] * (X[101] * X[20]))) - (sPAR[61] * X[20])))));
    F[19]=((0.5 * (sPAR[10] * (X[101] * (-1.0 + X[101])))) + ((sPAR[41] * X[20]) + ((sPAR[61] * X[19]) + ((((-(X[19])) * (sPAR[40] + (sPAR[14] * X[98]))) - (sPAR[11] * (X[101] * X[19]))) - (sPAR[61] * X[19])))));
    F[28]=((sPAR[9] * (X[112] * X[27])) + ((X[28] * (sPAR[61] + ((-(sPAR[59])) - (sPAR[14] * X[98])))) + (((-(sPAR[9])) * (X[112] * X[28])) - (sPAR[61] * X[28]))));
    F[27]=((sPAR[9] * (X[112] * X[26])) + ((sPAR[59] * X[28]) + ((sPAR[61] * X[27]) + ((((-(X[27])) * (sPAR[58] + (sPAR[14] * X[98]))) - (sPAR[9] * (X[112] * X[27]))) - (sPAR[61] * X[27])))));
    F[26]=((sPAR[9] * (X[112] * X[25])) + ((sPAR[58] * X[27]) + ((sPAR[61] * X[26]) + ((((-(X[26])) * (sPAR[57] + (sPAR[14] * X[98]))) - (sPAR[9] * (X[112] * X[26]))) - (sPAR[61] * X[26])))));
    F[25]=((sPAR[9] * (X[112] * X[24])) + ((sPAR[57] * X[26]) + ((sPAR[61] * X[25]) + ((((-(X[25])) * (sPAR[56] + (sPAR[14] * X[98]))) - (sPAR[9] * (X[112] * X[25]))) - (sPAR[61] * X[25])))));
    F[24]=((0.5 * (sPAR[7] * (X[112] * (-1.0 + X[112])))) + ((sPAR[56] * X[25]) + ((sPAR[61] * X[24]) + ((((-(X[24])) * (sPAR[55] + (sPAR[14] * X[98]))) - (sPAR[9] * (X[112] * X[24]))) - (sPAR[61] * X[24])))));
    F[12]=((sPAR[9] * (X[129] * X[11])) + ((X[12] * (sPAR[61] + ((-(sPAR[54])) - (sPAR[14] * X[98])))) + (((-(sPAR[9])) * (X[129] * X[12])) - (sPAR[61] * X[12]))));
    F[11]=((sPAR[9] * (X[129] * X[10])) + ((sPAR[54] * X[12]) + ((sPAR[61] * X[11]) + ((((-(X[11])) * (sPAR[53] + (sPAR[14] * X[98]))) - (sPAR[9] * (X[129] * X[11]))) - (sPAR[61] * X[11])))));
    F[10]=((sPAR[9] * (X[129] * X[9])) + ((sPAR[53] * X[11]) + ((sPAR[61] * X[10]) + ((((-(X[10])) * (sPAR[52] + (sPAR[14] * X[98]))) - (sPAR[9] * (X[129] * X[10]))) - (sPAR[61] * X[10])))));
    F[9]=((sPAR[9] * (X[129] * X[8])) + ((sPAR[52] * X[10]) + ((sPAR[61] * X[9]) + ((((-(X[9])) * (sPAR[51] + (sPAR[14] * X[98]))) - (sPAR[9] * (X[129] * X[9]))) - (sPAR[61] * X[9])))));
    F[8]=((0.5 * (sPAR[7] * (X[129] * (-1.0 + X[129])))) + ((sPAR[51] * X[9]) + ((sPAR[61] * X[8]) + ((((-(X[8])) * (sPAR[50] + (sPAR[14] * X[98]))) - (sPAR[9] * (X[129] * X[8]))) - (sPAR[61] * X[8])))));
    F[7]=((sPAR[13] * (X[126] * X[6])) + ((X[7] * (sPAR[61] + ((-(sPAR[49])) - (sPAR[14] * X[98])))) + (((-(sPAR[13])) * (X[126] * X[7])) - (sPAR[61] * X[7]))));
    F[6]=((sPAR[13] * (X[126] * X[5])) + ((sPAR[49] * X[7]) + ((sPAR[61] * X[6]) + ((((-(X[6])) * (sPAR[48] + (sPAR[14] * X[98]))) - (sPAR[13] * (X[126] * X[6]))) - (sPAR[61] * X[6])))));
    F[5]=((sPAR[13] * (X[126] * X[4])) + ((sPAR[48] * X[6]) + ((sPAR[61] * X[5]) + ((((-(X[5])) * (sPAR[47] + (sPAR[14] * X[98]))) - (sPAR[13] * (X[126] * X[5]))) - (sPAR[61] * X[5])))));
    F[4]=((sPAR[13] * (X[126] * X[3])) + ((sPAR[47] * X[5]) + ((sPAR[61] * X[4]) + ((((-(X[4])) * (sPAR[46] + (sPAR[14] * X[98]))) - (sPAR[13] * (X[126] * X[4]))) - (sPAR[61] * X[4])))));
    F[3]=((0.5 * (sPAR[12] * (X[126] * (-1.0 + X[126])))) + ((sPAR[46] * X[4]) + ((sPAR[61] * X[3]) + ((((-(X[3])) * (sPAR[45] + (sPAR[14] * X[98]))) - (sPAR[13] * (X[126] * X[3]))) - (sPAR[61] * X[3])))));
    F[134]=((sPAR[21] * (X[95] * X[98])) + (((-(sPAR[3])) * (X[134] * X[29])) - (sPAR[4] * (X[135] * (X[134] * (X[2] / (5000.0 + X[2])))))));
    F[133]=((sPAR[21] * (X[93] * X[98])) + ((sPAR[3] * ((X[134] - X[133]) * X[29])) - (sPAR[4] * (X[135] * (X[133] * (X[2] / (5000.0 + X[2])))))));
    F[132]=((sPAR[21] * (X[91] * X[98])) + ((sPAR[3] * ((X[133] - X[132]) * X[29])) - (sPAR[4] * (X[135] * (X[132] * (X[2] / (5000.0 + X[2])))))));
    F[131]=((sPAR[21] * (X[89] * X[98])) + ((sPAR[3] * ((X[132] - X[131]) * X[29])) - (sPAR[4] * (X[135] * (X[131] * (X[2] / (5000.0 + X[2])))))));
    F[130]=((sPAR[21] * (X[87] * X[98])) + ((sPAR[3] * ((X[131] - X[130]) * X[29])) - (sPAR[4] * (X[135] * (X[130] * (X[2] / (5000.0 + X[2])))))));
    F[96]=((sPAR[25] * (X[95] * X[29])) + (((-(sPAR[2])) * X[96]) - (sPAR[63] * (X[107] * X[96]))));
    F[94]=((sPAR[25] * (X[93] * X[29])) + ((sPAR[2] * (X[96] - X[94])) - (sPAR[63] * (X[107] * X[94]))));
    F[92]=((sPAR[25] * (X[91] * X[29])) + ((sPAR[2] * (X[94] - X[92])) - (sPAR[63] * (X[107] * X[92]))));
    F[90]=((sPAR[25] * (X[89] * X[29])) + ((sPAR[2] * (X[92] - X[90])) - (sPAR[63] * (X[107] * X[90]))));
    F[88]=((sPAR[25] * (X[87] * X[29])) + ((sPAR[2] * (X[90] - X[88])) - (sPAR[63] * (X[107] * X[88]))));
    F[86]=((sPAR[25] * (X[85] * X[29])) + ((sPAR[2] * (X[88] - X[86])) - (sPAR[63] * (X[107] * X[86]))));
    F[84]=((sPAR[25] * (X[83] * X[29])) + ((sPAR[2] * (X[86] - X[84])) - (sPAR[63] * (X[107] * X[84]))));
    F[97]=((sPAR[25] * (X[82] * X[29])) + ((sPAR[2] * (X[84] - X[97])) - (sPAR[63] * (X[107] * X[97]))));
    F[95]=((sPAR[67] * (X[93] * X[33])) + ((X[95] * (((-(sPAR[25])) * X[29]) - (sPAR[21] * X[98]))) - (sPAR[63] * (X[107] * X[95]))));
    F[93]=((sPAR[67] * ((X[91] - X[93]) * X[33])) + ((X[93] * (((-(sPAR[25])) * X[29]) - (sPAR[21] * X[98]))) - (sPAR[63] * (X[107] * X[93]))));
    F[91]=((sPAR[67] * ((X[89] - X[91]) * X[33])) + ((X[91] * (((-(sPAR[25])) * X[29]) - (sPAR[21] * X[98]))) - (sPAR[63] * (X[107] * X[91]))));
    F[89]=((sPAR[67] * ((X[87] - X[89]) * X[33])) + ((X[89] * (((-(sPAR[25])) * X[29]) - (sPAR[21] * X[98]))) - (sPAR[63] * (X[107] * X[89]))));
    F[87]=((sPAR[67] * ((X[85] - X[87]) * X[33])) + ((X[87] * (((-(sPAR[25])) * X[29]) - (sPAR[21] * X[98]))) - (sPAR[63] * (X[107] * X[87]))));
    F[85]=((sPAR[67] * ((X[83] - X[85]) * X[33])) + (((-(sPAR[25])) * (X[85] * X[29])) - (sPAR[63] * (X[107] * X[85]))));
    F[83]=((sPAR[67] * ((X[82] - X[83]) * X[33])) + (((-(sPAR[25])) * (X[83] * X[29])) - (sPAR[63] * (X[107] * X[83]))));
    F[82]=((sPAR[66] * (X[33] * X[81])) + ((X[82] * (((-(sPAR[67])) * X[33]) - (sPAR[25] * X[29]))) - (sPAR[63] * (X[107] * X[82]))));
    F[81]=((sPAR[27] * (X[129] * X[80])) + ((sPAR[2] * X[97]) + ((((-(sPAR[74])) * X[81]) - (sPAR[66] * (X[33] * X[81]))) - (sPAR[63] * (X[107] * X[81])))));
    F[80]=((sPAR[74] * X[81]) + ((sPAR[21] * (X[98] * (X[87] + (X[89] + (X[91] + (X[93] + X[95])))))) - (sPAR[27] * (X[129] * X[80]))));
    F[129]=((sPAR[30] * (X[99] * X[126])) + ((sPAR[74] * X[81]) + ((sPAR[3] * (X[130] * X[29])) + ((sPAR[54] * X[12]) + ((sPAR[53] * X[11]) + ((sPAR[52] * X[10]) + ((sPAR[51] * X[9]) + ((2.0 * (sPAR[50] * X[8])) + ((X[129] * (((-(sPAR[27])) * X[80]) - (sPAR[7] * (-1.0 + X[129])))) + (((-(sPAR[9])) * (X[129] * (X[8] + (X[9] + (X[10] + (X[11] + X[12])))))) - (sPAR[62] * (X[107] * X[129]))))))))))));
    F[127]=((sPAR[26] * (X[126] * X[70])) - (sPAR[1] * X[127]));
    F[128]=((sPAR[28] * (X[126] * X[98])) - (sPAR[34] * (X[135] * X[128])));
    F[126]=((sPAR[79] * X[109]) + ((sPAR[49] * X[7]) + ((sPAR[48] * X[6]) + ((sPAR[47] * X[5]) + ((sPAR[46] * X[4]) + ((2.0 * (sPAR[45] * X[3])) + ((X[126] * (((-(sPAR[28])) * X[98]) - (sPAR[26] * X[70]))) + ((X[126] * (((-(sPAR[12])) * (-1.0 + X[126])) - (sPAR[13] * X[3]))) + ((((-(sPAR[13])) * (X[126] * (X[4] + (X[5] + (X[7] + X[6]))))) - (sPAR[30] * (X[99] * X[126]))) - (sPAR[62] * (X[107] * X[126])))))))))));
    F[106]=((sPAR[21] * (X[50] * X[98])) + (X[106] * (((-(sPAR[3])) * X[29]) - (sPAR[4] * (X[135] * (X[2] / (5000.0 + X[2])))))));
    F[105]=((sPAR[21] * (X[48] * X[98])) + ((sPAR[3] * ((X[106] - X[105]) * X[29])) - (sPAR[4] * (X[105] * (X[135] * (X[2] / (5000.0 + X[2])))))));
    F[104]=((sPAR[21] * (X[46] * X[98])) + ((sPAR[3] * ((X[105] - X[104]) * X[29])) - (sPAR[4] * (X[104] * (X[135] * (X[2] / (5000.0 + X[2])))))));
    F[103]=((sPAR[21] * (X[44] * X[98])) + ((sPAR[3] * ((X[104] - X[103]) * X[29])) - (sPAR[4] * (X[103] * (X[135] * (X[2] / (5000.0 + X[2])))))));
    F[102]=((sPAR[21] * (X[42] * X[98])) + ((sPAR[3] * ((X[103] - X[102]) * X[29])) - (sPAR[4] * (X[102] * (X[135] * (X[2] / (5000.0 + X[2])))))));
    F[51]=((sPAR[22] * (X[50] * X[110])) - (X[51] * (sPAR[5] + (sPAR[63] * X[107]))));
    F[49]=((sPAR[22] * (X[48] * X[110])) + ((sPAR[5] * (X[51] - X[49])) - (sPAR[63] * (X[49] * X[107]))));
    F[47]=((sPAR[22] * (X[46] * X[110])) + ((sPAR[5] * (X[49] - X[47])) - (sPAR[63] * (X[47] * X[107]))));
    F[45]=((sPAR[22] * (X[44] * X[110])) + ((sPAR[5] * (X[47] - X[45])) - (sPAR[63] * (X[45] * X[107]))));
    F[43]=((sPAR[22] * (X[42] * X[110])) + ((sPAR[5] * (X[45] - X[43])) - (sPAR[63] * (X[43] * X[107]))));
    F[41]=((sPAR[22] * (X[40] * X[110])) + ((sPAR[5] * (X[43] - X[41])) - (sPAR[63] * (X[41] * X[107]))));
    F[39]=((sPAR[22] * (X[38] * X[110])) + ((sPAR[5] * (X[41] - X[39])) - (sPAR[63] * (X[39] * X[107]))));
    F[52]=((sPAR[22] * (X[37] * X[110])) + ((sPAR[5] * (X[39] - X[52])) - (sPAR[63] * (X[52] * X[107]))));
    F[50]=((sPAR[67] * (X[48] * X[33])) + ((X[50] * (((-(sPAR[22])) * X[110]) - (sPAR[21] * X[98]))) - (sPAR[63] * (X[50] * X[107]))));
    F[48]=((sPAR[67] * ((X[46] - X[48]) * X[33])) + ((X[48] * (((-(sPAR[22])) * X[110]) - (sPAR[21] * X[98]))) - (sPAR[63] * (X[48] * X[107]))));
    F[46]=((sPAR[67] * ((X[44] - X[46]) * X[33])) + ((X[46] * (((-(sPAR[22])) * X[110]) - (sPAR[21] * X[98]))) - (sPAR[63] * (X[46] * X[107]))));
    F[44]=((sPAR[67] * ((X[42] - X[44]) * X[33])) + ((X[44] * (((-(sPAR[22])) * X[110]) - (sPAR[21] * X[98]))) - (sPAR[63] * (X[44] * X[107]))));
    F[42]=((sPAR[67] * ((X[40] - X[42]) * X[33])) + ((X[42] * (((-(sPAR[22])) * X[110]) - (sPAR[21] * X[98]))) - (sPAR[63] * (X[42] * X[107]))));
    F[40]=((sPAR[67] * ((X[38] - X[40]) * X[33])) + (X[40] * (((-(sPAR[22])) * X[110]) - (sPAR[63] * X[107]))));
    F[38]=((sPAR[67] * ((X[37] - X[38]) * X[33])) + (X[38] * (((-(sPAR[22])) * X[110]) - (sPAR[63] * X[107]))));
    F[37]=((sPAR[66] * (X[33] * X[36])) + ((X[37] * (((-(sPAR[67])) * X[33]) - (sPAR[22] * X[110]))) - (sPAR[63] * (X[37] * X[107]))));
    F[36]=((sPAR[17] * (X[101] * X[35])) + ((sPAR[5] * X[52]) + ((X[36] * (((-(sPAR[63])) * X[107]) - sPAR[70])) - (sPAR[66] * (X[33] * X[36])))));
    F[35]=((sPAR[70] * X[36]) + ((sPAR[21] * (X[98] * (X[42] + (X[44] + (X[46] + (X[48] + X[50])))))) - (sPAR[17] * (X[101] * X[35]))));
    F[101]=((sPAR[65] * (X[100] * X[99])) + ((sPAR[70] * X[36]) + ((sPAR[3] * (X[102] * X[29])) + ((sPAR[44] * X[23]) + ((sPAR[43] * X[22]) + ((sPAR[42] * X[21]) + ((sPAR[41] * X[20]) + ((2.0 * (sPAR[40] * X[19])) + ((X[101] * (((((-(sPAR[17])) * X[35]) - sPAR[69]) - (sPAR[10] * (-1.0 + X[101]))) - (sPAR[11] * X[19]))) + (((-(sPAR[11])) * (X[101] * (X[20] + (X[21] + (X[22] + X[23]))))) - (sPAR[62] * (X[107] * X[101]))))))))))));
    F[100]=((sPAR[77] * X[109]) + ((sPAR[69] * X[101]) - (sPAR[65] * (X[100] * X[99]))));
    F[115]=((sPAR[24] * (X[114] * X[110])) - (sPAR[73] * X[115]));
    F[71]=((sPAR[18] * (X[112] * X[70])) + (((-(sPAR[71])) * X[71]) - (sPAR[62] * (X[107] * X[71]))));
    F[70]=((sPAR[71] * X[71]) + ((sPAR[1] * X[127]) + (((-(sPAR[18])) * (X[112] * X[70])) - (sPAR[26] * (X[126] * X[70])))));
    F[112]=((sPAR[29] * (X[110] * X[99])) + ((sPAR[71] * X[71]) + ((sPAR[59] * X[28]) + ((sPAR[58] * X[27]) + ((sPAR[57] * X[26]) + ((sPAR[56] * X[25]) + ((2.0 * (sPAR[55] * X[24])) + ((X[112] * (((((-(sPAR[23])) * X[98]) - (sPAR[32] * X[72])) - (sPAR[18] * X[70])) - (sPAR[7] * (-1.0 + X[112])))) + (((-(sPAR[9])) * (X[112] * (X[24] + (X[25] + (X[26] + (X[27] + X[28])))))) - (sPAR[62] * (X[107] * X[112])))))))))));
    F[72]=((sPAR[31] * (X[110] * X[72])) + ((sPAR[32] * (X[112] * X[72])) + (((-(sPAR[31])) * (X[110] * X[72])) - (sPAR[32] * (X[112] * X[72])))));
    F[113]=((sPAR[23] * (X[112] * X[98])) - (sPAR[33] * (X[113] * X[135])));
    F[111]=((sPAR[23] * (X[110] * X[98])) - (sPAR[33] * (X[111] * X[135])));
    F[110]=((sPAR[78] * X[109]) + ((sPAR[73] * X[115]) + ((sPAR[5] * X[52]) + ((X[110] * (((-(sPAR[23])) * X[98]) - (sPAR[31] * X[72]))) + (((((((((((-(sPAR[22])) * (X[50] * X[110])) - (sPAR[29] * (X[110] * X[99]))) - (sPAR[22] * (X[46] * X[110]))) - (sPAR[22] * (X[42] * X[110]))) - (sPAR[22] * (X[38] * X[110]))) - (sPAR[22] * (X[37] * X[110]))) - (sPAR[22] * (X[40] * X[110]))) - (sPAR[22] * (X[44] * X[110]))) - (sPAR[24] * (X[114] * X[110]))) - (sPAR[22] * (X[48] * X[110])))))));
    F[2]=0.0;
    F[18]=(sPAR[14] * (X[98] * (X[13] + (X[14] + (X[15] + (X[16] + (X[17] + (X[3] + (X[4] + (X[5] + (X[6] + (X[7] + (X[8] + (X[9] + (X[10] + (X[11] + (X[12] + (X[24] + (X[25] + (X[26] + (X[27] + (X[28] + (X[19] + (X[20] + (X[21] + (X[22] + X[23]))))))))))))))))))))))))));
    F[107]=((sPAR[8] * (X[73] * X[17])) + ((2.0 * ((sPAR[62] * (X[73] * X[107])) + (sPAR[63] * (X[107] * (X[53] + (X[54] + (X[55] + (X[57] + (X[59] + (X[61] + (X[63] + (X[65] + (X[67] + (X[69] + (X[56] + (X[58] + (X[60] + (X[62] + (X[64] + (X[66] + X[68])))))))))))))))))))) + ((sPAR[13] * (X[126] * X[7])) + ((2.0 * (sPAR[62] * (X[107] * X[126]))) + ((sPAR[9] * (X[129] * X[12])) + ((2.0 * ((X[107] * ((sPAR[62] * X[129]) + (sPAR[63] * X[81]))) + (sPAR[63] * (X[107] * (X[82] + (X[83] + (X[85] + (X[87] + (X[89] + (X[91] + (X[93] + (X[95] + (X[97] + (X[84] + (X[86] + (X[88] + (X[90] + (X[92] + (X[94] + X[96]))))))))))))))))))) + ((sPAR[9] * (X[112] * X[28])) + ((2.0 * (sPAR[62] * (X[107] * (X[112] + X[71])))) + ((sPAR[11] * (X[23] * X[101])) + ((2.0 * ((X[107] * ((sPAR[62] * X[101]) + (sPAR[63] * (X[36] + X[37])))) + (sPAR[63] * (X[107] * (X[38] + (X[40] + (X[42] + (X[44] + (X[46] + (X[48] + (X[50] + (X[52] + (X[39] + (X[41] + (X[43] + (X[45] + (X[47] + (X[49] + X[51])))))))))))))))))) + ((X[107] * (((((((((-(sPAR[63])) * (X[36] + X[37])) - (sPAR[62] * (X[71] + X[101]))) - (sPAR[62] * X[112])) - (sPAR[63] * (X[82] + (X[83] + (X[85] + (X[87] + (X[89] + (X[91] + (X[93] + (X[95] + (X[97] + (X[84] + (X[86] + (X[88] + (X[90] + (X[92] + (X[94] + X[96]))))))))))))))))) - (sPAR[63] * (X[53] + (X[54] + (X[57] + (X[55] + (X[61] + (X[59] + (X[65] + (X[63] + (X[69] + (X[67] + (X[58] + (X[56] + (X[62] + (X[60] + (X[66] + X[64]))))))))))))))))) - (sPAR[62] * X[126])) - (sPAR[62] * (X[73] + X[129]))) - (sPAR[63] * (X[68] + X[81])))) - (sPAR[63] * (X[107] * (X[38] + (X[40] + (X[42] + (X[44] + (X[46] + (X[48] + (X[50] + (X[52] + (X[39] + (X[41] + (X[43] + (X[45] + (X[47] + (X[49] + X[51])))))))))))))))))))))))))));
    F[17]=((sPAR[8] * (X[73] * X[16])) + (((sPAR[61] - sPAR[39]) * X[17]) + ((X[17] * (((-(sPAR[14])) * X[98]) - sPAR[61])) - (sPAR[8] * (X[73] * X[17])))));
    F[16]=((sPAR[8] * (X[73] * X[15])) + ((sPAR[39] * X[17]) + ((sPAR[61] * X[16]) + ((((-(X[16])) * (sPAR[38] + (sPAR[14] * X[98]))) - (sPAR[8] * (X[73] * X[16]))) - (sPAR[61] * X[16])))));
    F[15]=((sPAR[8] * (X[73] * X[14])) + ((sPAR[38] * X[16]) + ((sPAR[61] * X[15]) + ((((-(X[15])) * (sPAR[37] + (sPAR[14] * X[98]))) - (sPAR[8] * (X[73] * X[15]))) - (sPAR[61] * X[15])))));
    F[14]=((sPAR[8] * (X[73] * X[13])) + ((sPAR[37] * X[15]) + ((sPAR[61] * X[14]) + ((((-(X[14])) * (sPAR[36] + (sPAR[14] * X[98]))) - (sPAR[8] * (X[73] * X[14]))) - (sPAR[61] * X[14])))));
    F[13]=((0.5 * (sPAR[6] * (X[73] * (-1.0 + X[73])))) + ((sPAR[36] * X[14]) + ((sPAR[61] * X[13]) + ((((-(X[13])) * (sPAR[35] + (sPAR[14] * X[98]))) - (sPAR[8] * (X[73] * X[13]))) - (sPAR[61] * X[13])))));
    F[68]=((sPAR[19] * (X[67] * X[29])) - (X[68] * (sPAR[2] + (sPAR[63] * X[107]))));
    F[66]=((sPAR[19] * (X[65] * X[29])) + ((sPAR[2] * (X[68] - X[66])) - (sPAR[63] * (X[66] * X[107]))));
    F[64]=((sPAR[19] * (X[63] * X[29])) + ((sPAR[2] * (X[66] - X[64])) - (sPAR[63] * (X[64] * X[107]))));
    F[62]=((sPAR[19] * (X[61] * X[29])) + ((sPAR[2] * (X[64] - X[62])) - (sPAR[63] * (X[62] * X[107]))));
    F[60]=((sPAR[19] * (X[59] * X[29])) + ((sPAR[2] * (X[62] - X[60])) - (sPAR[63] * (X[60] * X[107]))));
    F[58]=((sPAR[19] * (X[57] * X[29])) + ((sPAR[2] * (X[60] - X[58])) - (sPAR[63] * (X[58] * X[107]))));
    F[56]=((sPAR[19] * (X[55] * X[29])) + ((sPAR[2] * (X[58] - X[56])) - (sPAR[63] * (X[56] * X[107]))));
    F[69]=((sPAR[19] * (X[54] * X[29])) + ((sPAR[2] * (X[56] - X[69])) - (sPAR[63] * (X[69] * X[107]))));
    F[78]=((sPAR[21] * (X[67] * X[98])) + (((-(sPAR[3])) * (X[78] * X[29])) - (sPAR[4] * (X[135] * (X[78] * (X[2] / (5000.0 + X[2])))))));
    F[77]=((sPAR[21] * (X[65] * X[98])) + ((sPAR[3] * ((X[78] - X[77]) * X[29])) - (sPAR[4] * (X[135] * (X[77] * (X[2] / (5000.0 + X[2])))))));
    F[76]=((sPAR[21] * (X[63] * X[98])) + ((sPAR[3] * ((X[77] - X[76]) * X[29])) - (sPAR[4] * (X[135] * (X[76] * (X[2] / (5000.0 + X[2])))))));
    F[75]=((sPAR[21] * (X[61] * X[98])) + ((sPAR[3] * ((X[76] - X[75]) * X[29])) - (sPAR[4] * (X[135] * (X[75] * (X[2] / (5000.0 + X[2])))))));
    F[74]=((sPAR[21] * (X[59] * X[98])) + ((sPAR[3] * ((X[75] - X[74]) * X[29])) - (sPAR[4] * (X[135] * (X[74] * (X[2] / (5000.0 + X[2])))))));
    F[67]=((sPAR[67] * (X[65] * X[33])) + ((X[67] * (((-(sPAR[19])) * X[29]) - (sPAR[21] * X[98]))) - (sPAR[63] * (X[67] * X[107]))));
    F[65]=((sPAR[67] * ((X[63] - X[65]) * X[33])) + ((X[65] * (((-(sPAR[19])) * X[29]) - (sPAR[21] * X[98]))) - (sPAR[63] * (X[65] * X[107]))));
    F[63]=((sPAR[67] * ((X[61] - X[63]) * X[33])) + ((X[63] * (((-(sPAR[19])) * X[29]) - (sPAR[21] * X[98]))) - (sPAR[63] * (X[63] * X[107]))));
    F[61]=((sPAR[67] * ((X[59] - X[61]) * X[33])) + ((X[61] * (((-(sPAR[19])) * X[29]) - (sPAR[21] * X[98]))) - (sPAR[63] * (X[61] * X[107]))));
    F[59]=((sPAR[67] * ((X[57] - X[59]) * X[33])) + ((X[59] * (((-(sPAR[19])) * X[29]) - (sPAR[21] * X[98]))) - (sPAR[63] * (X[59] * X[107]))));
    F[57]=((sPAR[67] * ((X[55] - X[57]) * X[33])) + (X[57] * (((-(sPAR[19])) * X[29]) - (sPAR[63] * X[107]))));
    F[55]=((sPAR[67] * ((X[54] - X[55]) * X[33])) + (X[55] * (((-(sPAR[19])) * X[29]) - (sPAR[63] * X[107]))));
    F[54]=((sPAR[66] * (X[33] * X[53])) + ((X[54] * (((-(sPAR[67])) * X[33]) - (sPAR[19] * X[29]))) - (sPAR[63] * (X[54] * X[107]))));
    F[33]=((sPAR[16] * (X[32] * X[31])) + ((X[33] * (((((((-(sPAR[67])) * (X[37] + (X[38] + (X[40] + (X[42] + (X[44] + (X[46] + X[48]))))))) - (sPAR[66] * X[81])) - (sPAR[66] * X[36])) - (sPAR[67] * (X[57] + (X[59] + (X[61] + (X[63] + X[65])))))) - (sPAR[66] * X[53])) - (sPAR[67] * (X[54] + X[55])))) - (sPAR[67] * (X[33] * (X[82] + (X[83] + (X[85] + (X[87] + (X[89] + (X[91] + X[93]))))))))));
    F[31]=((sPAR[15] * (X[30] * (X[114] * (X[2] / (5000.0 + X[2]))))) - (sPAR[16] * (X[32] * X[31])));
    F[99]=((sPAR[64] * (X[79] * X[99])) + ((sPAR[61] * (X[13] + (X[14] + (X[15] + (X[16] + X[17]))))) + ((sPAR[29] * (X[110] * X[99])) + ((sPAR[65] * (X[100] * X[99])) + ((sPAR[30] * (X[99] * X[126])) + ((sPAR[61] * (X[3] + (X[4] + (X[5] + (X[6] + (X[7] + (X[8] + (X[9] + (X[10] + (X[11] + (X[12] + (X[24] + (X[25] + (X[26] + (X[27] + (X[28] + (X[19] + (X[20] + (X[21] + (X[22] + X[23])))))))))))))))))))) + ((sPAR[60] * X[109]) + ((((((-(sPAR[75])) * X[99]) - (sPAR[29] * (X[110] * X[99]))) - (sPAR[65] * (X[100] * X[99]))) - (sPAR[64] * (X[79] * X[99]))) - (sPAR[30] * (X[99] * X[126]))))))))));
    F[98]=((sPAR[80] * (X[98] * (X[114] * X[135]))) + ((sPAR[3] * (X[74] * X[29])) + ((X[135] * ((sPAR[4] * ((X[2] * ((X[74] + X[75]) / (5000.0 + X[2]))) + ((X[2] * ((X[76] + X[77]) / (5000.0 + X[2]))) + (X[78] * (X[2] / (5000.0 + X[2])))))) + (sPAR[33] * (X[111] + X[113])))) + ((X[102] * ((sPAR[3] * X[29]) + (sPAR[4] * (X[135] * (X[2] / (5000.0 + X[2])))))) + ((sPAR[4] * (X[135] * (X[2] * ((X[103] + (X[104] + (X[105] + X[106]))) / (5000.0 + X[2]))))) + ((sPAR[34] * (X[135] * X[128])) + ((sPAR[3] * (X[130] * X[29])) + ((sPAR[4] * (X[135] * ((X[2] * ((X[130] + X[131]) / (5000.0 + X[2]))) + ((X[2] * ((X[132] + X[133]) / (5000.0 + X[2]))) + (X[134] * (X[2] / (5000.0 + X[2]))))))) + ((X[98] * (((((((-(sPAR[23])) * (X[110] + X[112])) - (sPAR[14] * (X[15] + (X[16] + X[17])))) - (sPAR[21] * (X[59] + X[61]))) - (sPAR[80] * (X[114] * X[135]))) - (sPAR[21] * (X[63] + (X[65] + X[67])))) - (sPAR[14] * (X[13] + X[14])))) + ((((((((((((((((((((((((-(sPAR[14])) * (X[23] * X[98])) - (sPAR[28] * (X[126] * X[98]))) - (sPAR[14] * (X[21] * X[98]))) - (sPAR[14] * (X[19] * X[98]))) - (sPAR[14] * (X[27] * X[98]))) - (sPAR[14] * (X[25] * X[98]))) - (sPAR[14] * (X[12] * X[98]))) - (sPAR[14] * (X[10] * X[98]))) - (sPAR[14] * (X[8] * X[98]))) - (sPAR[14] * (X[6] * X[98]))) - (sPAR[14] * (X[4] * X[98]))) - (sPAR[21] * (X[95] * X[98]))) - (sPAR[14] * (X[3] * X[98]))) - (sPAR[14] * (X[5] * X[98]))) - (sPAR[14] * (X[7] * X[98]))) - (sPAR[14] * (X[9] * X[98]))) - (sPAR[14] * (X[11] * X[98]))) - (sPAR[14] * (X[24] * X[98]))) - (sPAR[14] * (X[26] * X[98]))) - (sPAR[14] * (X[28] * X[98]))) - (sPAR[14] * (X[20] * X[98]))) - (sPAR[21] * (X[98] * (X[42] + (X[44] + (X[46] + (X[48] + (X[50] + (X[89] + (X[87] + (X[93] + X[91]))))))))))) - (sPAR[14] * (X[22] * X[98]))))))))))));
    F[29]=((sPAR[2] * X[69]) + ((sPAR[3] * (X[29] * (X[78] + (X[77] + (X[76] + (X[75] + (X[74] + (X[106] + (X[105] + (X[104] + (X[103] + X[102]))))))))))) + ((sPAR[2] * X[97]) + ((X[29] * ((sPAR[3] * (X[134] + (X[133] + (X[132] + (X[131] + X[130]))))) + (((((((-(sPAR[3])) * (X[134] + X[133])) - (sPAR[25] * (X[91] + (X[89] + (X[87] + (X[85] + (X[83] + X[82]))))))) - (sPAR[3] * (X[76] + (X[75] + (X[74] + (X[106] + (X[105] + (X[104] + (X[103] + X[102]))))))))) - (sPAR[25] * (X[95] + X[93]))) - (sPAR[3] * (X[78] + X[77]))) - (sPAR[19] * (X[57] + (X[59] + (X[61] + (X[63] + (X[65] + (X[67] + (X[54] + X[55]))))))))))) - (sPAR[3] * (X[29] * (X[132] + (X[131] + X[130]))))))));
    F[53]=((sPAR[20] * (X[73] * X[34])) + ((sPAR[2] * X[69]) + ((X[53] * (((-(sPAR[63])) * X[107]) - sPAR[72])) - (sPAR[66] * (X[33] * X[53])))));
    F[34]=((sPAR[72] * X[53]) + ((sPAR[21] * (X[98] * (X[59] + (X[61] + (X[63] + (X[65] + X[67])))))) - (sPAR[20] * (X[73] * X[34]))));
    F[32]=((X[33] * ((sPAR[66] * X[53]) + ((sPAR[67] * (X[54] + X[55])) + ((sPAR[67] * (X[57] + (X[59] + (X[61] + (X[63] + X[65]))))) + ((sPAR[66] * X[36]) + ((sPAR[67] * (X[37] + (X[38] + (X[40] + (X[42] + (X[44] + (X[46] + X[48]))))))) + (sPAR[66] * X[81]))))))) + ((sPAR[67] * (X[33] * (X[82] + (X[83] + (X[85] + (X[87] + (X[89] + (X[91] + X[93])))))))) - (sPAR[16] * (X[32] * X[31]))));
    F[30]=((sPAR[16] * (X[32] * X[31])) - (sPAR[15] * (X[30] * (X[114] * (X[2] / (5000.0 + X[2]))))));
    F[114]=((sPAR[81] * X[109]) + ((3.0 * (sPAR[82] * (pow(X[73],6.0) / (1.1390625e+19 + pow(X[73],6.0))))) + ((sPAR[2] * (X[68] + (X[66] + (X[64] + (X[62] + (X[60] + (X[58] + (X[56] + X[69])))))))) + ((sPAR[3] * (X[29] * (X[78] + (X[77] + (X[76] + X[75]))))) + ((4.0 * ((sPAR[3] * (X[74] * X[29])) + (sPAR[4] * (X[135] * (X[74] * (X[2] / (5000.0 + X[2]))))))) + ((sPAR[4] * (X[135] * ((5.0 * (X[75] * (X[2] / (5000.0 + X[2])))) + ((6.0 * (X[76] * (X[2] / (5000.0 + X[2])))) + ((7.0 * (X[77] * (X[2] / (5000.0 + X[2])))) + (8.0 * (X[78] * (X[2] / (5000.0 + X[2]))))))))) + ((sPAR[73] * X[115]) + ((sPAR[5] * (X[51] + (X[49] + (X[47] + (X[45] + (X[43] + (X[41] + (X[39] + X[52])))))))) + ((sPAR[3] * (X[29] * (X[106] + (X[105] + (X[104] + X[103]))))) + ((4.0 * (X[102] * ((sPAR[3] * X[29]) + (sPAR[4] * (X[135] * (X[2] / (5000.0 + X[2]))))))) + ((sPAR[4] * ((5.0 * (X[103] * (X[135] * (X[2] / (5000.0 + X[2]))))) + ((6.0 * (X[104] * (X[135] * (X[2] / (5000.0 + X[2]))))) + ((7.0 * (X[105] * (X[135] * (X[2] / (5000.0 + X[2]))))) + (8.0 * (X[106] * (X[135] * (X[2] / (5000.0 + X[2]))))))))) + ((sPAR[2] * (X[96] + (X[94] + (X[92] + (X[90] + (X[88] + (X[86] + (X[84] + X[97])))))))) + ((sPAR[3] * (X[29] * (X[134] + (X[133] + (X[132] + X[131]))))) + ((4.0 * ((sPAR[3] * (X[130] * X[29])) + (sPAR[4] * (X[135] * (X[130] * (X[2] / (5000.0 + X[2]))))))) + ((sPAR[4] * (X[135] * ((5.0 * (X[131] * (X[2] / (5000.0 + X[2])))) + ((6.0 * (X[132] * (X[2] / (5000.0 + X[2])))) + ((7.0 * (X[133] * (X[2] / (5000.0 + X[2])))) + (8.0 * (X[134] * (X[2] / (5000.0 + X[2]))))))))) + ((((-(sPAR[80])) * (X[98] * (X[114] * X[135]))) - (sPAR[15] * (X[30] * (X[114] * (X[2] / (5000.0 + X[2])))))) - (sPAR[24] * (X[114] * X[110]))))))))))))))))));
    F[73]=((sPAR[82] * (pow(X[73],6.0) / (1.1390625e+19 + pow(X[73],6.0)))) + ((sPAR[64] * (X[79] * X[99])) + ((sPAR[72] * X[53]) + ((sPAR[3] * (X[74] * X[29])) + ((sPAR[39] * X[17]) + ((sPAR[38] * X[16]) + ((sPAR[37] * X[15]) + ((sPAR[36] * X[14]) + ((2.0 * (sPAR[35] * X[13])) + ((X[73] * (((-(sPAR[68])) - (sPAR[20] * X[34])) - (sPAR[8] * X[17]))) + ((((((((-(sPAR[62])) * (X[73] * X[107])) - (sPAR[82] * (pow(X[73],6.0) / (1.1390625e+19 + pow(X[73],6.0))))) - (sPAR[8] * (X[73] * X[16]))) - (sPAR[8] * (X[73] * X[14]))) - (sPAR[6] * (X[73] * (-1.0 + X[73])))) - (sPAR[8] * (X[73] * X[13]))) - (sPAR[8] * (X[73] * X[15])))))))))))));
    F[79]=((sPAR[76] * X[109]) + ((sPAR[68] * X[73]) - (sPAR[64] * (X[79] * X[99]))));

}

template<class Precision> __forceinline__ __device__ void PerThread_EventFunction(
	int tid, int NT, Precision*	  EF, \
	Precision     T, Precision    dT, Precision*    TD, Precision*	X, \
	Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi  		
) {
    

}

template<class Precision> __forceinline__ __device__ void PerThread_ActionAfterEventDetection(
    int tid, int NT, int IDX, int& UDT, \
    Precision    &T, Precision   &dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi
) {
    
}

template<class Precision> __forceinline__ __device__ void PerThread_ActionAfterSuccessfulTimeStep(
    int tid, int NT, int& UDT, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi
) {
    
}

template<class Precision> __forceinline__ __device__ void PerThread_Initialization(
    int tid, int NT, int& DOIDX, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR,       int* sPARi, Precision* ACC, int* ACCi
) {
    T     = TD[0];
    DOIDX = 0;
    ACC[0]=1.0; //AggP
    ACC[1]=1.0; //Tot_MisP
    ACC[2]=1.0; //Tot_Protein
    ACC[3]=1.0; //Tot_UCHL1
    ACC[4]=1.0; //Tot_Ub
    ACC[5]=1.0; //Tot_asyn
    ACC[6]=1.0; //Tot_asyn_dam
    ACC[7]=1.0; //UCHL1_substrate
    ACC[8]=1.0; //Ub_Conjugates
    sPAR[0]=1.0; //cytosol
    sPAR[1]=0.001; //kCMAasyn
    sPAR[2]=0.0001; //kactDUB
    sPAR[3]=1e-06; //kactDUBProt
    sPAR[4]=0.01; //kactProt
    sPAR[5]=0.0001; //kactUchl1
    sPAR[6]=1e-12; //kagg1
    sPAR[7]=1e-05; //kagg1dam
    sPAR[8]=1e-10; //kagg2
    sPAR[9]=0.005; //kagg2dam
    sPAR[10]=1e-12; //kaggSUB1
    sPAR[11]=1e-10; //kaggSUB2
    sPAR[12]=5e-12; //kaggasyn1
    sPAR[13]=5e-10; //kaggasyn2
    sPAR[14]=5e-09; //kbinAggProt
    sPAR[15]=0.0002; //kbinE1Ub
    sPAR[16]=0.001; //kbinE2Ub
    sPAR[17]=0.0005; //kbinE3SUB
    sPAR[18]=1e-05; //kbinLamp2aUCHL1dam
    sPAR[19]=2e-07; //kbinMisPDUB
    sPAR[20]=0.0001; //kbinMisPE3
    sPAR[21]=5e-06; //kbinProt
    sPAR[22]=4e-08; //kbinSUBUCHL1
    sPAR[23]=4e-10; //kbinUCHL1Prot
    sPAR[24]=3e-06; //kbinUbUCHL1
    sPAR[25]=2e-07; //kbinasynDUB
    sPAR[26]=4e-08; //kbinasynLamp2a
    sPAR[27]=0.0001; //kbinasynParkin
    sPAR[28]=1.7e-09; //kbinasynProt
    sPAR[29]=1e-08; //kdamUCHL1
    sPAR[30]=5e-08; //kdamasyn
    sPAR[31]=2.7e-09; //kdegLysUCHL1
    sPAR[32]=2.7e-09; //kdegLysUCHL1dam
    sPAR[33]=0.01; //kdegProtUCHL1
    sPAR[34]=0.01; //kdegasynProt
    sPAR[35]=1e-08; //kdisagg1
    sPAR[36]=8e-09; //kdisagg2
    sPAR[37]=6e-09; //kdisagg3
    sPAR[38]=4e-09; //kdisagg4
    sPAR[39]=2e-09; //kdisagg5
    sPAR[40]=1e-08; //kdisaggSUB1
    sPAR[41]=8e-09; //kdisaggSUB2
    sPAR[42]=6e-09; //kdisaggSUB3
    sPAR[43]=4e-09; //kdisaggSUB4
    sPAR[44]=2e-09; //kdisaggSUB5
    sPAR[45]=1e-08; //kdisaggasyn1
    sPAR[46]=8e-09; //kdisaggasyn2
    sPAR[47]=6e-09; //kdisaggasyn3
    sPAR[48]=4e-09; //kdisaggasyn4
    sPAR[49]=2e-09; //kdisaggasyn5
    sPAR[50]=1e-08; //kdisaggasyndam1
    sPAR[51]=8e-09; //kdisaggasyndam2
    sPAR[52]=6e-09; //kdisaggasyndam3
    sPAR[53]=4e-09; //kdisaggasyndam4
    sPAR[54]=2e-09; //kdisaggasyndam5
    sPAR[55]=1e-08; //kdisagguchl1dam1
    sPAR[56]=8e-09; //kdisagguchl1dam2
    sPAR[57]=6e-09; //kdisagguchl1dam3
    sPAR[58]=4e-09; //kdisagguchl1dam4
    sPAR[59]=2e-09; //kdisagguchl1dam5
    sPAR[60]=0.01; //kgenROS
    sPAR[61]=2e-05; //kgenROSAggP
    sPAR[62]=5e-09; //kigrowth1
    sPAR[63]=5e-09; //kigrowth2
    sPAR[64]=4e-05; //kmisfold
    sPAR[65]=2e-05; //kmisfoldSUB
    sPAR[66]=0.001; //kmonoUb
    sPAR[67]=0.01; //kpolyUb
    sPAR[68]=8.000000000000001e-05; //krefold
    sPAR[69]=5e-05; //krefoldSUB
    sPAR[70]=0.0002; //krelE3SUB
    sPAR[71]=5e-05; //krelLamp2aUCHL1dam
    sPAR[72]=0.0002; //krelMisPE3
    sPAR[73]=0.05; //krelUbUCHL1
    sPAR[74]=0.0002; //krelasynParkin
    sPAR[75]=0.001; //kremROS
    sPAR[76]=2.4; //ksynNatP
    sPAR[77]=0.13; //ksynSUB
    sPAR[78]=0.022; //ksynUCHL1
    sPAR[79]=0.028; //ksynasyn
    sPAR[80]=4.4e-09; //kubd
    sPAR[81]=0.008999999999999999; //kubs
    sPAR[82]=0.1; //kubss
    X[0]=1000.0; //ADP
    X[1]=1000.0; //AMP
    X[2]=10000.0; //ATP
    X[3]=0.0; //AggA1
    X[4]=0.0; //AggA2
    X[5]=0.0; //AggA3
    X[6]=0.0; //AggA4
    X[7]=0.0; //AggA5
    X[8]=0.0; //AggD1
    X[9]=0.0; //AggD2
    X[10]=0.0; //AggD3
    X[11]=0.0; //AggD4
    X[12]=0.0; //AggD5
    X[13]=0.0; //AggP1
    X[14]=0.0; //AggP2
    X[15]=0.0; //AggP3
    X[16]=0.0; //AggP4
    X[17]=0.0; //AggP5
    X[18]=0.0; //AggP_Proteasome
    X[19]=0.0; //AggS1
    X[20]=0.0; //AggS2
    X[21]=0.0; //AggS3
    X[22]=0.0; //AggS4
    X[23]=0.0; //AggS5
    X[24]=0.0; //AggU1
    X[25]=0.0; //AggU2
    X[26]=0.0; //AggU3
    X[27]=0.0; //AggU4
    X[28]=0.0; //AggU5
    X[29]=160.0; //DUB
    X[30]=105.0; //E1
    X[31]=795.0; //E1_Ub
    X[32]=50.0; //E2
    X[33]=950.0; //E2_Ub
    X[34]=300.0; //E3
    X[35]=160.0; //E3SUB
    X[36]=5.0; //E3SUB_SUB_misfolded
    X[37]=0.0; //E3SUB_SUB_misfolded_Ub
    X[38]=0.0; //E3SUB_SUB_misfolded_Ub2
    X[39]=20.0; //E3SUB_SUB_misfolded_Ub2_UCHL1
    X[40]=0.0; //E3SUB_SUB_misfolded_Ub3
    X[41]=25.0; //E3SUB_SUB_misfolded_Ub3_UCHL1
    X[42]=0.0; //E3SUB_SUB_misfolded_Ub4
    X[43]=25.0; //E3SUB_SUB_misfolded_Ub4_UCHL1
    X[44]=0.0; //E3SUB_SUB_misfolded_Ub5
    X[45]=30.0; //E3SUB_SUB_misfolded_Ub5_UCHL1
    X[46]=0.0; //E3SUB_SUB_misfolded_Ub6
    X[47]=30.0; //E3SUB_SUB_misfolded_Ub6_UCHL1
    X[48]=0.0; //E3SUB_SUB_misfolded_Ub7
    X[49]=40.0; //E3SUB_SUB_misfolded_Ub7_UCHL1
    X[50]=15.0; //E3SUB_SUB_misfolded_Ub8
    X[51]=40.0; //E3SUB_SUB_misfolded_Ub8_UCHL1
    X[52]=20.0; //E3SUB_SUB_misfolded_Ub_UCHL1
    X[53]=2.0; //E3_MisP
    X[54]=0.0; //E3_MisP_Ub
    X[55]=0.0; //E3_MisP_Ub2
    X[56]=100.0; //E3_MisP_Ub2_DUB
    X[57]=0.0; //E3_MisP_Ub3
    X[58]=100.0; //E3_MisP_Ub3_DUB
    X[59]=0.0; //E3_MisP_Ub4
    X[60]=100.0; //E3_MisP_Ub4_DUB
    X[61]=0.0; //E3_MisP_Ub5
    X[62]=100.0; //E3_MisP_Ub5_DUB
    X[63]=0.0; //E3_MisP_Ub6
    X[64]=100.0; //E3_MisP_Ub6_DUB
    X[65]=0.0; //E3_MisP_Ub7
    X[66]=100.0; //E3_MisP_Ub7_DUB
    X[67]=300.0; //E3_MisP_Ub8
    X[68]=100.0; //E3_MisP_Ub8_DUB
    X[69]=100.0; //E3_MisP_Ub_DUB
    X[70]=200.0; //Lamp2a
    X[71]=0.0; //Lamp2a_UCHL1_damaged
    X[72]=1200.0; //Lysosome
    X[73]=80.0; //MisP
    X[74]=0.0; //MisP_Ub4_Proteasome
    X[75]=1.0; //MisP_Ub5_Proteasome
    X[76]=2.0; //MisP_Ub6_Proteasome
    X[77]=10.0; //MisP_Ub7_Proteasome
    X[78]=350.0; //MisP_Ub8_Proteasome
    X[79]=6000.0; //NatP
    X[80]=4800.0; //Parkin
    X[81]=0.0; //Parkin_asyn_dam
    X[82]=0.0; //Parkin_asyn_dam_Ub
    X[83]=0.0; //Parkin_asyn_dam_Ub2
    X[84]=0.0; //Parkin_asyn_dam_Ub2_DUB
    X[85]=0.0; //Parkin_asyn_dam_Ub3
    X[86]=0.0; //Parkin_asyn_dam_Ub3_DUB
    X[87]=0.0; //Parkin_asyn_dam_Ub4
    X[88]=0.0; //Parkin_asyn_dam_Ub4_DUB
    X[89]=0.0; //Parkin_asyn_dam_Ub5
    X[90]=0.0; //Parkin_asyn_dam_Ub5_DUB
    X[91]=0.0; //Parkin_asyn_dam_Ub6
    X[92]=0.0; //Parkin_asyn_dam_Ub6_DUB
    X[93]=0.0; //Parkin_asyn_dam_Ub7
    X[94]=0.0; //Parkin_asyn_dam_Ub7_DUB
    X[95]=0.0; //Parkin_asyn_dam_Ub8
    X[96]=0.0; //Parkin_asyn_dam_Ub8_DUB
    X[97]=0.0; //Parkin_asyn_dam_Ub_DUB
    X[98]=1500.0; //Proteasome
    X[99]=10.0; //ROS
    X[100]=815.0; //SUB
    X[101]=5.0; //SUB_misfolded
    X[102]=0.0; //SUB_misfolded_Ub4_Proteasome
    X[103]=0.0; //SUB_misfolded_Ub5_Proteasome
    X[104]=0.0; //SUB_misfolded_Ub6_Proteasome
    X[105]=5.0; //SUB_misfolded_Ub7_Proteasome
    X[106]=20.0; //SUB_misfolded_Ub8_Proteasome
    X[107]=0.0; //SeqAggP
    X[108]=1.0; //Sink
    X[109]=1.0; //Source
    X[110]=5785.0; //UCHL1
    X[111]=10.0; //UCHL1_Proteasome
    X[112]=0.0; //UCHL1_damaged
    X[113]=0.0; //UCHL1_damaged_Proteasome
    X[114]=0.0; //Ub
    X[115]=500.0; //Ub_UCHL1
    X[116]=0.0; //aggDUB
    X[117]=0.0; //aggE3
    X[118]=0.0; //aggMisP
    X[119]=0.0; //aggParkin
    X[120]=0.0; //aggSUB
    X[121]=0.0; //aggUb
    X[122]=0.0; //aggUchl1
    X[123]=0.0; //aggUchl1dam
    X[124]=0.0; //aggasyn
    X[125]=0.0; //aggasyndam
    X[126]=3000.0; //asyn
    X[127]=0.0; //asyn_Lamp2a
    X[128]=0.0; //asyn_Proteasome
    X[129]=0.0; //asyn_dam
    X[130]=0.0; //asyn_dam_Ub4_Proteasome
    X[131]=0.0; //asyn_dam_Ub5_Proteasome
    X[132]=0.0; //asyn_dam_Ub6_Proteasome
    X[133]=0.0; //asyn_dam_Ub7_Proteasome
    X[134]=0.0; //asyn_dam_Ub8_Proteasome
    X[135]=1.0; //kproteff
    X[136]=0.0; //upregUb

}

template <class Precision> __forceinline__ __device__ void PerThread_Finalization(
    int tid, int NT, int& DOIDX, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR,       int* sPARi, Precision* ACC, int* ACCi
) {
	
}


#endif
