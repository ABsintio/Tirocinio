
model BIOMD469 "Smallbone2013 - E.coli metabolic model with linlog rate law"

    function pow
        input  Real x;
        input  Real power;
        output Real y;
        algorithm
            y := x^power;
    end pow;
    
    function piecewise
        input Real x;
        input Boolean condition;
        input Real y;
        output Real z;
        algorithm
            z := if condition then x else y;
    end piecewise;


    function max
        	input Real x;
	input Real y;
        output Real y;
    algorithm
        y :=  (x + y + abs(x - y)) / 2;
    end max;


    parameter Real zero_flux = 0.0;
    parameter Real ic0003 = 0.1;
    parameter Real ic0004 = 0.1;
    parameter Real ic0017 = 0.1;
    parameter Real ic0018 = 0.1;
    parameter Real ic0028 = 0.1;
    parameter Real ic0029 = 0.1;
    parameter Real ic0032 = 0.1;
    parameter Real ic0033 = 0.1;
    parameter Real ic0040 = 0.1;
    parameter Real ic0041 = 0.1;
    parameter Real ic0042 = 0.1;
    parameter Real ic0043 = 0.1;
    parameter Real ic0044 = 0.1;
    parameter Real ic0045 = 0.1;
    parameter Real ic0046 = 0.1;
    parameter Real ic0047 = 0.1;
    parameter Real ic0049 = 0.1;
    parameter Real ic0050 = 0.1;
    parameter Real ic0051 = 0.1;
    parameter Real ic0052 = 0.1;
    parameter Real ic0073 = 0.1;
    parameter Real ic0075 = 0.1;
    parameter Real ic0096 = 0.1;
    parameter Real ic0097 = 0.1;
    parameter Real ic0098 = 0.1;
    parameter Real ic0099 = 0.1;
    parameter Real ic0116 = 0.1;
    parameter Real ic0119 = 0.1;
    parameter Real ic0121 = 0.1;
    parameter Real ic0123 = 0.1;
    parameter Real ic0128 = 0.1;
    parameter Real ic0133 = 0.1;
    parameter Real ic0147 = 0.1;
    parameter Real ic0148 = 0.1;
    parameter Real ic0149 = 0.1;
    parameter Real ic0155 = 0.1;
    parameter Real ic0160 = 0.1;
    parameter Real ic0162 = 0.1;
    parameter Real ic0191 = 0.1;
    parameter Real ic0193 = 0.1;
    parameter Real ic0194 = 0.1;
    parameter Real ic0195 = 0.1;
    parameter Real ic0201 = 0.1;
    parameter Real ic0203 = 0.1;
    parameter Real ic0214 = 0.1;
    parameter Real ic0217 = 0.1;
    parameter Real ic0218 = 0.1;
    parameter Real ic0226 = 0.1;
    parameter Real ic0229 = 0.1;
    parameter Real ic0231 = 0.1;
    parameter Real ic0232 = 0.1;
    parameter Real ic0233 = 0.1;
    parameter Real ic0237 = 0.1;
    parameter Real ic0252 = 0.1;
    parameter Real ic0255 = 0.1;
    parameter Real ic0262 = 0.1;
    parameter Real ic0263 = 0.1;
    parameter Real ic0265 = 0.1;
    parameter Real ic0266 = 0.1;
    parameter Real ic0267 = 0.1;
    parameter Real ic0269 = 0.1;
    parameter Real ic0270 = 0.1;
    parameter Real ic0271 = 0.1;
    parameter Real ic0272 = 0.1;
    parameter Real ic0276 = 0.1;
    parameter Real ic0277 = 0.1;
    parameter Real ic0282 = 0.1;
    parameter Real ic0283 = 0.1;
    parameter Real ic0289 = 0.1;
    parameter Real ic0290 = 0.1;
    parameter Real ic0293 = 0.1;
    parameter Real ic0295 = 0.1;
    parameter Real ic0297 = 0.1;
    parameter Real ic0299 = 0.1;
    parameter Real ic0303 = 0.1;
    parameter Real ic0304 = 0.1;
    parameter Real ic0305 = 0.1;
    parameter Real ic0306 = 0.1;
    parameter Real ic0307 = 0.1;
    parameter Real ic0308 = 0.1;
    parameter Real ic0310 = 0.1;
    parameter Real ic0311 = 0.1;
    parameter Real ic0312 = 0.1;
    parameter Real ic0313 = 0.1;
    parameter Real ic0316 = 0.1;
    parameter Real ic0318 = 0.1;
    parameter Real ic0325 = 0.1;
    parameter Real ic0328 = 0.1;
    parameter Real ic0330 = 0.1;
    parameter Real ic0331 = 0.1;
    parameter Real ic0332 = 0.1;
    parameter Real ic0333 = 0.1;
    parameter Real ic0334 = 0.1;
    parameter Real ic0335 = 0.1;
    parameter Real ic0336 = 0.1;
    parameter Real ic0337 = 0.1;
    parameter Real ic0341 = 0.1;
    parameter Real ic0342 = 0.1;
    parameter Real ic0343 = 0.1;
    parameter Real ic0344 = 0.1;
    parameter Real ic0345 = 0.1;
    parameter Real ic0346 = 0.1;
    parameter Real ic0347 = 0.1;
    parameter Real ic0352 = 0.1;
    parameter Real ic0354 = 0.1;
    parameter Real ic0359 = 0.1;
    parameter Real ic0360 = 0.1;
    parameter Real ic0361 = 0.1;
    parameter Real ic0362 = 0.1;
    parameter Real ic0364 = 0.1;
    parameter Real ic0367 = 0.1;
    parameter Real ic0368 = 0.1;
    parameter Real ic0369 = 0.1;
    parameter Real ic0370 = 0.1;
    parameter Real ic0371 = 0.1;
    parameter Real ic0372 = 0.1;
    parameter Real ic0376 = 0.1;
    parameter Real ic0377 = 0.1;
    parameter Real ic0378 = 0.1;
    parameter Real ic0380 = 0.1;
    parameter Real ic0381 = 0.1;
    parameter Real ic0384 = 0.1;
    parameter Real ic0391 = 0.1;
    parameter Real ic0393 = 0.1;
    parameter Real ic0395 = 0.1;
    parameter Real ic0397 = 0.1;
    parameter Real ic0405 = 0.1;
    parameter Real ic0408 = 0.1;
    parameter Real ic0411 = 0.1;
    parameter Real ic0412 = 0.1;
    parameter Real ic0420 = 0.1;
    parameter Real ic0421 = 0.1;
    parameter Real ic0435 = 0.1;
    parameter Real ic0445 = 0.1;
    parameter Real ic0446 = 0.1;
    parameter Real ic0451 = 0.1;
    parameter Real ic0453 = 1.0;
    parameter Real ic0454 = 0.1;
    parameter Real ic0457 = 0.1;
    parameter Real ic0467 = 0.1;
    parameter Real ic0470 = 0.1;
    parameter Real ic0474 = 0.1;
    parameter Real ic0476 = 0.1;
    parameter Real ic0479 = 0.1;
    parameter Real ic0480 = 0.1;
    parameter Real ic0481 = 0.1;
    parameter Real ic0488 = 0.1;
    parameter Real ic0493 = 0.1;
    parameter Real ic0497 = 0.1;
    parameter Real ic0499 = 1.0;
    parameter Real ic0502 = 0.1;
    parameter Real ic0510 = 0.1;
    parameter Real ic0512 = 0.1;
    parameter Real ic0513 = 0.1;
    parameter Real ic0520 = 0.1;
    parameter Real ic0522 = 1.0;
    parameter Real ic0526 = 0.1;
    parameter Real ic0530 = 0.1;
    parameter Real ic0533 = 0.1;
    parameter Real ic0536 = 0.1;
    parameter Real ic0539 = 0.1;
    parameter Real ic0542 = 0.1;
    parameter Real ic0543 = 0.1;
    parameter Real ic0546 = 0.1;
    parameter Real ic0548 = 1.0;
    parameter Real ic0555 = 0.1;
    parameter Real ic0565 = 0.1;
    parameter Real ic0574 = 0.1;
    parameter Real ic0575 = 0.1;
    parameter Real ic0579 = 0.1;
    parameter Real ic0581 = 1.0;
    parameter Real ic0585 = 0.1;
    parameter Real ic0599 = 0.1;
    parameter Real ic0600 = 0.1;
    parameter Real ic0603 = 0.1;
    parameter Real ic0611 = 0.1;
    parameter Real ic0620 = 0.1;
    parameter Real ic0621 = 0.1;
    parameter Real ic0622 = 0.1;
    parameter Real ic0627 = 0.1;
    parameter Real ic0653 = 0.1;
    parameter Real ic0654 = 0.1;
    parameter Real ic0657 = 0.1;
    parameter Real ic0659 = 1.0;
    parameter Real ic0663 = 0.1;
    parameter Real ic0671 = 0.1;
    parameter Real ic0675 = 0.1;
    parameter Real ic0704 = 0.1;
    parameter Real ic0721 = 0.1;
    parameter Real ic0726 = 0.1;
    parameter Real ic0731 = 0.1;
    parameter Real ic0732 = 0.1;
    parameter Real ic0737 = 0.1;
    parameter Real ic0738 = 0.1;
    parameter Real ic0754 = 0.1;
    parameter Real ic0755 = 0.1;
    parameter Real ic0760 = 0.1;
    parameter Real ic0765 = 0.1;
    parameter Real ic0766 = 0.1;
    parameter Real ic0767 = 0.1;
    parameter Real ic0768 = 0.1;
    parameter Real ic0772 = 0.1;
    parameter Real ic0779 = 0.1;
    parameter Real ic0783 = 0.1;
    parameter Real ic0785 = 0.1;
    parameter Real ic0789 = 0.1;
    parameter Real ic0790 = 0.1;
    parameter Real ic0795 = 0.1;
    parameter Real ic0802 = 0.1;
    parameter Real ic0805 = 0.1;
    parameter Real ic0807 = 0.1;
    parameter Real ic0810 = 0.1;
    parameter Real ic0812 = 0.1;
    parameter Real ic0813 = 0.1;
    parameter Real ic0826 = 0.1;
    parameter Real ic0838 = 0.1;
    parameter Real ic0840 = 1.0;
    parameter Real ic0841 = 0.1;
    parameter Real ic0843 = 1.0;
    parameter Real ic0859 = 0.1;
    parameter Real ic0860 = 0.1;
    parameter Real ic0861 = 0.1;
    parameter Real ic0862 = 0.1;
    parameter Real ic0863 = 0.1;
    parameter Real ic0867 = 0.1;
    parameter Real ic0875 = 0.1;
    parameter Real ic0896 = 0.1;
    parameter Real ic0903 = 0.1;
    parameter Real ic0910 = 0.1;
    parameter Real ic0913 = 0.1;
    parameter Real ic0920 = 0.1;
    parameter Real ic0929 = 0.1;
    parameter Real ic0936 = 0.1;
    parameter Real ic0937 = 0.1;
    parameter Real ic0941 = 0.1;
    parameter Real ic0942 = 0.1;
    parameter Real ic0945 = 0.1;
    parameter Real ic0971 = 0.1;
    parameter Real ic0976 = 0.1;
    parameter Real ic0979 = 0.1;
    parameter Real ic0984 = 0.1;
    parameter Real ic0991 = 0.1;
    parameter Real ic0994 = 0.1;
    parameter Real ic0998 = 0.1;
    parameter Real ic1005 = 0.1;
    parameter Real ic1006 = 0.1;
    parameter Real ic1009 = 0.1;
    parameter Real ic1017 = 0.1;
    parameter Real ic1018 = 0.1;
    parameter Real ic1019 = 0.1;
    parameter Real ic1020 = 0.1;
    parameter Real ic1021 = 0.1;
    parameter Real ic1022 = 0.1;
    parameter Real ic1027 = 0.1;
    parameter Real ic1028 = 0.1;
    parameter Real ic1033 = 0.1;
    parameter Real ic1038 = 0.1;
    parameter Real ic1040 = 0.1;
    parameter Real ic1041 = 0.1;
    parameter Real ic1061 = 0.1;
    parameter Real ic1068 = 0.1;
    parameter Real ic1072 = 0.1;
    parameter Real ic1075 = 0.1;
    parameter Real ic1081 = 0.1;
    parameter Real ic1082 = 0.1;
    parameter Real ic1083 = 0.1;
    parameter Real ic1095 = 0.1;
    parameter Real ic1098 = 0.1;
    parameter Real ic1099 = 0.1;
    parameter Real ic1100 = 0.1;
    parameter Real ic1101 = 0.1;
    parameter Real ic1105 = 0.1;
    parameter Real ic1106 = 0.1;
    parameter Real ic1109 = 0.1;
    parameter Real ic1110 = 0.1;
    parameter Real ic1112 = 0.1;
    parameter Real ic1113 = 0.1;
    parameter Real ic1119 = 0.1;
    parameter Real ic1127 = 0.1;
    parameter Real ic1131 = 0.1;
    parameter Real ic1138 = 0.1;
    parameter Real ic1141 = 0.1;
    parameter Real ic1151 = 0.1;
    parameter Real ic1155 = 0.1;
    parameter Real ic1170 = 0.1;
    parameter Real ic1179 = 0.1;
    parameter Real ic1185 = 0.1;
    parameter Real ic1189 = 0.1;
    parameter Real ic1193 = 0.1;
    parameter Real ic1204 = 0.1;
    parameter Real ic1211 = 0.1;
    parameter Real ic1212 = 0.1;
    parameter Real ic1214 = 1.0;
    parameter Real ic1216 = 0.1;
    parameter Real ic1217 = 0.1;
    parameter Real ic1218 = 0.1;
    parameter Real ic1239 = 0.1;
    parameter Real ic1240 = 0.1;
    parameter Real ic1242 = 0.1;
    parameter Real ic1248 = 0.1;
    parameter Real ic1255 = 0.1;
    parameter Real ic1257 = 1.0;
    parameter Real ic1258 = 0.1;
    parameter Real ic1259 = 0.1;
    parameter Real ic1260 = 0.1;
    parameter Real ic1261 = 0.1;
    parameter Real ic1263 = 1.0;
    parameter Real ic1264 = 0.1;
    parameter Real ic1265 = 0.1;
    parameter Real ic1274 = 0.1;
    parameter Real ic1277 = 0.1;
    parameter Real ic1278 = 0.1;
    parameter Real ic1287 = 0.1;
    parameter Real ic1302 = 0.1;
    parameter Real ic1303 = 0.1;
    parameter Real ic1304 = 0.1;
    parameter Real ic1312 = 0.1;
    parameter Real ic1315 = 0.1;
    parameter Real ic1316 = 0.1;
    parameter Real ic1318 = 0.1;
    parameter Real ic1321 = 0.1;
    parameter Real ic1322 = 0.1;
    parameter Real ic1327 = 0.1;
    parameter Real ic1329 = 0.1;
    parameter Real ic1331 = 1.0;
    parameter Real ic1333 = 0.1;
    parameter Real ic1334 = 0.1;
    parameter Real ic1335 = 0.1;
    parameter Real ic1336 = 0.1;
    parameter Real ic1340 = 0.1;
    parameter Real ic1358 = 0.1;
    parameter Real ic1362 = 0.1;
    parameter Real ic1363 = 0.1;
    parameter Real ic1364 = 0.1;
    parameter Real ic1367 = 0.1;
    parameter Real ic1372 = 0.1;
    parameter Real ic1374 = 1.0;
    parameter Real ic1390 = 0.1;
    parameter Real ic1391 = 0.1;
    parameter Real ic1394 = 0.1;
    parameter Real ic1397 = 0.1;
    parameter Real ic1399 = 0.1;
    parameter Real ic1406 = 0.1;
    parameter Real ic1407 = 0.1;
    parameter Real ic1411 = 0.1;
    parameter Real ic1412 = 0.1;
    parameter Real ic1413 = 0.1;
    parameter Real ic1429 = 0.1;
    parameter Real ic1430 = 0.1;
    parameter Real ic1432 = 1.0;
    parameter Real ic1435 = 0.1;
    parameter Real ic1437 = 0.1;
    parameter Real ic1476 = 0.1;
    parameter Real ic1477 = 0.1;
    parameter Real ic1484 = 0.1;
    parameter Real ic1491 = 0.1;
    parameter Real ic1492 = 0.1;
    parameter Real ic1493 = 0.1;
    parameter Real ic1494 = 0.1;
    parameter Real ic1496 = 1.0;
    parameter Real ic1497 = 0.1;
    parameter Real ic1508 = 0.1;
    parameter Real ic1511 = 0.1;
    parameter Real ic1512 = 0.1;
    parameter Real ic1522 = 0.1;
    parameter Real ic1530 = 0.1;
    parameter Real ic1531 = 0.1;
    parameter Real ic1537 = 0.1;
    parameter Real ic1544 = 0.1;
    parameter Real ic1546 = 0.1;
    parameter Real ic1550 = 0.1;
    parameter Real ic1551 = 0.1;
    parameter Real ic1552 = 0.1;
    parameter Real ic1558 = 0.1;
    parameter Real ic1561 = 0.1;
    parameter Real ic1571 = 0.1;
    parameter Real ic1574 = 0.1;
    parameter Real ic1577 = 0.1;
    parameter Real ic1578 = 0.1;
    parameter Real ic1595 = 0.1;
    parameter Real ic1599 = 0.1;
    parameter Real ic1609 = 0.1;
    parameter Real ic1611 = 1.0;
    parameter Real ic1612 = 0.1;
    parameter Real ic1632 = 0.1;
    parameter Real ic1643 = 0.1;
    parameter Real ic1644 = 0.1;
    parameter Real ic1668 = 0.1;
    parameter Real ic1670 = 0.1;
    parameter Real ic1672 = 0.1;
    parameter Real ic1674 = 0.1;
    parameter Real ic1676 = 0.1;
    parameter Real ic1680 = 0.1;
    parameter Real ic1690 = 0.1;
    parameter Real ic1719 = 0.1;
    parameter Real ic1725 = 0.1;
    parameter Real ic1731 = 0.1;
    parameter Real ic1732 = 0.1;
    parameter Real ic1733 = 0.1;
    parameter Real ic1734 = 0.1;
    parameter Real ic1735 = 0.1;
    parameter Real ic1736 = 0.1;
    parameter Real ic1742 = 0.1;
    parameter Real ic1745 = 0.1;
    parameter Real ic1750 = 0.1;
    parameter Real ic1751 = 0.1;
    parameter Real ic1752 = 0.1;
    parameter Real ic1754 = 0.1;
    parameter Real ic1755 = 0.1;
    parameter Real ic1762 = 0.1;
    parameter Real ic1765 = 0.1;
    parameter Real ic1768 = 0.1;
    parameter Real ic1776 = 0.1;
    parameter Real ic1777 = 0.1;
    parameter Real ic1791 = 0.1;
    parameter Real ic1792 = 0.1;
    parameter Real ic1799 = 0.1;
    parameter Real ic1804 = 0.1;
    parameter Real ic1806 = 1.0;
    parameter Real FLUX_VALUE_0 = 6.20554969142397e-05;
    parameter Real v0_0 = 6.20554969142397e-05;
    parameter Real ep0004_0 = 1.0;
    parameter Real ep0003_0 = -1.0;
    parameter Real FLUX_VALUE_1 = 0.0131230753965474;
    parameter Real v0_1 = 0.0131230753965474;
    parameter Real ep0097_1 = 1.0;
    parameter Real ep0341_1 = -1.0;
    parameter Real FLUX_VALUE_2 = 0.000392694941408386;
    parameter Real v0_2 = 0.000392694941408386;
    parameter Real ep0913_2 = 1.0;
    parameter Real ep1531_2 = 1.0;
    parameter Real ep0543_2 = -1.0;
    parameter Real ep0116_2 = -1.0;
    parameter Real FLUX_VALUE_3 = 0.000330916477964549;
    parameter Real v0_3 = 0.000330916477964549;
    parameter Real ep0116_3 = 1.0;
    parameter Real ep1336_3 = 1.0;
    parameter Real ep0194_3 = -1.0;
    parameter Real ep1335_3 = -1.0;
    parameter Real FLUX_VALUE_4 = 0.0104178435779621;
    parameter Real v0_4 = 0.0104178435779621;
    parameter Real ep0119_4 = 1.0;
    parameter Real ep0533_4 = 1.0;
    parameter Real ep0397_4 = -1.0;
    parameter Real ep0073_4 = -1.0;
    parameter Real FLUX_VALUE_5 = 0.00884013797559913;
    parameter Real v0_5 = 0.00884013797559913;
    parameter Real ep0121_5 = 1.0;
    parameter Real ep1411_5 = 1.0;
    parameter Real ep0397_5 = -1.0;
    parameter Real ep0075_5 = -1.0;
    parameter Real FLUX_VALUE_6 = 3.85076520790662e-05;
    parameter Real v0_6 = 3.85076520790662e-05;
    parameter Real ep0123_6 = 1.0;
    parameter Real ep1334_6 = 1.0;
    parameter Real ep0779_6 = -1.0;
    parameter Real ep1333_6 = -1.0;
    parameter Real FLUX_VALUE_7 = 0.000292408825885483;
    parameter Real v0_7 = 0.000292408825885483;
    parameter Real ep0123_7 = 1.0;
    parameter Real ep1334_7 = 1.0;
    parameter Real ep1028_7 = -1.0;
    parameter Real ep1333_7 = -1.0;
    parameter Real FLUX_VALUE_8 = 0.0402391112803253;
    parameter Real v0_8 = 0.0402391112803253;
    parameter Real ep0232_8 = 1.0;
    parameter Real ep1531_8 = 1.0;
    parameter Real ep0041_8 = -1.0;
    parameter Real ep0543_8 = -1.0;
    parameter Real FLUX_VALUE_9 = 0.000330916477964549;
    parameter Real v0_9 = 0.000330916477964549;
    parameter Real ep0237_9 = 1.0;
    parameter Real ep0193_9 = -1.0;
    parameter Real ep0539_9 = -1.0;
    parameter Real FLUX_VALUE_10 = 0.000330916477964549;
    parameter Real v0_10 = 0.000330916477964549;
    parameter Real ep0194_10 = 1.0;
    parameter Real ep0575_10 = 1.0;
    parameter Real ep0312_10 = -1.0;
    parameter Real ep0783_10 = -1.0;
    parameter Real FLUX_VALUE_11 = 0.87986351299776;
    parameter Real v0_11 = 0.87986351299776;
    parameter Real ep0201_11 = 1.0;
    parameter Real ep0913_11 = -1.0;
    parameter Real ep1531_11 = -1.0;
    parameter Real FLUX_VALUE_12 = 7.97856388884133e-05;
    parameter Real v0_12 = 7.97856388884133e-05;
    parameter Real ep0203_12 = 1.0;
    parameter Real ep1336_12 = 1.0;
    parameter Real ep1335_12 = -1.0;
    parameter Real ep0032_12 = -1.0;
    parameter Real FLUX_VALUE_13 = 0.0624017887496972;
    parameter Real v0_13 = 0.0624017887496972;
    parameter Real ep0266_13 = 1.0;
    parameter Real ep0217_13 = -1.0;
    parameter Real FLUX_VALUE_14 = 0.0624017887496972;
    parameter Real v0_14 = 0.0624017887496972;
    parameter Real ep0282_14 = 1.0;
    parameter Real ep0395_14 = 1.0;
    parameter Real ep0266_14 = -1.0;
    parameter Real ep0555_14 = -1.0;
    parameter Real FLUX_VALUE_15 = 0.0624017887496972;
    parameter Real v0_15 = 0.0624017887496972;
    parameter Real ep0267_15 = 1.0;
    parameter Real ep0328_15 = -1.0;
    parameter Real ep0543_15 = -1.0;
    parameter Real FLUX_VALUE_16 = 0.000330916477964549;
    parameter Real v0_16 = 0.000330916477964549;
    parameter Real ep0193_16 = 1.0;
    parameter Real ep0861_16 = 2.0;
    parameter Real ep0862_16 = -2.0;
    parameter Real ep0123_16 = -1.0;
    parameter Real FLUX_VALUE_17 = 0.0343363591697952;
    parameter Real v0_17 = 0.0343363591697952;
    parameter Real ep0411_17 = 1.0;
    parameter Real ep0454_17 = -1.0;
    parameter Real ep1430_17 = -1.0;
    parameter Real FLUX_VALUE_18 = 0.000123556926891731;
    parameter Real v0_18 = 0.000123556926891731;
    parameter Real ep0704_18 = 1.0;
    parameter Real ep0255_18 = -1.0;
    parameter Real ep0867_18 = -1.0;
    parameter Real FLUX_VALUE_19 = 0.0208356871558827;
    parameter Real v0_19 = 0.0208356871558827;
    parameter Real ep1674_19 = 1.0;
    parameter Real ep0979_19 = -1.0;
    parameter Real FLUX_VALUE_20 = 0.052796345817737;
    parameter Real v0_20 = 0.052796345817737;
    parameter Real ep0269_20 = 1.0;
    parameter Real ep0270_20 = -1.0;
    parameter Real FLUX_VALUE_21 = 0.052796345817737;
    parameter Real v0_21 = 0.052796345817737;
    parameter Real ep0195_21 = 1.0;
    parameter Real ep0269_21 = -1.0;
    parameter Real ep1430_21 = -1.0;
    parameter Real FLUX_VALUE_22 = 0.00539107129442444;
    parameter Real v0_22 = 0.00539107129442444;
    parameter Real ep0611_22 = 1.0;
    parameter Real ep1484_22 = 1.0;
    parameter Real ep0272_22 = -1.0;
    parameter Real ep1430_22 = -1.0;
    parameter Real FLUX_VALUE_23 = 0.052796345817737;
    parameter Real v0_23 = 0.052796345817737;
    parameter Real ep0621_23 = 1.0;
    parameter Real ep1484_23 = 1.0;
    parameter Real ep0195_23 = -1.0;
    parameter Real ep1430_23 = -1.0;
    parameter Real FLUX_VALUE_24 = 0.00269553564721213;
    parameter Real v0_24 = 0.00269553564721213;
    parameter Real ep0542_24 = 1.0;
    parameter Real ep0147_24 = 1.0;
    parameter Real ep0539_24 = -1.0;
    parameter Real ep1038_24 = -1.0;
    parameter Real FLUX_VALUE_25 = 0.00269553564721213;
    parameter Real v0_25 = 0.00269553564721213;
    parameter Real ep0542_25 = 1.0;
    parameter Real ep1038_25 = 1.0;
    parameter Real ep0539_25 = -1.0;
    parameter Real ep1033_25 = -1.0;
    parameter Real FLUX_VALUE_26 = 0.00539107129442444;
    parameter Real v0_26 = 0.00539107129442444;
    parameter Real ep0575_26 = 1.0;
    parameter Real ep0271_26 = 1.0;
    parameter Real ep0542_26 = -1.0;
    parameter Real ep0783_26 = -1.0;
    parameter Real FLUX_VALUE_27 = 0.00539107129442444;
    parameter Real v0_27 = 0.00539107129442444;
    parameter Real ep0272_27 = 1.0;
    parameter Real ep0271_27 = -1.0;
    parameter Real ep1430_27 = -1.0;
    parameter Real FLUX_VALUE_28 = 0.0492981056959303;
    parameter Real v0_28 = 0.0492981056959303;
    parameter Real ep0043_28 = 1.0;
    parameter Real ep0574_28 = -1.0;
    parameter Real FLUX_VALUE_29 = 0.0492981056959448;
    parameter Real v0_29 = 0.0492981056959448;
    parameter Real ep0044_29 = 1.0;
    parameter Real ep1668_29 = -1.0;
    parameter Real FLUX_VALUE_30 = 0.0492981056959429;
    parameter Real v0_30 = 0.0492981056959429;
    parameter Real ep0045_30 = 1.0;
    parameter Real ep1670_30 = -1.0;
    parameter Real FLUX_VALUE_31 = 0.0385159631070915;
    parameter Real v0_31 = 0.0385159631070915;
    parameter Real ep0046_31 = 1.0;
    parameter Real ep1674_31 = -1.0;
    parameter Real FLUX_VALUE_32 = 0.0492981056959303;
    parameter Real v0_32 = 0.0492981056959303;
    parameter Real ep0047_32 = 1.0;
    parameter Real ep1672_32 = -1.0;
    parameter Real FLUX_VALUE_33 = 0.0492981056959303;
    parameter Real v0_33 = 0.0492981056959303;
    parameter Real ep0049_33 = 1.0;
    parameter Real ep1676_33 = -1.0;
    parameter Real FLUX_VALUE_34 = 0.0385159631070598;
    parameter Real v0_34 = 0.0385159631070598;
    parameter Real ep0050_34 = 1.0;
    parameter Real ep1680_34 = -1.0;
    parameter Real FLUX_VALUE_35 = 0.0492981056959448;
    parameter Real v0_35 = 0.0492981056959448;
    parameter Real ep0293_35 = 1.0;
    parameter Real ep1334_35 = 1.0;
    parameter Real ep0044_35 = -1.0;
    parameter Real ep1333_35 = -1.0;
    parameter Real FLUX_VALUE_36 = 0.0492981056959429;
    parameter Real v0_36 = 0.0492981056959429;
    parameter Real ep0295_36 = 1.0;
    parameter Real ep1334_36 = 1.0;
    parameter Real ep0045_36 = -1.0;
    parameter Real ep1333_36 = -1.0;
    parameter Real FLUX_VALUE_37 = 0.0385159631070915;
    parameter Real v0_37 = 0.0385159631070915;
    parameter Real ep0297_37 = 1.0;
    parameter Real ep1334_37 = 1.0;
    parameter Real ep0046_37 = -1.0;
    parameter Real ep1333_37 = -1.0;
    parameter Real FLUX_VALUE_38 = 0.0492981056959303;
    parameter Real v0_38 = 0.0492981056959303;
    parameter Real ep0299_38 = 1.0;
    parameter Real ep1334_38 = 1.0;
    parameter Real ep0047_38 = -1.0;
    parameter Real ep1333_38 = -1.0;
    parameter Real FLUX_VALUE_39 = 0.0492981056959303;
    parameter Real v0_39 = 0.0492981056959303;
    parameter Real ep0303_39 = 1.0;
    parameter Real ep1334_39 = 1.0;
    parameter Real ep0049_39 = -1.0;
    parameter Real ep1333_39 = -1.0;
    parameter Real FLUX_VALUE_40 = 0.0385159631070598;
    parameter Real v0_40 = 0.0385159631070598;
    parameter Real ep0305_40 = 1.0;
    parameter Real ep1334_40 = 1.0;
    parameter Real ep0050_40 = -1.0;
    parameter Real ep1333_40 = -1.0;
    parameter Real FLUX_VALUE_41 = 0.0492981056959303;
    parameter Real v0_41 = 0.0492981056959303;
    parameter Real ep0391_41 = 1.0;
    parameter Real ep1334_41 = 1.0;
    parameter Real ep0043_41 = -1.0;
    parameter Real ep1333_41 = -1.0;
    parameter Real FLUX_VALUE_42 = 0.0624017887496972;
    parameter Real v0_42 = 0.0624017887496972;
    parameter Real ep0217_42 = 1.0;
    parameter Real ep0265_42 = -1.0;
    parameter Real FLUX_VALUE_43 = 0.0624017887496972;
    parameter Real v0_43 = 0.0624017887496972;
    parameter Real ep0265_43 = 1.0;
    parameter Real ep1333_43 = 1.0;
    parameter Real ep0267_43 = -1.0;
    parameter Real ep1334_43 = -1.0;
    parameter Real FLUX_VALUE_44 = 7.97856388884133e-05;
    parameter Real v0_44 = 7.97856388884133e-05;
    parameter Real ep0282_44 = 1.0;
    parameter Real ep0336_44 = 1.0;
    parameter Real ep0203_44 = -1.0;
    parameter Real ep0337_44 = -1.0;
    parameter Real FLUX_VALUE_45 = 2.77033467884759e-07;
    parameter Real v0_45 = 2.77033467884759e-07;
    parameter Real ep0276_45 = 1.0;
    parameter Real ep0812_45 = -1.0;
    parameter Real FLUX_VALUE_46 = 2.77033467884759e-07;
    parameter Real v0_46 = 2.77033467884759e-07;
    parameter Real ep1336_46 = 1.0;
    parameter Real ep0289_46 = 1.0;
    parameter Real ep0276_46 = -1.0;
    parameter Real ep1335_46 = -1.0;
    parameter Real FLUX_VALUE_47 = 2.77033467884759e-07;
    parameter Real v0_47 = 2.77033467884759e-07;
    parameter Real ep1216_47 = 1.0;
    parameter Real ep1218_47 = 1.0;
    parameter Real ep0543_47 = -1.0;
    parameter Real ep0555_47 = -1.0;
    parameter Real ep0289_47 = -1.0;
    parameter Real FLUX_VALUE_48 = 2.77033467884759e-07;
    parameter Real v0_48 = 2.77033467884759e-07;
    parameter Real ep0277_48 = 1.0;
    parameter Real ep0813_48 = -1.0;
    parameter Real FLUX_VALUE_49 = 2.77033467884759e-07;
    parameter Real v0_49 = 2.77033467884759e-07;
    parameter Real ep1336_49 = 1.0;
    parameter Real ep0290_49 = 1.0;
    parameter Real ep0277_49 = -1.0;
    parameter Real ep1335_49 = -1.0;
    parameter Real FLUX_VALUE_50 = 2.77033467884759e-07;
    parameter Real v0_50 = 2.77033467884759e-07;
    parameter Real ep0910_50 = 1.0;
    parameter Real ep1216_50 = 1.0;
    parameter Real ep0397_50 = -1.0;
    parameter Real ep0543_50 = -1.0;
    parameter Real ep0290_50 = -1.0;
    parameter Real FLUX_VALUE_51 = 0.0107821425888488;
    parameter Real v0_51 = 0.0107821425888488;
    parameter Real ep0304_51 = 1.0;
    parameter Real ep1336_51 = 1.0;
    parameter Real ep0028_51 = -1.0;
    parameter Real ep1335_51 = -1.0;
    parameter Real FLUX_VALUE_52 = 0.0107821425888488;
    parameter Real v0_52 = 0.0107821425888488;
    parameter Real ep0789_52 = 1.0;
    parameter Real ep1216_52 = 1.0;
    parameter Real ep0304_52 = -1.0;
    parameter Real ep0397_52 = -1.0;
    parameter Real ep0543_52 = -1.0;
    parameter Real FLUX_VALUE_53 = 0.0527963458177373;
    parameter Real v0_53 = 0.0527963458177373;
    parameter Real ep1484_53 = 1.0;
    parameter Real ep1574_53 = 1.0;
    parameter Real ep0359_53 = -1.0;
    parameter Real ep1430_53 = -1.0;
    parameter Real FLUX_VALUE_54 = 6.20554969142397e-05;
    parameter Real v0_54 = 6.20554969142397e-05;
    parameter Real ep0310_54 = 1.0;
    parameter Real ep0004_54 = -1.0;
    parameter Real FLUX_VALUE_55 = 0.000330916477964549;
    parameter Real v0_55 = 0.000330916477964549;
    parameter Real ep0312_55 = 1.0;
    parameter Real ep0467_55 = 1.0;
    parameter Real ep0237_55 = -1.0;
    parameter Real ep0421_55 = -1.0;
    parameter Real FLUX_VALUE_56 = 3.08892317229363e-05;
    parameter Real v0_56 = 3.08892317229363e-05;
    parameter Real ep0342_56 = 1.0;
    parameter Real ep1333_56 = 1.0;
    parameter Real ep0313_56 = -1.0;
    parameter Real ep0867_56 = -2.0;
    parameter Real ep1334_56 = -1.0;
    parameter Real FLUX_VALUE_57 = 9.26676951688061e-05;
    parameter Real v0_57 = 9.26676951688061e-05;
    parameter Real ep0526_57 = 1.0;
    parameter Real ep1101_57 = 1.0;
    parameter Real ep0316_57 = -1.0;
    parameter Real ep1095_57 = -1.0;
    parameter Real FLUX_VALUE_58 = 9.26676951688061e-05;
    parameter Real v0_58 = 9.26676951688061e-05;
    parameter Real ep0316_58 = 1.0;
    parameter Real ep0318_58 = -1.0;
    parameter Real ep1531_58 = -1.0;
    parameter Real FLUX_VALUE_59 = 3.11662651885034e-05;
    parameter Real v0_59 = 3.11662651885034e-05;
    parameter Real ep0333_59 = 1.0;
    parameter Real ep0334_59 = -1.0;
    parameter Real ep0405_59 = -1.0;
    parameter Real FLUX_VALUE_60 = 0.0213832438061183;
    parameter Real v0_60 = 0.0213832438061183;
    parameter Real ep0336_60 = 1.0;
    parameter Real ep1334_60 = 1.0;
    parameter Real ep0354_60 = -1.0;
    parameter Real ep1333_60 = -1.0;
    parameter Real FLUX_VALUE_61 = 6.17784634458656e-05;
    parameter Real v0_61 = 6.17784634458656e-05;
    parameter Real ep0347_61 = 1.0;
    parameter Real ep1336_61 = 1.0;
    parameter Real ep0346_61 = -1.0;
    parameter Real ep1335_61 = -1.0;
    parameter Real FLUX_VALUE_62 = 9.26676951688061e-05;
    parameter Real v0_62 = 9.26676951688061e-05;
    parameter Real ep0367_62 = 1.0;
    parameter Real ep0467_62 = 1.0;
    parameter Real ep0368_62 = -1.0;
    parameter Real ep0454_62 = -1.0;
    parameter Real FLUX_VALUE_63 = 0.87986351299775;
    parameter Real v0_63 = 0.87986351299775;
    parameter Real ep0369_63 = 1.0;
    parameter Real ep0201_63 = -1.0;
    parameter Real FLUX_VALUE_64 = 0.879863512997714;
    parameter Real v0_64 = 0.879863512997714;
    parameter Real ep0370_64 = 1.0;
    parameter Real ep0369_64 = -1.0;
    parameter Real FLUX_VALUE_65 = 2.77033467884759e-07;
    parameter Real v0_65 = 2.77033467884759e-07;
    parameter Real ep1041_65 = 1.0;
    parameter Real ep1491_65 = 1.0;
    parameter Real ep0376_65 = -1.0;
    parameter Real ep0397_65 = -1.0;
    parameter Real ep0543_65 = -1.0;
    parameter Real FLUX_VALUE_66 = 0.0414265806134143;
    parameter Real v0_66 = 0.0414265806134143;
    parameter Real ep0381_66 = 1.0;
    parameter Real ep0555_66 = 1.0;
    parameter Real ep1333_66 = 1.0;
    parameter Real ep0395_66 = -1.0;
    parameter Real ep1334_66 = -1.0;
    parameter Real FLUX_VALUE_67 = 0.0807006804356794;
    parameter Real v0_67 = 0.0807006804356794;
    parameter Real ep0384_67 = 1.0;
    parameter Real ep0467_67 = 1.0;
    parameter Real ep0393_67 = -1.0;
    parameter Real ep0421_67 = -1.0;
    parameter Real FLUX_VALUE_68 = 0.121101856295072;
    parameter Real v0_68 = 0.121101856295072;
    parameter Real ep1531_68 = 2.0;
    parameter Real ep0042_68 = -1.0;
    parameter Real ep0543_68 = -1.0;
    parameter Real FLUX_VALUE_69 = 0.0492981056959303;
    parameter Real v0_69 = 0.0492981056959303;
    parameter Real ep0395_69 = 2.0;
    parameter Real ep0391_69 = -1.0;
    parameter Real ep0555_69 = -1.0;
    parameter Real FLUX_VALUE_70 = 0.0492981056959303;
    parameter Real v0_70 = 0.0492981056959303;
    parameter Real ep0395_70 = 1.0;
    parameter Real ep0488_70 = 1.0;
    parameter Real ep0299_70 = -1.0;
    parameter Real ep0555_70 = -1.0;
    parameter Real FLUX_VALUE_71 = 0.0492981056959429;
    parameter Real v0_71 = 0.0492981056959429;
    parameter Real ep0395_71 = 1.0;
    parameter Real ep0737_71 = 1.0;
    parameter Real ep0295_71 = -1.0;
    parameter Real ep0555_71 = -1.0;
    parameter Real FLUX_VALUE_72 = 0.0385159631070598;
    parameter Real v0_72 = 0.0385159631070598;
    parameter Real ep0395_72 = 1.0;
    parameter Real ep0790_72 = 1.0;
    parameter Real ep0305_72 = -1.0;
    parameter Real ep0555_72 = -1.0;
    parameter Real FLUX_VALUE_73 = 0.0492981056959303;
    parameter Real v0_73 = 0.0492981056959303;
    parameter Real ep0395_73 = 1.0;
    parameter Real ep0984_73 = 1.0;
    parameter Real ep0303_73 = -1.0;
    parameter Real ep0555_73 = -1.0;
    parameter Real FLUX_VALUE_74 = 0.0492981056959448;
    parameter Real v0_74 = 0.0492981056959448;
    parameter Real ep0395_74 = 1.0;
    parameter Real ep1390_74 = 1.0;
    parameter Real ep0293_74 = -1.0;
    parameter Real ep0555_74 = -1.0;
    parameter Real FLUX_VALUE_75 = 0.0385159631070916;
    parameter Real v0_75 = 0.0385159631070916;
    parameter Real ep0395_75 = 1.0;
    parameter Real ep1632_75 = 1.0;
    parameter Real ep0297_75 = -1.0;
    parameter Real ep0555_75 = -1.0;
    parameter Real FLUX_VALUE_76 = 0.0107829736892899;
    parameter Real v0_76 = 0.0107829736892899;
    parameter Real ep0395_76 = 1.0;
    parameter Real ep0467_76 = 1.0;
    parameter Real ep0474_76 = 1.0;
    parameter Real ep0421_76 = -1.0;
    parameter Real ep1217_76 = -1.0;
    parameter Real ep1430_76 = -1.0;
    parameter Real FLUX_VALUE_77 = 0.0409732499715063;
    parameter Real v0_77 = 0.0409732499715063;
    parameter Real ep1302_77 = 1.0;
    parameter Real ep0467_77 = 1.0;
    parameter Real ep1304_77 = -1.0;
    parameter Real ep0421_77 = -1.0;
    parameter Real FLUX_VALUE_78 = 0.040973249971501;
    parameter Real v0_78 = 0.040973249971501;
    parameter Real ep1321_78 = 1.0;
    parameter Real ep0384_78 = -1.0;
    parameter Real ep1391_78 = -1.0;
    parameter Real FLUX_VALUE_79 = 0.040973249971501;
    parameter Real v0_79 = 0.040973249971501;
    parameter Real ep1303_79 = 1.0;
    parameter Real ep1095_79 = 1.0;
    parameter Real ep1321_79 = -1.0;
    parameter Real ep0233_79 = -1.0;
    parameter Real FLUX_VALUE_80 = 0.148949399052035;
    parameter Real v0_80 = 0.148949399052035;
    parameter Real ep0536_80 = 1.0;
    parameter Real ep0530_80 = -1.0;
    parameter Real FLUX_VALUE_81 = 0.148949399052035;
    parameter Real v0_81 = 0.148949399052035;
    parameter Real ep0530_81 = 1.0;
    parameter Real ep1027_81 = -1.0;
    parameter Real FLUX_VALUE_82 = 0.0107821425888425;
    parameter Real v0_82 = 0.0107821425888425;
    parameter Real ep0397_82 = 1.0;
    parameter Real ep0467_82 = 1.0;
    parameter Real ep0785_82 = 1.0;
    parameter Real ep0454_82 = -1.0;
    parameter Real ep0789_82 = -1.0;
    parameter Real ep0783_82 = -1.0;
    parameter Real FLUX_VALUE_83 = 0.0176802759511862;
    parameter Real v0_83 = 0.0176802759511862;
    parameter Real ep0397_83 = 1.0;
    parameter Real ep0467_83 = 1.0;
    parameter Real ep0971_83 = 1.0;
    parameter Real ep0454_83 = -1.0;
    parameter Real ep1411_83 = -1.0;
    parameter Real ep0783_83 = -1.0;
    parameter Real FLUX_VALUE_84 = 0.0208356871559117;
    parameter Real v0_84 = 0.0208356871559117;
    parameter Real ep0397_84 = 1.0;
    parameter Real ep0467_84 = 1.0;
    parameter Real ep0976_84 = 1.0;
    parameter Real ep0454_84 = -1.0;
    parameter Real ep0533_84 = -1.0;
    parameter Real ep0783_84 = -1.0;
    parameter Real FLUX_VALUE_85 = 0.0492981056959303;
    parameter Real v0_85 = 0.0492981056959303;
    parameter Real ep0574_85 = 1.0;
    parameter Real ep0860_85 = 1.0;
    parameter Real ep0488_85 = -1.0;
    parameter Real ep0859_85 = -1.0;
    parameter Real FLUX_VALUE_86 = 0.0492981056959448;
    parameter Real v0_86 = 0.0492981056959448;
    parameter Real ep1668_86 = 1.0;
    parameter Real ep0860_86 = 1.0;
    parameter Real ep0737_86 = -1.0;
    parameter Real ep0859_86 = -1.0;
    parameter Real FLUX_VALUE_87 = 0.0492981056959429;
    parameter Real v0_87 = 0.0492981056959429;
    parameter Real ep1670_87 = 1.0;
    parameter Real ep0860_87 = 1.0;
    parameter Real ep0790_87 = -1.0;
    parameter Real ep0859_87 = -1.0;
    parameter Real FLUX_VALUE_88 = 0.0176802759511649;
    parameter Real v0_88 = 0.0176802759511649;
    parameter Real ep0860_88 = 1.0;
    parameter Real ep1674_88 = 1.0;
    parameter Real ep0859_88 = -1.0;
    parameter Real ep1412_88 = -1.0;
    parameter Real FLUX_VALUE_89 = 0.0492981056959303;
    parameter Real v0_89 = 0.0492981056959303;
    parameter Real ep0860_89 = 1.0;
    parameter Real ep1672_89 = 1.0;
    parameter Real ep0859_89 = -1.0;
    parameter Real ep0984_89 = -1.0;
    parameter Real FLUX_VALUE_90 = 0.0492981056959303;
    parameter Real v0_90 = 0.0492981056959303;
    parameter Real ep0860_90 = 1.0;
    parameter Real ep1676_90 = 1.0;
    parameter Real ep0859_90 = -1.0;
    parameter Real ep1390_90 = -1.0;
    parameter Real FLUX_VALUE_91 = 0.0385159631070833;
    parameter Real v0_91 = 0.0385159631070833;
    parameter Real ep0860_91 = 1.0;
    parameter Real ep1680_91 = 1.0;
    parameter Real ep0859_91 = -1.0;
    parameter Real ep1632_91 = -1.0;
    parameter Real FLUX_VALUE_92 = 9.32217621027432e-05;
    parameter Real v0_92 = 9.32217621027432e-05;
    parameter Real ep0408_92 = 1.0;
    parameter Real ep0467_92 = 1.0;
    parameter Real ep0421_92 = -1.0;
    parameter Real ep0454_92 = -1.0;
    parameter Real FLUX_VALUE_93 = 2.77033467884759e-07;
    parameter Real v0_93 = 2.77033467884759e-07;
    parameter Real ep0376_93 = 1.0;
    parameter Real ep1552_93 = 1.0;
    parameter Real ep1550_93 = -1.0;
    parameter Real ep0371_93 = -1.0;
    parameter Real FLUX_VALUE_94 = 0.362277497683991;
    parameter Real v0_94 = 0.362277497683991;
    parameter Real ep0454_94 = 1.0;
    parameter Real ep0467_94 = 1.0;
    parameter Real ep0421_94 = -2.0;
    parameter Real FLUX_VALUE_95 = 0.0613899240064973;
    parameter Real v0_95 = 0.0613899240064973;
    parameter Real ep0040_95 = 1.0;
    parameter Real ep0343_95 = -1.0;
    parameter Real ep0875_95 = -1.0;
    parameter Real FLUX_VALUE_96 = 0.0407532853976299;
    parameter Real v0_96 = 0.0407532853976299;
    parameter Real ep1072_96 = 1.0;
    parameter Real ep0945_96 = 1.0;
    parameter Real ep1006_96 = 1.0;
    parameter Real ep1327_96 = -1.0;
    parameter Real ep0896_96 = -1.0;
    parameter Real ep1430_96 = -1.0;
    parameter Real FLUX_VALUE_97 = 0.0407532853976299;
    parameter Real v0_97 = 0.0407532853976299;
    parameter Real ep1327_97 = 1.0;
    parameter Real ep0454_97 = -1.0;
    parameter Real ep0875_97 = -1.0;
    parameter Real FLUX_VALUE_98 = 0.0343363591697952;
    parameter Real v0_98 = 0.0343363591697952;
    parameter Real ep0412_98 = 1.0;
    parameter Real ep0467_98 = 1.0;
    parameter Real ep0421_98 = -1.0;
    parameter Real ep0252_98 = -1.0;
    parameter Real FLUX_VALUE_99 = 0.00577199231356107;
    parameter Real v0_99 = 0.00577199231356107;
    parameter Real ep1041_99 = 1.0;
    parameter Real ep0600_99 = -1.0;
    parameter Real FLUX_VALUE_100 = 0.00787329117099325;
    parameter Real v0_100 = 0.00787329117099325;
    parameter Real ep0457_100 = 1.0;
    parameter Real ep0360_100 = 1.0;
    parameter Real ep0783_100 = -1.0;
    parameter Real ep1278_100 = -1.0;
    parameter Real FLUX_VALUE_101 = 0.00787329117099325;
    parameter Real v0_101 = 0.00787329117099325;
    parameter Real ep0526_101 = 1.0;
    parameter Real ep1101_101 = 1.0;
    parameter Real ep0457_101 = -1.0;
    parameter Real ep1095_101 = -1.0;
    parameter Real ep1531_101 = -1.0;
    parameter Real FLUX_VALUE_102 = 0.00539107129442444;
    parameter Real v0_102 = 0.00539107129442444;
    parameter Real ep0704_102 = 1.0;
    parameter Real ep0611_102 = -1.0;
    parameter Real FLUX_VALUE_103 = 0.0409732499715002;
    parameter Real v0_103 = 0.0409732499715002;
    parameter Real ep1274_103 = 1.0;
    parameter Real ep1061_103 = -1.0;
    parameter Real ep0875_103 = -1.0;
    parameter Real FLUX_VALUE_104 = 0.040973249971501;
    parameter Real v0_104 = 0.040973249971501;
    parameter Real ep1072_104 = 1.0;
    parameter Real ep0467_104 = 1.0;
    parameter Real ep1081_104 = 1.0;
    parameter Real ep0454_104 = -1.0;
    parameter Real ep1274_104 = -1.0;
    parameter Real ep0783_104 = -1.0;
    parameter Real FLUX_VALUE_105 = 0.033396384611683;
    parameter Real v0_105 = 0.033396384611683;
    parameter Real ep1072_105 = 1.0;
    parameter Real ep0467_105 = 1.0;
    parameter Real ep0451_105 = 1.0;
    parameter Real ep0454_105 = -1.0;
    parameter Real ep1068_105 = -1.0;
    parameter Real ep0783_105 = -1.0;
    parameter Real FLUX_VALUE_106 = 7.97856388811725e-05;
    parameter Real v0_106 = 7.97856388811725e-05;
    parameter Real ep1072_106 = 1.0;
    parameter Real ep0470_106 = -1.0;
    parameter Real ep0543_106 = -1.0;
    parameter Real FLUX_VALUE_107 = 0.0458199505005817;
    parameter Real v0_107 = 0.0458199505005817;
    parameter Real ep1072_107 = 1.0;
    parameter Real ep0502_107 = 1.0;
    parameter Real ep1312_107 = -1.0;
    parameter Real ep1430_107 = -1.0;
    parameter Real FLUX_VALUE_108 = 0.230942094325926;
    parameter Real v0_108 = 0.230942094325926;
    parameter Real ep1072_108 = 1.0;
    parameter Real ep0467_108 = 1.0;
    parameter Real ep0332_108 = -1.0;
    parameter Real ep0421_108 = -1.0;
    parameter Real FLUX_VALUE_109 = 0.487066600184804;
    parameter Real v0_109 = 0.487066600184804;
    parameter Real ep1095_109 = 1.0;
    parameter Real ep1399_109 = 1.0;
    parameter Real ep0233_109 = -1.0;
    parameter Real ep1072_109 = -1.0;
    parameter Real FLUX_VALUE_110 = 0.230942094325926;
    parameter Real v0_110 = 0.230942094325926;
    parameter Real ep0332_110 = 1.0;
    parameter Real ep1336_110 = 1.0;
    parameter Real ep1075_110 = -1.0;
    parameter Real ep1335_110 = -1.0;
    parameter Real ep1430_110 = -1.0;
    parameter Real FLUX_VALUE_111 = 0.0131230753965474;
    parameter Real v0_111 = 0.0131230753965474;
    parameter Real ep0467_111 = 1.0;
    parameter Real ep0360_111 = 1.0;
    parameter Real ep0783_111 = -1.0;
    parameter Real ep0099_111 = -1.0;
    parameter Real FLUX_VALUE_112 = 2.77033467884759e-07;
    parameter Real v0_112 = 2.77033467884759e-07;
    parameter Real ep0378_112 = 1.0;
    parameter Real ep1552_112 = 1.0;
    parameter Real ep0755_112 = 1.0;
    parameter Real ep0377_112 = -1.0;
    parameter Real ep0476_112 = -1.0;
    parameter Real ep0333_112 = -1.0;
    parameter Real ep1141_112 = -1.0;
    parameter Real FLUX_VALUE_113 = 1.68990415703956e-05;
    parameter Real v0_113 = 1.68990415703956e-05;
    parameter Real ep1264_113 = 1.0;
    parameter Real ep0420_113 = 1.0;
    parameter Real ep0454_113 = -1.0;
    parameter Real ep0479_113 = -1.0;
    parameter Real ep0579_113 = -1.0;
    parameter Real FLUX_VALUE_114 = 1.68990415703956e-05;
    parameter Real v0_114 = 1.68990415703956e-05;
    parameter Real ep0481_114 = 1.0;
    parameter Real ep0945_114 = 1.0;
    parameter Real ep0480_114 = -1.0;
    parameter Real ep0783_114 = -1.0;
    parameter Real FLUX_VALUE_115 = 1.68990415703956e-05;
    parameter Real v0_115 = 1.68990415703956e-05;
    parameter Real ep0479_115 = 1.0;
    parameter Real ep0945_115 = 1.0;
    parameter Real ep0481_115 = -1.0;
    parameter Real ep0783_115 = -1.0;
    parameter Real FLUX_VALUE_116 = 0.0867932004720827;
    parameter Real v0_116 = 0.0867932004720827;
    parameter Real ep0467_116 = 1.0;
    parameter Real ep0543_116 = 1.0;
    parameter Real ep0451_116 = 1.0;
    parameter Real ep0421_116 = -1.0;
    parameter Real ep0502_116 = -1.0;
    parameter Real FLUX_VALUE_117 = 0.00884013797559549;
    parameter Real v0_117 = 0.00884013797559549;
    parameter Real ep0575_117 = 1.0;
    parameter Real ep0075_117 = 1.0;
    parameter Real ep0513_117 = -1.0;
    parameter Real ep0783_117 = -1.0;
    parameter Real FLUX_VALUE_118 = 0.0104178435779464;
    parameter Real v0_118 = 0.0104178435779464;
    parameter Real ep0575_118 = 1.0;
    parameter Real ep0073_118 = 1.0;
    parameter Real ep0512_118 = -1.0;
    parameter Real ep0783_118 = -1.0;
    parameter Real FLUX_VALUE_119 = 0.0447994977198517;
    parameter Real v0_119 = 0.0447994977198517;
    parameter Real ep0526_119 = 1.0;
    parameter Real ep1497_119 = -1.0;
    parameter Real FLUX_VALUE_120 = 3.08892317229363e-05;
    parameter Real v0_120 = 3.08892317229363e-05;
    parameter Real ep0526_120 = 1.0;
    parameter Real ep0325_120 = -1.0;
    parameter Real ep1531_120 = -1.0;
    parameter Real FLUX_VALUE_121 = 0.0527963458177373;
    parameter Real v0_121 = 0.0527963458177373;
    parameter Real ep0359_121 = 1.0;
    parameter Real ep0526_121 = -1.0;
    parameter Real ep1430_121 = -1.0;
    parameter Real FLUX_VALUE_122 = 0.148949399052133;
    parameter Real v0_122 = 0.148949399052133;
    parameter Real ep0395_122 = 1.0;
    parameter Real ep1399_122 = 1.0;
    parameter Real ep0536_122 = -1.0;
    parameter Real ep0555_122 = -1.0;
    parameter Real FLUX_VALUE_123 = 3.08892317225085e-05;
    parameter Real v0_123 = 3.08892317225085e-05;
    parameter Real ep0565_123 = 1.0;
    parameter Real ep1372_123 = 1.0;
    parameter Real ep0543_123 = -2.0;
    parameter Real ep1512_123 = -1.0;
    parameter Real FLUX_VALUE_124 = 0.0222347061711993;
    parameter Real v0_124 = 0.0222347061711993;
    parameter Real ep0467_124 = 1.0;
    parameter Real ep1101_124 = 1.0;
    parameter Real ep1792_124 = 1.0;
    parameter Real ep0421_124 = -1.0;
    parameter Real ep0575_124 = -1.0;
    parameter Real ep1095_124 = -1.0;
    parameter Real ep1430_124 = -1.0;
    parameter Real FLUX_VALUE_125 = 3.37980831407913e-05;
    parameter Real v0_125 = 3.37980831407913e-05;
    parameter Real ep0945_125 = 1.0;
    parameter Real ep0585_125 = -1.0;
    parameter Real ep0783_125 = -1.0;
    parameter Real FLUX_VALUE_126 = 0.0213211883092039;
    parameter Real v0_126 = 0.0213211883092039;
    parameter Real ep1082_126 = 1.0;
    parameter Real ep1112_126 = -1.0;
    parameter Real ep0451_126 = -1.0;
    parameter Real ep1531_126 = -1.0;
    parameter Real FLUX_VALUE_127 = 0.0343363591698377;
    parameter Real v0_127 = 0.0343363591698377;
    parameter Real ep1358_127 = 1.0;
    parameter Real ep0994_127 = 1.0;
    parameter Real ep0384_127 = -1.0;
    parameter Real ep1083_127 = -1.0;
    parameter Real FLUX_VALUE_128 = 0.0250597549648415;
    parameter Real v0_128 = 0.0250597549648415;
    parameter Real ep0467_128 = 1.0;
    parameter Real ep0539_128 = 1.0;
    parameter Real ep0421_128 = -1.0;
    parameter Real ep0510_128 = -1.0;
    parameter Real FLUX_VALUE_129 = 0.00384799487561516;
    parameter Real v0_129 = 0.00384799487561516;
    parameter Real ep0600_129 = 2.0;
    parameter Real ep0467_129 = 1.0;
    parameter Real ep0421_129 = -1.0;
    parameter Real ep0603_129 = -1.0;
    parameter Real ep1430_129 = -1.0;
    parameter Real FLUX_VALUE_130 = 7.97856388897518e-05;
    parameter Real v0_130 = 7.97856388897518e-05;
    parameter Real ep0467_130 = 1.0;
    parameter Real ep0754_130 = 1.0;
    parameter Real ep0421_130 = -1.0;
    parameter Real ep0555_130 = -1.0;
    parameter Real FLUX_VALUE_131 = 2.77033467884759e-07;
    parameter Real v0_131 = 2.77033467884759e-07;
    parameter Real ep0467_131 = 1.0;
    parameter Real ep0543_131 = 1.0;
    parameter Real ep0371_131 = 1.0;
    parameter Real ep0421_131 = -1.0;
    parameter Real ep0755_131 = -1.0;
    parameter Real ep1430_131 = -1.0;
    parameter Real FLUX_VALUE_132 = 6.17784634458656e-05;
    parameter Real v0_132 = 6.17784634458656e-05;
    parameter Real ep0160_132 = 1.0;
    parameter Real ep0347_132 = -1.0;
    parameter Real ep0451_132 = -1.0;
    parameter Real FLUX_VALUE_133 = 0.0475389431717989;
    parameter Real v0_133 = 0.0475389431717989;
    parameter Real ep1242_133 = 1.0;
    parameter Real ep0543_133 = -1.0;
    parameter Real ep1131_133 = -1.0;
    parameter Real FLUX_VALUE_134 = 0.0513869380474194;
    parameter Real v0_134 = 0.0513869380474194;
    parameter Real ep1211_134 = 1.0;
    parameter Real ep1242_134 = -1.0;
    parameter Real FLUX_VALUE_135 = 0.0229099752504581;
    parameter Real v0_135 = 0.0229099752504581;
    parameter Real ep0052_135 = 1.0;
    parameter Real ep1732_135 = 1.0;
    parameter Real ep1394_135 = -1.0;
    parameter Real ep1731_135 = -1.0;
    parameter Real FLUX_VALUE_136 = 0.0513869380474194;
    parameter Real v0_136 = 0.0513869380474194;
    parameter Real ep0155_136 = 1.0;
    parameter Real ep1336_136 = 1.0;
    parameter Real ep1335_136 = -1.0;
    parameter Real ep0148_136 = -1.0;
    parameter Real FLUX_VALUE_137 = 0.0513869380474194;
    parameter Real v0_137 = 0.0513869380474194;
    parameter Real ep1075_137 = 1.0;
    parameter Real ep1531_137 = 1.0;
    parameter Real ep0155_137 = -1.0;
    parameter Real FLUX_VALUE_138 = 0.00371765062874906;
    parameter Real v0_138 = 0.00371765062874906;
    parameter Real ep0372_138 = 1.0;
    parameter Real ep1336_138 = 1.0;
    parameter Real ep1335_138 = -1.0;
    parameter Real ep0337_138 = -1.0;
    parameter Real FLUX_VALUE_139 = 9.26676951688061e-05;
    parameter Real v0_139 = 9.26676951688061e-05;
    parameter Real ep0467_139 = 1.0;
    parameter Real ep0767_139 = 1.0;
    parameter Real ep1095_139 = 1.0;
    parameter Real ep0421_139 = -1.0;
    parameter Real ep0372_139 = -1.0;
    parameter Real ep1430_139 = -1.0;
    parameter Real FLUX_VALUE_140 = 9.26676951688061e-05;
    parameter Real v0_140 = 9.26676951688061e-05;
    parameter Real ep0765_140 = 1.0;
    parameter Real ep0367_140 = -1.0;
    parameter Real ep0936_140 = -1.0;
    parameter Real FLUX_VALUE_141 = 9.26676951688061e-05;
    parameter Real v0_141 = 9.26676951688061e-05;
    parameter Real ep0191_141 = 1.0;
    parameter Real ep0766_141 = -1.0;
    parameter Real ep0783_141 = -1.0;
    parameter Real FLUX_VALUE_142 = 0.0458199505005817;
    parameter Real v0_142 = 0.0458199505005817;
    parameter Real ep1312_142 = 1.0;
    parameter Real ep0052_142 = -1.0;
    parameter Real FLUX_VALUE_143 = 0.0229099752501236;
    parameter Real v0_143 = 0.0229099752501236;
    parameter Real ep0052_143 = 1.0;
    parameter Real ep1240_143 = 1.0;
    parameter Real ep1239_143 = -1.0;
    parameter Real ep1394_143 = -1.0;
    parameter Real FLUX_VALUE_144 = 9.26676951688061e-05;
    parameter Real v0_144 = 9.26676951688061e-05;
    parameter Real ep0318_144 = 1.0;
    parameter Real ep0368_144 = 1.0;
    parameter Real ep0767_144 = -1.0;
    parameter Real ep0783_144 = -1.0;
    parameter Real FLUX_VALUE_145 = 0.121101856295072;
    parameter Real v0_145 = 0.121101856295072;
    parameter Real ep0017_145 = 1.0;
    parameter Real ep0282_145 = -1.0;
    parameter Real FLUX_VALUE_146 = 0.0402391112803253;
    parameter Real v0_146 = 0.0402391112803253;
    parameter Real ep0018_146 = 1.0;
    parameter Real ep0051_146 = -1.0;
    parameter Real FLUX_VALUE_147 = 3.85076521030325e-05;
    parameter Real v0_147 = 3.85076521030325e-05;
    parameter Real ep0779_147 = 1.0;
    parameter Real ep1028_147 = 1.0;
    parameter Real ep0903_147 = -1.0;
    parameter Real ep0783_147 = -1.0;
    parameter Real FLUX_VALUE_148 = 0.00362498293358209;
    parameter Real v0_148 = 0.00362498293358209;
    parameter Real ep0467_148 = 1.0;
    parameter Real ep0802_148 = 1.0;
    parameter Real ep0421_148 = -1.0;
    parameter Real ep0795_148 = -1.0;
    parameter Real FLUX_VALUE_149 = 0.00362498293355932;
    parameter Real v0_149 = 0.00362498293355932;
    parameter Real ep0810_149 = 1.0;
    parameter Real ep0807_149 = -1.0;
    parameter Real ep0783_149 = -1.0;
    parameter Real FLUX_VALUE_150 = 0.640969334565238;
    parameter Real v0_150 = 0.640969334565238;
    parameter Real ep0675_150 = 1.0;
    parameter Real ep1484_150 = -1.0;
    parameter Real FLUX_VALUE_151 = 2.77033467884759e-07;
    parameter Real v0_151 = 2.77033467884759e-07;
    parameter Real ep0812_151 = 1.0;
    parameter Real ep1336_151 = 1.0;
    parameter Real ep0910_151 = -1.0;
    parameter Real ep1335_151 = -1.0;
    parameter Real FLUX_VALUE_152 = 2.77033467884759e-07;
    parameter Real v0_152 = 2.77033467884759e-07;
    parameter Real ep0813_152 = 1.0;
    parameter Real ep1336_152 = 1.0;
    parameter Real ep1335_152 = -1.0;
    parameter Real ep1492_152 = -1.0;
    parameter Real FLUX_VALUE_153 = 3.08892317222495e-05;
    parameter Real v0_153 = 3.08892317222495e-05;
    parameter Real ep0331_153 = 1.0;
    parameter Real ep1333_153 = 1.0;
    parameter Real ep1334_153 = -1.0;
    parameter Real ep0231_153 = -1.0;
    parameter Real FLUX_VALUE_154 = 3.08892317222495e-05;
    parameter Real v0_154 = 3.08892317222495e-05;
    parameter Real ep0621_154 = 1.0;
    parameter Real ep1333_154 = 1.0;
    parameter Real ep0331_154 = -1.0;
    parameter Real ep1334_154 = -1.0;
    parameter Real FLUX_VALUE_155 = 0.302798412025661;
    parameter Real v0_155 = 0.302798412025661;
    parameter Real ep0859_155 = 1.0;
    parameter Real ep1334_155 = 1.0;
    parameter Real ep0860_155 = -1.0;
    parameter Real ep1333_155 = -1.0;
    parameter Real FLUX_VALUE_156 = 0.0107821425888423;
    parameter Real v0_156 = 0.0107821425888423;
    parameter Real ep0790_156 = 1.0;
    parameter Real ep0555_156 = -1.0;
    parameter Real ep0785_156 = -1.0;
    parameter Real FLUX_VALUE_157 = 0.0176802759511998;
    parameter Real v0_157 = 0.0176802759511998;
    parameter Real ep1412_157 = 1.0;
    parameter Real ep0555_157 = -1.0;
    parameter Real ep0971_157 = -1.0;
    parameter Real FLUX_VALUE_158 = 0.0208356871558925;
    parameter Real v0_158 = 0.0208356871558925;
    parameter Real ep0979_158 = 1.0;
    parameter Real ep0555_158 = -1.0;
    parameter Real ep0976_158 = -1.0;
    parameter Real FLUX_VALUE_159 = 3.08892317225085e-05;
    parameter Real v0_159 = 3.08892317225085e-05;
    parameter Real ep0838_159 = 1.0;
    parameter Real ep1511_159 = 1.0;
    parameter Real ep1508_159 = -1.0;
    parameter Real FLUX_VALUE_160 = 3.08892317229329e-05;
    parameter Real v0_160 = 3.08892317229329e-05;
    parameter Real ep0467_160 = 1.0;
    parameter Real ep0863_160 = 1.0;
    parameter Real ep0859_160 = -1.0;
    parameter Real ep0783_160 = -1.0;
    parameter Real FLUX_VALUE_161 = 0.0362397868726823;
    parameter Real v0_161 = 0.0362397868726823;
    parameter Real ep0467_161 = 1.0;
    parameter Real ep0867_161 = 1.0;
    parameter Real ep0337_161 = 1.0;
    parameter Real ep0133_161 = -1.0;
    parameter Real ep0421_161 = -1.0;
    parameter Real ep1430_161 = -1.0;
    parameter Real FLUX_VALUE_162 = 0.143116459375637;
    parameter Real v0_162 = 0.143116459375637;
    parameter Real ep0875_162 = 1.0;
    parameter Real ep1138_162 = -1.0;
    parameter Real FLUX_VALUE_163 = 0.0614208132382477;
    parameter Real v0_163 = 0.0614208132382477;
    parameter Real ep0467_163 = 1.0;
    parameter Real ep0867_163 = 1.0;
    parameter Real ep1318_163 = 1.0;
    parameter Real ep0421_163 = -1.0;
    parameter Real ep1322_163 = -1.0;
    parameter Real ep1430_163 = -1.0;
    parameter Real FLUX_VALUE_164 = 3.85076521030325e-05;
    parameter Real v0_164 = 3.85076521030325e-05;
    parameter Real ep0903_164 = 1.0;
    parameter Real ep1028_164 = 1.0;
    parameter Real ep0826_164 = -1.0;
    parameter Real ep0783_164 = -1.0;
    parameter Real FLUX_VALUE_165 = 0.0130870610456735;
    parameter Real v0_165 = 0.0130870610456735;
    parameter Real ep0395_165 = 1.0;
    parameter Real ep0653_165 = 1.0;
    parameter Real ep1287_165 = -1.0;
    parameter Real ep0555_165 = -1.0;
    parameter Real FLUX_VALUE_166 = 0.879863512997714;
    parameter Real v0_166 = 0.879863512997714;
    parameter Real ep0663_166 = 1.0;
    parameter Real ep1335_166 = 1.0;
    parameter Real ep0370_166 = -1.0;
    parameter Real ep1336_166 = -1.0;
    parameter Real FLUX_VALUE_167 = 0.0545285720060003;
    parameter Real v0_167 = 0.0545285720060003;
    parameter Real ep0663_167 = 1.0;
    parameter Real ep0627_167 = -1.0;
    parameter Real FLUX_VALUE_168 = 0.0306260499279916;
    parameter Real v0_168 = 0.0306260499279916;
    parameter Real ep0467_168 = 1.0;
    parameter Real ep1095_168 = 1.0;
    parameter Real ep0421_168 = -1.0;
    parameter Real ep1099_168 = -1.0;
    parameter Real FLUX_VALUE_169 = 1.17502637474065;
    parameter Real v0_169 = 1.17502637474065;
    parameter Real ep0233_169 = 1.0;
    parameter Real ep1336_169 = 1.0;
    parameter Real ep0451_169 = 1.0;
    parameter Real ep1095_169 = -1.0;
    parameter Real ep1335_169 = -1.0;
    parameter Real FLUX_VALUE_170 = 0.00384799487562186;
    parameter Real v0_170 = 0.00384799487562186;
    parameter Real ep1095_170 = 1.0;
    parameter Real ep0671_170 = -1.0;
    parameter Real FLUX_VALUE_171 = 0.000494227707563336;
    parameter Real v0_171 = 0.000494227707563336;
    parameter Real ep1098_171 = 1.0;
    parameter Real ep0345_171 = -1.0;
    parameter Real FLUX_VALUE_172 = 0.0306260499279916;
    parameter Real v0_172 = 0.0306260499279916;
    parameter Real ep1099_172 = 1.0;
    parameter Real ep1336_172 = 1.0;
    parameter Real ep1100_172 = -1.0;
    parameter Real ep1335_172 = -1.0;
    parameter Real ep1430_172 = -1.0;
    parameter Real FLUX_VALUE_173 = 0.0614208132382202;
    parameter Real v0_173 = 0.0614208132382202;
    parameter Real ep1101_173 = 1.0;
    parameter Real ep0360_173 = 1.0;
    parameter Real ep1095_173 = -1.0;
    parameter Real ep0783_173 = -1.0;
    parameter Real ep0361_173 = -1.0;
    parameter Real FLUX_VALUE_174 = 0.249469746398485;
    parameter Real v0_174 = 0.249469746398485;
    parameter Real ep0467_174 = 1.0;
    parameter Real ep1095_174 = 1.0;
    parameter Real ep0451_174 = 1.0;
    parameter Real ep0421_174 = -1.0;
    parameter Real ep1101_174 = -1.0;
    parameter Real ep1430_174 = -1.0;
    parameter Real FLUX_VALUE_175 = 0.0130870610456636;
    parameter Real v0_175 = 0.0130870610456636;
    parameter Real ep0627_175 = 1.0;
    parameter Real ep1101_175 = 1.0;
    parameter Real ep0654_175 = -1.0;
    parameter Real ep1095_175 = -1.0;
    parameter Real FLUX_VALUE_176 = 0.000494227707563336;
    parameter Real v0_176 = 0.000494227707563336;
    parameter Real ep1105_176 = 1.0;
    parameter Real ep1336_176 = 1.0;
    parameter Real ep1098_176 = -1.0;
    parameter Real ep1335_176 = -1.0;
    parameter Real ep1690_176 = -1.0;
    parameter Real FLUX_VALUE_177 = 0.000494227707563336;
    parameter Real v0_177 = 0.000494227707563336;
    parameter Real ep0467_177 = 1.0;
    parameter Real ep1095_177 = 1.0;
    parameter Real ep1690_177 = 1.0;
    parameter Real ep0454_177 = -1.0;
    parameter Real ep1105_177 = -1.0;
    parameter Real ep0783_177 = -1.0;
    parameter Real FLUX_VALUE_178 = 0.787832256050213;
    parameter Real v0_178 = 0.787832256050213;
    parameter Real ep0913_178 = 1.0;
    parameter Real ep1333_178 = 1.0;
    parameter Real ep1430_178 = 1.0;
    parameter Real ep0307_178 = -1.0;
    parameter Real ep1334_178 = -1.0;
    parameter Real FLUX_VALUE_179 = 4.63338475844011e-05;
    parameter Real v0_179 = 4.63338475844011e-05;
    parameter Real ep0467_179 = 1.0;
    parameter Real ep0029_179 = 1.0;
    parameter Real ep0675_179 = -1.0;
    parameter Real ep0421_179 = -1.0;
    parameter Real FLUX_VALUE_180 = 0.00884013797513179;
    parameter Real v0_180 = 0.00884013797513179;
    parameter Real ep0920_180 = 1.0;
    parameter Real ep1411_180 = 1.0;
    parameter Real ep0121_180 = -1.0;
    parameter Real ep0397_180 = -1.0;
    parameter Real FLUX_VALUE_181 = 0.0104178435776096;
    parameter Real v0_181 = 0.0104178435776096;
    parameter Real ep0920_181 = 1.0;
    parameter Real ep0533_181 = 1.0;
    parameter Real ep0119_181 = -1.0;
    parameter Real ep0397_181 = -1.0;
    parameter Real FLUX_VALUE_182 = 0.0192579815535505;
    parameter Real v0_182 = 0.0192579815535505;
    parameter Real ep0772_182 = 1.0;
    parameter Real ep1336_182 = 1.0;
    parameter Real ep0920_182 = -1.0;
    parameter Real ep1335_182 = -1.0;
    parameter Real FLUX_VALUE_183 = 0.0414265806134066;
    parameter Real v0_183 = 0.0414265806134066;
    parameter Real ep1040_183 = 1.0;
    parameter Real ep0555_183 = 1.0;
    parameter Real ep0395_183 = -1.0;
    parameter Real ep0929_183 = -1.0;
    parameter Real FLUX_VALUE_184 = 0.0634230033724642;
    parameter Real v0_184 = 0.0634230033724642;
    parameter Real ep1170_184 = 1.0;
    parameter Real ep0337_184 = 1.0;
    parameter Real ep0929_184 = -1.0;
    parameter Real ep0336_184 = -1.0;
    parameter Real FLUX_VALUE_185 = 9.26676951688061e-05;
    parameter Real v0_185 = 9.26676951688061e-05;
    parameter Real ep0936_185 = 1.0;
    parameter Real ep1333_185 = 1.0;
    parameter Real ep0937_185 = -1.0;
    parameter Real ep1334_185 = -1.0;
    parameter Real FLUX_VALUE_186 = 4.63338477495988e-05;
    parameter Real v0_186 = 4.63338477495988e-05;
    parameter Real ep0937_186 = 1.0;
    parameter Real ep1732_186 = 1.0;
    parameter Real ep0941_186 = -1.0;
    parameter Real ep1731_186 = -1.0;
    parameter Real FLUX_VALUE_187 = 4.63338474145563e-05;
    parameter Real v0_187 = 4.63338474145563e-05;
    parameter Real ep0937_187 = 1.0;
    parameter Real ep1240_187 = 1.0;
    parameter Real ep0941_187 = -1.0;
    parameter Real ep1239_187 = -1.0;
    parameter Real FLUX_VALUE_188 = 4.63338475820775e-05;
    parameter Real v0_188 = 4.63338475820775e-05;
    parameter Real ep0941_188 = 2.0;
    parameter Real ep0214_188 = -1.0;
    parameter Real ep0543_188 = -1.0;
    parameter Real FLUX_VALUE_189 = 0.0337597140054242;
    parameter Real v0_189 = 0.0337597140054242;
    parameter Real ep0467_189 = 1.0;
    parameter Real ep1101_189 = 1.0;
    parameter Real ep1799_189 = 1.0;
    parameter Real ep0454_189 = -1.0;
    parameter Real ep1095_189 = -1.0;
    parameter Real ep0942_189 = -1.0;
    parameter Real ep0783_189 = -1.0;
    parameter Real FLUX_VALUE_190 = 9.26676951688061e-05;
    parameter Real v0_190 = 9.26676951688061e-05;
    parameter Real ep0945_190 = 1.0;
    parameter Real ep0191_190 = -1.0;
    parameter Real ep0867_190 = -1.0;
    parameter Real FLUX_VALUE_191 = 6.17784634458656e-05;
    parameter Real v0_191 = 6.17784634458656e-05;
    parameter Real ep0945_191 = 1.0;
    parameter Real ep0160_191 = -1.0;
    parameter Real ep0867_191 = -1.0;
    parameter Real ep0783_191 = -1.0;
    parameter Real FLUX_VALUE_192 = 0.0337597140054224;
    parameter Real v0_192 = 0.0337597140054224;
    parameter Real ep0467_192 = 1.0;
    parameter Real ep0942_192 = 1.0;
    parameter Real ep0421_192 = -1.0;
    parameter Real ep0896_192 = -1.0;
    parameter Real FLUX_VALUE_193 = 0.0721728976957654;
    parameter Real v0_193 = 0.0721728976957654;
    parameter Real ep0543_193 = 1.0;
    parameter Real ep0474_193 = -1.0;
    parameter Real FLUX_VALUE_194 = 0.0545285700240656;
    parameter Real v0_194 = 0.0545285700240656;
    parameter Real ep0467_194 = 1.0;
    parameter Real ep0622_194 = 1.0;
    parameter Real ep0421_194 = -1.0;
    parameter Real ep0627_194 = -1.0;
    parameter Real FLUX_VALUE_195 = 0.912233393077452;
    parameter Real v0_195 = 0.912233393077452;
    parameter Real ep0467_195 = 1.0;
    parameter Real ep0657_195 = 1.0;
    parameter Real ep0421_195 = -1.0;
    parameter Real ep0663_195 = -1.0;
    parameter Real FLUX_VALUE_196 = 0.0131230753965474;
    parameter Real v0_196 = 0.0131230753965474;
    parameter Real ep1109_196 = 1.0;
    parameter Real ep1333_196 = 2.0;
    parameter Real ep1106_196 = -1.0;
    parameter Real ep1334_196 = -2.0;
    parameter Real FLUX_VALUE_197 = 0.0131230753965474;
    parameter Real v0_197 = 0.0131230753965474;
    parameter Real ep1110_197 = 1.0;
    parameter Real ep1109_197 = -1.0;
    parameter Real ep1430_197 = -1.0;
    parameter Real FLUX_VALUE_198 = 0.0131230753965474;
    parameter Real v0_198 = 0.0131230753965474;
    parameter Real ep1095_198 = 1.0;
    parameter Real ep0263_198 = 1.0;
    parameter Real ep0233_198 = -1.0;
    parameter Real ep1110_198 = -1.0;
    parameter Real FLUX_VALUE_199 = 0.179555156278507;
    parameter Real v0_199 = 0.179555156278507;
    parameter Real ep1075_199 = 1.0;
    parameter Real ep1336_199 = 1.0;
    parameter Real ep1113_199 = -1.0;
    parameter Real ep1335_199 = -1.0;
    parameter Real FLUX_VALUE_200 = 0.158233967969303;
    parameter Real v0_200 = 0.158233967969303;
    parameter Real ep0467_200 = 1.0;
    parameter Real ep1113_200 = 1.0;
    parameter Real ep0421_200 = -1.0;
    parameter Real ep1363_200 = -1.0;
    parameter Real FLUX_VALUE_201 = 0.0213211883092039;
    parameter Real v0_201 = 0.0213211883092039;
    parameter Real ep1113_201 = 1.0;
    parameter Real ep1599_201 = 1.0;
    parameter Real ep0555_201 = -1.0;
    parameter Real ep1367_201 = -1.0;
    parameter Real FLUX_VALUE_202 = 3.08892317229363e-05;
    parameter Real v0_202 = 3.08892317229363e-05;
    parameter Real ep0325_202 = 1.0;
    parameter Real ep0435_202 = 1.0;
    parameter Real ep0283_202 = -1.0;
    parameter Real ep0783_202 = -1.0;
    parameter Real FLUX_VALUE_203 = 6.1778463445417e-05;
    parameter Real v0_203 = 6.1778463445417e-05;
    parameter Real ep1493_203 = 4.0;
    parameter Real ep0998_203 = -1.0;
    parameter Real ep0451_203 = -4.0;
    parameter Real FLUX_VALUE_204 = 0.0131230753965474;
    parameter Real v0_204 = 0.0131230753965474;
    parameter Real ep1101_204 = 1.0;
    parameter Real ep0341_204 = 1.0;
    parameter Real ep0343_204 = -1.0;
    parameter Real ep0620_204 = -1.0;
    parameter Real ep1095_204 = -1.0;
    parameter Real FLUX_VALUE_205 = 0.0131230753965474;
    parameter Real v0_205 = 0.0131230753965474;
    parameter Real ep0620_205 = 1.0;
    parameter Real ep0263_205 = -1.0;
    parameter Real FLUX_VALUE_206 = 0.0745129994030467;
    parameter Real v0_206 = 0.0745129994030467;
    parameter Real ep0352_206 = 1.0;
    parameter Real ep1006_206 = -1.0;
    parameter Real FLUX_VALUE_207 = 0.0337597140054643;
    parameter Real v0_207 = 0.0337597140054643;
    parameter Real ep1006_207 = 1.0;
    parameter Real ep1333_207 = 1.0;
    parameter Real ep1334_207 = -1.0;
    parameter Real ep1799_207 = -1.0;
    parameter Real FLUX_VALUE_208 = 0.00787329117099325;
    parameter Real v0_208 = 0.00787329117099325;
    parameter Real ep0096_208 = 1.0;
    parameter Real ep0493_208 = -1.0;
    parameter Real ep0543_208 = -1.0;
    parameter Real FLUX_VALUE_209 = 2.77033467753811e-07;
    parameter Real v0_209 = 2.77033467753811e-07;
    parameter Real ep0377_209 = 1.0;
    parameter Real ep1018_209 = 1.0;
    parameter Real ep1019_209 = 1.0;
    parameter Real ep1017_209 = -1.0;
    parameter Real ep1020_209 = -1.0;
    parameter Real FLUX_VALUE_210 = 3.96157859771697e-05;
    parameter Real v0_210 = 3.96157859771697e-05;
    parameter Real ep0860_210 = 1.0;
    parameter Real ep0838_210 = 2.0;
    parameter Real ep1018_210 = 2.0;
    parameter Real ep1019_210 = 1.0;
    parameter Real ep0859_210 = -1.0;
    parameter Real ep1017_210 = -2.0;
    parameter Real ep1020_210 = -1.0;
    parameter Real FLUX_VALUE_211 = 3.60143508877284e-05;
    parameter Real v0_211 = 3.60143508877284e-05;
    parameter Real ep0860_211 = 1.0;
    parameter Real ep0838_211 = 2.0;
    parameter Real ep1018_211 = 2.0;
    parameter Real ep1020_211 = 1.0;
    parameter Real ep0859_211 = -1.0;
    parameter Real ep1017_211 = -2.0;
    parameter Real ep1022_211 = -1.0;
    parameter Real FLUX_VALUE_212 = 3.87846855703637e-06;
    parameter Real v0_212 = 3.87846855703637e-06;
    parameter Real ep1020_212 = 1.0;
    parameter Real ep0378_212 = -1.0;
    parameter Real ep1019_212 = -1.0;
    parameter Real FLUX_VALUE_213 = 3.60143508877284e-05;
    parameter Real v0_213 = 3.60143508877284e-05;
    parameter Real ep0860_213 = 1.0;
    parameter Real ep1022_213 = 1.0;
    parameter Real ep0859_213 = -1.0;
    parameter Real ep1021_213 = -1.0;
    parameter Real FLUX_VALUE_214 = 3.60143508877284e-05;
    parameter Real v0_214 = 3.60143508877284e-05;
    parameter Real ep1021_214 = 1.0;
    parameter Real ep0380_214 = -1.0;
    parameter Real ep1019_214 = -1.0;
    parameter Real FLUX_VALUE_215 = 0.000250022705200688;
    parameter Real v0_215 = 0.000250022705200688;
    parameter Real ep1083_215 = 1.0;
    parameter Real ep1017_215 = 1.0;
    parameter Real ep1041_215 = -1.0;
    parameter Real ep1018_215 = -1.0;
    parameter Real FLUX_VALUE_216 = 0.148949399052035;
    parameter Real v0_216 = 0.148949399052035;
    parameter Real ep1027_216 = 1.0;
    parameter Real ep1335_216 = 1.0;
    parameter Real ep0233_216 = -1.0;
    parameter Real ep0543_216 = -1.0;
    parameter Real ep1336_216 = -1.0;
    parameter Real FLUX_VALUE_217 = 0.0402391112803253;
    parameter Real v0_217 = 0.0402391112803253;
    parameter Real ep0051_217 = 1.0;
    parameter Real ep1095_217 = 1.0;
    parameter Real ep0233_217 = -1.0;
    parameter Real ep1119_217 = -1.0;
    parameter Real FLUX_VALUE_218 = 0.121101856295072;
    parameter Real v0_218 = 0.121101856295072;
    parameter Real ep0042_218 = 1.0;
    parameter Real ep1336_218 = 1.0;
    parameter Real ep0017_218 = -1.0;
    parameter Real ep1335_218 = -1.0;
    parameter Real FLUX_VALUE_219 = 0.0402391112803253;
    parameter Real v0_219 = 0.0402391112803253;
    parameter Real ep0041_219 = 1.0;
    parameter Real ep1336_219 = 1.0;
    parameter Real ep0018_219 = -1.0;
    parameter Real ep1335_219 = -1.0;
    parameter Real FLUX_VALUE_220 = 0.0805262878673574;
    parameter Real v0_220 = 0.0805262878673574;
    parameter Real ep1095_220 = 1.0;
    parameter Real ep1531_220 = 1.0;
    parameter Real ep0233_220 = -1.0;
    parameter Real ep1041_220 = -1.0;
    parameter Real FLUX_VALUE_221 = 0.000315541120488056;
    parameter Real v0_221 = 0.000315541120488056;
    parameter Real ep1072_221 = 1.0;
    parameter Real ep1372_221 = 1.0;
    parameter Real ep0991_221 = -1.0;
    parameter Real ep1005_221 = -1.0;
    parameter Real FLUX_VALUE_222 = 0.0306260499280044;
    parameter Real v0_222 = 0.0306260499280044;
    parameter Real ep1100_222 = 1.0;
    parameter Real ep0128_222 = -1.0;
    parameter Real FLUX_VALUE_223 = 0.0402391112802679;
    parameter Real v0_223 = 0.0402391112802679;
    parameter Real ep1179_223 = 1.0;
    parameter Real ep0232_223 = -1.0;
    parameter Real ep0451_223 = -1.0;
    parameter Real FLUX_VALUE_224 = 0.0414265806134066;
    parameter Real v0_224 = 0.0414265806134066;
    parameter Real ep1333_224 = 1.0;
    parameter Real ep1179_224 = 1.0;
    parameter Real ep1040_224 = -1.0;
    parameter Real ep1334_224 = -1.0;
    parameter Real FLUX_VALUE_225 = 0.0624017887496972;
    parameter Real v0_225 = 0.0624017887496972;
    parameter Real ep0328_225 = 1.0;
    parameter Real ep1095_225 = 1.0;
    parameter Real ep0233_225 = -1.0;
    parameter Real ep1127_225 = -1.0;
    parameter Real FLUX_VALUE_226 = 0.00269553564721213;
    parameter Real v0_226 = 0.00269553564721213;
    parameter Real ep0149_226 = 1.0;
    parameter Real ep1734_226 = 1.0;
    parameter Real ep1204_226 = -1.0;
    parameter Real ep1733_226 = -1.0;
    parameter Real FLUX_VALUE_227 = 0.143432000495696;
    parameter Real v0_227 = 0.143432000495696;
    parameter Real ep1138_227 = 1.0;
    parameter Real ep1333_227 = 1.0;
    parameter Real ep1334_227 = -1.0;
    parameter Real ep1399_227 = -1.0;
    parameter Real FLUX_VALUE_228 = 0.000315541120779209;
    parameter Real v0_228 = 0.000315541120779209;
    parameter Real ep0991_228 = 1.0;
    parameter Real ep1399_228 = 1.0;
    parameter Real ep1138_228 = -1.0;
    parameter Real ep1372_228 = -1.0;
    parameter Real FLUX_VALUE_229 = 2.77033467884759e-07;
    parameter Real v0_229 = 2.77033467884759e-07;
    parameter Real ep1552_229 = 1.0;
    parameter Real ep1217_229 = 1.0;
    parameter Real ep1551_229 = -1.0;
    parameter Real ep1218_229 = -1.0;
    parameter Real FLUX_VALUE_230 = 0.0107826966558221;
    parameter Real v0_230 = 0.0107826966558221;
    parameter Real ep0397_230 = 1.0;
    parameter Real ep1217_230 = 1.0;
    parameter Real ep0555_230 = -1.0;
    parameter Real ep1216_230 = -1.0;
    parameter Real FLUX_VALUE_231 = 0.0383041017619642;
    parameter Real v0_231 = 0.0383041017619642;
    parameter Real ep0335_231 = 1.0;
    parameter Real ep0133_231 = -1.0;
    parameter Real FLUX_VALUE_232 = 0.000124388027294171;
    parameter Real v0_232 = 0.000124388027294171;
    parameter Real ep0467_232 = 1.0;
    parameter Real ep1141_232 = 1.0;
    parameter Real ep1552_232 = -1.0;
    parameter Real ep1430_232 = -1.0;
    parameter Real ep0783_232 = -1.0;
    parameter Real FLUX_VALUE_233 = 0.0213832438061183;
    parameter Real v0_233 = 0.0213832438061183;
    parameter Real ep0354_233 = 1.0;
    parameter Real ep1112_233 = 1.0;
    parameter Real ep1141_233 = -1.0;
    parameter Real ep0337_233 = -1.0;
    parameter Real FLUX_VALUE_234 = 0.0383041017619642;
    parameter Real v0_234 = 0.0383041017619642;
    parameter Real ep0336_234 = 1.0;
    parameter Real ep1335_234 = 1.0;
    parameter Real ep0335_234 = -1.0;
    parameter Real ep1336_234 = -1.0;
    parameter Real FLUX_VALUE_235 = 6.75961662815825e-05;
    parameter Real v0_235 = 6.75961662815825e-05;
    parameter Real ep1018_235 = 1.0;
    parameter Real ep1258_235 = 1.0;
    parameter Real ep1334_235 = 1.0;
    parameter Real ep0454_235 = -1.0;
    parameter Real ep1017_235 = -1.0;
    parameter Real ep1260_235 = -1.0;
    parameter Real ep1333_235 = -1.0;
    parameter Real FLUX_VALUE_236 = 1.68990415703956e-05;
    parameter Real v0_236 = 1.68990415703956e-05;
    parameter Real ep1261_236 = 1.0;
    parameter Real ep0420_236 = 1.0;
    parameter Real ep0454_236 = -1.0;
    parameter Real ep0579_236 = -1.0;
    parameter Real ep1264_236 = -1.0;
    parameter Real FLUX_VALUE_237 = 3.37980831407913e-05;
    parameter Real v0_237 = 3.37980831407913e-05;
    parameter Real ep0467_237 = 1.0;
    parameter Real ep1265_237 = 1.0;
    parameter Real ep0420_237 = -1.0;
    parameter Real ep0783_237 = -1.0;
    parameter Real FLUX_VALUE_238 = 3.37980831407913e-05;
    parameter Real v0_238 = 3.37980831407913e-05;
    parameter Real ep0585_238 = 1.0;
    parameter Real ep0579_238 = 1.0;
    parameter Real ep1260_238 = 2.0;
    parameter Real ep1259_238 = -2.0;
    parameter Real ep1265_238 = -1.0;
    parameter Real FLUX_VALUE_239 = 6.75961662815825e-05;
    parameter Real v0_239 = 6.75961662815825e-05;
    parameter Real ep0467_239 = 1.0;
    parameter Real ep1259_239 = 1.0;
    parameter Real ep1258_239 = -1.0;
    parameter Real ep0783_239 = -1.0;
    parameter Real FLUX_VALUE_240 = 0.0019239974378098;
    parameter Real v0_240 = 0.0019239974378098;
    parameter Real ep1725_240 = 1.0;
    parameter Real ep0600_240 = -1.0;
    parameter Real ep1719_240 = -1.0;
    parameter Real FLUX_VALUE_241 = 0.0409732499715063;
    parameter Real v0_241 = 0.0409732499715063;
    parameter Real ep1304_241 = 1.0;
    parameter Real ep1336_241 = 1.0;
    parameter Real ep1303_241 = -1.0;
    parameter Real ep1335_241 = -1.0;
    parameter Real ep1430_241 = -1.0;
    parameter Real FLUX_VALUE_242 = 0.0409732499715063;
    parameter Real v0_242 = 0.0409732499715063;
    parameter Real ep0395_242 = 1.0;
    parameter Real ep1095_242 = 1.0;
    parameter Real ep1302_242 = -1.0;
    parameter Real ep0555_242 = -1.0;
    parameter Real FLUX_VALUE_243 = 6.1916980210075e-05;
    parameter Real v0_243 = 6.1916980210075e-05;
    parameter Real ep0467_243 = 1.0;
    parameter Real ep1333_243 = 1.0;
    parameter Real ep0421_243 = -1.0;
    parameter Real ep1335_243 = -1.0;
    parameter Real FLUX_VALUE_244 = 0.000315541120476312;
    parameter Real v0_244 = 0.000315541120476312;
    parameter Real ep0467_244 = 1.0;
    parameter Real ep0732_244 = 1.0;
    parameter Real ep0451_244 = 1.0;
    parameter Real ep0454_244 = -1.0;
    parameter Real ep1333_244 = -1.0;
    parameter Real ep0783_244 = -1.0;
    parameter Real FLUX_VALUE_245 = 0.000315541120469206;
    parameter Real v0_245 = 0.000315541120469206;
    parameter Real ep0467_245 = 1.0;
    parameter Real ep1340_245 = 1.0;
    parameter Real ep0732_245 = -1.0;
    parameter Real ep0783_245 = -1.0;
    parameter Real FLUX_VALUE_246 = 0.000315541120467916;
    parameter Real v0_246 = 0.000315541120467916;
    parameter Real ep0360_246 = 1.0;
    parameter Real ep1537_246 = 1.0;
    parameter Real ep0543_246 = -1.0;
    parameter Real ep1340_246 = -1.0;
    parameter Real ep0783_246 = -1.0;
    parameter Real FLUX_VALUE_247 = 0.0250597549647999;
    parameter Real v0_247 = 0.0250597549647999;
    parameter Real ep0467_247 = 1.0;
    parameter Real ep0510_247 = 1.0;
    parameter Real ep0421_247 = -1.0;
    parameter Real ep0575_247 = -1.0;
    parameter Real FLUX_VALUE_248 = 0.00362498293358405;
    parameter Real v0_248 = 0.00362498293358405;
    parameter Real ep0467_248 = 1.0;
    parameter Real ep0795_248 = 1.0;
    parameter Real ep0421_248 = -1.0;
    parameter Real ep0805_248 = -1.0;
    parameter Real FLUX_VALUE_249 = 0.10884935857298;
    parameter Real v0_249 = 0.10884935857298;
    parameter Real ep0467_249 = 1.0;
    parameter Real ep0896_249 = 1.0;
    parameter Real ep0421_249 = -1.0;
    parameter Real ep0945_249 = -1.0;
    parameter Real FLUX_VALUE_250 = 0.0589070115461784;
    parameter Real v0_250 = 0.0589070115461784;
    parameter Real ep0467_250 = 1.0;
    parameter Real ep1733_250 = 1.0;
    parameter Real ep0421_250 = -1.0;
    parameter Real ep1792_250 = -1.0;
    parameter Real FLUX_VALUE_251 = 3.15000000000004;
    parameter Real v0_251 = 3.15000000000004;
    parameter Real ep0467_251 = 1.0;
    parameter Real ep0421_251 = -1.0;
    parameter Real ep1430_251 = -1.0;
    parameter Real FLUX_VALUE_252 = 3.08892317222495e-05;
    parameter Real v0_252 = 3.08892317222495e-05;
    parameter Real ep1095_252 = 1.0;
    parameter Real ep0231_252 = 1.0;
    parameter Real ep0233_252 = -1.0;
    parameter Real ep1362_252 = -1.0;
    parameter Real FLUX_VALUE_253 = 0.0213211883092039;
    parameter Real v0_253 = 0.0213211883092039;
    parameter Real ep1083_253 = 1.0;
    parameter Real ep1367_253 = 1.0;
    parameter Real ep1082_253 = -1.0;
    parameter Real ep1595_253 = -1.0;
    parameter Real FLUX_VALUE_254 = 3.08892317229362e-05;
    parameter Real v0_254 = 3.08892317229362e-05;
    parameter Real ep0826_254 = 1.0;
    parameter Real ep1028_254 = 5.0;
    parameter Real ep0435_254 = -1.0;
    parameter Real ep0783_254 = -5.0;
    parameter Real FLUX_VALUE_255 = 3.08892317229363e-05;
    parameter Real v0_255 = 3.08892317229363e-05;
    parameter Real ep0283_255 = 1.0;
    parameter Real ep0229_255 = -1.0;
    parameter Real ep0543_255 = -1.0;
    parameter Real FLUX_VALUE_256 = 0.040973249971501;
    parameter Real v0_256 = 0.040973249971501;
    parameter Real ep0502_256 = 1.0;
    parameter Real ep1391_256 = 1.0;
    parameter Real ep1081_256 = -1.0;
    parameter Real ep1430_256 = -1.0;
    parameter Real FLUX_VALUE_257 = 0.0458199505005801;
    parameter Real v0_257 = 0.0458199505005801;
    parameter Real ep1394_257 = 1.0;
    parameter Real ep0360_257 = 1.0;
    parameter Real ep1397_257 = -1.0;
    parameter Real ep0783_257 = -1.0;
    parameter Real FLUX_VALUE_258 = 0.0458199505005801;
    parameter Real v0_258 = 0.0458199505005801;
    parameter Real ep1397_258 = 1.0;
    parameter Real ep0543_258 = -1.0;
    parameter Real ep1762_258 = -1.0;
    parameter Real FLUX_VALUE_259 = 7.97856388897518e-05;
    parameter Real v0_259 = 7.97856388897518e-05;
    parameter Real ep0467_259 = 1.0;
    parameter Real ep1413_259 = 1.0;
    parameter Real ep0754_259 = -1.0;
    parameter Real ep0783_259 = -1.0;
    parameter Real FLUX_VALUE_260 = 7.97856388897518e-05;
    parameter Real v0_260 = 7.97856388897518e-05;
    parameter Real ep0467_260 = 1.0;
    parameter Real ep0033_260 = 1.0;
    parameter Real ep0599_260 = -1.0;
    parameter Real ep0421_260 = -1.0;
    parameter Real FLUX_VALUE_261 = 7.97856388884133e-05;
    parameter Real v0_261 = 7.97856388884133e-05;
    parameter Real ep0470_261 = 1.0;
    parameter Real ep0467_261 = 1.0;
    parameter Real ep0032_261 = 1.0;
    parameter Real ep0454_261 = -1.0;
    parameter Real ep0033_261 = -1.0;
    parameter Real ep0783_261 = -1.0;
    parameter Real FLUX_VALUE_262 = 0.0256671508442138;
    parameter Real v0_262 = 0.0256671508442138;
    parameter Real ep1095_262 = 1.0;
    parameter Real ep1429_262 = 1.0;
    parameter Real ep0233_262 = -1.0;
    parameter Real ep1151_262 = -1.0;
    parameter Real FLUX_VALUE_263 = 0.00884013797559549;
    parameter Real v0_263 = 0.00884013797559549;
    parameter Real ep1477_263 = 1.0;
    parameter Real ep0543_263 = -1.0;
    parameter Real ep1437_263 = -1.0;
    parameter Real FLUX_VALUE_264 = 0.0104178435779464;
    parameter Real v0_264 = 0.0104178435779464;
    parameter Real ep1476_264 = 1.0;
    parameter Real ep0543_264 = -1.0;
    parameter Real ep1435_264 = -1.0;
    parameter Real FLUX_VALUE_265 = 0.00884013797559936;
    parameter Real v0_265 = 0.00884013797559936;
    parameter Real ep0513_265 = 1.0;
    parameter Real ep1170_265 = 1.0;
    parameter Real ep0539_265 = -1.0;
    parameter Real ep1477_265 = -1.0;
    parameter Real FLUX_VALUE_266 = 0.0104178435779464;
    parameter Real v0_266 = 0.0104178435779464;
    parameter Real ep0512_266 = 1.0;
    parameter Real ep1170_266 = 1.0;
    parameter Real ep0539_266 = -1.0;
    parameter Real ep1476_266 = -1.0;
    parameter Real FLUX_VALUE_267 = 0.146909255332631;
    parameter Real v0_267 = 0.146909255332631;
    parameter Real ep1364_267 = 1.0;
    parameter Real ep1430_267 = -1.0;
    parameter Real ep1170_267 = -1.0;
    parameter Real FLUX_VALUE_268 = 0.0038479948756196;
    parameter Real v0_268 = 0.0038479948756196;
    parameter Real ep1768_268 = 1.0;
    parameter Real ep1755_268 = 1.0;
    parameter Real ep1777_268 = -1.0;
    parameter Real ep1762_268 = -1.0;
    parameter Real FLUX_VALUE_269 = 0.0343363591697112;
    parameter Real v0_269 = 0.0343363591697112;
    parameter Real ep0252_269 = 1.0;
    parameter Real ep1544_269 = 1.0;
    parameter Real ep0411_269 = -1.0;
    parameter Real ep1612_269 = -1.0;
    parameter Real ep1406_269 = -1.0;
    parameter Real FLUX_VALUE_270 = 0.492899539861318;
    parameter Real v0_270 = 0.492899539861318;
    parameter Real ep0543_270 = 1.0;
    parameter Real ep1484_270 = 1.0;
    parameter Real ep1399_270 = -1.0;
    parameter Real ep1430_270 = -1.0;
    parameter Real FLUX_VALUE_271 = 0.0130870610456735;
    parameter Real v0_271 = 0.0130870610456735;
    parameter Real ep0654_271 = 1.0;
    parameter Real ep0653_271 = -1.0;
    parameter Real FLUX_VALUE_272 = 0.146909255332631;
    parameter Real v0_272 = 0.146909255332631;
    parameter Real ep0306_272 = 1.0;
    parameter Real ep1333_272 = 1.0;
    parameter Real ep0308_272 = -1.0;
    parameter Real ep1334_272 = -1.0;
    parameter Real FLUX_VALUE_273 = 0.787832256050213;
    parameter Real v0_273 = 0.787832256050213;
    parameter Real ep0307_273 = 1.0;
    parameter Real ep0421_273 = 1.0;
    parameter Real ep0306_273 = -1.0;
    parameter Real ep0467_273 = -1.0;
    parameter Real FLUX_VALUE_274 = 0.64092300071826;
    parameter Real v0_274 = 0.64092300071826;
    parameter Real ep0306_274 = 1.0;
    parameter Real ep0675_274 = -1.0;
    parameter Real FLUX_VALUE_275 = 3.08892317229363e-05;
    parameter Real v0_275 = 3.08892317229363e-05;
    parameter Real ep0313_275 = 1.0;
    parameter Real ep0467_275 = 1.0;
    parameter Real ep0218_275 = -1.0;
    parameter Real ep0421_275 = -1.0;
    parameter Real FLUX_VALUE_276 = 7.97856388897518e-05;
    parameter Real v0_276 = 7.97856388897518e-05;
    parameter Real ep0599_276 = 1.0;
    parameter Real ep0575_276 = 1.0;
    parameter Real ep1083_276 = 1.0;
    parameter Real ep1277_276 = -1.0;
    parameter Real ep0539_276 = -1.0;
    parameter Real ep0783_276 = -1.0;
    parameter Real FLUX_VALUE_277 = 7.97856388897518e-05;
    parameter Real v0_277 = 7.97856388897518e-05;
    parameter Real ep1277_277 = 1.0;
    parameter Real ep0543_277 = -1.0;
    parameter Real ep1413_277 = -1.0;
    parameter Real FLUX_VALUE_278 = 9.32217621775477e-05;
    parameter Real v0_278 = 9.32217621775477e-05;
    parameter Real ep0446_278 = 1.0;
    parameter Real ep0445_278 = -1.0;
    parameter Real FLUX_VALUE_279 = 0.0131230753965474;
    parameter Real v0_279 = 0.0131230753965474;
    parameter Real ep0098_279 = 1.0;
    parameter Real ep0097_279 = -1.0;
    parameter Real FLUX_VALUE_280 = 0.0131230753965474;
    parameter Real v0_280 = 0.0131230753965474;
    parameter Real ep0099_280 = 1.0;
    parameter Real ep0783_280 = -1.0;
    parameter Real ep0098_280 = -1.0;
    parameter Real FLUX_VALUE_281 = 0.0613899240064973;
    parameter Real v0_281 = 0.0613899240064973;
    parameter Real ep0342_281 = 1.0;
    parameter Real ep0467_281 = 1.0;
    parameter Real ep0474_281 = 1.0;
    parameter Real ep0362_281 = -1.0;
    parameter Real ep0421_281 = -1.0;
    parameter Real ep1430_281 = -1.0;
    parameter Real FLUX_VALUE_282 = 0.0613899240064973;
    parameter Real v0_282 = 0.0613899240064973;
    parameter Real ep0362_282 = 1.0;
    parameter Real ep0344_282 = -1.0;
    parameter Real FLUX_VALUE_283 = 0.0614208132382202;
    parameter Real v0_283 = 0.0614208132382202;
    parameter Real ep0467_283 = 1.0;
    parameter Real ep0162_283 = 1.0;
    parameter Real ep0421_283 = -1.0;
    parameter Real ep0342_283 = -1.0;
    parameter Real ep1430_283 = -1.0;
    parameter Real FLUX_VALUE_284 = 0.0745129994030467;
    parameter Real v0_284 = 0.0745129994030467;
    parameter Real ep0133_284 = 1.0;
    parameter Real ep0343_284 = 1.0;
    parameter Real ep0352_284 = -1.0;
    parameter Real ep0337_284 = -1.0;
    parameter Real FLUX_VALUE_285 = 0.0613899240064973;
    parameter Real v0_285 = 0.0613899240064973;
    parameter Real ep0344_285 = 1.0;
    parameter Real ep1072_285 = 1.0;
    parameter Real ep0467_285 = 1.0;
    parameter Real ep0040_285 = -1.0;
    parameter Real ep0421_285 = -1.0;
    parameter Real ep1430_285 = -1.0;
    parameter Real FLUX_VALUE_286 = 0.00787329117099325;
    parameter Real v0_286 = 0.00787329117099325;
    parameter Real ep1278_286 = 1.0;
    parameter Real ep0096_286 = -1.0;
    parameter Real FLUX_VALUE_287 = 0.0614208132382202;
    parameter Real v0_287 = 0.0614208132382202;
    parameter Real ep0467_287 = 1.0;
    parameter Real ep1322_287 = 1.0;
    parameter Real ep1101_287 = 1.0;
    parameter Real ep0421_287 = -1.0;
    parameter Real ep0162_287 = -1.0;
    parameter Real ep1095_287 = -1.0;
    parameter Real ep1430_287 = -1.0;
    parameter Real FLUX_VALUE_288 = 0.0614208132382202;
    parameter Real v0_288 = 0.0614208132382202;
    parameter Real ep0467_288 = 1.0;
    parameter Real ep0929_288 = 1.0;
    parameter Real ep0361_288 = 1.0;
    parameter Real ep0421_288 = -1.0;
    parameter Real ep1318_288 = -1.0;
    parameter Real ep1430_288 = -1.0;
    parameter Real FLUX_VALUE_289 = 0.128552671426845;
    parameter Real v0_289 = 0.128552671426845;
    parameter Real ep0467_289 = 1.0;
    parameter Real ep0446_289 = 1.0;
    parameter Real ep0454_289 = -1.0;
    parameter Real ep0360_289 = -1.0;
    parameter Real FLUX_VALUE_290 = 0.146909255332631;
    parameter Real v0_290 = 0.146909255332631;
    parameter Real ep0308_290 = 1.0;
    parameter Real ep1095_290 = 1.0;
    parameter Real ep0233_290 = -1.0;
    parameter Real ep1364_290 = -1.0;
    parameter Real FLUX_VALUE_291 = 0.0807006804356794;
    parameter Real v0_291 = 0.0807006804356794;
    parameter Real ep0393_291 = 1.0;
    parameter Real ep0555_291 = 1.0;
    parameter Real ep0395_291 = -1.0;
    parameter Real ep1430_291 = -1.0;
    parameter Real FLUX_VALUE_292 = 2.77033467884759e-07;
    parameter Real v0_292 = 2.77033467884759e-07;
    parameter Real ep1492_292 = 1.0;
    parameter Real ep1248_292 = -1.0;
    parameter Real ep1491_292 = -1.0;
    parameter Real FLUX_VALUE_293 = 0.484650799082247;
    parameter Real v0_293 = 0.484650799082247;
    parameter Real ep0421_293 = 1.0;
    parameter Real ep0783_293 = 1.0;
    parameter Real ep0467_293 = -1.0;
    parameter Real ep1430_293 = -1.0;
    parameter Real FLUX_VALUE_294 = 0.000247113853781668;
    parameter Real v0_294 = 0.000247113853781668;
    parameter Real ep0345_294 = 2.0;
    parameter Real ep1493_294 = -1.0;
    parameter Real FLUX_VALUE_295 = 0.0256671508442138;
    parameter Real v0_295 = 0.0256671508442138;
    parameter Real ep1497_295 = 1.0;
    parameter Real ep0543_295 = -1.0;
    parameter Real ep1429_295 = -1.0;
    parameter Real FLUX_VALUE_296 = 0.0191323468756361;
    parameter Real v0_296 = 0.0191323468756361;
    parameter Real ep1333_296 = 1.0;
    parameter Real ep1497_296 = 1.0;
    parameter Real ep0262_296 = -1.0;
    parameter Real ep0543_296 = -1.0;
    parameter Real ep1334_296 = -1.0;
    parameter Real FLUX_VALUE_297 = 3.08892317222945e-05;
    parameter Real v0_297 = 3.08892317222945e-05;
    parameter Real ep1372_297 = 1.5;
    parameter Real ep1512_297 = 1.0;
    parameter Real ep1511_297 = -1.0;
    parameter Real FLUX_VALUE_298 = 9.32217619764956e-05;
    parameter Real v0_298 = 9.32217619764956e-05;
    parameter Real ep0405_298 = 1.0;
    parameter Real ep0445_298 = 1.0;
    parameter Real ep0408_298 = -1.0;
    parameter Real ep1430_298 = -1.0;
    parameter Real FLUX_VALUE_299 = 3.08892317222495e-05;
    parameter Real v0_299 = 3.08892317222495e-05;
    parameter Real ep0116_299 = 1.0;
    parameter Real ep1333_299 = 1.0;
    parameter Real ep1362_299 = 1.0;
    parameter Real ep0543_299 = -1.0;
    parameter Real ep1334_299 = -1.0;
    parameter Real ep1530_299 = -1.0;
    parameter Real ep1430_299 = -1.0;
    parameter Real FLUX_VALUE_300 = 0.0306260499280495;
    parameter Real v0_300 = 0.0306260499280495;
    parameter Real ep0128_300 = 1.0;
    parameter Real ep1336_300 = 1.0;
    parameter Real ep1335_300 = -1.0;
    parameter Real ep1155_300 = -1.0;
    parameter Real FLUX_VALUE_301 = 0.407410405183232;
    parameter Real v0_301 = 0.407410405183232;
    parameter Real ep0555_301 = 1.0;
    parameter Real ep1333_301 = 1.0;
    parameter Real ep1531_301 = 1.0;
    parameter Real ep0395_301 = -1.0;
    parameter Real ep0543_301 = -1.0;
    parameter Real ep1334_301 = -1.0;
    parameter Real FLUX_VALUE_302 = 0.0973208185619302;
    parameter Real v0_302 = 0.0973208185619302;
    parameter Real ep0555_302 = 1.0;
    parameter Real ep1531_302 = 1.0;
    parameter Real ep0395_302 = -1.0;
    parameter Real ep0867_302 = -1.0;
    parameter Real FLUX_VALUE_303 = 0.0150663266603607;
    parameter Real v0_303 = 0.0150663266603607;
    parameter Real ep0555_303 = 1.0;
    parameter Real ep0862_303 = 2.0;
    parameter Real ep1531_303 = 1.0;
    parameter Real ep0395_303 = -1.0;
    parameter Real ep0543_303 = -1.0;
    parameter Real ep0861_303 = -2.0;
    parameter Real FLUX_VALUE_304 = 0.000315541120467916;
    parameter Real v0_304 = 0.000315541120467916;
    parameter Real ep0772_304 = 1.0;
    parameter Real ep1005_304 = 1.0;
    parameter Real ep1430_304 = -1.0;
    parameter Real ep1537_304 = -1.0;
    parameter Real FLUX_VALUE_305 = 3.08892317229329e-05;
    parameter Real v0_305 = 3.08892317229329e-05;
    parameter Real ep0467_305 = 1.0;
    parameter Real ep1546_305 = 1.0;
    parameter Real ep0421_305 = -1.0;
    parameter Real ep0863_305 = -1.0;
    parameter Real FLUX_VALUE_306 = 0.000123556926891731;
    parameter Real v0_306 = 0.000123556926891731;
    parameter Real ep0311_306 = 1.0;
    parameter Real ep0255_306 = 1.0;
    parameter Real ep0364_306 = -1.0;
    parameter Real ep1430_306 = -1.0;
    parameter Real FLUX_VALUE_307 = 6.17784634458656e-05;
    parameter Real v0_307 = 6.17784634458656e-05;
    parameter Real ep0364_307 = 2.0;
    parameter Real ep0311_307 = -1.0;
    parameter Real ep1546_307 = -1.0;
    parameter Real FLUX_VALUE_308 = 0.0036249829336045;
    parameter Real v0_308 = 0.0036249829336045;
    parameter Real ep0467_308 = 1.0;
    parameter Real ep0861_308 = 2.0;
    parameter Real ep0726_308 = -1.0;
    parameter Real ep0862_308 = -2.0;
    parameter Real FLUX_VALUE_309 = 0.00374272215765511;
    parameter Real v0_309 = 0.00374272215765511;
    parameter Real ep0575_309 = 1.0;
    parameter Real ep0861_309 = 2.0;
    parameter Real ep0731_309 = -1.0;
    parameter Real ep0862_309 = -2.0;
    parameter Real FLUX_VALUE_310 = 0.00374272215760098;
    parameter Real v0_310 = 0.00374272215760098;
    parameter Real ep0861_310 = 2.0;
    parameter Real ep0945_310 = 1.0;
    parameter Real ep0760_310 = -1.0;
    parameter Real ep0862_310 = -2.0;
    parameter Real FLUX_VALUE_311 = 0.00362498293356975;
    parameter Real v0_311 = 0.00362498293356975;
    parameter Real ep0861_311 = 2.0;
    parameter Real ep1792_311 = 1.0;
    parameter Real ep0810_311 = -1.0;
    parameter Real ep0862_311 = -2.0;
    parameter Real FLUX_VALUE_312 = 0.101534797735323;
    parameter Real v0_312 = 0.101534797735323;
    parameter Real ep0704_312 = 1.0;
    parameter Real ep0446_312 = -1.0;
    parameter Real FLUX_VALUE_313 = 0.107049425956634;
    parameter Real v0_313 = 0.107049425956634;
    parameter Real ep0721_313 = 1.0;
    parameter Real ep0704_313 = -1.0;
    parameter Real FLUX_VALUE_314 = 6.20554969142397e-05;
    parameter Real v0_314 = 6.20554969142397e-05;
    parameter Real ep1551_314 = 1.0;
    parameter Real ep0405_314 = -1.0;
    parameter Real ep1558_314 = -1.0;
    parameter Real FLUX_VALUE_315 = 6.20554969142397e-05;
    parameter Real v0_315 = 6.20554969142397e-05;
    parameter Real ep1558_315 = 1.0;
    parameter Real ep0310_315 = -1.0;
    parameter Real ep1112_315 = -1.0;
    parameter Real FLUX_VALUE_316 = 0.0343363591698377;
    parameter Real v0_316 = 0.0343363591698377;
    parameter Real ep0395_316 = 1.0;
    parameter Real ep1170_316 = 1.0;
    parameter Real ep1358_316 = -1.0;
    parameter Real ep0555_316 = -1.0;
    parameter Real FLUX_VALUE_317 = 0.052796345817737;
    parameter Real v0_317 = 0.052796345817737;
    parameter Real ep0270_317 = 1.0;
    parameter Real ep1336_317 = 1.0;
    parameter Real ep1335_317 = -1.0;
    parameter Real ep1571_317 = -1.0;
    parameter Real FLUX_VALUE_318 = 0.0527963458177373;
    parameter Real v0_318 = 0.0527963458177373;
    parameter Real ep0467_318 = 1.0;
    parameter Real ep1571_318 = 1.0;
    parameter Real ep0421_318 = -1.0;
    parameter Real ep1574_318 = -1.0;
    parameter Real FLUX_VALUE_319 = 3.08892317229363e-05;
    parameter Real v0_319 = 3.08892317229363e-05;
    parameter Real ep0768_319 = 1.0;
    parameter Real ep1333_319 = 1.0;
    parameter Real ep1334_319 = -1.0;
    parameter Real ep1578_319 = -1.0;
    parameter Real FLUX_VALUE_320 = 3.08892317229363e-05;
    parameter Real v0_320 = 3.08892317229363e-05;
    parameter Real ep0838_320 = 1.0;
    parameter Real ep1578_320 = 1.0;
    parameter Real ep1577_320 = -1.0;
    parameter Real FLUX_VALUE_321 = 0.0727081263565024;
    parameter Real v0_321 = 0.0727081263565024;
    parameter Real ep0467_321 = 1.0;
    parameter Real ep0555_321 = 1.0;
    parameter Real ep1595_321 = 1.0;
    parameter Real ep0421_321 = -1.0;
    parameter Real ep1430_321 = -1.0;
    parameter Real ep1599_321 = -1.0;
    parameter Real FLUX_VALUE_322 = 0.0513869380474194;
    parameter Real v0_322 = 0.0513869380474194;
    parameter Real ep1316_322 = 1.0;
    parameter Real ep1211_322 = -1.0;
    parameter Real ep1595_322 = -1.0;
    parameter Real FLUX_VALUE_323 = 0.0513869380474194;
    parameter Real v0_323 = 0.0513869380474194;
    parameter Real ep1095_323 = 1.0;
    parameter Real ep1315_323 = 1.0;
    parameter Real ep0233_323 = -1.0;
    parameter Real ep1316_323 = -1.0;
    parameter Real FLUX_VALUE_324 = 0.0343363591697952;
    parameter Real v0_324 = 0.0343363591697952;
    parameter Real ep0467_324 = 1.0;
    parameter Real ep0945_324 = 1.0;
    parameter Real ep1609_324 = 1.0;
    parameter Real ep0412_324 = -1.0;
    parameter Real ep0896_324 = -1.0;
    parameter Real ep1430_324 = -1.0;
    parameter Real ep0783_324 = -1.0;
    parameter Real FLUX_VALUE_325 = 0.0343363591698208;
    parameter Real v0_325 = 0.0343363591698208;
    parameter Real ep1336_325 = 3.0;
    parameter Real ep1612_325 = 1.0;
    parameter Real ep0994_325 = -1.0;
    parameter Real ep1335_325 = -3.0;
    parameter Real FLUX_VALUE_326 = 4.63338474645892e-05;
    parameter Real v0_326 = 4.63338474645892e-05;
    parameter Real ep0214_326 = 1.0;
    parameter Real ep1334_326 = 1.0;
    parameter Real ep0029_326 = -1.0;
    parameter Real ep1333_326 = -1.0;
    parameter Real FLUX_VALUE_327 = 0.00269553564721213;
    parameter Real v0_327 = 0.00269553564721213;
    parameter Real ep0467_327 = 1.0;
    parameter Real ep1204_327 = 1.0;
    parameter Real ep0421_327 = -1.0;
    parameter Real ep0147_327 = -1.0;
    parameter Real FLUX_VALUE_328 = 0.0513869380474194;
    parameter Real v0_328 = 0.0513869380474194;
    parameter Real ep1599_328 = 1.0;
    parameter Real ep0148_328 = 1.0;
    parameter Real ep0555_328 = -1.0;
    parameter Real ep1315_328 = -1.0;
    parameter Real FLUX_VALUE_329 = 3.08892317229363e-05;
    parameter Real v0_329 = 3.08892317229363e-05;
    parameter Real ep0218_329 = 1.0;
    parameter Real ep0330_329 = 1.0;
    parameter Real ep0783_329 = -1.0;
    parameter Real ep1643_329 = -1.0;
    parameter Real FLUX_VALUE_330 = 3.08892317229363e-05;
    parameter Real v0_330 = 3.08892317229363e-05;
    parameter Real ep0467_330 = 1.0;
    parameter Real ep1643_330 = 1.0;
    parameter Real ep0421_330 = -1.0;
    parameter Real ep1644_330 = -1.0;
    parameter Real FLUX_VALUE_331 = 3.08892317229363e-05;
    parameter Real v0_331 = 3.08892317229363e-05;
    parameter Real ep0467_331 = 1.0;
    parameter Real ep0738_331 = 1.0;
    parameter Real ep0116_331 = 1.0;
    parameter Real ep1018_331 = 1.0;
    parameter Real ep1336_331 = 1.0;
    parameter Real ep0330_331 = -1.0;
    parameter Real ep0454_331 = -1.0;
    parameter Real ep0543_331 = -1.0;
    parameter Real ep1017_331 = -1.0;
    parameter Real ep1335_331 = -1.0;
    parameter Real ep0783_331 = -1.0;
    parameter Real FLUX_VALUE_332 = 0.034336359169748;
    parameter Real v0_332 = 0.034336359169748;
    parameter Real ep1336_332 = 1.0;
    parameter Real ep1406_332 = 1.0;
    parameter Real ep1335_332 = -1.0;
    parameter Real ep1544_332 = -1.0;
    parameter Real FLUX_VALUE_333 = 0.0414265806134143;
    parameter Real v0_333 = 0.0414265806134143;
    parameter Real ep1179_333 = 1.0;
    parameter Real ep0381_333 = -1.0;
    parameter Real ep0929_333 = -1.0;
    parameter Real FLUX_VALUE_334 = 0.158233967969303;
    parameter Real v0_334 = 0.158233967969303;
    parameter Real ep1363_334 = 1.0;
    parameter Real ep1430_334 = -1.0;
    parameter Real ep1179_334 = -1.0;
    parameter Real FLUX_VALUE_335 = 0.00362498293358012;
    parameter Real v0_335 = 0.00362498293358012;
    parameter Real ep0807_335 = 1.0;
    parameter Real ep0336_335 = 1.0;
    parameter Real ep0372_335 = -1.0;
    parameter Real ep0802_335 = -1.0;
    parameter Real FLUX_VALUE_336 = 0.0271110954536016;
    parameter Real v0_336 = 0.0271110954536016;
    parameter Real ep0621_336 = 1.0;
    parameter Real ep0627_336 = 1.0;
    parameter Real ep0913_336 = -1.0;
    parameter Real ep1561_336 = -1.0;
    parameter Real FLUX_VALUE_337 = 0.0271110954535792;
    parameter Real v0_337 = 0.0271110954535792;
    parameter Real ep0913_337 = 1.0;
    parameter Real ep1561_337 = 1.0;
    parameter Real ep0446_337 = -1.0;
    parameter Real ep0721_337 = -1.0;
    parameter Real FLUX_VALUE_338 = 0.0799383305030384;
    parameter Real v0_338 = 0.0799383305030384;
    parameter Real ep0627_338 = 1.0;
    parameter Real ep0913_338 = 1.0;
    parameter Real ep0621_338 = -1.0;
    parameter Real ep0721_338 = -1.0;
    parameter Real FLUX_VALUE_339 = 0.0195735226740616;
    parameter Real v0_339 = 0.0195735226740616;
    parameter Real ep0913_339 = 1.0;
    parameter Real ep0772_339 = -1.0;
    parameter Real FLUX_VALUE_340 = 0.00787329117099211;
    parameter Real v0_340 = 0.00787329117099211;
    parameter Real ep0493_340 = 1.0;
    parameter Real ep0913_340 = -1.0;
    parameter Real ep1009_340 = -1.0;
    parameter Real FLUX_VALUE_341 = 0.00787329117099173;
    parameter Real v0_341 = 0.00787329117099173;
    parameter Real ep1009_341 = 1.0;
    parameter Real ep0451_341 = 1.0;
    parameter Real ep1531_341 = 1.0;
    parameter Real ep1185_341 = -1.0;
    parameter Real FLUX_VALUE_342 = 3.08892317229363e-05;
    parameter Real v0_342 = 3.08892317229363e-05;
    parameter Real ep1552_342 = 1.0;
    parameter Real ep1336_342 = 1.0;
    parameter Real ep1189_342 = 1.0;
    parameter Real ep1407_342 = -1.0;
    parameter Real ep0333_342 = -1.0;
    parameter Real ep0738_342 = -1.0;
    parameter Real ep1141_342 = -1.0;
    parameter Real ep1335_342 = -1.0;
    parameter Real FLUX_VALUE_343 = 0.0191323468756361;
    parameter Real v0_343 = 0.0191323468756361;
    parameter Real ep0262_343 = 1.0;
    parameter Real ep1095_343 = 1.0;
    parameter Real ep0233_343 = -1.0;
    parameter Real ep1189_343 = -1.0;
    parameter Real FLUX_VALUE_344 = 0.00539107129442425;
    parameter Real v0_344 = 0.00539107129442425;
    parameter Real ep0028_344 = 1.0;
    parameter Real ep1735_344 = 1.0;
    parameter Real ep0397_344 = -1.0;
    parameter Real ep1734_344 = -1.0;
    parameter Real FLUX_VALUE_345 = 0.00539107129442425;
    parameter Real v0_345 = 0.00539107129442425;
    parameter Real ep1736_345 = 1.0;
    parameter Real ep0384_345 = -1.0;
    parameter Real ep1735_345 = -1.0;
    parameter Real FLUX_VALUE_346 = 0.0038479948756196;
    parameter Real v0_346 = 0.0038479948756196;
    parameter Real ep1336_346 = 1.0;
    parameter Real ep1742_346 = 1.0;
    parameter Real ep1335_346 = -1.0;
    parameter Real ep1750_346 = -1.0;
    parameter Real FLUX_VALUE_347 = 0.0038479948756196;
    parameter Real v0_347 = 0.0038479948756196;
    parameter Real ep1484_347 = 1.0;
    parameter Real ep1745_347 = 1.0;
    parameter Real ep1430_347 = -1.0;
    parameter Real ep1742_347 = -1.0;
    parameter Real FLUX_VALUE_348 = 0.00539107129442425;
    parameter Real v0_348 = 0.00539107129442425;
    parameter Real ep0028_348 = 1.0;
    parameter Real ep1745_348 = 1.0;
    parameter Real ep0397_348 = -1.0;
    parameter Real ep1736_348 = -1.0;
    parameter Real FLUX_VALUE_349 = 0.0130870610456636;
    parameter Real v0_349 = 0.0130870610456636;
    parameter Real ep1287_349 = 1.0;
    parameter Real ep1792_349 = 1.0;
    parameter Real ep0783_349 = -1.0;
    parameter Real ep1745_349 = -1.0;
    parameter Real FLUX_VALUE_350 = 0.0038479948756196;
    parameter Real v0_350 = 0.0038479948756196;
    parameter Real ep1745_350 = 1.0;
    parameter Real ep1777_350 = 1.0;
    parameter Real ep1776_350 = -1.0;
    parameter Real ep1733_350 = -1.0;
    parameter Real FLUX_VALUE_351 = 0.00384799487562186;
    parameter Real v0_351 = 0.00384799487562186;
    parameter Real ep1041_351 = 1.0;
    parameter Real ep0467_351 = 1.0;
    parameter Real ep1750_351 = 1.0;
    parameter Real ep0421_351 = -1.0;
    parameter Real ep1430_351 = -1.0;
    parameter Real ep1751_351 = -1.0;
    parameter Real FLUX_VALUE_352 = 0.00384799487562186;
    parameter Real v0_352 = 0.00384799487562186;
    parameter Real ep0467_352 = 1.0;
    parameter Real ep0671_352 = 1.0;
    parameter Real ep1751_352 = 1.0;
    parameter Real ep0421_352 = -1.0;
    parameter Real ep1430_352 = -1.0;
    parameter Real ep1754_352 = -1.0;
    parameter Real FLUX_VALUE_353 = 0.00384799487562186;
    parameter Real v0_353 = 0.00384799487562186;
    parameter Real ep1242_353 = 1.0;
    parameter Real ep0467_353 = 1.0;
    parameter Real ep1754_353 = 1.0;
    parameter Real ep0421_353 = -1.0;
    parameter Real ep1430_353 = -1.0;
    parameter Real ep1752_353 = -1.0;
    parameter Real FLUX_VALUE_354 = 0.0038479948756196;
    parameter Real v0_354 = 0.0038479948756196;
    parameter Real ep0603_354 = 1.0;
    parameter Real ep0467_354 = 1.0;
    parameter Real ep1752_354 = 1.0;
    parameter Real ep0421_354 = -1.0;
    parameter Real ep1430_354 = -1.0;
    parameter Real ep1755_354 = -1.0;
    parameter Real FLUX_VALUE_355 = 0.00269553564721213;
    parameter Real v0_355 = 0.00269553564721213;
    parameter Real ep1734_355 = 1.0;
    parameter Real ep0149_355 = -1.0;
    parameter Real ep1762_355 = -1.0;
    parameter Real FLUX_VALUE_356 = 0.0523634810234329;
    parameter Real v0_356 = 0.0523634810234329;
    parameter Real ep0467_356 = 1.0;
    parameter Real ep1762_356 = 1.0;
    parameter Real ep0421_356 = -1.0;
    parameter Real ep1733_356 = -1.0;
    parameter Real FLUX_VALUE_357 = 7.61842038009631e-06;
    parameter Real v0_357 = 7.61842038009631e-06;
    parameter Real ep0826_357 = 1.0;
    parameter Real ep1028_357 = 8.0;
    parameter Real ep0783_357 = -8.0;
    parameter Real ep1765_357 = -1.0;
    parameter Real FLUX_VALUE_358 = 0.0038479948756196;
    parameter Real v0_358 = 0.0038479948756196;
    parameter Real ep1765_358 = 1.0;
    parameter Real ep1430_358 = -1.0;
    parameter Real ep1768_358 = -1.0;
    parameter Real FLUX_VALUE_359 = 3.08892317225085e-05;
    parameter Real v0_359 = 3.08892317225085e-05;
    parameter Real ep1791_359 = 1.0;
    parameter Real ep0543_359 = -4.0;
    parameter Real ep0565_359 = -1.0;
    parameter Real FLUX_VALUE_360 = 3.08892317229363e-05;
    parameter Real v0_360 = 3.08892317229363e-05;
    parameter Real ep1552_360 = 2.0;
    parameter Real ep1791_360 = 1.0;
    parameter Real ep1551_360 = -2.0;
    parameter Real ep0768_360 = -1.0;
    parameter Real FLUX_VALUE_361 = 6.1778463445417e-05;
    parameter Real v0_361 = 6.1778463445417e-05;
    parameter Real ep0998_361 = 1.0;
    parameter Real ep1791_361 = -1.0;
    parameter Real FLUX_VALUE_362 = 0.0586202819065749;
    parameter Real v0_362 = 0.0586202819065749;
    parameter Real ep0282_362 = 1.0;
    parameter Real ep1095_362 = 1.0;
    parameter Real ep0233_362 = -1.0;
    parameter Real ep1193_362 = -1.0;
    parameter Real FLUX_VALUE_363 = 0.0656079149963033;
    parameter Real v0_363 = 0.0656079149963033;
    parameter Real ep0657_363 = 1.0;
    parameter Real ep0622_363 = -1.0;
    parameter Real FLUX_VALUE_364 = 1.49280744931915;
    parameter Real v0_364 = 1.49280744931915;
    parameter Real ep0453_364 = 1.0;
    parameter Real ep0451_364 = -1.0;
    parameter Real FLUX_VALUE_365 = 12.8512360032879;
    parameter Real v0_365 = 12.8512360032879;
    parameter Real ep0421_365 = 1.0;
    parameter Real ep1430_365 = 1.0;
    parameter Real ep0467_365 = -1.0;
    parameter Real FLUX_VALUE_366 = 0.000720979601425486;
    parameter Real v0_366 = 0.000720979601425486;
    parameter Real ep0499_366 = 1.0;
    parameter Real ep0497_366 = -1.0;
    parameter Real FLUX_VALUE_367 = 0.000720979601425486;
    parameter Real v0_367 = 0.000720979601425486;
    parameter Real ep0522_367 = 1.0;
    parameter Real ep0520_367 = -1.0;
    parameter Real FLUX_VALUE_368 = 0.320567754236931;
    parameter Real v0_368 = 0.320567754236931;
    parameter Real ep0543_368 = 1.0;
    parameter Real FLUX_VALUE_369 = 3.46291835458927e-06;
    parameter Real v0_369 = 3.46291835458927e-06;
    parameter Real ep0548_369 = 1.0;
    parameter Real ep0546_369 = -1.0;
    parameter Real FLUX_VALUE_370 = 9.82083645361517e-05;
    parameter Real v0_370 = 9.82083645361517e-05;
    parameter Real ep0581_370 = 1.0;
    parameter Real ep0579_370 = -1.0;
    parameter Real FLUX_VALUE_371 = 0.0229563090982916;
    parameter Real v0_371 = 0.0229563090982916;
    parameter Real ep1239_371 = 1.0;
    parameter Real ep1372_371 = 0.5;
    parameter Real ep1240_371 = -1.0;
    parameter Real FLUX_VALUE_372 = 0.0229563090980402;
    parameter Real v0_372 = 0.0229563090980402;
    parameter Real ep1372_372 = 0.5;
    parameter Real ep1731_372 = 1.0;
    parameter Real ep1732_372 = -1.0;
    parameter Real FLUX_VALUE_373 = 1.0;
    parameter Real v0_373 = 1.0;
    parameter Real ep0659_373 = 1.0;
    parameter Real ep0657_373 = -1.0;
    parameter Real FLUX_VALUE_374 = 0.0221586919261637;
    parameter Real v0_374 = 0.0221586919261637;
    parameter Real ep1484_374 = 1.0;
    parameter Real ep0657_374 = 1.0;
    parameter Real ep0663_374 = -1.0;
    parameter Real ep1531_374 = -1.0;
    parameter Real FLUX_VALUE_375 = 0.0110793449722376;
    parameter Real v0_375 = 0.0110793449722376;
    parameter Real ep1484_375 = 1.0;
    parameter Real ep0622_375 = 1.0;
    parameter Real ep0627_375 = -1.0;
    parameter Real ep1531_375 = -1.0;
    parameter Real FLUX_VALUE_376 = 0.001143178607316;
    parameter Real v0_376 = 0.001143178607316;
    parameter Real ep0840_376 = 1.0;
    parameter Real ep0838_376 = -1.0;
    parameter Real FLUX_VALUE_377 = 0.00108153866040612;
    parameter Real v0_377 = 0.00108153866040612;
    parameter Real ep0843_377 = 1.0;
    parameter Real ep0841_377 = -1.0;
    parameter Real FLUX_VALUE_378 = 0.00120163266904248;
    parameter Real v0_378 = 0.00120163266904248;
    parameter Real ep1214_378 = 1.0;
    parameter Real ep1212_378 = -1.0;
    parameter Real FLUX_VALUE_379 = 9.57150633208474e-05;
    parameter Real v0_379 = 9.57150633208474e-05;
    parameter Real ep1257_379 = 1.0;
    parameter Real ep1255_379 = -1.0;
    parameter Real FLUX_VALUE_380 = 2.77033467884759e-07;
    parameter Real v0_380 = 2.77033467884759e-07;
    parameter Real ep1248_380 = 1.0;
    parameter Real FLUX_VALUE_381 = 1.78686587096806e-05;
    parameter Real v0_381 = 1.78686587096806e-05;
    parameter Real ep1263_381 = 1.0;
    parameter Real ep1261_381 = -1.0;
    parameter Real FLUX_VALUE_382 = 0.0019239974378098;
    parameter Real v0_382 = 0.0019239974378098;
    parameter Real ep1776_382 = 2.0;
    parameter Real ep1765_382 = -2.0;
    parameter Real ep1725_382 = -1.0;
    parameter Real FLUX_VALUE_383 = 1.06213701401227;
    parameter Real v0_383 = 1.06213701401227;
    parameter Real ep1334_383 = 1.0;
    parameter Real ep1335_383 = 1.0;
    parameter Real ep1333_383 = -1.0;
    parameter Real ep1336_383 = -1.0;
    parameter Real FLUX_VALUE_384 = 4.47409051412934e-05;
    parameter Real v0_384 = 4.47409051412934e-05;
    parameter Real ep1331_384 = 1.0;
    parameter Real ep1329_384 = -1.0;
    parameter Real FLUX_VALUE_385 = 0.0230335321771807;
    parameter Real v0_385 = 0.0230335321771807;
    parameter Real ep1374_385 = 1.0;
    parameter Real ep1372_385 = -1.0;
    parameter Real FLUX_VALUE_386 = 0.131013836759781;
    parameter Real v0_386 = 0.131013836759781;
    parameter Real ep1432_386 = 1.0;
    parameter Real ep1430_386 = -1.0;
    parameter Real FLUX_VALUE_387 = 0.027038466512633;
    parameter Real v0_387 = 0.027038466512633;
    parameter Real ep1496_387 = 1.0;
    parameter Real ep1494_387 = -1.0;
    parameter Real FLUX_VALUE_388 = 0.0349372447626834;
    parameter Real v0_388 = 0.0349372447626834;
    parameter Real ep1611_388 = 1.0;
    parameter Real ep1609_388 = -1.0;
    parameter Real FLUX_VALUE_389 = 4.72342063565976e-05;
    parameter Real v0_389 = 4.72342063565976e-05;
    parameter Real ep1806_389 = 1.0;
    parameter Real ep1804_389 = -1.0;
    parameter Real FLUX_VALUE_390 = 3.08892317453432e-05;
    parameter Real v0_390 = 3.08892317453432e-05;
    parameter Real ep0229_390 = 1.0;
    parameter Real ep0467_390 = 2.0;
    parameter Real ep1333_390 = 1.0;
    parameter Real ep0226_390 = -1.0;
    parameter Real ep0421_390 = -2.0;
    parameter Real ep1334_390 = -1.0;
    parameter Real ep1430_390 = -2.0;
    parameter Real FLUX_VALUE_391 = 9.26676951688061e-05;
    parameter Real v0_391 = 9.26676951688061e-05;
    parameter Real ep0766_391 = 1.0;
    parameter Real ep0765_391 = -1.0;
    parameter Real ep1430_391 = -1.0;
    parameter Real FLUX_VALUE_392 = 3.08892316991383e-05;
    parameter Real v0_392 = 3.08892316991383e-05;
    parameter Real ep1333_392 = 1.0;
    parameter Real ep1530_392 = 1.0;
    parameter Real ep1334_392 = -1.0;
    parameter Real ep1522_392 = -1.0;
    parameter Real FLUX_VALUE_393 = 6.17784634458656e-05;
    parameter Real v0_393 = 6.17784634458656e-05;
    parameter Real ep0346_393 = 1.0;
    parameter Real ep0311_393 = -1.0;
    parameter Real ep1430_393 = -1.0;
    parameter Real FLUX_VALUE_394 = 6.20554969142397e-05;
    parameter Real v0_394 = 6.20554969142397e-05;
    parameter Real ep0003_394 = 1.0;
    parameter Real FLUX_VALUE_395 = 3.11662651885034e-05;
    parameter Real v0_395 = 3.11662651885034e-05;
    parameter Real ep0334_395 = 1.0;
    parameter Real FLUX_VALUE_396 = 3.08892317229363e-05;
    parameter Real v0_396 = 3.08892317229363e-05;
    parameter Real ep1407_396 = 1.0;
    parameter Real FLUX_VALUE_397 = 2.77033467995043e-07;
    parameter Real v0_397 = 2.77033467995043e-07;
    parameter Real ep1550_397 = 1.0;
    parameter Real FLUX_VALUE_398 = 0.138516734183571;
    parameter Real v0_398 = 0.138516734183571;
    parameter Real ep0133_398 = 0.000223;
    parameter Real ep0378_398 = 2.6e-05;
    parameter Real ep0226_398 = 0.000223;
    parameter Real ep0380_398 = 0.00026;
    parameter Real ep1041_398 = 0.5137;
    parameter Real ep1552_398 = 0.000223;
    parameter Real ep1061_398 = 0.2958;
    parameter Real ep1068_398 = 0.2411;
    parameter Real ep1072_398 = 0.2411;
    parameter Real ep0467_398 = 54.12;
    parameter Real ep0480_398 = 0.000122;
    parameter Real ep0476_398 = 2e-06;
    parameter Real ep0497_398 = 0.005205;
    parameter Real ep0520_398 = 0.005205;
    parameter Real ep0555_398 = 0.000576;
    parameter Real ep0546_398 = 2.5e-05;
    parameter Real ep0575_398 = 0.1335;
    parameter Real ep0579_398 = 0.000709;
    parameter Real ep1083_398 = 0.09158;
    parameter Real ep0726_398 = 0.02617;
    parameter Real ep0731_398 = 0.02702;
    parameter Real ep0760_398 = 0.02702;
    parameter Real ep0805_398 = 0.02617;
    parameter Real ep0859_398 = 0.000223;
    parameter Real ep0838_398 = 0.006715;
    parameter Real ep0841_398 = 0.007808;
    parameter Real ep1101_398 = 0.2632;
    parameter Real ep1095_398 = 0.2632;
    parameter Real ep0929_398 = 0.6126;
    parameter Real ep0945_398 = 0.2151;
    parameter Real ep1106_398 = 0.09474;
    parameter Real ep1119_398 = 0.2905;
    parameter Real ep1494_398 = 0.1952;
    parameter Real ep1127_398 = 0.4505;
    parameter Real ep1131_398 = 0.3432;
    parameter Real ep1141_398 = 0.1537;
    parameter Real ep1212_398 = 0.008675;
    parameter Real ep0336_398 = 0.000223;
    parameter Real ep1255_398 = 0.000691;
    parameter Real ep1261_398 = 7e-06;
    parameter Real ep1333_398 = 0.001831;
    parameter Real ep1335_398 = 0.000447;
    parameter Real ep0451_398 = 0.01301;
    parameter Real ep1329_398 = 0.000323;
    parameter Real ep1437_398 = 0.06382;
    parameter Real ep1435_398 = 0.07521;
    parameter Real ep1151_398 = 0.1853;
    parameter Real ep1508_398 = 0.000223;
    parameter Real ep1155_398 = 0.2211;
    parameter Real ep1522_398 = 0.000223;
    parameter Real ep1546_398 = 0.000223;
    parameter Real ep1170_398 = 0.2158;
    parameter Real ep1577_398 = 0.000223;
    parameter Real ep1609_398 = 0.004338;
    parameter Real ep0337_398 = 0.000223;
    parameter Real ep1644_398 = 0.000223;
    parameter Real ep1179_398 = 0.2537;
    parameter Real ep1185_398 = 0.05684;
    parameter Real ep1189_398 = 0.1379;
    parameter Real ep1765_398 = 5.5e-05;
    parameter Real ep1792_398 = 0.1441;
    parameter Real ep1193_398 = 0.4232;
    parameter Real ep1804_398 = 0.000341;
    parameter Real ep1033_398 = 0.01946;
    parameter Real ep1719_398 = 0.01389;
    parameter Real cell = 1.0;
    parameter Real extracellular = 1.0;



    Real s_0003;
    Real s_0004;
    Real s_0017;
    Real s_0018;
    Real s_0028;
    Real s_0029;
    Real s_0032;
    Real s_0033;
    Real s_0040;
    Real s_0041;
    Real s_0042;
    Real s_0043;
    Real s_0044;
    Real s_0045;
    Real s_0046;
    Real s_0047;
    Real s_0049;
    Real s_0050;
    Real s_0051;
    Real s_0052;
    Real s_0073;
    Real s_0075;
    Real s_0096;
    Real s_0097;
    Real s_0098;
    Real s_0099;
    Real s_0116;
    Real s_0119;
    Real s_0121;
    Real s_0123;
    Real s_0128;
    Real s_0133;
    Real s_0147;
    Real s_0148;
    Real s_0149;
    Real s_0155;
    Real s_0160;
    Real s_0162;
    Real s_0191;
    Real s_0193;
    Real s_0194;
    Real s_0195;
    Real s_0201;
    Real s_0203;
    Real s_0214;
    Real s_0217;
    Real s_0218;
    Real s_0226;
    Real s_0229;
    Real s_0231;
    Real s_0232;
    Real s_0233;
    Real s_0237;
    Real s_0252;
    Real s_0255;
    Real s_0262;
    Real s_0263;
    Real s_0265;
    Real s_0266;
    Real s_0267;
    Real s_0269;
    Real s_0270;
    Real s_0271;
    Real s_0272;
    Real s_0276;
    Real s_0277;
    Real s_0282;
    Real s_0283;
    Real s_0289;
    Real s_0290;
    Real s_0293;
    Real s_0295;
    Real s_0297;
    Real s_0299;
    Real s_0303;
    Real s_0304;
    Real s_0305;
    Real s_0306;
    Real s_0307;
    Real s_0308;
    Real s_0310;
    Real s_0311;
    Real s_0312;
    Real s_0313;
    Real s_0316;
    Real s_0318;
    Real s_0325;
    Real s_0328;
    Real s_0330;
    Real s_0331;
    Real s_0332;
    Real s_0333;
    Real s_0334;
    Real s_0335;
    Real s_0336;
    Real s_0337;
    Real s_0341;
    Real s_0342;
    Real s_0343;
    Real s_0344;
    Real s_0345;
    Real s_0346;
    Real s_0347;
    Real s_0352;
    Real s_0354;
    Real s_0359;
    Real s_0360;
    Real s_0361;
    Real s_0362;
    Real s_0364;
    Real s_0367;
    Real s_0368;
    Real s_0369;
    Real s_0370;
    Real s_0371;
    Real s_0372;
    Real s_0376;
    Real s_0377;
    Real s_0378;
    Real s_0380;
    Real s_0381;
    Real s_0384;
    Real s_0391;
    Real s_0393;
    Real s_0395;
    Real s_0397;
    Real s_0405;
    Real s_0408;
    Real s_0411;
    Real s_0412;
    Real s_0420;
    Real s_0421;
    Real s_0435;
    Real s_0445;
    Real s_0446;
    Real s_0451;
    Real s_0453;
    Real s_0454;
    Real s_0457;
    Real s_0467;
    Real s_0470;
    Real s_0474;
    Real s_0476;
    Real s_0479;
    Real s_0480;
    Real s_0481;
    Real s_0488;
    Real s_0493;
    Real s_0497;
    Real s_0499;
    Real s_0502;
    Real s_0510;
    Real s_0512;
    Real s_0513;
    Real s_0520;
    Real s_0522;
    Real s_0526;
    Real s_0530;
    Real s_0533;
    Real s_0536;
    Real s_0539;
    Real s_0542;
    Real s_0543;
    Real s_0545;
    Real s_0546;
    Real s_0548;
    Real s_0555;
    Real s_0565;
    Real s_0574;
    Real s_0575;
    Real s_0579;
    Real s_0581;
    Real s_0585;
    Real s_0599;
    Real s_0600;
    Real s_0603;
    Real s_0611;
    Real s_0620;
    Real s_0621;
    Real s_0622;
    Real s_0627;
    Real s_0653;
    Real s_0654;
    Real s_0657;
    Real s_0659;
    Real s_0663;
    Real s_0671;
    Real s_0675;
    Real s_0704;
    Real s_0721;
    Real s_0726;
    Real s_0731;
    Real s_0732;
    Real s_0737;
    Real s_0738;
    Real s_0754;
    Real s_0755;
    Real s_0760;
    Real s_0765;
    Real s_0766;
    Real s_0767;
    Real s_0768;
    Real s_0772;
    Real s_0779;
    Real s_0783;
    Real s_0785;
    Real s_0789;
    Real s_0790;
    Real s_0795;
    Real s_0802;
    Real s_0805;
    Real s_0807;
    Real s_0810;
    Real s_0812;
    Real s_0813;
    Real s_0826;
    Real s_0838;
    Real s_0840;
    Real s_0841;
    Real s_0843;
    Real s_0859;
    Real s_0860;
    Real s_0861;
    Real s_0862;
    Real s_0863;
    Real s_0867;
    Real s_0875;
    Real s_0896;
    Real s_0903;
    Real s_0910;
    Real s_0913;
    Real s_0920;
    Real s_0929;
    Real s_0936;
    Real s_0937;
    Real s_0941;
    Real s_0942;
    Real s_0945;
    Real s_0971;
    Real s_0976;
    Real s_0979;
    Real s_0984;
    Real s_0991;
    Real s_0994;
    Real s_0998;
    Real s_1005;
    Real s_1006;
    Real s_1009;
    Real s_1017;
    Real s_1018;
    Real s_1019;
    Real s_1020;
    Real s_1021;
    Real s_1022;
    Real s_1027;
    Real s_1028;
    Real s_1033;
    Real s_1038;
    Real s_1040;
    Real s_1041;
    Real s_1061;
    Real s_1068;
    Real s_1072;
    Real s_1075;
    Real s_1081;
    Real s_1082;
    Real s_1083;
    Real s_1095;
    Real s_1098;
    Real s_1099;
    Real s_1100;
    Real s_1101;
    Real s_1105;
    Real s_1106;
    Real s_1109;
    Real s_1110;
    Real s_1112;
    Real s_1113;
    Real s_1119;
    Real s_1127;
    Real s_1131;
    Real s_1138;
    Real s_1141;
    Real s_1151;
    Real s_1155;
    Real s_1170;
    Real s_1179;
    Real s_1185;
    Real s_1189;
    Real s_1193;
    Real s_1204;
    Real s_1211;
    Real s_1212;
    Real s_1214;
    Real s_1216;
    Real s_1217;
    Real s_1218;
    Real s_1239;
    Real s_1240;
    Real s_1242;
    Real s_1248;
    Real s_1250;
    Real s_1255;
    Real s_1257;
    Real s_1258;
    Real s_1259;
    Real s_1260;
    Real s_1261;
    Real s_1263;
    Real s_1264;
    Real s_1265;
    Real s_1274;
    Real s_1277;
    Real s_1278;
    Real s_1287;
    Real s_1302;
    Real s_1303;
    Real s_1304;
    Real s_1312;
    Real s_1315;
    Real s_1316;
    Real s_1318;
    Real s_1321;
    Real s_1322;
    Real s_1327;
    Real s_1329;
    Real s_1331;
    Real s_1333;
    Real s_1334;
    Real s_1335;
    Real s_1336;
    Real s_1340;
    Real s_1358;
    Real s_1362;
    Real s_1363;
    Real s_1364;
    Real s_1367;
    Real s_1372;
    Real s_1374;
    Real s_1390;
    Real s_1391;
    Real s_1394;
    Real s_1397;
    Real s_1399;
    Real s_1406;
    Real s_1407;
    Real s_1411;
    Real s_1412;
    Real s_1413;
    Real s_1429;
    Real s_1430;
    Real s_1432;
    Real s_1435;
    Real s_1437;
    Real s_1476;
    Real s_1477;
    Real s_1484;
    Real s_1491;
    Real s_1492;
    Real s_1493;
    Real s_1494;
    Real s_1496;
    Real s_1497;
    Real s_1508;
    Real s_1511;
    Real s_1512;
    Real s_1522;
    Real s_1530;
    Real s_1531;
    Real s_1537;
    Real s_1544;
    Real s_1546;
    Real s_1550;
    Real s_1551;
    Real s_1552;
    Real s_1558;
    Real s_1561;
    Real s_1571;
    Real s_1574;
    Real s_1577;
    Real s_1578;
    Real s_1595;
    Real s_1599;
    Real s_1609;
    Real s_1611;
    Real s_1612;
    Real s_1632;
    Real s_1643;
    Real s_1644;
    Real s_1668;
    Real s_1670;
    Real s_1672;
    Real s_1674;
    Real s_1676;
    Real s_1680;
    Real s_1690;
    Real s_1719;
    Real s_1725;
    Real s_1731;
    Real s_1732;
    Real s_1733;
    Real s_1734;
    Real s_1735;
    Real s_1736;
    Real s_1742;
    Real s_1745;
    Real s_1750;
    Real s_1751;
    Real s_1752;
    Real s_1754;
    Real s_1755;
    Real s_1762;
    Real s_1765;
    Real s_1768;
    Real s_1776;
    Real s_1777;
    Real s_1791;
    Real s_1792;
    Real s_1799;
    Real s_1804;
    Real s_1806;
    Real s_1807;
    Real s_1835;
    Real s_2072;
    Real s_2093;
    Real e_0001;
    Real e_0002;
    Real e_0003;
    Real e_0005;
    Real e_0006;
    Real e_0008;
    Real e_0010;
    Real e_0012;
    Real e_0020;
    Real e_0022;
    Real e_0030;
    Real e_0031;
    Real e_0032;
    Real e_0033;
    Real e_0034;
    Real e_0035;
    Real e_0036;
    Real e_0037;
    Real e_0038;
    Real e_0039;
    Real e_0040;
    Real e_0041;
    Real e_0042;
    Real e_0043;
    Real e_0044;
    Real e_0045;
    Real e_0046;
    Real e_0048;
    Real e_0051;
    Real e_0052;
    Real e_0053;
    Real e_0054;
    Real e_0060;
    Real e_0061;
    Real e_0062;
    Real e_0063;
    Real e_0064;
    Real e_0065;
    Real e_0071;
    Real e_0074;
    Real e_0076;
    Real e_0077;
    Real e_0078;
    Real e_0079;
    Real e_0080;
    Real e_0081;
    Real e_0082;
    Real e_0083;
    Real e_0084;
    Real e_0085;
    Real e_0094;
    Real e_0099;
    Real e_0100;
    Real e_0103;
    Real e_0110;
    Real e_0116;
    Real e_0125;
    Real e_0134;
    Real e_0135;
    Real e_0137;
    Real e_0138;
    Real e_0139;
    Real e_0144;
    Real e_0145;
    Real e_0146;
    Real e_0149;
    Real e_0150;
    Real e_0151;
    Real e_0152;
    Real e_0162;
    Real e_0167;
    Real e_0168;
    Real e_0175;
    Real e_0177;
    Real e_0183;
    Real e_0184;
    Real e_0185;
    Real e_0186;
    Real e_0188;
    Real e_0221;
    Real e_0223;
    Real e_0225;
    Real e_0238;
    Real e_0246;
    Real e_0253;
    Real e_0254;
    Real e_0260;
    Real e_0263;
    Real e_0264;
    Real e_0273;
    Real e_0274;
    Real e_0275;
    Real e_0276;
    Real e_0277;
    Real e_0278;
    Real e_0279;
    Real e_0280;
    Real e_0281;
    Real e_0282;
    Real e_0291;
    Real e_0292;
    Real e_0300;
    Real e_0313;
    Real e_0318;
    Real e_0323;
    Real e_0324;
    Real e_0326;
    Real e_0327;
    Real e_0328;
    Real e_0330;
    Real e_0331;
    Real e_0332;
    Real e_0342;
    Real e_0368;
    Real e_0372;
    Real e_0373;
    Real e_0374;
    Real e_0375;
    Real e_0376;
    Real e_0377;
    Real e_0378;
    Real e_0389;
    Real e_0391;
    Real e_0395;
    Real e_0403;
    Real e_0404;
    Real e_0405;
    Real e_0406;
    Real e_0416;
    Real e_0425;
    Real e_0426;
    Real e_0427;
    Real e_0428;
    Real e_0429;
    Real e_0431;
    Real e_0432;
    Real e_0433;
    Real e_0435;
    Real e_0436;
    Real e_0439;
    Real e_0451;
    Real e_0466;
    Real e_0514;
    Real e_0515;
    Real e_0516;
    Real e_0519;
    Real e_0531;
    Real e_0540;
    Real e_0541;
    Real e_0544;
    Real e_0554;
    Real e_0559;
    Real e_0561;
    Real e_0567;
    Real e_0572;
    Real e_0577;
    Real e_0578;
    Real e_0579;
    Real e_0580;
    Real e_0586;
    Real e_0605;
    Real e_0606;
    Real e_0607;
    Real e_0608;
    Real e_0609;
    Real e_0610;
    Real e_0611;
    Real e_0612;
    Real e_0641;
    Real e_0657;
    Real e_0682;
    Real e_0691;
    Real e_0717;
    Real e_0719;
    Real e_0720;
    Real e_0727;
    Real e_0728;
    Real e_0729;
    Real e_0730;
    Real e_0731;
    Real e_0732;
    Real e_0734;
    Real e_0735;
    Real e_0736;
    Real e_0742;
    Real e_0743;
    Real e_0746;
    Real e_0750;
    Real e_0757;
    Real e_0765;
    Real e_0768;
    Real e_0770;
    Real e_0771;
    Real e_0774;
    Real e_0775;
    Real e_0776;
    Real e_0791;
    Real e_0793;
    Real e_0795;
    Real e_0796;
    Real e_0798;
    Real e_0799;
    Real e_0803;
    Real e_0804;
    Real e_0805;
    Real e_0813;
    Real e_0815;
    Real e_0818;
    Real e_0819;
    Real e_0821;
    Real e_0822;
    Real e_0823;
    Real e_0825;
    Real e_0826;
    Real e_0827;
    Real e_0828;
    Real e_0839;
    Real e_0848;
    Real e_0866;
    Real e_0867;
    Real e_0868;
    Real e_0869;
    Real e_0870;
    Real e_0871;
    Real e_0872;
    Real e_0873;
    Real e_0875;
    Real e_0876;
    Real e_0893;
    Real e_0894;
    Real e_0896;
    Real e_0897;
    Real e_0903;
    Real e_0911;
    Real e_0918;
    Real e_0919;
    Real e_0925;
    Real e_0926;
    Real e_0928;
    Real e_0931;
    Real e_0941;
    Real e_0951;
    Real e_0953;
    Real e_0960;
    Real e_0962;
    Real e_0964;
    Real e_0974;
    Real e_0975;
    Real e_0977;
    Real e_0978;
    Real e_0979;
    Real e_0986;
    Real e_0987;
    Real e_0988;
    Real e_0990;
    Real e_0991;
    Real e_0993;
    Real e_0994;
    Real e_1004;
    Real e_1005;
    Real e_1006;
    Real e_1010;
    Real e_1014;
    Real e_1015;
    Real e_1019;
    Real e_1023;
    Real e_1026;
    Real e_1027;
    Real e_1028;
    Real e_1029;
    Real e_1034;
    Real e_1045;
    Real e_1086;
    Real e_1105;
    Real e_1106;
    Real e_1108;
    Real e_1109;
    Real e_1110;
    Real e_1125;
    Real e_1126;
    Real e_1127;
    Real e_1128;
    Real e_1129;
    Real e_1130;
    Real e_1136;
    Real e_1137;
    Real e_1141;
    Real e_1149;
    Real e_1150;
    Real e_1160;
    Real e_1167;
    Real e_1168;
    Real e_1169;
    Real e_1170;
    Real e_1172;
    Real e_1184;
    Real e_1185;
    Real e_1186;
    Real e_1188;
    Real e_1189;
    Real e_1196;
    Real e_1200;
    Real e_1201;
    Real e_1202;
    Real e_1203;
    Real e_1205;
    Real e_1206;
    Real e_1207;
    Real e_1210;
    Real e_1226;
    Real e_1227;
    Real e_1232;
    Real e_1233;
    Real e_1234;
    Real e_1238;
    Real e_1239;
    Real e_1240;
    Real e_1241;
    Real e_1242;
    Real e_1243;
    Real e_1244;
    Real e_1247;
    Real e_1248;
    Real e_1249;
    Real e_1250;
    Real e_1251;
    Real e_1252;
    Real e_1253;
    Real e_1254;
    Real e_1256;
    Real e_1257;
    Real e_1258;
    Real e_1259;
    Real e_1262;
    Real e_1263;
    Real e_1264;
    Real e_1271;
    Real e_1272;
    Real e_1273;
    Real e_1275;
    Real e_1276;
    Real e_1277;
    Real e_1291;
    Real e_1298;
    Real e_1312;
    Real e_1313;
    Real e_1315;
    Real e_1326;
    Real e_1334;
    Real e_1335;
    Real e_1339;
    Real e_1340;
    Real e_1341;
    Real e_1355;
    Real e_1366;
    Real e_1367;
    Real e_1369;
    Real e_1373;
    Real e_1374;
    Real e_1376;
    Real e_1377;

initial equation
    s_0003 = 0.1;
    s_0004 = 0.1;
    s_0017 = 0.1;
    s_0018 = 0.1;
    s_0028 = 0.1;
    s_0029 = 0.1;
    s_0032 = 0.1;
    s_0033 = 0.1;
    s_0040 = 0.1;
    s_0041 = 0.1;
    s_0042 = 0.1;
    s_0043 = 0.1;
    s_0044 = 0.1;
    s_0045 = 0.1;
    s_0046 = 0.1;
    s_0047 = 0.1;
    s_0049 = 0.1;
    s_0050 = 0.1;
    s_0051 = 0.1;
    s_0052 = 0.1;
    s_0073 = 0.1;
    s_0075 = 0.1;
    s_0096 = 0.1;
    s_0097 = 0.1;
    s_0098 = 0.1;
    s_0099 = 0.1;
    s_0116 = 0.1;
    s_0119 = 0.1;
    s_0121 = 0.1;
    s_0123 = 0.1;
    s_0128 = 0.1;
    s_0133 = 0.1;
    s_0147 = 0.1;
    s_0148 = 0.1;
    s_0149 = 0.1;
    s_0155 = 0.1;
    s_0160 = 0.1;
    s_0162 = 0.1;
    s_0191 = 0.1;
    s_0193 = 0.1;
    s_0194 = 0.1;
    s_0195 = 0.1;
    s_0201 = 0.1;
    s_0203 = 0.1;
    s_0214 = 0.1;
    s_0217 = 0.1;
    s_0218 = 0.1;
    s_0226 = 0.1;
    s_0229 = 0.1;
    s_0231 = 0.1;
    s_0232 = 0.1;
    s_0233 = 0.1;
    s_0237 = 0.1;
    s_0252 = 0.1;
    s_0255 = 0.1;
    s_0262 = 0.1;
    s_0263 = 0.1;
    s_0265 = 0.1;
    s_0266 = 0.1;
    s_0267 = 0.1;
    s_0269 = 0.1;
    s_0270 = 0.1;
    s_0271 = 0.1;
    s_0272 = 0.1;
    s_0276 = 0.1;
    s_0277 = 0.1;
    s_0282 = 0.1;
    s_0283 = 0.1;
    s_0289 = 0.1;
    s_0290 = 0.1;
    s_0293 = 0.1;
    s_0295 = 0.1;
    s_0297 = 0.1;
    s_0299 = 0.1;
    s_0303 = 0.1;
    s_0304 = 0.1;
    s_0305 = 0.1;
    s_0306 = 0.1;
    s_0307 = 0.1;
    s_0308 = 0.1;
    s_0310 = 0.1;
    s_0311 = 0.1;
    s_0312 = 0.1;
    s_0313 = 0.1;
    s_0316 = 0.1;
    s_0318 = 0.1;
    s_0325 = 0.1;
    s_0328 = 0.1;
    s_0330 = 0.1;
    s_0331 = 0.1;
    s_0332 = 0.1;
    s_0333 = 0.1;
    s_0334 = 0.1;
    s_0335 = 0.1;
    s_0336 = 0.1;
    s_0337 = 0.1;
    s_0341 = 0.1;
    s_0342 = 0.1;
    s_0343 = 0.1;
    s_0344 = 0.1;
    s_0345 = 0.1;
    s_0346 = 0.1;
    s_0347 = 0.1;
    s_0352 = 0.1;
    s_0354 = 0.1;
    s_0359 = 0.1;
    s_0360 = 0.1;
    s_0361 = 0.1;
    s_0362 = 0.1;
    s_0364 = 0.1;
    s_0367 = 0.1;
    s_0368 = 0.1;
    s_0369 = 0.1;
    s_0370 = 0.1;
    s_0371 = 0.1;
    s_0372 = 0.1;
    s_0376 = 0.1;
    s_0377 = 0.1;
    s_0378 = 0.1;
    s_0380 = 0.1;
    s_0381 = 0.1;
    s_0384 = 0.1;
    s_0391 = 0.1;
    s_0393 = 0.1;
    s_0395 = 0.1;
    s_0397 = 0.1;
    s_0405 = 0.1;
    s_0408 = 0.1;
    s_0411 = 0.1;
    s_0412 = 0.1;
    s_0420 = 0.1;
    s_0421 = 0.1;
    s_0435 = 0.1;
    s_0445 = 0.1;
    s_0446 = 0.1;
    s_0451 = 0.1;
    s_0453 = 1.0;
    s_0454 = 0.1;
    s_0457 = 0.1;
    s_0467 = 0.1;
    s_0470 = 0.1;
    s_0474 = 0.1;
    s_0476 = 0.1;
    s_0479 = 0.1;
    s_0480 = 0.1;
    s_0481 = 0.1;
    s_0488 = 0.1;
    s_0493 = 0.1;
    s_0497 = 0.1;
    s_0499 = 1.0;
    s_0502 = 0.1;
    s_0510 = 0.1;
    s_0512 = 0.1;
    s_0513 = 0.1;
    s_0520 = 0.1;
    s_0522 = 1.0;
    s_0526 = 0.1;
    s_0530 = 0.1;
    s_0533 = 0.1;
    s_0536 = 0.1;
    s_0539 = 0.1;
    s_0542 = 0.1;
    s_0543 = 0.1;
    s_0545 = 0.0;
    s_0546 = 0.1;
    s_0548 = 1.0;
    s_0555 = 0.1;
    s_0565 = 0.1;
    s_0574 = 0.1;
    s_0575 = 0.1;
    s_0579 = 0.1;
    s_0581 = 1.0;
    s_0585 = 0.1;
    s_0599 = 0.1;
    s_0600 = 0.1;
    s_0603 = 0.1;
    s_0611 = 0.1;
    s_0620 = 0.1;
    s_0621 = 0.1;
    s_0622 = 0.1;
    s_0627 = 0.1;
    s_0653 = 0.1;
    s_0654 = 0.1;
    s_0657 = 0.1;
    s_0659 = 1.0;
    s_0663 = 0.1;
    s_0671 = 0.1;
    s_0675 = 0.1;
    s_0704 = 0.1;
    s_0721 = 0.1;
    s_0726 = 0.1;
    s_0731 = 0.1;
    s_0732 = 0.1;
    s_0737 = 0.1;
    s_0738 = 0.1;
    s_0754 = 0.1;
    s_0755 = 0.1;
    s_0760 = 0.1;
    s_0765 = 0.1;
    s_0766 = 0.1;
    s_0767 = 0.1;
    s_0768 = 0.1;
    s_0772 = 0.1;
    s_0779 = 0.1;
    s_0783 = 0.1;
    s_0785 = 0.1;
    s_0789 = 0.1;
    s_0790 = 0.1;
    s_0795 = 0.1;
    s_0802 = 0.1;
    s_0805 = 0.1;
    s_0807 = 0.1;
    s_0810 = 0.1;
    s_0812 = 0.1;
    s_0813 = 0.1;
    s_0826 = 0.1;
    s_0838 = 0.1;
    s_0840 = 1.0;
    s_0841 = 0.1;
    s_0843 = 1.0;
    s_0859 = 0.1;
    s_0860 = 0.1;
    s_0861 = 0.1;
    s_0862 = 0.1;
    s_0863 = 0.1;
    s_0867 = 0.1;
    s_0875 = 0.1;
    s_0896 = 0.1;
    s_0903 = 0.1;
    s_0910 = 0.1;
    s_0913 = 0.1;
    s_0920 = 0.1;
    s_0929 = 0.1;
    s_0936 = 0.1;
    s_0937 = 0.1;
    s_0941 = 0.1;
    s_0942 = 0.1;
    s_0945 = 0.1;
    s_0971 = 0.1;
    s_0976 = 0.1;
    s_0979 = 0.1;
    s_0984 = 0.1;
    s_0991 = 0.1;
    s_0994 = 0.1;
    s_0998 = 0.1;
    s_1005 = 0.1;
    s_1006 = 0.1;
    s_1009 = 0.1;
    s_1017 = 0.1;
    s_1018 = 0.1;
    s_1019 = 0.1;
    s_1020 = 0.1;
    s_1021 = 0.1;
    s_1022 = 0.1;
    s_1027 = 0.1;
    s_1028 = 0.1;
    s_1033 = 0.1;
    s_1038 = 0.1;
    s_1040 = 0.1;
    s_1041 = 0.1;
    s_1061 = 0.1;
    s_1068 = 0.1;
    s_1072 = 0.1;
    s_1075 = 0.1;
    s_1081 = 0.1;
    s_1082 = 0.1;
    s_1083 = 0.1;
    s_1095 = 0.1;
    s_1098 = 0.1;
    s_1099 = 0.1;
    s_1100 = 0.1;
    s_1101 = 0.1;
    s_1105 = 0.1;
    s_1106 = 0.1;
    s_1109 = 0.1;
    s_1110 = 0.1;
    s_1112 = 0.1;
    s_1113 = 0.1;
    s_1119 = 0.1;
    s_1127 = 0.1;
    s_1131 = 0.1;
    s_1138 = 0.1;
    s_1141 = 0.1;
    s_1151 = 0.1;
    s_1155 = 0.1;
    s_1170 = 0.1;
    s_1179 = 0.1;
    s_1185 = 0.1;
    s_1189 = 0.1;
    s_1193 = 0.1;
    s_1204 = 0.1;
    s_1211 = 0.1;
    s_1212 = 0.1;
    s_1214 = 1.0;
    s_1216 = 0.1;
    s_1217 = 0.1;
    s_1218 = 0.1;
    s_1239 = 0.1;
    s_1240 = 0.1;
    s_1242 = 0.1;
    s_1248 = 0.1;
    s_1250 = 0.0;
    s_1255 = 0.1;
    s_1257 = 1.0;
    s_1258 = 0.1;
    s_1259 = 0.1;
    s_1260 = 0.1;
    s_1261 = 0.1;
    s_1263 = 1.0;
    s_1264 = 0.1;
    s_1265 = 0.1;
    s_1274 = 0.1;
    s_1277 = 0.1;
    s_1278 = 0.1;
    s_1287 = 0.1;
    s_1302 = 0.1;
    s_1303 = 0.1;
    s_1304 = 0.1;
    s_1312 = 0.1;
    s_1315 = 0.1;
    s_1316 = 0.1;
    s_1318 = 0.1;
    s_1321 = 0.1;
    s_1322 = 0.1;
    s_1327 = 0.1;
    s_1329 = 0.1;
    s_1331 = 1.0;
    s_1333 = 0.1;
    s_1334 = 0.1;
    s_1335 = 0.1;
    s_1336 = 0.1;
    s_1340 = 0.1;
    s_1358 = 0.1;
    s_1362 = 0.1;
    s_1363 = 0.1;
    s_1364 = 0.1;
    s_1367 = 0.1;
    s_1372 = 0.1;
    s_1374 = 1.0;
    s_1390 = 0.1;
    s_1391 = 0.1;
    s_1394 = 0.1;
    s_1397 = 0.1;
    s_1399 = 0.1;
    s_1406 = 0.1;
    s_1407 = 0.1;
    s_1411 = 0.1;
    s_1412 = 0.1;
    s_1413 = 0.1;
    s_1429 = 0.1;
    s_1430 = 0.1;
    s_1432 = 1.0;
    s_1435 = 0.1;
    s_1437 = 0.1;
    s_1476 = 0.1;
    s_1477 = 0.1;
    s_1484 = 0.1;
    s_1491 = 0.1;
    s_1492 = 0.1;
    s_1493 = 0.1;
    s_1494 = 0.1;
    s_1496 = 1.0;
    s_1497 = 0.1;
    s_1508 = 0.1;
    s_1511 = 0.1;
    s_1512 = 0.1;
    s_1522 = 0.1;
    s_1530 = 0.1;
    s_1531 = 0.1;
    s_1537 = 0.1;
    s_1544 = 0.1;
    s_1546 = 0.1;
    s_1550 = 0.1;
    s_1551 = 0.1;
    s_1552 = 0.1;
    s_1558 = 0.1;
    s_1561 = 0.1;
    s_1571 = 0.1;
    s_1574 = 0.1;
    s_1577 = 0.1;
    s_1578 = 0.1;
    s_1595 = 0.1;
    s_1599 = 0.1;
    s_1609 = 0.1;
    s_1611 = 1.0;
    s_1612 = 0.1;
    s_1632 = 0.1;
    s_1643 = 0.1;
    s_1644 = 0.1;
    s_1668 = 0.1;
    s_1670 = 0.1;
    s_1672 = 0.1;
    s_1674 = 0.1;
    s_1676 = 0.1;
    s_1680 = 0.1;
    s_1690 = 0.1;
    s_1719 = 0.1;
    s_1725 = 0.1;
    s_1731 = 0.1;
    s_1732 = 0.1;
    s_1733 = 0.1;
    s_1734 = 0.1;
    s_1735 = 0.1;
    s_1736 = 0.1;
    s_1742 = 0.1;
    s_1745 = 0.1;
    s_1750 = 0.1;
    s_1751 = 0.1;
    s_1752 = 0.1;
    s_1754 = 0.1;
    s_1755 = 0.1;
    s_1762 = 0.1;
    s_1765 = 0.1;
    s_1768 = 0.1;
    s_1776 = 0.1;
    s_1777 = 0.1;
    s_1791 = 0.1;
    s_1792 = 0.1;
    s_1799 = 0.1;
    s_1804 = 0.1;
    s_1806 = 1.0;
    s_1807 = 0.0;
    s_1835 = 0.0;
    s_2072 = 0.0;
    s_2093 = 0.0;
    e_0001 = 0.001;
    e_0002 = 0.001;
    e_0003 = 0.001;
    e_0005 = 0.001;
    e_0006 = 0.001;
    e_0008 = 0.001;
    e_0010 = 0.001;
    e_0012 = 0.001;
    e_0020 = 0.001;
    e_0022 = 0.001;
    e_0030 = 0.001;
    e_0031 = 0.001;
    e_0032 = 0.001;
    e_0033 = 0.001;
    e_0034 = 0.001;
    e_0035 = 0.001;
    e_0036 = 0.001;
    e_0037 = 0.001;
    e_0038 = 0.001;
    e_0039 = 0.001;
    e_0040 = 0.001;
    e_0041 = 0.001;
    e_0042 = 0.001;
    e_0043 = 0.001;
    e_0044 = 0.001;
    e_0045 = 0.001;
    e_0046 = 0.001;
    e_0048 = 0.001;
    e_0051 = 0.001;
    e_0052 = 0.001;
    e_0053 = 0.001;
    e_0054 = 0.001;
    e_0060 = 0.001;
    e_0061 = 0.001;
    e_0062 = 0.001;
    e_0063 = 0.001;
    e_0064 = 0.001;
    e_0065 = 0.001;
    e_0071 = 0.001;
    e_0074 = 0.001;
    e_0076 = 0.001;
    e_0077 = 0.001;
    e_0078 = 0.001;
    e_0079 = 0.001;
    e_0080 = 0.001;
    e_0081 = 0.001;
    e_0082 = 0.001;
    e_0083 = 0.001;
    e_0084 = 0.001;
    e_0085 = 0.001;
    e_0094 = 0.001;
    e_0099 = 0.001;
    e_0100 = 0.001;
    e_0103 = 0.001;
    e_0110 = 0.001;
    e_0116 = 0.001;
    e_0125 = 0.001;
    e_0134 = 0.001;
    e_0135 = 0.001;
    e_0137 = 0.001;
    e_0138 = 0.001;
    e_0139 = 0.001;
    e_0144 = 0.001;
    e_0145 = 0.001;
    e_0146 = 0.001;
    e_0149 = 0.001;
    e_0150 = 0.001;
    e_0151 = 0.001;
    e_0152 = 0.001;
    e_0162 = 0.001;
    e_0167 = 0.001;
    e_0168 = 0.001;
    e_0175 = 0.001;
    e_0177 = 0.001;
    e_0183 = 0.001;
    e_0184 = 0.001;
    e_0185 = 0.001;
    e_0186 = 0.001;
    e_0188 = 0.001;
    e_0221 = 0.001;
    e_0223 = 0.001;
    e_0225 = 0.001;
    e_0238 = 0.001;
    e_0246 = 0.001;
    e_0253 = 0.001;
    e_0254 = 0.001;
    e_0260 = 0.001;
    e_0263 = 0.001;
    e_0264 = 0.001;
    e_0273 = 0.001;
    e_0274 = 0.001;
    e_0275 = 0.001;
    e_0276 = 0.001;
    e_0277 = 0.001;
    e_0278 = 0.001;
    e_0279 = 0.001;
    e_0280 = 0.001;
    e_0281 = 0.001;
    e_0282 = 0.001;
    e_0291 = 0.001;
    e_0292 = 0.001;
    e_0300 = 0.001;
    e_0313 = 0.001;
    e_0318 = 0.001;
    e_0323 = 0.001;
    e_0324 = 0.001;
    e_0326 = 0.001;
    e_0327 = 0.001;
    e_0328 = 0.001;
    e_0330 = 0.001;
    e_0331 = 0.001;
    e_0332 = 0.001;
    e_0342 = 0.001;
    e_0368 = 0.001;
    e_0372 = 0.001;
    e_0373 = 0.001;
    e_0374 = 0.001;
    e_0375 = 0.001;
    e_0376 = 0.001;
    e_0377 = 0.001;
    e_0378 = 0.001;
    e_0389 = 0.001;
    e_0391 = 0.001;
    e_0395 = 0.001;
    e_0403 = 0.001;
    e_0404 = 0.001;
    e_0405 = 0.001;
    e_0406 = 0.001;
    e_0416 = 0.001;
    e_0425 = 0.001;
    e_0426 = 0.001;
    e_0427 = 0.001;
    e_0428 = 0.001;
    e_0429 = 0.001;
    e_0431 = 0.001;
    e_0432 = 0.001;
    e_0433 = 0.001;
    e_0435 = 0.001;
    e_0436 = 0.001;
    e_0439 = 0.001;
    e_0451 = 0.001;
    e_0466 = 0.001;
    e_0514 = 0.001;
    e_0515 = 0.001;
    e_0516 = 0.001;
    e_0519 = 0.001;
    e_0531 = 0.001;
    e_0540 = 0.001;
    e_0541 = 0.001;
    e_0544 = 0.001;
    e_0554 = 0.001;
    e_0559 = 0.001;
    e_0561 = 0.001;
    e_0567 = 0.001;
    e_0572 = 0.001;
    e_0577 = 0.001;
    e_0578 = 0.001;
    e_0579 = 0.001;
    e_0580 = 0.001;
    e_0586 = 0.001;
    e_0605 = 0.001;
    e_0606 = 0.001;
    e_0607 = 0.001;
    e_0608 = 0.001;
    e_0609 = 0.001;
    e_0610 = 0.001;
    e_0611 = 0.001;
    e_0612 = 0.001;
    e_0641 = 0.001;
    e_0657 = 0.001;
    e_0682 = 0.001;
    e_0691 = 0.001;
    e_0717 = 0.001;
    e_0719 = 0.001;
    e_0720 = 0.001;
    e_0727 = 0.001;
    e_0728 = 0.001;
    e_0729 = 0.001;
    e_0730 = 0.001;
    e_0731 = 0.001;
    e_0732 = 0.001;
    e_0734 = 0.001;
    e_0735 = 0.001;
    e_0736 = 0.001;
    e_0742 = 0.001;
    e_0743 = 0.001;
    e_0746 = 0.001;
    e_0750 = 0.001;
    e_0757 = 0.001;
    e_0765 = 0.001;
    e_0768 = 0.001;
    e_0770 = 0.001;
    e_0771 = 0.001;
    e_0774 = 0.001;
    e_0775 = 0.001;
    e_0776 = 0.001;
    e_0791 = 0.001;
    e_0793 = 0.001;
    e_0795 = 0.001;
    e_0796 = 0.001;
    e_0798 = 0.001;
    e_0799 = 0.001;
    e_0803 = 0.001;
    e_0804 = 0.001;
    e_0805 = 0.001;
    e_0813 = 0.001;
    e_0815 = 0.001;
    e_0818 = 0.001;
    e_0819 = 0.001;
    e_0821 = 0.001;
    e_0822 = 0.001;
    e_0823 = 0.001;
    e_0825 = 0.001;
    e_0826 = 0.001;
    e_0827 = 0.001;
    e_0828 = 0.001;
    e_0839 = 0.001;
    e_0848 = 0.001;
    e_0866 = 0.001;
    e_0867 = 0.001;
    e_0868 = 0.001;
    e_0869 = 0.001;
    e_0870 = 0.001;
    e_0871 = 0.001;
    e_0872 = 0.001;
    e_0873 = 0.001;
    e_0875 = 0.001;
    e_0876 = 0.001;
    e_0893 = 0.001;
    e_0894 = 0.001;
    e_0896 = 0.001;
    e_0897 = 0.001;
    e_0903 = 0.001;
    e_0911 = 0.001;
    e_0918 = 0.001;
    e_0919 = 0.001;
    e_0925 = 0.001;
    e_0926 = 0.001;
    e_0928 = 0.001;
    e_0931 = 0.001;
    e_0941 = 0.001;
    e_0951 = 0.001;
    e_0953 = 0.001;
    e_0960 = 0.001;
    e_0962 = 0.001;
    e_0964 = 0.001;
    e_0974 = 0.001;
    e_0975 = 0.001;
    e_0977 = 0.001;
    e_0978 = 0.001;
    e_0979 = 0.001;
    e_0986 = 0.001;
    e_0987 = 0.001;
    e_0988 = 0.001;
    e_0990 = 0.001;
    e_0991 = 0.001;
    e_0993 = 0.001;
    e_0994 = 0.001;
    e_1004 = 0.001;
    e_1005 = 0.001;
    e_1006 = 0.001;
    e_1010 = 0.001;
    e_1014 = 0.001;
    e_1015 = 0.001;
    e_1019 = 0.001;
    e_1023 = 0.001;
    e_1026 = 0.001;
    e_1027 = 0.001;
    e_1028 = 0.001;
    e_1029 = 0.001;
    e_1034 = 0.001;
    e_1045 = 0.001;
    e_1086 = 0.001;
    e_1105 = 0.001;
    e_1106 = 0.001;
    e_1108 = 0.001;
    e_1109 = 0.001;
    e_1110 = 0.001;
    e_1125 = 0.001;
    e_1126 = 0.001;
    e_1127 = 0.001;
    e_1128 = 0.001;
    e_1129 = 0.001;
    e_1130 = 0.001;
    e_1136 = 0.001;
    e_1137 = 0.001;
    e_1141 = 0.001;
    e_1149 = 0.001;
    e_1150 = 0.001;
    e_1160 = 0.001;
    e_1167 = 0.001;
    e_1168 = 0.001;
    e_1169 = 0.001;
    e_1170 = 0.001;
    e_1172 = 0.001;
    e_1184 = 0.001;
    e_1185 = 0.001;
    e_1186 = 0.001;
    e_1188 = 0.001;
    e_1189 = 0.001;
    e_1196 = 0.001;
    e_1200 = 0.001;
    e_1201 = 0.001;
    e_1202 = 0.001;
    e_1203 = 0.001;
    e_1205 = 0.001;
    e_1206 = 0.001;
    e_1207 = 0.001;
    e_1210 = 0.001;
    e_1226 = 0.001;
    e_1227 = 0.001;
    e_1232 = 0.001;
    e_1233 = 0.001;
    e_1234 = 0.001;
    e_1238 = 0.001;
    e_1239 = 0.001;
    e_1240 = 0.001;
    e_1241 = 0.001;
    e_1242 = 0.001;
    e_1243 = 0.001;
    e_1244 = 0.001;
    e_1247 = 0.001;
    e_1248 = 0.001;
    e_1249 = 0.001;
    e_1250 = 0.001;
    e_1251 = 0.001;
    e_1252 = 0.001;
    e_1253 = 0.001;
    e_1254 = 0.001;
    e_1256 = 0.001;
    e_1257 = 0.001;
    e_1258 = 0.001;
    e_1259 = 0.001;
    e_1262 = 0.001;
    e_1263 = 0.001;
    e_1264 = 0.001;
    e_1271 = 0.001;
    e_1272 = 0.001;
    e_1273 = 0.001;
    e_1275 = 0.001;
    e_1276 = 0.001;
    e_1277 = 0.001;
    e_1291 = 0.001;
    e_1298 = 0.001;
    e_1312 = 0.001;
    e_1313 = 0.001;
    e_1315 = 0.001;
    e_1326 = 0.001;
    e_1334 = 0.001;
    e_1335 = 0.001;
    e_1339 = 0.001;
    e_1340 = 0.001;
    e_1341 = 0.001;
    e_1355 = 0.001;
    e_1366 = 0.001;
    e_1367 = 0.001;
    e_1369 = 0.001;
    e_1373 = 0.001;
    e_1374 = 0.001;
    e_1376 = 0.001;
    e_1377 = 0.001;

equation

    der(s_0003) = (cell * v0_0 * (1 + ep0004_0 * log(s_0004 / ic0004) + ep0003_0 * log(s_0003 / ic0003))) - (cell * max(v0_394 * (1 + ep0003_394 * log(s_0003 / ic0003)), zero_flux));
    der(s_0004) = (cell * v0_54 * (1 + ep0310_54 * log(s_0310 / ic0310) + ep0004_54 * log(s_0004 / ic0004))) - (cell * v0_0 * (1 + ep0004_0 * log(s_0004 / ic0004) + ep0003_0 * log(s_0003 / ic0003)));
    der(s_0017) = (cell * v0_218 * (1 + ep0042_218 * log(s_0042 / ic0042) + ep1336_218 * log(s_1336 / ic1336) + ep0017_218 * log(s_0017 / ic0017) + ep1335_218 * log(s_1335 / ic1335))) - (cell * v0_145 * (1 + ep0017_145 * log(s_0017 / ic0017) + ep0282_145 * log(s_0282 / ic0282)));
    der(s_0018) = (cell * v0_219 * (1 + ep0041_219 * log(s_0041 / ic0041) + ep1336_219 * log(s_1336 / ic1336) + ep0018_219 * log(s_0018 / ic0018) + ep1335_219 * log(s_1335 / ic1335))) - (cell * v0_146 * (1 + ep0018_146 * log(s_0018 / ic0018) + ep0051_146 * log(s_0051 / ic0051)));
    der(s_0028) = (cell * v0_51 * (1 + ep0304_51 * log(s_0304 / ic0304) + ep1336_51 * log(s_1336 / ic1336) + ep0028_51 * log(s_0028 / ic0028) + ep1335_51 * log(s_1335 / ic1335))) - (cell * v0_344 * (1 + ep0028_344 * log(s_0028 / ic0028) + ep1735_344 * log(s_1735 / ic1735) + ep0397_344 * log(s_0397 / ic0397) + ep1734_344 * log(s_1734 / ic1734))) - (cell * v0_348 * (1 + ep0028_348 * log(s_0028 / ic0028) + ep1745_348 * log(s_1745 / ic1745) + ep0397_348 * log(s_0397 / ic0397) + ep1736_348 * log(s_1736 / ic1736)));
    der(s_0029) = (cell * v0_326 * (1 + ep0214_326 * log(s_0214 / ic0214) + ep1334_326 * log(s_1334 / ic1334) + ep0029_326 * log(s_0029 / ic0029) + ep1333_326 * log(s_1333 / ic1333))) - (cell * v0_179 * (1 + ep0467_179 * log(s_0467 / ic0467) + ep0029_179 * log(s_0029 / ic0029) + ep0675_179 * log(s_0675 / ic0675) + ep0421_179 * log(s_0421 / ic0421)));
    der(s_0032) = (cell * v0_12 * (1 + ep0203_12 * log(s_0203 / ic0203) + ep1336_12 * log(s_1336 / ic1336) + ep1335_12 * log(s_1335 / ic1335) + ep0032_12 * log(s_0032 / ic0032))) - (cell * v0_261 * (1 + ep0470_261 * log(s_0470 / ic0470) + ep0467_261 * log(s_0467 / ic0467) + ep0032_261 * log(s_0032 / ic0032) + ep0454_261 * log(s_0454 / ic0454) + ep0033_261 * log(s_0033 / ic0033) + ep0783_261 * log(s_0783 / ic0783)));
    der(s_0033) = (cell * v0_261 * (1 + ep0470_261 * log(s_0470 / ic0470) + ep0467_261 * log(s_0467 / ic0467) + ep0032_261 * log(s_0032 / ic0032) + ep0454_261 * log(s_0454 / ic0454) + ep0033_261 * log(s_0033 / ic0033) + ep0783_261 * log(s_0783 / ic0783))) - (cell * v0_260 * (1 + ep0467_260 * log(s_0467 / ic0467) + ep0033_260 * log(s_0033 / ic0033) + ep0599_260 * log(s_0599 / ic0599) + ep0421_260 * log(s_0421 / ic0421)));
    der(s_0040) = (cell * v0_285 * (1 + ep0344_285 * log(s_0344 / ic0344) + ep1072_285 * log(s_1072 / ic1072) + ep0467_285 * log(s_0467 / ic0467) + ep0040_285 * log(s_0040 / ic0040) + ep0421_285 * log(s_0421 / ic0421) + ep1430_285 * log(s_1430 / ic1430))) - (cell * v0_95 * (1 + ep0040_95 * log(s_0040 / ic0040) + ep0343_95 * log(s_0343 / ic0343) + ep0875_95 * log(s_0875 / ic0875)));
    der(s_0041) = (cell * v0_8 * (1 + ep0232_8 * log(s_0232 / ic0232) + ep1531_8 * log(s_1531 / ic1531) + ep0041_8 * log(s_0041 / ic0041) + ep0543_8 * log(s_0543 / ic0543))) - (cell * v0_219 * (1 + ep0041_219 * log(s_0041 / ic0041) + ep1336_219 * log(s_1336 / ic1336) + ep0018_219 * log(s_0018 / ic0018) + ep1335_219 * log(s_1335 / ic1335)));
    der(s_0042) = (cell * v0_68 * (1 + ep1531_68 * log(s_1531 / ic1531) + ep0042_68 * log(s_0042 / ic0042) + ep0543_68 * log(s_0543 / ic0543))) - (cell * v0_218 * (1 + ep0042_218 * log(s_0042 / ic0042) + ep1336_218 * log(s_1336 / ic1336) + ep0017_218 * log(s_0017 / ic0017) + ep1335_218 * log(s_1335 / ic1335)));
    der(s_0043) = (cell * v0_41 * (1 + ep0391_41 * log(s_0391 / ic0391) + ep1334_41 * log(s_1334 / ic1334) + ep0043_41 * log(s_0043 / ic0043) + ep1333_41 * log(s_1333 / ic1333))) - (cell * v0_28 * (1 + ep0043_28 * log(s_0043 / ic0043) + ep0574_28 * log(s_0574 / ic0574)));
    der(s_0044) = (cell * v0_35 * (1 + ep0293_35 * log(s_0293 / ic0293) + ep1334_35 * log(s_1334 / ic1334) + ep0044_35 * log(s_0044 / ic0044) + ep1333_35 * log(s_1333 / ic1333))) - (cell * v0_29 * (1 + ep0044_29 * log(s_0044 / ic0044) + ep1668_29 * log(s_1668 / ic1668)));
    der(s_0045) = (cell * v0_36 * (1 + ep0295_36 * log(s_0295 / ic0295) + ep1334_36 * log(s_1334 / ic1334) + ep0045_36 * log(s_0045 / ic0045) + ep1333_36 * log(s_1333 / ic1333))) - (cell * v0_30 * (1 + ep0045_30 * log(s_0045 / ic0045) + ep1670_30 * log(s_1670 / ic1670)));
    der(s_0046) = (cell * v0_37 * (1 + ep0297_37 * log(s_0297 / ic0297) + ep1334_37 * log(s_1334 / ic1334) + ep0046_37 * log(s_0046 / ic0046) + ep1333_37 * log(s_1333 / ic1333))) - (cell * v0_31 * (1 + ep0046_31 * log(s_0046 / ic0046) + ep1674_31 * log(s_1674 / ic1674)));
    der(s_0047) = (cell * v0_38 * (1 + ep0299_38 * log(s_0299 / ic0299) + ep1334_38 * log(s_1334 / ic1334) + ep0047_38 * log(s_0047 / ic0047) + ep1333_38 * log(s_1333 / ic1333))) - (cell * v0_32 * (1 + ep0047_32 * log(s_0047 / ic0047) + ep1672_32 * log(s_1672 / ic1672)));
    der(s_0049) = (cell * v0_39 * (1 + ep0303_39 * log(s_0303 / ic0303) + ep1334_39 * log(s_1334 / ic1334) + ep0049_39 * log(s_0049 / ic0049) + ep1333_39 * log(s_1333 / ic1333))) - (cell * v0_33 * (1 + ep0049_33 * log(s_0049 / ic0049) + ep1676_33 * log(s_1676 / ic1676)));
    der(s_0050) = (cell * v0_40 * (1 + ep0305_40 * log(s_0305 / ic0305) + ep1334_40 * log(s_1334 / ic1334) + ep0050_40 * log(s_0050 / ic0050) + ep1333_40 * log(s_1333 / ic1333))) - (cell * v0_34 * (1 + ep0050_34 * log(s_0050 / ic0050) + ep1680_34 * log(s_1680 / ic1680)));
    der(s_0051) = (cell * v0_146 * (1 + ep0018_146 * log(s_0018 / ic0018) + ep0051_146 * log(s_0051 / ic0051))) - (cell * v0_217 * (1 + ep0051_217 * log(s_0051 / ic0051) + ep1095_217 * log(s_1095 / ic1095) + ep0233_217 * log(s_0233 / ic0233) + ep1119_217 * log(s_1119 / ic1119)));
    der(s_0052) = (cell * v0_142 * (1 + ep1312_142 * log(s_1312 / ic1312) + ep0052_142 * log(s_0052 / ic0052))) - (cell * v0_135 * (1 + ep0052_135 * log(s_0052 / ic0052) + ep1732_135 * log(s_1732 / ic1732) + ep1394_135 * log(s_1394 / ic1394) + ep1731_135 * log(s_1731 / ic1731))) - (cell * v0_143 * (1 + ep0052_143 * log(s_0052 / ic0052) + ep1240_143 * log(s_1240 / ic1240) + ep1239_143 * log(s_1239 / ic1239) + ep1394_143 * log(s_1394 / ic1394)));
    der(s_0073) = (cell * v0_4 * (1 + ep0119_4 * log(s_0119 / ic0119) + ep0533_4 * log(s_0533 / ic0533) + ep0397_4 * log(s_0397 / ic0397) + ep0073_4 * log(s_0073 / ic0073))) - (cell * v0_118 * (1 + ep0575_118 * log(s_0575 / ic0575) + ep0073_118 * log(s_0073 / ic0073) + ep0512_118 * log(s_0512 / ic0512) + ep0783_118 * log(s_0783 / ic0783)));
    der(s_0075) = (cell * v0_5 * (1 + ep0121_5 * log(s_0121 / ic0121) + ep1411_5 * log(s_1411 / ic1411) + ep0397_5 * log(s_0397 / ic0397) + ep0075_5 * log(s_0075 / ic0075))) - (cell * v0_117 * (1 + ep0575_117 * log(s_0575 / ic0575) + ep0075_117 * log(s_0075 / ic0075) + ep0513_117 * log(s_0513 / ic0513) + ep0783_117 * log(s_0783 / ic0783)));
    der(s_0096) = (cell * v0_286 * (1 + ep1278_286 * log(s_1278 / ic1278) + ep0096_286 * log(s_0096 / ic0096))) - (cell * v0_208 * (1 + ep0096_208 * log(s_0096 / ic0096) + ep0493_208 * log(s_0493 / ic0493) + ep0543_208 * log(s_0543 / ic0543)));
    der(s_0097) = (cell * v0_279 * (1 + ep0098_279 * log(s_0098 / ic0098) + ep0097_279 * log(s_0097 / ic0097))) - (cell * v0_1 * (1 + ep0097_1 * log(s_0097 / ic0097) + ep0341_1 * log(s_0341 / ic0341)));
    der(s_0098) = (cell * v0_280 * (1 + ep0099_280 * log(s_0099 / ic0099) + ep0783_280 * log(s_0783 / ic0783) + ep0098_280 * log(s_0098 / ic0098))) - (cell * v0_279 * (1 + ep0098_279 * log(s_0098 / ic0098) + ep0097_279 * log(s_0097 / ic0097)));
    der(s_0099) = (cell * v0_111 * (1 + ep0467_111 * log(s_0467 / ic0467) + ep0360_111 * log(s_0360 / ic0360) + ep0783_111 * log(s_0783 / ic0783) + ep0099_111 * log(s_0099 / ic0099))) - (cell * v0_280 * (1 + ep0099_280 * log(s_0099 / ic0099) + ep0783_280 * log(s_0783 / ic0783) + ep0098_280 * log(s_0098 / ic0098)));
    der(s_0116) = (cell * v0_2 * (1 + ep0913_2 * log(s_0913 / ic0913) + ep1531_2 * log(s_1531 / ic1531) + ep0543_2 * log(s_0543 / ic0543) + ep0116_2 * log(s_0116 / ic0116))) - (cell * v0_3 * (1 + ep0116_3 * log(s_0116 / ic0116) + ep1336_3 * log(s_1336 / ic1336) + ep0194_3 * log(s_0194 / ic0194) + ep1335_3 * log(s_1335 / ic1335))) - (cell * v0_299 * (1 + ep0116_299 * log(s_0116 / ic0116) + ep1333_299 * log(s_1333 / ic1333) + ep1362_299 * log(s_1362 / ic1362) + ep0543_299 * log(s_0543 / ic0543) + ep1334_299 * log(s_1334 / ic1334) + ep1530_299 * log(s_1530 / ic1530) + ep1430_299 * log(s_1430 / ic1430))) - (cell * v0_331 * (1 + ep0467_331 * log(s_0467 / ic0467) + ep0738_331 * log(s_0738 / ic0738) + ep0116_331 * log(s_0116 / ic0116) + ep1018_331 * log(s_1018 / ic1018) + ep1336_331 * log(s_1336 / ic1336) + ep0330_331 * log(s_0330 / ic0330) + ep0454_331 * log(s_0454 / ic0454) + ep0543_331 * log(s_0543 / ic0543) + ep1017_331 * log(s_1017 / ic1017) + ep1335_331 * log(s_1335 / ic1335) + ep0783_331 * log(s_0783 / ic0783)));
    der(s_0119) = (cell * v0_181 * (1 + ep0920_181 * log(s_0920 / ic0920) + ep0533_181 * log(s_0533 / ic0533) + ep0119_181 * log(s_0119 / ic0119) + ep0397_181 * log(s_0397 / ic0397))) - (cell * v0_4 * (1 + ep0119_4 * log(s_0119 / ic0119) + ep0533_4 * log(s_0533 / ic0533) + ep0397_4 * log(s_0397 / ic0397) + ep0073_4 * log(s_0073 / ic0073)));
    der(s_0121) = (cell * v0_180 * (1 + ep0920_180 * log(s_0920 / ic0920) + ep1411_180 * log(s_1411 / ic1411) + ep0121_180 * log(s_0121 / ic0121) + ep0397_180 * log(s_0397 / ic0397))) - (cell * v0_5 * (1 + ep0121_5 * log(s_0121 / ic0121) + ep1411_5 * log(s_1411 / ic1411) + ep0397_5 * log(s_0397 / ic0397) + ep0075_5 * log(s_0075 / ic0075)));
    der(s_0123) = (cell * v0_16 * (1 + ep0193_16 * log(s_0193 / ic0193) + ep0861_16 * log(s_0861 / ic0861) + ep0862_16 * log(s_0862 / ic0862) + ep0123_16 * log(s_0123 / ic0123))) - (cell * v0_6 * (1 + ep0123_6 * log(s_0123 / ic0123) + ep1334_6 * log(s_1334 / ic1334) + ep0779_6 * log(s_0779 / ic0779) + ep1333_6 * log(s_1333 / ic1333))) - (cell * v0_7 * (1 + ep0123_7 * log(s_0123 / ic0123) + ep1334_7 * log(s_1334 / ic1334) + ep1028_7 * log(s_1028 / ic1028) + ep1333_7 * log(s_1333 / ic1333)));
    der(s_0128) = (cell * v0_222 * (1 + ep1100_222 * log(s_1100 / ic1100) + ep0128_222 * log(s_0128 / ic0128))) - (cell * v0_300 * (1 + ep0128_300 * log(s_0128 / ic0128) + ep1336_300 * log(s_1336 / ic1336) + ep1335_300 * log(s_1335 / ic1335) + ep1155_300 * log(s_1155 / ic1155)));
    der(s_0133) = (cell * v0_161 * (1 + ep0467_161 * log(s_0467 / ic0467) + ep0867_161 * log(s_0867 / ic0867) + ep0337_161 * log(s_0337 / ic0337) + ep0133_161 * log(s_0133 / ic0133) + ep0421_161 * log(s_0421 / ic0421) + ep1430_161 * log(s_1430 / ic1430))) + (cell * v0_231 * (1 + ep0335_231 * log(s_0335 / ic0335) + ep0133_231 * log(s_0133 / ic0133))) - (cell * v0_284 * (1 + ep0133_284 * log(s_0133 / ic0133) + ep0343_284 * log(s_0343 / ic0343) + ep0352_284 * log(s_0352 / ic0352) + ep0337_284 * log(s_0337 / ic0337))) - (0.000223 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0147) = (cell * v0_327 * (1 + ep0467_327 * log(s_0467 / ic0467) + ep1204_327 * log(s_1204 / ic1204) + ep0421_327 * log(s_0421 / ic0421) + ep0147_327 * log(s_0147 / ic0147))) - (cell * v0_24 * (1 + ep0542_24 * log(s_0542 / ic0542) + ep0147_24 * log(s_0147 / ic0147) + ep0539_24 * log(s_0539 / ic0539) + ep1038_24 * log(s_1038 / ic1038)));
    der(s_0148) = (cell * v0_136 * (1 + ep0155_136 * log(s_0155 / ic0155) + ep1336_136 * log(s_1336 / ic1336) + ep1335_136 * log(s_1335 / ic1335) + ep0148_136 * log(s_0148 / ic0148))) - (cell * v0_328 * (1 + ep1599_328 * log(s_1599 / ic1599) + ep0148_328 * log(s_0148 / ic0148) + ep0555_328 * log(s_0555 / ic0555) + ep1315_328 * log(s_1315 / ic1315)));
    der(s_0149) = (cell * v0_355 * (1 + ep1734_355 * log(s_1734 / ic1734) + ep0149_355 * log(s_0149 / ic0149) + ep1762_355 * log(s_1762 / ic1762))) - (cell * v0_226 * (1 + ep0149_226 * log(s_0149 / ic0149) + ep1734_226 * log(s_1734 / ic1734) + ep1204_226 * log(s_1204 / ic1204) + ep1733_226 * log(s_1733 / ic1733)));
    der(s_0155) = (cell * v0_137 * (1 + ep1075_137 * log(s_1075 / ic1075) + ep1531_137 * log(s_1531 / ic1531) + ep0155_137 * log(s_0155 / ic0155))) - (cell * v0_136 * (1 + ep0155_136 * log(s_0155 / ic0155) + ep1336_136 * log(s_1336 / ic1336) + ep1335_136 * log(s_1335 / ic1335) + ep0148_136 * log(s_0148 / ic0148)));
    der(s_0160) = (cell * v0_191 * (1 + ep0945_191 * log(s_0945 / ic0945) + ep0160_191 * log(s_0160 / ic0160) + ep0867_191 * log(s_0867 / ic0867) + ep0783_191 * log(s_0783 / ic0783))) - (cell * v0_132 * (1 + ep0160_132 * log(s_0160 / ic0160) + ep0347_132 * log(s_0347 / ic0347) + ep0451_132 * log(s_0451 / ic0451)));
    der(s_0162) = (cell * v0_287 * (1 + ep0467_287 * log(s_0467 / ic0467) + ep1322_287 * log(s_1322 / ic1322) + ep1101_287 * log(s_1101 / ic1101) + ep0421_287 * log(s_0421 / ic0421) + ep0162_287 * log(s_0162 / ic0162) + ep1095_287 * log(s_1095 / ic1095) + ep1430_287 * log(s_1430 / ic1430))) - (cell * v0_283 * (1 + ep0467_283 * log(s_0467 / ic0467) + ep0162_283 * log(s_0162 / ic0162) + ep0421_283 * log(s_0421 / ic0421) + ep0342_283 * log(s_0342 / ic0342) + ep1430_283 * log(s_1430 / ic1430)));
    der(s_0191) = (cell * v0_190 * (1 + ep0945_190 * log(s_0945 / ic0945) + ep0191_190 * log(s_0191 / ic0191) + ep0867_190 * log(s_0867 / ic0867))) - (cell * v0_141 * (1 + ep0191_141 * log(s_0191 / ic0191) + ep0766_141 * log(s_0766 / ic0766) + ep0783_141 * log(s_0783 / ic0783)));
    der(s_0193) = (cell * v0_9 * (1 + ep0237_9 * log(s_0237 / ic0237) + ep0193_9 * log(s_0193 / ic0193) + ep0539_9 * log(s_0539 / ic0539))) - (cell * v0_16 * (1 + ep0193_16 * log(s_0193 / ic0193) + ep0861_16 * log(s_0861 / ic0861) + ep0862_16 * log(s_0862 / ic0862) + ep0123_16 * log(s_0123 / ic0123)));
    der(s_0194) = (cell * v0_3 * (1 + ep0116_3 * log(s_0116 / ic0116) + ep1336_3 * log(s_1336 / ic1336) + ep0194_3 * log(s_0194 / ic0194) + ep1335_3 * log(s_1335 / ic1335))) - (cell * v0_10 * (1 + ep0194_10 * log(s_0194 / ic0194) + ep0575_10 * log(s_0575 / ic0575) + ep0312_10 * log(s_0312 / ic0312) + ep0783_10 * log(s_0783 / ic0783)));
    der(s_0195) = (cell * v0_23 * (1 + ep0621_23 * log(s_0621 / ic0621) + ep1484_23 * log(s_1484 / ic1484) + ep0195_23 * log(s_0195 / ic0195) + ep1430_23 * log(s_1430 / ic1430))) - (cell * v0_21 * (1 + ep0195_21 * log(s_0195 / ic0195) + ep0269_21 * log(s_0269 / ic0269) + ep1430_21 * log(s_1430 / ic1430)));
    der(s_0201) = (cell * v0_63 * (1 + ep0369_63 * log(s_0369 / ic0369) + ep0201_63 * log(s_0201 / ic0201))) - (cell * v0_11 * (1 + ep0201_11 * log(s_0201 / ic0201) + ep0913_11 * log(s_0913 / ic0913) + ep1531_11 * log(s_1531 / ic1531)));
    der(s_0203) = (cell * v0_44 * (1 + ep0282_44 * log(s_0282 / ic0282) + ep0336_44 * log(s_0336 / ic0336) + ep0203_44 * log(s_0203 / ic0203) + ep0337_44 * log(s_0337 / ic0337))) - (cell * v0_12 * (1 + ep0203_12 * log(s_0203 / ic0203) + ep1336_12 * log(s_1336 / ic1336) + ep1335_12 * log(s_1335 / ic1335) + ep0032_12 * log(s_0032 / ic0032)));
    der(s_0214) = (cell * v0_188 * (1 + ep0941_188 * log(s_0941 / ic0941) + ep0214_188 * log(s_0214 / ic0214) + ep0543_188 * log(s_0543 / ic0543))) - (cell * v0_326 * (1 + ep0214_326 * log(s_0214 / ic0214) + ep1334_326 * log(s_1334 / ic1334) + ep0029_326 * log(s_0029 / ic0029) + ep1333_326 * log(s_1333 / ic1333)));
    der(s_0217) = (cell * v0_13 * (1 + ep0266_13 * log(s_0266 / ic0266) + ep0217_13 * log(s_0217 / ic0217))) - (cell * v0_42 * (1 + ep0217_42 * log(s_0217 / ic0217) + ep0265_42 * log(s_0265 / ic0265)));
    der(s_0218) = (cell * v0_275 * (1 + ep0313_275 * log(s_0313 / ic0313) + ep0467_275 * log(s_0467 / ic0467) + ep0218_275 * log(s_0218 / ic0218) + ep0421_275 * log(s_0421 / ic0421))) - (cell * v0_329 * (1 + ep0218_329 * log(s_0218 / ic0218) + ep0330_329 * log(s_0330 / ic0330) + ep0783_329 * log(s_0783 / ic0783) + ep1643_329 * log(s_1643 / ic1643)));
    der(s_0226) = (cell * v0_390 * (1 + ep0229_390 * log(s_0229 / ic0229) + ep0467_390 * log(s_0467 / ic0467) + ep1333_390 * log(s_1333 / ic1333) + ep0226_390 * log(s_0226 / ic0226) + ep0421_390 * log(s_0421 / ic0421) + ep1334_390 * log(s_1334 / ic1334) + ep1430_390 * log(s_1430 / ic1430))) - (0.000223 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0229) = (cell * v0_255 * (1 + ep0283_255 * log(s_0283 / ic0283) + ep0229_255 * log(s_0229 / ic0229) + ep0543_255 * log(s_0543 / ic0543))) - (cell * v0_390 * (1 + ep0229_390 * log(s_0229 / ic0229) + ep0467_390 * log(s_0467 / ic0467) + ep1333_390 * log(s_1333 / ic1333) + ep0226_390 * log(s_0226 / ic0226) + ep0421_390 * log(s_0421 / ic0421) + ep1334_390 * log(s_1334 / ic1334) + ep1430_390 * log(s_1430 / ic1430)));
    der(s_0231) = (cell * v0_153 * (1 + ep0331_153 * log(s_0331 / ic0331) + ep1333_153 * log(s_1333 / ic1333) + ep1334_153 * log(s_1334 / ic1334) + ep0231_153 * log(s_0231 / ic0231))) - (cell * v0_252 * (1 + ep1095_252 * log(s_1095 / ic1095) + ep0231_252 * log(s_0231 / ic0231) + ep0233_252 * log(s_0233 / ic0233) + ep1362_252 * log(s_1362 / ic1362)));
    der(s_0232) = (cell * v0_223 * (1 + ep1179_223 * log(s_1179 / ic1179) + ep0232_223 * log(s_0232 / ic0232) + ep0451_223 * log(s_0451 / ic0451))) - (cell * v0_8 * (1 + ep0232_8 * log(s_0232 / ic0232) + ep1531_8 * log(s_1531 / ic1531) + ep0041_8 * log(s_0041 / ic0041) + ep0543_8 * log(s_0543 / ic0543)));
    der(s_0233) = (cell * v0_79 * (1 + ep1303_79 * log(s_1303 / ic1303) + ep1095_79 * log(s_1095 / ic1095) + ep1321_79 * log(s_1321 / ic1321) + ep0233_79 * log(s_0233 / ic0233))) + (cell * v0_109 * (1 + ep1095_109 * log(s_1095 / ic1095) + ep1399_109 * log(s_1399 / ic1399) + ep0233_109 * log(s_0233 / ic0233) + ep1072_109 * log(s_1072 / ic1072))) + (cell * v0_198 * (1 + ep1095_198 * log(s_1095 / ic1095) + ep0263_198 * log(s_0263 / ic0263) + ep0233_198 * log(s_0233 / ic0233) + ep1110_198 * log(s_1110 / ic1110))) + (cell * v0_216 * (1 + ep1027_216 * log(s_1027 / ic1027) + ep1335_216 * log(s_1335 / ic1335) + ep0233_216 * log(s_0233 / ic0233) + ep0543_216 * log(s_0543 / ic0543) + ep1336_216 * log(s_1336 / ic1336))) + (cell * v0_217 * (1 + ep0051_217 * log(s_0051 / ic0051) + ep1095_217 * log(s_1095 / ic1095) + ep0233_217 * log(s_0233 / ic0233) + ep1119_217 * log(s_1119 / ic1119))) + (cell * v0_220 * (1 + ep1095_220 * log(s_1095 / ic1095) + ep1531_220 * log(s_1531 / ic1531) + ep0233_220 * log(s_0233 / ic0233) + ep1041_220 * log(s_1041 / ic1041))) + (cell * v0_225 * (1 + ep0328_225 * log(s_0328 / ic0328) + ep1095_225 * log(s_1095 / ic1095) + ep0233_225 * log(s_0233 / ic0233) + ep1127_225 * log(s_1127 / ic1127))) + (cell * v0_252 * (1 + ep1095_252 * log(s_1095 / ic1095) + ep0231_252 * log(s_0231 / ic0231) + ep0233_252 * log(s_0233 / ic0233) + ep1362_252 * log(s_1362 / ic1362))) + (cell * v0_262 * (1 + ep1095_262 * log(s_1095 / ic1095) + ep1429_262 * log(s_1429 / ic1429) + ep0233_262 * log(s_0233 / ic0233) + ep1151_262 * log(s_1151 / ic1151))) + (cell * v0_290 * (1 + ep0308_290 * log(s_0308 / ic0308) + ep1095_290 * log(s_1095 / ic1095) + ep0233_290 * log(s_0233 / ic0233) + ep1364_290 * log(s_1364 / ic1364))) + (cell * v0_323 * (1 + ep1095_323 * log(s_1095 / ic1095) + ep1315_323 * log(s_1315 / ic1315) + ep0233_323 * log(s_0233 / ic0233) + ep1316_323 * log(s_1316 / ic1316))) + (cell * v0_343 * (1 + ep0262_343 * log(s_0262 / ic0262) + ep1095_343 * log(s_1095 / ic1095) + ep0233_343 * log(s_0233 / ic0233) + ep1189_343 * log(s_1189 / ic1189))) + (cell * v0_362 * (1 + ep0282_362 * log(s_0282 / ic0282) + ep1095_362 * log(s_1095 / ic1095) + ep0233_362 * log(s_0233 / ic0233) + ep1193_362 * log(s_1193 / ic1193))) - (cell * v0_169 * (1 + ep0233_169 * log(s_0233 / ic0233) + ep1336_169 * log(s_1336 / ic1336) + ep0451_169 * log(s_0451 / ic0451) + ep1095_169 * log(s_1095 / ic1095) + ep1335_169 * log(s_1335 / ic1335)));
    der(s_0237) = (cell * v0_55 * (1 + ep0312_55 * log(s_0312 / ic0312) + ep0467_55 * log(s_0467 / ic0467) + ep0237_55 * log(s_0237 / ic0237) + ep0421_55 * log(s_0421 / ic0421))) - (cell * v0_9 * (1 + ep0237_9 * log(s_0237 / ic0237) + ep0193_9 * log(s_0193 / ic0193) + ep0539_9 * log(s_0539 / ic0539)));
    der(s_0252) = (cell * v0_98 * (1 + ep0412_98 * log(s_0412 / ic0412) + ep0467_98 * log(s_0467 / ic0467) + ep0421_98 * log(s_0421 / ic0421) + ep0252_98 * log(s_0252 / ic0252))) - (cell * v0_269 * (1 + ep0252_269 * log(s_0252 / ic0252) + ep1544_269 * log(s_1544 / ic1544) + ep0411_269 * log(s_0411 / ic0411) + ep1612_269 * log(s_1612 / ic1612) + ep1406_269 * log(s_1406 / ic1406)));
    der(s_0255) = (cell * v0_18 * (1 + ep0704_18 * log(s_0704 / ic0704) + ep0255_18 * log(s_0255 / ic0255) + ep0867_18 * log(s_0867 / ic0867))) - (cell * v0_306 * (1 + ep0311_306 * log(s_0311 / ic0311) + ep0255_306 * log(s_0255 / ic0255) + ep0364_306 * log(s_0364 / ic0364) + ep1430_306 * log(s_1430 / ic1430)));
    der(s_0262) = (cell * v0_296 * (1 + ep1333_296 * log(s_1333 / ic1333) + ep1497_296 * log(s_1497 / ic1497) + ep0262_296 * log(s_0262 / ic0262) + ep0543_296 * log(s_0543 / ic0543) + ep1334_296 * log(s_1334 / ic1334))) - (cell * v0_343 * (1 + ep0262_343 * log(s_0262 / ic0262) + ep1095_343 * log(s_1095 / ic1095) + ep0233_343 * log(s_0233 / ic0233) + ep1189_343 * log(s_1189 / ic1189)));
    der(s_0263) = (cell * v0_205 * (1 + ep0620_205 * log(s_0620 / ic0620) + ep0263_205 * log(s_0263 / ic0263))) - (cell * v0_198 * (1 + ep1095_198 * log(s_1095 / ic1095) + ep0263_198 * log(s_0263 / ic0263) + ep0233_198 * log(s_0233 / ic0233) + ep1110_198 * log(s_1110 / ic1110)));
    der(s_0265) = (cell * v0_42 * (1 + ep0217_42 * log(s_0217 / ic0217) + ep0265_42 * log(s_0265 / ic0265))) - (cell * v0_43 * (1 + ep0265_43 * log(s_0265 / ic0265) + ep1333_43 * log(s_1333 / ic1333) + ep0267_43 * log(s_0267 / ic0267) + ep1334_43 * log(s_1334 / ic1334)));
    der(s_0266) = (cell * v0_14 * (1 + ep0282_14 * log(s_0282 / ic0282) + ep0395_14 * log(s_0395 / ic0395) + ep0266_14 * log(s_0266 / ic0266) + ep0555_14 * log(s_0555 / ic0555))) - (cell * v0_13 * (1 + ep0266_13 * log(s_0266 / ic0266) + ep0217_13 * log(s_0217 / ic0217)));
    der(s_0267) = (cell * v0_43 * (1 + ep0265_43 * log(s_0265 / ic0265) + ep1333_43 * log(s_1333 / ic1333) + ep0267_43 * log(s_0267 / ic0267) + ep1334_43 * log(s_1334 / ic1334))) - (cell * v0_15 * (1 + ep0267_15 * log(s_0267 / ic0267) + ep0328_15 * log(s_0328 / ic0328) + ep0543_15 * log(s_0543 / ic0543)));
    der(s_0269) = (cell * v0_21 * (1 + ep0195_21 * log(s_0195 / ic0195) + ep0269_21 * log(s_0269 / ic0269) + ep1430_21 * log(s_1430 / ic1430))) - (cell * v0_20 * (1 + ep0269_20 * log(s_0269 / ic0269) + ep0270_20 * log(s_0270 / ic0270)));
    der(s_0270) = (cell * v0_20 * (1 + ep0269_20 * log(s_0269 / ic0269) + ep0270_20 * log(s_0270 / ic0270))) - (cell * v0_317 * (1 + ep0270_317 * log(s_0270 / ic0270) + ep1336_317 * log(s_1336 / ic1336) + ep1335_317 * log(s_1335 / ic1335) + ep1571_317 * log(s_1571 / ic1571)));
    der(s_0271) = (cell * v0_27 * (1 + ep0272_27 * log(s_0272 / ic0272) + ep0271_27 * log(s_0271 / ic0271) + ep1430_27 * log(s_1430 / ic1430))) - (cell * v0_26 * (1 + ep0575_26 * log(s_0575 / ic0575) + ep0271_26 * log(s_0271 / ic0271) + ep0542_26 * log(s_0542 / ic0542) + ep0783_26 * log(s_0783 / ic0783)));
    der(s_0272) = (cell * v0_22 * (1 + ep0611_22 * log(s_0611 / ic0611) + ep1484_22 * log(s_1484 / ic1484) + ep0272_22 * log(s_0272 / ic0272) + ep1430_22 * log(s_1430 / ic1430))) - (cell * v0_27 * (1 + ep0272_27 * log(s_0272 / ic0272) + ep0271_27 * log(s_0271 / ic0271) + ep1430_27 * log(s_1430 / ic1430)));
    der(s_0276) = (cell * v0_46 * (1 + ep1336_46 * log(s_1336 / ic1336) + ep0289_46 * log(s_0289 / ic0289) + ep0276_46 * log(s_0276 / ic0276) + ep1335_46 * log(s_1335 / ic1335))) - (cell * v0_45 * (1 + ep0276_45 * log(s_0276 / ic0276) + ep0812_45 * log(s_0812 / ic0812)));
    der(s_0277) = (cell * v0_49 * (1 + ep1336_49 * log(s_1336 / ic1336) + ep0290_49 * log(s_0290 / ic0290) + ep0277_49 * log(s_0277 / ic0277) + ep1335_49 * log(s_1335 / ic1335))) - (cell * v0_48 * (1 + ep0277_48 * log(s_0277 / ic0277) + ep0813_48 * log(s_0813 / ic0813)));
    der(s_0282) = (cell * v0_145 * (1 + ep0017_145 * log(s_0017 / ic0017) + ep0282_145 * log(s_0282 / ic0282))) - (cell * v0_14 * (1 + ep0282_14 * log(s_0282 / ic0282) + ep0395_14 * log(s_0395 / ic0395) + ep0266_14 * log(s_0266 / ic0266) + ep0555_14 * log(s_0555 / ic0555))) - (cell * v0_44 * (1 + ep0282_44 * log(s_0282 / ic0282) + ep0336_44 * log(s_0336 / ic0336) + ep0203_44 * log(s_0203 / ic0203) + ep0337_44 * log(s_0337 / ic0337))) - (cell * v0_362 * (1 + ep0282_362 * log(s_0282 / ic0282) + ep1095_362 * log(s_1095 / ic1095) + ep0233_362 * log(s_0233 / ic0233) + ep1193_362 * log(s_1193 / ic1193)));
    der(s_0283) = (cell * v0_202 * (1 + ep0325_202 * log(s_0325 / ic0325) + ep0435_202 * log(s_0435 / ic0435) + ep0283_202 * log(s_0283 / ic0283) + ep0783_202 * log(s_0783 / ic0783))) - (cell * v0_255 * (1 + ep0283_255 * log(s_0283 / ic0283) + ep0229_255 * log(s_0229 / ic0229) + ep0543_255 * log(s_0543 / ic0543)));
    der(s_0289) = (cell * v0_47 * (1 + ep1216_47 * log(s_1216 / ic1216) + ep1218_47 * log(s_1218 / ic1218) + ep0543_47 * log(s_0543 / ic0543) + ep0555_47 * log(s_0555 / ic0555) + ep0289_47 * log(s_0289 / ic0289))) - (cell * v0_46 * (1 + ep1336_46 * log(s_1336 / ic1336) + ep0289_46 * log(s_0289 / ic0289) + ep0276_46 * log(s_0276 / ic0276) + ep1335_46 * log(s_1335 / ic1335)));
    der(s_0290) = (cell * v0_50 * (1 + ep0910_50 * log(s_0910 / ic0910) + ep1216_50 * log(s_1216 / ic1216) + ep0397_50 * log(s_0397 / ic0397) + ep0543_50 * log(s_0543 / ic0543) + ep0290_50 * log(s_0290 / ic0290))) - (cell * v0_49 * (1 + ep1336_49 * log(s_1336 / ic1336) + ep0290_49 * log(s_0290 / ic0290) + ep0277_49 * log(s_0277 / ic0277) + ep1335_49 * log(s_1335 / ic1335)));
    der(s_0293) = (cell * v0_74 * (1 + ep0395_74 * log(s_0395 / ic0395) + ep1390_74 * log(s_1390 / ic1390) + ep0293_74 * log(s_0293 / ic0293) + ep0555_74 * log(s_0555 / ic0555))) - (cell * v0_35 * (1 + ep0293_35 * log(s_0293 / ic0293) + ep1334_35 * log(s_1334 / ic1334) + ep0044_35 * log(s_0044 / ic0044) + ep1333_35 * log(s_1333 / ic1333)));
    der(s_0295) = (cell * v0_71 * (1 + ep0395_71 * log(s_0395 / ic0395) + ep0737_71 * log(s_0737 / ic0737) + ep0295_71 * log(s_0295 / ic0295) + ep0555_71 * log(s_0555 / ic0555))) - (cell * v0_36 * (1 + ep0295_36 * log(s_0295 / ic0295) + ep1334_36 * log(s_1334 / ic1334) + ep0045_36 * log(s_0045 / ic0045) + ep1333_36 * log(s_1333 / ic1333)));
    der(s_0297) = (cell * v0_75 * (1 + ep0395_75 * log(s_0395 / ic0395) + ep1632_75 * log(s_1632 / ic1632) + ep0297_75 * log(s_0297 / ic0297) + ep0555_75 * log(s_0555 / ic0555))) - (cell * v0_37 * (1 + ep0297_37 * log(s_0297 / ic0297) + ep1334_37 * log(s_1334 / ic1334) + ep0046_37 * log(s_0046 / ic0046) + ep1333_37 * log(s_1333 / ic1333)));
    der(s_0299) = (cell * v0_70 * (1 + ep0395_70 * log(s_0395 / ic0395) + ep0488_70 * log(s_0488 / ic0488) + ep0299_70 * log(s_0299 / ic0299) + ep0555_70 * log(s_0555 / ic0555))) - (cell * v0_38 * (1 + ep0299_38 * log(s_0299 / ic0299) + ep1334_38 * log(s_1334 / ic1334) + ep0047_38 * log(s_0047 / ic0047) + ep1333_38 * log(s_1333 / ic1333)));
    der(s_0303) = (cell * v0_73 * (1 + ep0395_73 * log(s_0395 / ic0395) + ep0984_73 * log(s_0984 / ic0984) + ep0303_73 * log(s_0303 / ic0303) + ep0555_73 * log(s_0555 / ic0555))) - (cell * v0_39 * (1 + ep0303_39 * log(s_0303 / ic0303) + ep1334_39 * log(s_1334 / ic1334) + ep0049_39 * log(s_0049 / ic0049) + ep1333_39 * log(s_1333 / ic1333)));
    der(s_0304) = (cell * v0_52 * (1 + ep0789_52 * log(s_0789 / ic0789) + ep1216_52 * log(s_1216 / ic1216) + ep0304_52 * log(s_0304 / ic0304) + ep0397_52 * log(s_0397 / ic0397) + ep0543_52 * log(s_0543 / ic0543))) - (cell * v0_51 * (1 + ep0304_51 * log(s_0304 / ic0304) + ep1336_51 * log(s_1336 / ic1336) + ep0028_51 * log(s_0028 / ic0028) + ep1335_51 * log(s_1335 / ic1335)));
    der(s_0305) = (cell * v0_72 * (1 + ep0395_72 * log(s_0395 / ic0395) + ep0790_72 * log(s_0790 / ic0790) + ep0305_72 * log(s_0305 / ic0305) + ep0555_72 * log(s_0555 / ic0555))) - (cell * v0_40 * (1 + ep0305_40 * log(s_0305 / ic0305) + ep1334_40 * log(s_1334 / ic1334) + ep0050_40 * log(s_0050 / ic0050) + ep1333_40 * log(s_1333 / ic1333)));
    der(s_0306) = (cell * v0_273 * (1 + ep0307_273 * log(s_0307 / ic0307) + ep0421_273 * log(s_0421 / ic0421) + ep0306_273 * log(s_0306 / ic0306) + ep0467_273 * log(s_0467 / ic0467))) - (cell * v0_272 * (1 + ep0306_272 * log(s_0306 / ic0306) + ep1333_272 * log(s_1333 / ic1333) + ep0308_272 * log(s_0308 / ic0308) + ep1334_272 * log(s_1334 / ic1334))) - (cell * v0_274 * (1 + ep0306_274 * log(s_0306 / ic0306) + ep0675_274 * log(s_0675 / ic0675)));
    der(s_0307) = (cell * v0_178 * (1 + ep0913_178 * log(s_0913 / ic0913) + ep1333_178 * log(s_1333 / ic1333) + ep1430_178 * log(s_1430 / ic1430) + ep0307_178 * log(s_0307 / ic0307) + ep1334_178 * log(s_1334 / ic1334))) - (cell * v0_273 * (1 + ep0307_273 * log(s_0307 / ic0307) + ep0421_273 * log(s_0421 / ic0421) + ep0306_273 * log(s_0306 / ic0306) + ep0467_273 * log(s_0467 / ic0467)));
    der(s_0308) = (cell * v0_272 * (1 + ep0306_272 * log(s_0306 / ic0306) + ep1333_272 * log(s_1333 / ic1333) + ep0308_272 * log(s_0308 / ic0308) + ep1334_272 * log(s_1334 / ic1334))) - (cell * v0_290 * (1 + ep0308_290 * log(s_0308 / ic0308) + ep1095_290 * log(s_1095 / ic1095) + ep0233_290 * log(s_0233 / ic0233) + ep1364_290 * log(s_1364 / ic1364)));
    der(s_0310) = (cell * v0_315 * (1 + ep1558_315 * log(s_1558 / ic1558) + ep0310_315 * log(s_0310 / ic0310) + ep1112_315 * log(s_1112 / ic1112))) - (cell * v0_54 * (1 + ep0310_54 * log(s_0310 / ic0310) + ep0004_54 * log(s_0004 / ic0004)));
    der(s_0311) = (cell * v0_307 * (1 + ep0364_307 * log(s_0364 / ic0364) + ep0311_307 * log(s_0311 / ic0311) + ep1546_307 * log(s_1546 / ic1546))) + (cell * v0_393 * (1 + ep0346_393 * log(s_0346 / ic0346) + ep0311_393 * log(s_0311 / ic0311) + ep1430_393 * log(s_1430 / ic1430))) - (cell * v0_306 * (1 + ep0311_306 * log(s_0311 / ic0311) + ep0255_306 * log(s_0255 / ic0255) + ep0364_306 * log(s_0364 / ic0364) + ep1430_306 * log(s_1430 / ic1430)));
    der(s_0312) = (cell * v0_10 * (1 + ep0194_10 * log(s_0194 / ic0194) + ep0575_10 * log(s_0575 / ic0575) + ep0312_10 * log(s_0312 / ic0312) + ep0783_10 * log(s_0783 / ic0783))) - (cell * v0_55 * (1 + ep0312_55 * log(s_0312 / ic0312) + ep0467_55 * log(s_0467 / ic0467) + ep0237_55 * log(s_0237 / ic0237) + ep0421_55 * log(s_0421 / ic0421)));
    der(s_0313) = (cell * v0_56 * (1 + ep0342_56 * log(s_0342 / ic0342) + ep1333_56 * log(s_1333 / ic1333) + ep0313_56 * log(s_0313 / ic0313) + ep0867_56 * log(s_0867 / ic0867) + ep1334_56 * log(s_1334 / ic1334))) - (cell * v0_275 * (1 + ep0313_275 * log(s_0313 / ic0313) + ep0467_275 * log(s_0467 / ic0467) + ep0218_275 * log(s_0218 / ic0218) + ep0421_275 * log(s_0421 / ic0421)));
    der(s_0316) = (cell * v0_57 * (1 + ep0526_57 * log(s_0526 / ic0526) + ep1101_57 * log(s_1101 / ic1101) + ep0316_57 * log(s_0316 / ic0316) + ep1095_57 * log(s_1095 / ic1095))) - (cell * v0_58 * (1 + ep0316_58 * log(s_0316 / ic0316) + ep0318_58 * log(s_0318 / ic0318) + ep1531_58 * log(s_1531 / ic1531)));
    der(s_0318) = (cell * v0_58 * (1 + ep0316_58 * log(s_0316 / ic0316) + ep0318_58 * log(s_0318 / ic0318) + ep1531_58 * log(s_1531 / ic1531))) - (cell * v0_144 * (1 + ep0318_144 * log(s_0318 / ic0318) + ep0368_144 * log(s_0368 / ic0368) + ep0767_144 * log(s_0767 / ic0767) + ep0783_144 * log(s_0783 / ic0783)));
    der(s_0325) = (cell * v0_120 * (1 + ep0526_120 * log(s_0526 / ic0526) + ep0325_120 * log(s_0325 / ic0325) + ep1531_120 * log(s_1531 / ic1531))) - (cell * v0_202 * (1 + ep0325_202 * log(s_0325 / ic0325) + ep0435_202 * log(s_0435 / ic0435) + ep0283_202 * log(s_0283 / ic0283) + ep0783_202 * log(s_0783 / ic0783)));
    der(s_0328) = (cell * v0_15 * (1 + ep0267_15 * log(s_0267 / ic0267) + ep0328_15 * log(s_0328 / ic0328) + ep0543_15 * log(s_0543 / ic0543))) - (cell * v0_225 * (1 + ep0328_225 * log(s_0328 / ic0328) + ep1095_225 * log(s_1095 / ic1095) + ep0233_225 * log(s_0233 / ic0233) + ep1127_225 * log(s_1127 / ic1127)));
    der(s_0330) = (cell * v0_331 * (1 + ep0467_331 * log(s_0467 / ic0467) + ep0738_331 * log(s_0738 / ic0738) + ep0116_331 * log(s_0116 / ic0116) + ep1018_331 * log(s_1018 / ic1018) + ep1336_331 * log(s_1336 / ic1336) + ep0330_331 * log(s_0330 / ic0330) + ep0454_331 * log(s_0454 / ic0454) + ep0543_331 * log(s_0543 / ic0543) + ep1017_331 * log(s_1017 / ic1017) + ep1335_331 * log(s_1335 / ic1335) + ep0783_331 * log(s_0783 / ic0783))) - (cell * v0_329 * (1 + ep0218_329 * log(s_0218 / ic0218) + ep0330_329 * log(s_0330 / ic0330) + ep0783_329 * log(s_0783 / ic0783) + ep1643_329 * log(s_1643 / ic1643)));
    der(s_0331) = (cell * v0_154 * (1 + ep0621_154 * log(s_0621 / ic0621) + ep1333_154 * log(s_1333 / ic1333) + ep0331_154 * log(s_0331 / ic0331) + ep1334_154 * log(s_1334 / ic1334))) - (cell * v0_153 * (1 + ep0331_153 * log(s_0331 / ic0331) + ep1333_153 * log(s_1333 / ic1333) + ep1334_153 * log(s_1334 / ic1334) + ep0231_153 * log(s_0231 / ic0231)));
    der(s_0332) = (cell * v0_108 * (1 + ep1072_108 * log(s_1072 / ic1072) + ep0467_108 * log(s_0467 / ic0467) + ep0332_108 * log(s_0332 / ic0332) + ep0421_108 * log(s_0421 / ic0421))) - (cell * v0_110 * (1 + ep0332_110 * log(s_0332 / ic0332) + ep1336_110 * log(s_1336 / ic1336) + ep1075_110 * log(s_1075 / ic1075) + ep1335_110 * log(s_1335 / ic1335) + ep1430_110 * log(s_1430 / ic1430)));
    der(s_0333) = (cell * v0_112 * (1 + ep0378_112 * log(s_0378 / ic0378) + ep1552_112 * log(s_1552 / ic1552) + ep0755_112 * log(s_0755 / ic0755) + ep0377_112 * log(s_0377 / ic0377) + ep0476_112 * log(s_0476 / ic0476) + ep0333_112 * log(s_0333 / ic0333) + ep1141_112 * log(s_1141 / ic1141))) + (cell * v0_342 * (1 + ep1552_342 * log(s_1552 / ic1552) + ep1336_342 * log(s_1336 / ic1336) + ep1189_342 * log(s_1189 / ic1189) + ep1407_342 * log(s_1407 / ic1407) + ep0333_342 * log(s_0333 / ic0333) + ep0738_342 * log(s_0738 / ic0738) + ep1141_342 * log(s_1141 / ic1141) + ep1335_342 * log(s_1335 / ic1335))) - (cell * v0_59 * (1 + ep0333_59 * log(s_0333 / ic0333) + ep0334_59 * log(s_0334 / ic0334) + ep0405_59 * log(s_0405 / ic0405)));
    der(s_0334) = (cell * v0_59 * (1 + ep0333_59 * log(s_0333 / ic0333) + ep0334_59 * log(s_0334 / ic0334) + ep0405_59 * log(s_0405 / ic0405))) - (cell * max(v0_395 * (1 + ep0334_395 * log(s_0334 / ic0334)), zero_flux));
    der(s_0335) = (cell * v0_234 * (1 + ep0336_234 * log(s_0336 / ic0336) + ep1335_234 * log(s_1335 / ic1335) + ep0335_234 * log(s_0335 / ic0335) + ep1336_234 * log(s_1336 / ic1336))) - (cell * v0_231 * (1 + ep0335_231 * log(s_0335 / ic0335) + ep0133_231 * log(s_0133 / ic0133)));
    der(s_0336) = (cell * v0_184 * (1 + ep1170_184 * log(s_1170 / ic1170) + ep0337_184 * log(s_0337 / ic0337) + ep0929_184 * log(s_0929 / ic0929) + ep0336_184 * log(s_0336 / ic0336))) - (cell * v0_44 * (1 + ep0282_44 * log(s_0282 / ic0282) + ep0336_44 * log(s_0336 / ic0336) + ep0203_44 * log(s_0203 / ic0203) + ep0337_44 * log(s_0337 / ic0337))) - (cell * v0_60 * (1 + ep0336_60 * log(s_0336 / ic0336) + ep1334_60 * log(s_1334 / ic1334) + ep0354_60 * log(s_0354 / ic0354) + ep1333_60 * log(s_1333 / ic1333))) - (cell * v0_234 * (1 + ep0336_234 * log(s_0336 / ic0336) + ep1335_234 * log(s_1335 / ic1335) + ep0335_234 * log(s_0335 / ic0335) + ep1336_234 * log(s_1336 / ic1336))) - (cell * v0_335 * (1 + ep0807_335 * log(s_0807 / ic0807) + ep0336_335 * log(s_0336 / ic0336) + ep0372_335 * log(s_0372 / ic0372) + ep0802_335 * log(s_0802 / ic0802))) - (0.000223 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0337) = (cell * v0_44 * (1 + ep0282_44 * log(s_0282 / ic0282) + ep0336_44 * log(s_0336 / ic0336) + ep0203_44 * log(s_0203 / ic0203) + ep0337_44 * log(s_0337 / ic0337))) + (cell * v0_138 * (1 + ep0372_138 * log(s_0372 / ic0372) + ep1336_138 * log(s_1336 / ic1336) + ep1335_138 * log(s_1335 / ic1335) + ep0337_138 * log(s_0337 / ic0337))) + (cell * v0_233 * (1 + ep0354_233 * log(s_0354 / ic0354) + ep1112_233 * log(s_1112 / ic1112) + ep1141_233 * log(s_1141 / ic1141) + ep0337_233 * log(s_0337 / ic0337))) + (cell * v0_284 * (1 + ep0133_284 * log(s_0133 / ic0133) + ep0343_284 * log(s_0343 / ic0343) + ep0352_284 * log(s_0352 / ic0352) + ep0337_284 * log(s_0337 / ic0337))) - (cell * v0_161 * (1 + ep0467_161 * log(s_0467 / ic0467) + ep0867_161 * log(s_0867 / ic0867) + ep0337_161 * log(s_0337 / ic0337) + ep0133_161 * log(s_0133 / ic0133) + ep0421_161 * log(s_0421 / ic0421) + ep1430_161 * log(s_1430 / ic1430))) - (cell * v0_184 * (1 + ep1170_184 * log(s_1170 / ic1170) + ep0337_184 * log(s_0337 / ic0337) + ep0929_184 * log(s_0929 / ic0929) + ep0336_184 * log(s_0336 / ic0336))) - (0.000223 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0341) = (cell * v0_1 * (1 + ep0097_1 * log(s_0097 / ic0097) + ep0341_1 * log(s_0341 / ic0341))) - (cell * v0_204 * (1 + ep1101_204 * log(s_1101 / ic1101) + ep0341_204 * log(s_0341 / ic0341) + ep0343_204 * log(s_0343 / ic0343) + ep0620_204 * log(s_0620 / ic0620) + ep1095_204 * log(s_1095 / ic1095)));
    der(s_0342) = (cell * v0_283 * (1 + ep0467_283 * log(s_0467 / ic0467) + ep0162_283 * log(s_0162 / ic0162) + ep0421_283 * log(s_0421 / ic0421) + ep0342_283 * log(s_0342 / ic0342) + ep1430_283 * log(s_1430 / ic1430))) - (cell * v0_56 * (1 + ep0342_56 * log(s_0342 / ic0342) + ep1333_56 * log(s_1333 / ic1333) + ep0313_56 * log(s_0313 / ic0313) + ep0867_56 * log(s_0867 / ic0867) + ep1334_56 * log(s_1334 / ic1334))) - (cell * v0_281 * (1 + ep0342_281 * log(s_0342 / ic0342) + ep0467_281 * log(s_0467 / ic0467) + ep0474_281 * log(s_0474 / ic0474) + ep0362_281 * log(s_0362 / ic0362) + ep0421_281 * log(s_0421 / ic0421) + ep1430_281 * log(s_1430 / ic1430)));
    der(s_0343) = (cell * v0_95 * (1 + ep0040_95 * log(s_0040 / ic0040) + ep0343_95 * log(s_0343 / ic0343) + ep0875_95 * log(s_0875 / ic0875))) + (cell * v0_204 * (1 + ep1101_204 * log(s_1101 / ic1101) + ep0341_204 * log(s_0341 / ic0341) + ep0343_204 * log(s_0343 / ic0343) + ep0620_204 * log(s_0620 / ic0620) + ep1095_204 * log(s_1095 / ic1095))) - (cell * v0_284 * (1 + ep0133_284 * log(s_0133 / ic0133) + ep0343_284 * log(s_0343 / ic0343) + ep0352_284 * log(s_0352 / ic0352) + ep0337_284 * log(s_0337 / ic0337)));
    der(s_0344) = (cell * v0_282 * (1 + ep0362_282 * log(s_0362 / ic0362) + ep0344_282 * log(s_0344 / ic0344))) - (cell * v0_285 * (1 + ep0344_285 * log(s_0344 / ic0344) + ep1072_285 * log(s_1072 / ic1072) + ep0467_285 * log(s_0467 / ic0467) + ep0040_285 * log(s_0040 / ic0040) + ep0421_285 * log(s_0421 / ic0421) + ep1430_285 * log(s_1430 / ic1430)));
    der(s_0345) = (cell * v0_171 * (1 + ep1098_171 * log(s_1098 / ic1098) + ep0345_171 * log(s_0345 / ic0345))) - (2.0 * cell * v0_294 * (1 + ep0345_294 * log(s_0345 / ic0345) + ep1493_294 * log(s_1493 / ic1493)));
    der(s_0346) = (cell * v0_61 * (1 + ep0347_61 * log(s_0347 / ic0347) + ep1336_61 * log(s_1336 / ic1336) + ep0346_61 * log(s_0346 / ic0346) + ep1335_61 * log(s_1335 / ic1335))) - (cell * v0_393 * (1 + ep0346_393 * log(s_0346 / ic0346) + ep0311_393 * log(s_0311 / ic0311) + ep1430_393 * log(s_1430 / ic1430)));
    der(s_0347) = (cell * v0_132 * (1 + ep0160_132 * log(s_0160 / ic0160) + ep0347_132 * log(s_0347 / ic0347) + ep0451_132 * log(s_0451 / ic0451))) - (cell * v0_61 * (1 + ep0347_61 * log(s_0347 / ic0347) + ep1336_61 * log(s_1336 / ic1336) + ep0346_61 * log(s_0346 / ic0346) + ep1335_61 * log(s_1335 / ic1335)));
    der(s_0352) = (cell * v0_284 * (1 + ep0133_284 * log(s_0133 / ic0133) + ep0343_284 * log(s_0343 / ic0343) + ep0352_284 * log(s_0352 / ic0352) + ep0337_284 * log(s_0337 / ic0337))) - (cell * v0_206 * (1 + ep0352_206 * log(s_0352 / ic0352) + ep1006_206 * log(s_1006 / ic1006)));
    der(s_0354) = (cell * v0_60 * (1 + ep0336_60 * log(s_0336 / ic0336) + ep1334_60 * log(s_1334 / ic1334) + ep0354_60 * log(s_0354 / ic0354) + ep1333_60 * log(s_1333 / ic1333))) - (cell * v0_233 * (1 + ep0354_233 * log(s_0354 / ic0354) + ep1112_233 * log(s_1112 / ic1112) + ep1141_233 * log(s_1141 / ic1141) + ep0337_233 * log(s_0337 / ic0337)));
    der(s_0359) = (cell * v0_53 * (1 + ep1484_53 * log(s_1484 / ic1484) + ep1574_53 * log(s_1574 / ic1574) + ep0359_53 * log(s_0359 / ic0359) + ep1430_53 * log(s_1430 / ic1430))) - (cell * v0_121 * (1 + ep0359_121 * log(s_0359 / ic0359) + ep0526_121 * log(s_0526 / ic0526) + ep1430_121 * log(s_1430 / ic1430)));
    der(s_0360) = (cell * v0_289 * (1 + ep0467_289 * log(s_0467 / ic0467) + ep0446_289 * log(s_0446 / ic0446) + ep0454_289 * log(s_0454 / ic0454) + ep0360_289 * log(s_0360 / ic0360))) - (cell * v0_100 * (1 + ep0457_100 * log(s_0457 / ic0457) + ep0360_100 * log(s_0360 / ic0360) + ep0783_100 * log(s_0783 / ic0783) + ep1278_100 * log(s_1278 / ic1278))) - (cell * v0_111 * (1 + ep0467_111 * log(s_0467 / ic0467) + ep0360_111 * log(s_0360 / ic0360) + ep0783_111 * log(s_0783 / ic0783) + ep0099_111 * log(s_0099 / ic0099))) - (cell * v0_173 * (1 + ep1101_173 * log(s_1101 / ic1101) + ep0360_173 * log(s_0360 / ic0360) + ep1095_173 * log(s_1095 / ic1095) + ep0783_173 * log(s_0783 / ic0783) + ep0361_173 * log(s_0361 / ic0361))) - (cell * v0_246 * (1 + ep0360_246 * log(s_0360 / ic0360) + ep1537_246 * log(s_1537 / ic1537) + ep0543_246 * log(s_0543 / ic0543) + ep1340_246 * log(s_1340 / ic1340) + ep0783_246 * log(s_0783 / ic0783))) - (cell * v0_257 * (1 + ep1394_257 * log(s_1394 / ic1394) + ep0360_257 * log(s_0360 / ic0360) + ep1397_257 * log(s_1397 / ic1397) + ep0783_257 * log(s_0783 / ic0783)));
    der(s_0361) = (cell * v0_173 * (1 + ep1101_173 * log(s_1101 / ic1101) + ep0360_173 * log(s_0360 / ic0360) + ep1095_173 * log(s_1095 / ic1095) + ep0783_173 * log(s_0783 / ic0783) + ep0361_173 * log(s_0361 / ic0361))) - (cell * v0_288 * (1 + ep0467_288 * log(s_0467 / ic0467) + ep0929_288 * log(s_0929 / ic0929) + ep0361_288 * log(s_0361 / ic0361) + ep0421_288 * log(s_0421 / ic0421) + ep1318_288 * log(s_1318 / ic1318) + ep1430_288 * log(s_1430 / ic1430)));
    der(s_0362) = (cell * v0_281 * (1 + ep0342_281 * log(s_0342 / ic0342) + ep0467_281 * log(s_0467 / ic0467) + ep0474_281 * log(s_0474 / ic0474) + ep0362_281 * log(s_0362 / ic0362) + ep0421_281 * log(s_0421 / ic0421) + ep1430_281 * log(s_1430 / ic1430))) - (cell * v0_282 * (1 + ep0362_282 * log(s_0362 / ic0362) + ep0344_282 * log(s_0344 / ic0344)));
    der(s_0364) = (cell * v0_306 * (1 + ep0311_306 * log(s_0311 / ic0311) + ep0255_306 * log(s_0255 / ic0255) + ep0364_306 * log(s_0364 / ic0364) + ep1430_306 * log(s_1430 / ic1430))) - (2.0 * cell * v0_307 * (1 + ep0364_307 * log(s_0364 / ic0364) + ep0311_307 * log(s_0311 / ic0311) + ep1546_307 * log(s_1546 / ic1546)));
    der(s_0367) = (cell * v0_140 * (1 + ep0765_140 * log(s_0765 / ic0765) + ep0367_140 * log(s_0367 / ic0367) + ep0936_140 * log(s_0936 / ic0936))) - (cell * v0_62 * (1 + ep0367_62 * log(s_0367 / ic0367) + ep0467_62 * log(s_0467 / ic0467) + ep0368_62 * log(s_0368 / ic0368) + ep0454_62 * log(s_0454 / ic0454)));
    der(s_0368) = (cell * v0_62 * (1 + ep0367_62 * log(s_0367 / ic0367) + ep0467_62 * log(s_0467 / ic0467) + ep0368_62 * log(s_0368 / ic0368) + ep0454_62 * log(s_0454 / ic0454))) - (cell * v0_144 * (1 + ep0318_144 * log(s_0318 / ic0318) + ep0368_144 * log(s_0368 / ic0368) + ep0767_144 * log(s_0767 / ic0767) + ep0783_144 * log(s_0783 / ic0783)));
    der(s_0369) = (cell * v0_64 * (1 + ep0370_64 * log(s_0370 / ic0370) + ep0369_64 * log(s_0369 / ic0369))) - (cell * v0_63 * (1 + ep0369_63 * log(s_0369 / ic0369) + ep0201_63 * log(s_0201 / ic0201)));
    der(s_0370) = (cell * v0_166 * (1 + ep0663_166 * log(s_0663 / ic0663) + ep1335_166 * log(s_1335 / ic1335) + ep0370_166 * log(s_0370 / ic0370) + ep1336_166 * log(s_1336 / ic1336))) - (cell * v0_64 * (1 + ep0370_64 * log(s_0370 / ic0370) + ep0369_64 * log(s_0369 / ic0369)));
    der(s_0371) = (cell * v0_93 * (1 + ep0376_93 * log(s_0376 / ic0376) + ep1552_93 * log(s_1552 / ic1552) + ep1550_93 * log(s_1550 / ic1550) + ep0371_93 * log(s_0371 / ic0371))) - (cell * v0_131 * (1 + ep0467_131 * log(s_0467 / ic0467) + ep0543_131 * log(s_0543 / ic0543) + ep0371_131 * log(s_0371 / ic0371) + ep0421_131 * log(s_0421 / ic0421) + ep0755_131 * log(s_0755 / ic0755) + ep1430_131 * log(s_1430 / ic1430)));
    der(s_0372) = (cell * v0_139 * (1 + ep0467_139 * log(s_0467 / ic0467) + ep0767_139 * log(s_0767 / ic0767) + ep1095_139 * log(s_1095 / ic1095) + ep0421_139 * log(s_0421 / ic0421) + ep0372_139 * log(s_0372 / ic0372) + ep1430_139 * log(s_1430 / ic1430))) + (cell * v0_335 * (1 + ep0807_335 * log(s_0807 / ic0807) + ep0336_335 * log(s_0336 / ic0336) + ep0372_335 * log(s_0372 / ic0372) + ep0802_335 * log(s_0802 / ic0802))) - (cell * v0_138 * (1 + ep0372_138 * log(s_0372 / ic0372) + ep1336_138 * log(s_1336 / ic1336) + ep1335_138 * log(s_1335 / ic1335) + ep0337_138 * log(s_0337 / ic0337)));
    der(s_0376) = (cell * v0_65 * (1 + ep1041_65 * log(s_1041 / ic1041) + ep1491_65 * log(s_1491 / ic1491) + ep0376_65 * log(s_0376 / ic0376) + ep0397_65 * log(s_0397 / ic0397) + ep0543_65 * log(s_0543 / ic0543))) - (cell * v0_93 * (1 + ep0376_93 * log(s_0376 / ic0376) + ep1552_93 * log(s_1552 / ic1552) + ep1550_93 * log(s_1550 / ic1550) + ep0371_93 * log(s_0371 / ic0371)));
    der(s_0377) = (cell * v0_112 * (1 + ep0378_112 * log(s_0378 / ic0378) + ep1552_112 * log(s_1552 / ic1552) + ep0755_112 * log(s_0755 / ic0755) + ep0377_112 * log(s_0377 / ic0377) + ep0476_112 * log(s_0476 / ic0476) + ep0333_112 * log(s_0333 / ic0333) + ep1141_112 * log(s_1141 / ic1141))) - (cell * v0_209 * (1 + ep0377_209 * log(s_0377 / ic0377) + ep1018_209 * log(s_1018 / ic1018) + ep1019_209 * log(s_1019 / ic1019) + ep1017_209 * log(s_1017 / ic1017) + ep1020_209 * log(s_1020 / ic1020)));
    der(s_0378) = (cell * v0_212 * (1 + ep1020_212 * log(s_1020 / ic1020) + ep0378_212 * log(s_0378 / ic0378) + ep1019_212 * log(s_1019 / ic1019))) - (cell * v0_112 * (1 + ep0378_112 * log(s_0378 / ic0378) + ep1552_112 * log(s_1552 / ic1552) + ep0755_112 * log(s_0755 / ic0755) + ep0377_112 * log(s_0377 / ic0377) + ep0476_112 * log(s_0476 / ic0476) + ep0333_112 * log(s_0333 / ic0333) + ep1141_112 * log(s_1141 / ic1141))) - (2.6e-05 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0380) = (cell * v0_214 * (1 + ep1021_214 * log(s_1021 / ic1021) + ep0380_214 * log(s_0380 / ic0380) + ep1019_214 * log(s_1019 / ic1019))) - (0.00026 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0381) = (cell * v0_333 * (1 + ep1179_333 * log(s_1179 / ic1179) + ep0381_333 * log(s_0381 / ic0381) + ep0929_333 * log(s_0929 / ic0929))) - (cell * v0_66 * (1 + ep0381_66 * log(s_0381 / ic0381) + ep0555_66 * log(s_0555 / ic0555) + ep1333_66 * log(s_1333 / ic1333) + ep0395_66 * log(s_0395 / ic0395) + ep1334_66 * log(s_1334 / ic1334)));
    der(s_0384) = (cell * v0_78 * (1 + ep1321_78 * log(s_1321 / ic1321) + ep0384_78 * log(s_0384 / ic0384) + ep1391_78 * log(s_1391 / ic1391))) + (cell * v0_127 * (1 + ep1358_127 * log(s_1358 / ic1358) + ep0994_127 * log(s_0994 / ic0994) + ep0384_127 * log(s_0384 / ic0384) + ep1083_127 * log(s_1083 / ic1083))) + (cell * v0_345 * (1 + ep1736_345 * log(s_1736 / ic1736) + ep0384_345 * log(s_0384 / ic0384) + ep1735_345 * log(s_1735 / ic1735))) - (cell * v0_67 * (1 + ep0384_67 * log(s_0384 / ic0384) + ep0467_67 * log(s_0467 / ic0467) + ep0393_67 * log(s_0393 / ic0393) + ep0421_67 * log(s_0421 / ic0421)));
    der(s_0391) = (cell * v0_69 * (1 + ep0395_69 * log(s_0395 / ic0395) + ep0391_69 * log(s_0391 / ic0391) + ep0555_69 * log(s_0555 / ic0555))) - (cell * v0_41 * (1 + ep0391_41 * log(s_0391 / ic0391) + ep1334_41 * log(s_1334 / ic1334) + ep0043_41 * log(s_0043 / ic0043) + ep1333_41 * log(s_1333 / ic1333)));
    der(s_0393) = (cell * v0_67 * (1 + ep0384_67 * log(s_0384 / ic0384) + ep0467_67 * log(s_0467 / ic0467) + ep0393_67 * log(s_0393 / ic0393) + ep0421_67 * log(s_0421 / ic0421))) - (cell * v0_291 * (1 + ep0393_291 * log(s_0393 / ic0393) + ep0555_291 * log(s_0555 / ic0555) + ep0395_291 * log(s_0395 / ic0395) + ep1430_291 * log(s_1430 / ic1430)));
    der(s_0395) = (cell * v0_66 * (1 + ep0381_66 * log(s_0381 / ic0381) + ep0555_66 * log(s_0555 / ic0555) + ep1333_66 * log(s_1333 / ic1333) + ep0395_66 * log(s_0395 / ic0395) + ep1334_66 * log(s_1334 / ic1334))) + (cell * v0_183 * (1 + ep1040_183 * log(s_1040 / ic1040) + ep0555_183 * log(s_0555 / ic0555) + ep0395_183 * log(s_0395 / ic0395) + ep0929_183 * log(s_0929 / ic0929))) + (cell * v0_291 * (1 + ep0393_291 * log(s_0393 / ic0393) + ep0555_291 * log(s_0555 / ic0555) + ep0395_291 * log(s_0395 / ic0395) + ep1430_291 * log(s_1430 / ic1430))) + (cell * v0_301 * (1 + ep0555_301 * log(s_0555 / ic0555) + ep1333_301 * log(s_1333 / ic1333) + ep1531_301 * log(s_1531 / ic1531) + ep0395_301 * log(s_0395 / ic0395) + ep0543_301 * log(s_0543 / ic0543) + ep1334_301 * log(s_1334 / ic1334))) + (cell * v0_302 * (1 + ep0555_302 * log(s_0555 / ic0555) + ep1531_302 * log(s_1531 / ic1531) + ep0395_302 * log(s_0395 / ic0395) + ep0867_302 * log(s_0867 / ic0867))) + (cell * v0_303 * (1 + ep0555_303 * log(s_0555 / ic0555) + ep0862_303 * log(s_0862 / ic0862) + ep1531_303 * log(s_1531 / ic1531) + ep0395_303 * log(s_0395 / ic0395) + ep0543_303 * log(s_0543 / ic0543) + ep0861_303 * log(s_0861 / ic0861))) - (cell * v0_14 * (1 + ep0282_14 * log(s_0282 / ic0282) + ep0395_14 * log(s_0395 / ic0395) + ep0266_14 * log(s_0266 / ic0266) + ep0555_14 * log(s_0555 / ic0555))) - (2.0 * cell * v0_69 * (1 + ep0395_69 * log(s_0395 / ic0395) + ep0391_69 * log(s_0391 / ic0391) + ep0555_69 * log(s_0555 / ic0555))) - (cell * v0_70 * (1 + ep0395_70 * log(s_0395 / ic0395) + ep0488_70 * log(s_0488 / ic0488) + ep0299_70 * log(s_0299 / ic0299) + ep0555_70 * log(s_0555 / ic0555))) - (cell * v0_71 * (1 + ep0395_71 * log(s_0395 / ic0395) + ep0737_71 * log(s_0737 / ic0737) + ep0295_71 * log(s_0295 / ic0295) + ep0555_71 * log(s_0555 / ic0555))) - (cell * v0_72 * (1 + ep0395_72 * log(s_0395 / ic0395) + ep0790_72 * log(s_0790 / ic0790) + ep0305_72 * log(s_0305 / ic0305) + ep0555_72 * log(s_0555 / ic0555))) - (cell * v0_73 * (1 + ep0395_73 * log(s_0395 / ic0395) + ep0984_73 * log(s_0984 / ic0984) + ep0303_73 * log(s_0303 / ic0303) + ep0555_73 * log(s_0555 / ic0555))) - (cell * v0_74 * (1 + ep0395_74 * log(s_0395 / ic0395) + ep1390_74 * log(s_1390 / ic1390) + ep0293_74 * log(s_0293 / ic0293) + ep0555_74 * log(s_0555 / ic0555))) - (cell * v0_75 * (1 + ep0395_75 * log(s_0395 / ic0395) + ep1632_75 * log(s_1632 / ic1632) + ep0297_75 * log(s_0297 / ic0297) + ep0555_75 * log(s_0555 / ic0555))) - (cell * v0_76 * (1 + ep0395_76 * log(s_0395 / ic0395) + ep0467_76 * log(s_0467 / ic0467) + ep0474_76 * log(s_0474 / ic0474) + ep0421_76 * log(s_0421 / ic0421) + ep1217_76 * log(s_1217 / ic1217) + ep1430_76 * log(s_1430 / ic1430))) - (cell * v0_122 * (1 + ep0395_122 * log(s_0395 / ic0395) + ep1399_122 * log(s_1399 / ic1399) + ep0536_122 * log(s_0536 / ic0536) + ep0555_122 * log(s_0555 / ic0555))) - (cell * v0_165 * (1 + ep0395_165 * log(s_0395 / ic0395) + ep0653_165 * log(s_0653 / ic0653) + ep1287_165 * log(s_1287 / ic1287) + ep0555_165 * log(s_0555 / ic0555))) - (cell * v0_242 * (1 + ep0395_242 * log(s_0395 / ic0395) + ep1095_242 * log(s_1095 / ic1095) + ep1302_242 * log(s_1302 / ic1302) + ep0555_242 * log(s_0555 / ic0555))) - (cell * v0_316 * (1 + ep0395_316 * log(s_0395 / ic0395) + ep1170_316 * log(s_1170 / ic1170) + ep1358_316 * log(s_1358 / ic1358) + ep0555_316 * log(s_0555 / ic0555)));
    der(s_0397) = (cell * v0_4 * (1 + ep0119_4 * log(s_0119 / ic0119) + ep0533_4 * log(s_0533 / ic0533) + ep0397_4 * log(s_0397 / ic0397) + ep0073_4 * log(s_0073 / ic0073))) + (cell * v0_5 * (1 + ep0121_5 * log(s_0121 / ic0121) + ep1411_5 * log(s_1411 / ic1411) + ep0397_5 * log(s_0397 / ic0397) + ep0075_5 * log(s_0075 / ic0075))) + (cell * v0_50 * (1 + ep0910_50 * log(s_0910 / ic0910) + ep1216_50 * log(s_1216 / ic1216) + ep0397_50 * log(s_0397 / ic0397) + ep0543_50 * log(s_0543 / ic0543) + ep0290_50 * log(s_0290 / ic0290))) + (cell * v0_52 * (1 + ep0789_52 * log(s_0789 / ic0789) + ep1216_52 * log(s_1216 / ic1216) + ep0304_52 * log(s_0304 / ic0304) + ep0397_52 * log(s_0397 / ic0397) + ep0543_52 * log(s_0543 / ic0543))) + (cell * v0_65 * (1 + ep1041_65 * log(s_1041 / ic1041) + ep1491_65 * log(s_1491 / ic1491) + ep0376_65 * log(s_0376 / ic0376) + ep0397_65 * log(s_0397 / ic0397) + ep0543_65 * log(s_0543 / ic0543))) + (cell * v0_180 * (1 + ep0920_180 * log(s_0920 / ic0920) + ep1411_180 * log(s_1411 / ic1411) + ep0121_180 * log(s_0121 / ic0121) + ep0397_180 * log(s_0397 / ic0397))) + (cell * v0_181 * (1 + ep0920_181 * log(s_0920 / ic0920) + ep0533_181 * log(s_0533 / ic0533) + ep0119_181 * log(s_0119 / ic0119) + ep0397_181 * log(s_0397 / ic0397))) + (cell * v0_344 * (1 + ep0028_344 * log(s_0028 / ic0028) + ep1735_344 * log(s_1735 / ic1735) + ep0397_344 * log(s_0397 / ic0397) + ep1734_344 * log(s_1734 / ic1734))) + (cell * v0_348 * (1 + ep0028_348 * log(s_0028 / ic0028) + ep1745_348 * log(s_1745 / ic1745) + ep0397_348 * log(s_0397 / ic0397) + ep1736_348 * log(s_1736 / ic1736))) - (cell * v0_82 * (1 + ep0397_82 * log(s_0397 / ic0397) + ep0467_82 * log(s_0467 / ic0467) + ep0785_82 * log(s_0785 / ic0785) + ep0454_82 * log(s_0454 / ic0454) + ep0789_82 * log(s_0789 / ic0789) + ep0783_82 * log(s_0783 / ic0783))) - (cell * v0_83 * (1 + ep0397_83 * log(s_0397 / ic0397) + ep0467_83 * log(s_0467 / ic0467) + ep0971_83 * log(s_0971 / ic0971) + ep0454_83 * log(s_0454 / ic0454) + ep1411_83 * log(s_1411 / ic1411) + ep0783_83 * log(s_0783 / ic0783))) - (cell * v0_84 * (1 + ep0397_84 * log(s_0397 / ic0397) + ep0467_84 * log(s_0467 / ic0467) + ep0976_84 * log(s_0976 / ic0976) + ep0454_84 * log(s_0454 / ic0454) + ep0533_84 * log(s_0533 / ic0533) + ep0783_84 * log(s_0783 / ic0783))) - (cell * v0_230 * (1 + ep0397_230 * log(s_0397 / ic0397) + ep1217_230 * log(s_1217 / ic1217) + ep0555_230 * log(s_0555 / ic0555) + ep1216_230 * log(s_1216 / ic1216)));
    der(s_0405) = (cell * v0_59 * (1 + ep0333_59 * log(s_0333 / ic0333) + ep0334_59 * log(s_0334 / ic0334) + ep0405_59 * log(s_0405 / ic0405))) + (cell * v0_314 * (1 + ep1551_314 * log(s_1551 / ic1551) + ep0405_314 * log(s_0405 / ic0405) + ep1558_314 * log(s_1558 / ic1558))) - (cell * v0_298 * (1 + ep0405_298 * log(s_0405 / ic0405) + ep0445_298 * log(s_0445 / ic0445) + ep0408_298 * log(s_0408 / ic0408) + ep1430_298 * log(s_1430 / ic1430)));
    der(s_0408) = (cell * v0_298 * (1 + ep0405_298 * log(s_0405 / ic0405) + ep0445_298 * log(s_0445 / ic0445) + ep0408_298 * log(s_0408 / ic0408) + ep1430_298 * log(s_1430 / ic1430))) - (cell * v0_92 * (1 + ep0408_92 * log(s_0408 / ic0408) + ep0467_92 * log(s_0467 / ic0467) + ep0421_92 * log(s_0421 / ic0421) + ep0454_92 * log(s_0454 / ic0454)));
    der(s_0411) = (cell * v0_269 * (1 + ep0252_269 * log(s_0252 / ic0252) + ep1544_269 * log(s_1544 / ic1544) + ep0411_269 * log(s_0411 / ic0411) + ep1612_269 * log(s_1612 / ic1612) + ep1406_269 * log(s_1406 / ic1406))) - (cell * v0_17 * (1 + ep0411_17 * log(s_0411 / ic0411) + ep0454_17 * log(s_0454 / ic0454) + ep1430_17 * log(s_1430 / ic1430)));
    der(s_0412) = (cell * v0_324 * (1 + ep0467_324 * log(s_0467 / ic0467) + ep0945_324 * log(s_0945 / ic0945) + ep1609_324 * log(s_1609 / ic1609) + ep0412_324 * log(s_0412 / ic0412) + ep0896_324 * log(s_0896 / ic0896) + ep1430_324 * log(s_1430 / ic1430) + ep0783_324 * log(s_0783 / ic0783))) - (cell * v0_98 * (1 + ep0412_98 * log(s_0412 / ic0412) + ep0467_98 * log(s_0467 / ic0467) + ep0421_98 * log(s_0421 / ic0421) + ep0252_98 * log(s_0252 / ic0252)));
    der(s_0420) = (cell * v0_237 * (1 + ep0467_237 * log(s_0467 / ic0467) + ep1265_237 * log(s_1265 / ic1265) + ep0420_237 * log(s_0420 / ic0420) + ep0783_237 * log(s_0783 / ic0783))) - (cell * v0_113 * (1 + ep1264_113 * log(s_1264 / ic1264) + ep0420_113 * log(s_0420 / ic0420) + ep0454_113 * log(s_0454 / ic0454) + ep0479_113 * log(s_0479 / ic0479) + ep0579_113 * log(s_0579 / ic0579))) - (cell * v0_236 * (1 + ep1261_236 * log(s_1261 / ic1261) + ep0420_236 * log(s_0420 / ic0420) + ep0454_236 * log(s_0454 / ic0454) + ep0579_236 * log(s_0579 / ic0579) + ep1264_236 * log(s_1264 / ic1264)));
    der(s_0421) = (cell * v0_55 * (1 + ep0312_55 * log(s_0312 / ic0312) + ep0467_55 * log(s_0467 / ic0467) + ep0237_55 * log(s_0237 / ic0237) + ep0421_55 * log(s_0421 / ic0421))) + (cell * v0_67 * (1 + ep0384_67 * log(s_0384 / ic0384) + ep0467_67 * log(s_0467 / ic0467) + ep0393_67 * log(s_0393 / ic0393) + ep0421_67 * log(s_0421 / ic0421))) + (cell * v0_76 * (1 + ep0395_76 * log(s_0395 / ic0395) + ep0467_76 * log(s_0467 / ic0467) + ep0474_76 * log(s_0474 / ic0474) + ep0421_76 * log(s_0421 / ic0421) + ep1217_76 * log(s_1217 / ic1217) + ep1430_76 * log(s_1430 / ic1430))) + (cell * v0_77 * (1 + ep1302_77 * log(s_1302 / ic1302) + ep0467_77 * log(s_0467 / ic0467) + ep1304_77 * log(s_1304 / ic1304) + ep0421_77 * log(s_0421 / ic0421))) + (cell * v0_92 * (1 + ep0408_92 * log(s_0408 / ic0408) + ep0467_92 * log(s_0467 / ic0467) + ep0421_92 * log(s_0421 / ic0421) + ep0454_92 * log(s_0454 / ic0454))) + (2.0 * cell * v0_94 * (1 + ep0454_94 * log(s_0454 / ic0454) + ep0467_94 * log(s_0467 / ic0467) + ep0421_94 * log(s_0421 / ic0421))) + (cell * v0_98 * (1 + ep0412_98 * log(s_0412 / ic0412) + ep0467_98 * log(s_0467 / ic0467) + ep0421_98 * log(s_0421 / ic0421) + ep0252_98 * log(s_0252 / ic0252))) + (cell * v0_108 * (1 + ep1072_108 * log(s_1072 / ic1072) + ep0467_108 * log(s_0467 / ic0467) + ep0332_108 * log(s_0332 / ic0332) + ep0421_108 * log(s_0421 / ic0421))) + (cell * v0_116 * (1 + ep0467_116 * log(s_0467 / ic0467) + ep0543_116 * log(s_0543 / ic0543) + ep0451_116 * log(s_0451 / ic0451) + ep0421_116 * log(s_0421 / ic0421) + ep0502_116 * log(s_0502 / ic0502))) + (cell * v0_124 * (1 + ep0467_124 * log(s_0467 / ic0467) + ep1101_124 * log(s_1101 / ic1101) + ep1792_124 * log(s_1792 / ic1792) + ep0421_124 * log(s_0421 / ic0421) + ep0575_124 * log(s_0575 / ic0575) + ep1095_124 * log(s_1095 / ic1095) + ep1430_124 * log(s_1430 / ic1430))) + (cell * v0_128 * (1 + ep0467_128 * log(s_0467 / ic0467) + ep0539_128 * log(s_0539 / ic0539) + ep0421_128 * log(s_0421 / ic0421) + ep0510_128 * log(s_0510 / ic0510))) + (cell * v0_129 * (1 + ep0600_129 * log(s_0600 / ic0600) + ep0467_129 * log(s_0467 / ic0467) + ep0421_129 * log(s_0421 / ic0421) + ep0603_129 * log(s_0603 / ic0603) + ep1430_129 * log(s_1430 / ic1430))) + (cell * v0_130 * (1 + ep0467_130 * log(s_0467 / ic0467) + ep0754_130 * log(s_0754 / ic0754) + ep0421_130 * log(s_0421 / ic0421) + ep0555_130 * log(s_0555 / ic0555))) + (cell * v0_131 * (1 + ep0467_131 * log(s_0467 / ic0467) + ep0543_131 * log(s_0543 / ic0543) + ep0371_131 * log(s_0371 / ic0371) + ep0421_131 * log(s_0421 / ic0421) + ep0755_131 * log(s_0755 / ic0755) + ep1430_131 * log(s_1430 / ic1430))) + (cell * v0_139 * (1 + ep0467_139 * log(s_0467 / ic0467) + ep0767_139 * log(s_0767 / ic0767) + ep1095_139 * log(s_1095 / ic1095) + ep0421_139 * log(s_0421 / ic0421) + ep0372_139 * log(s_0372 / ic0372) + ep1430_139 * log(s_1430 / ic1430))) + (cell * v0_148 * (1 + ep0467_148 * log(s_0467 / ic0467) + ep0802_148 * log(s_0802 / ic0802) + ep0421_148 * log(s_0421 / ic0421) + ep0795_148 * log(s_0795 / ic0795))) + (cell * v0_161 * (1 + ep0467_161 * log(s_0467 / ic0467) + ep0867_161 * log(s_0867 / ic0867) + ep0337_161 * log(s_0337 / ic0337) + ep0133_161 * log(s_0133 / ic0133) + ep0421_161 * log(s_0421 / ic0421) + ep1430_161 * log(s_1430 / ic1430))) + (cell * v0_163 * (1 + ep0467_163 * log(s_0467 / ic0467) + ep0867_163 * log(s_0867 / ic0867) + ep1318_163 * log(s_1318 / ic1318) + ep0421_163 * log(s_0421 / ic0421) + ep1322_163 * log(s_1322 / ic1322) + ep1430_163 * log(s_1430 / ic1430))) + (cell * v0_168 * (1 + ep0467_168 * log(s_0467 / ic0467) + ep1095_168 * log(s_1095 / ic1095) + ep0421_168 * log(s_0421 / ic0421) + ep1099_168 * log(s_1099 / ic1099))) + (cell * v0_174 * (1 + ep0467_174 * log(s_0467 / ic0467) + ep1095_174 * log(s_1095 / ic1095) + ep0451_174 * log(s_0451 / ic0451) + ep0421_174 * log(s_0421 / ic0421) + ep1101_174 * log(s_1101 / ic1101) + ep1430_174 * log(s_1430 / ic1430))) + (cell * v0_179 * (1 + ep0467_179 * log(s_0467 / ic0467) + ep0029_179 * log(s_0029 / ic0029) + ep0675_179 * log(s_0675 / ic0675) + ep0421_179 * log(s_0421 / ic0421))) + (cell * v0_192 * (1 + ep0467_192 * log(s_0467 / ic0467) + ep0942_192 * log(s_0942 / ic0942) + ep0421_192 * log(s_0421 / ic0421) + ep0896_192 * log(s_0896 / ic0896))) + (cell * v0_194 * (1 + ep0467_194 * log(s_0467 / ic0467) + ep0622_194 * log(s_0622 / ic0622) + ep0421_194 * log(s_0421 / ic0421) + ep0627_194 * log(s_0627 / ic0627))) + (cell * v0_195 * (1 + ep0467_195 * log(s_0467 / ic0467) + ep0657_195 * log(s_0657 / ic0657) + ep0421_195 * log(s_0421 / ic0421) + ep0663_195 * log(s_0663 / ic0663))) + (cell * v0_200 * (1 + ep0467_200 * log(s_0467 / ic0467) + ep1113_200 * log(s_1113 / ic1113) + ep0421_200 * log(s_0421 / ic0421) + ep1363_200 * log(s_1363 / ic1363))) + (cell * v0_243 * (1 + ep0467_243 * log(s_0467 / ic0467) + ep1333_243 * log(s_1333 / ic1333) + ep0421_243 * log(s_0421 / ic0421) + ep1335_243 * log(s_1335 / ic1335))) + (cell * v0_247 * (1 + ep0467_247 * log(s_0467 / ic0467) + ep0510_247 * log(s_0510 / ic0510) + ep0421_247 * log(s_0421 / ic0421) + ep0575_247 * log(s_0575 / ic0575))) + (cell * v0_248 * (1 + ep0467_248 * log(s_0467 / ic0467) + ep0795_248 * log(s_0795 / ic0795) + ep0421_248 * log(s_0421 / ic0421) + ep0805_248 * log(s_0805 / ic0805))) + (cell * v0_249 * (1 + ep0467_249 * log(s_0467 / ic0467) + ep0896_249 * log(s_0896 / ic0896) + ep0421_249 * log(s_0421 / ic0421) + ep0945_249 * log(s_0945 / ic0945))) + (cell * v0_250 * (1 + ep0467_250 * log(s_0467 / ic0467) + ep1733_250 * log(s_1733 / ic1733) + ep0421_250 * log(s_0421 / ic0421) + ep1792_250 * log(s_1792 / ic1792))) + (cell * v0_251 * (1 + ep0467_251 * log(s_0467 / ic0467) + ep0421_251 * log(s_0421 / ic0421) + ep1430_251 * log(s_1430 / ic1430))) + (cell * v0_260 * (1 + ep0467_260 * log(s_0467 / ic0467) + ep0033_260 * log(s_0033 / ic0033) + ep0599_260 * log(s_0599 / ic0599) + ep0421_260 * log(s_0421 / ic0421))) + (cell * v0_275 * (1 + ep0313_275 * log(s_0313 / ic0313) + ep0467_275 * log(s_0467 / ic0467) + ep0218_275 * log(s_0218 / ic0218) + ep0421_275 * log(s_0421 / ic0421))) + (cell * v0_281 * (1 + ep0342_281 * log(s_0342 / ic0342) + ep0467_281 * log(s_0467 / ic0467) + ep0474_281 * log(s_0474 / ic0474) + ep0362_281 * log(s_0362 / ic0362) + ep0421_281 * log(s_0421 / ic0421) + ep1430_281 * log(s_1430 / ic1430))) + (cell * v0_283 * (1 + ep0467_283 * log(s_0467 / ic0467) + ep0162_283 * log(s_0162 / ic0162) + ep0421_283 * log(s_0421 / ic0421) + ep0342_283 * log(s_0342 / ic0342) + ep1430_283 * log(s_1430 / ic1430))) + (cell * v0_285 * (1 + ep0344_285 * log(s_0344 / ic0344) + ep1072_285 * log(s_1072 / ic1072) + ep0467_285 * log(s_0467 / ic0467) + ep0040_285 * log(s_0040 / ic0040) + ep0421_285 * log(s_0421 / ic0421) + ep1430_285 * log(s_1430 / ic1430))) + (cell * v0_287 * (1 + ep0467_287 * log(s_0467 / ic0467) + ep1322_287 * log(s_1322 / ic1322) + ep1101_287 * log(s_1101 / ic1101) + ep0421_287 * log(s_0421 / ic0421) + ep0162_287 * log(s_0162 / ic0162) + ep1095_287 * log(s_1095 / ic1095) + ep1430_287 * log(s_1430 / ic1430))) + (cell * v0_288 * (1 + ep0467_288 * log(s_0467 / ic0467) + ep0929_288 * log(s_0929 / ic0929) + ep0361_288 * log(s_0361 / ic0361) + ep0421_288 * log(s_0421 / ic0421) + ep1318_288 * log(s_1318 / ic1318) + ep1430_288 * log(s_1430 / ic1430))) + (cell * v0_305 * (1 + ep0467_305 * log(s_0467 / ic0467) + ep1546_305 * log(s_1546 / ic1546) + ep0421_305 * log(s_0421 / ic0421) + ep0863_305 * log(s_0863 / ic0863))) + (cell * v0_318 * (1 + ep0467_318 * log(s_0467 / ic0467) + ep1571_318 * log(s_1571 / ic1571) + ep0421_318 * log(s_0421 / ic0421) + ep1574_318 * log(s_1574 / ic1574))) + (cell * v0_321 * (1 + ep0467_321 * log(s_0467 / ic0467) + ep0555_321 * log(s_0555 / ic0555) + ep1595_321 * log(s_1595 / ic1595) + ep0421_321 * log(s_0421 / ic0421) + ep1430_321 * log(s_1430 / ic1430) + ep1599_321 * log(s_1599 / ic1599))) + (cell * v0_327 * (1 + ep0467_327 * log(s_0467 / ic0467) + ep1204_327 * log(s_1204 / ic1204) + ep0421_327 * log(s_0421 / ic0421) + ep0147_327 * log(s_0147 / ic0147))) + (cell * v0_330 * (1 + ep0467_330 * log(s_0467 / ic0467) + ep1643_330 * log(s_1643 / ic1643) + ep0421_330 * log(s_0421 / ic0421) + ep1644_330 * log(s_1644 / ic1644))) + (cell * v0_351 * (1 + ep1041_351 * log(s_1041 / ic1041) + ep0467_351 * log(s_0467 / ic0467) + ep1750_351 * log(s_1750 / ic1750) + ep0421_351 * log(s_0421 / ic0421) + ep1430_351 * log(s_1430 / ic1430) + ep1751_351 * log(s_1751 / ic1751))) + (cell * v0_352 * (1 + ep0467_352 * log(s_0467 / ic0467) + ep0671_352 * log(s_0671 / ic0671) + ep1751_352 * log(s_1751 / ic1751) + ep0421_352 * log(s_0421 / ic0421) + ep1430_352 * log(s_1430 / ic1430) + ep1754_352 * log(s_1754 / ic1754))) + (cell * v0_353 * (1 + ep1242_353 * log(s_1242 / ic1242) + ep0467_353 * log(s_0467 / ic0467) + ep1754_353 * log(s_1754 / ic1754) + ep0421_353 * log(s_0421 / ic0421) + ep1430_353 * log(s_1430 / ic1430) + ep1752_353 * log(s_1752 / ic1752))) + (cell * v0_354 * (1 + ep0603_354 * log(s_0603 / ic0603) + ep0467_354 * log(s_0467 / ic0467) + ep1752_354 * log(s_1752 / ic1752) + ep0421_354 * log(s_0421 / ic0421) + ep1430_354 * log(s_1430 / ic1430) + ep1755_354 * log(s_1755 / ic1755))) + (cell * v0_356 * (1 + ep0467_356 * log(s_0467 / ic0467) + ep1762_356 * log(s_1762 / ic1762) + ep0421_356 * log(s_0421 / ic0421) + ep1733_356 * log(s_1733 / ic1733))) + (2.0 * cell * v0_390 * (1 + ep0229_390 * log(s_0229 / ic0229) + ep0467_390 * log(s_0467 / ic0467) + ep1333_390 * log(s_1333 / ic1333) + ep0226_390 * log(s_0226 / ic0226) + ep0421_390 * log(s_0421 / ic0421) + ep1334_390 * log(s_1334 / ic1334) + ep1430_390 * log(s_1430 / ic1430))) + (53.95 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux)) - (cell * v0_273 * (1 + ep0307_273 * log(s_0307 / ic0307) + ep0421_273 * log(s_0421 / ic0421) + ep0306_273 * log(s_0306 / ic0306) + ep0467_273 * log(s_0467 / ic0467))) - (cell * v0_293 * (1 + ep0421_293 * log(s_0421 / ic0421) + ep0783_293 * log(s_0783 / ic0783) + ep0467_293 * log(s_0467 / ic0467) + ep1430_293 * log(s_1430 / ic1430))) - (cell * v0_365 * (1 + ep0421_365 * log(s_0421 / ic0421) + ep1430_365 * log(s_1430 / ic1430) + ep0467_365 * log(s_0467 / ic0467)));
    der(s_0435) = (cell * v0_254 * (1 + ep0826_254 * log(s_0826 / ic0826) + ep1028_254 * log(s_1028 / ic1028) + ep0435_254 * log(s_0435 / ic0435) + ep0783_254 * log(s_0783 / ic0783))) - (cell * v0_202 * (1 + ep0325_202 * log(s_0325 / ic0325) + ep0435_202 * log(s_0435 / ic0435) + ep0283_202 * log(s_0283 / ic0283) + ep0783_202 * log(s_0783 / ic0783)));
    der(s_0445) = (cell * v0_278 * (1 + ep0446_278 * log(s_0446 / ic0446) + ep0445_278 * log(s_0445 / ic0445))) - (cell * v0_298 * (1 + ep0405_298 * log(s_0405 / ic0405) + ep0445_298 * log(s_0445 / ic0445) + ep0408_298 * log(s_0408 / ic0408) + ep1430_298 * log(s_1430 / ic1430)));
    der(s_0446) = (cell * v0_312 * (1 + ep0704_312 * log(s_0704 / ic0704) + ep0446_312 * log(s_0446 / ic0446))) + (cell * v0_337 * (1 + ep0913_337 * log(s_0913 / ic0913) + ep1561_337 * log(s_1561 / ic1561) + ep0446_337 * log(s_0446 / ic0446) + ep0721_337 * log(s_0721 / ic0721))) - (cell * v0_278 * (1 + ep0446_278 * log(s_0446 / ic0446) + ep0445_278 * log(s_0445 / ic0445))) - (cell * v0_289 * (1 + ep0467_289 * log(s_0467 / ic0467) + ep0446_289 * log(s_0446 / ic0446) + ep0454_289 * log(s_0454 / ic0454) + ep0360_289 * log(s_0360 / ic0360)));
    der(s_0451) = (cell * v0_126 * (1 + ep1082_126 * log(s_1082 / ic1082) + ep1112_126 * log(s_1112 / ic1112) + ep0451_126 * log(s_0451 / ic0451) + ep1531_126 * log(s_1531 / ic1531))) + (cell * v0_132 * (1 + ep0160_132 * log(s_0160 / ic0160) + ep0347_132 * log(s_0347 / ic0347) + ep0451_132 * log(s_0451 / ic0451))) + (4.0 * cell * v0_203 * (1 + ep1493_203 * log(s_1493 / ic1493) + ep0998_203 * log(s_0998 / ic0998) + ep0451_203 * log(s_0451 / ic0451))) + (cell * v0_223 * (1 + ep1179_223 * log(s_1179 / ic1179) + ep0232_223 * log(s_0232 / ic0232) + ep0451_223 * log(s_0451 / ic0451))) + (cell * v0_364 * (1 + ep0453_364 * log(s_0453 / ic0453) + ep0451_364 * log(s_0451 / ic0451))) - (cell * v0_105 * (1 + ep1072_105 * log(s_1072 / ic1072) + ep0467_105 * log(s_0467 / ic0467) + ep0451_105 * log(s_0451 / ic0451) + ep0454_105 * log(s_0454 / ic0454) + ep1068_105 * log(s_1068 / ic1068) + ep0783_105 * log(s_0783 / ic0783))) - (cell * v0_116 * (1 + ep0467_116 * log(s_0467 / ic0467) + ep0543_116 * log(s_0543 / ic0543) + ep0451_116 * log(s_0451 / ic0451) + ep0421_116 * log(s_0421 / ic0421) + ep0502_116 * log(s_0502 / ic0502))) - (cell * v0_169 * (1 + ep0233_169 * log(s_0233 / ic0233) + ep1336_169 * log(s_1336 / ic1336) + ep0451_169 * log(s_0451 / ic0451) + ep1095_169 * log(s_1095 / ic1095) + ep1335_169 * log(s_1335 / ic1335))) - (cell * v0_174 * (1 + ep0467_174 * log(s_0467 / ic0467) + ep1095_174 * log(s_1095 / ic1095) + ep0451_174 * log(s_0451 / ic0451) + ep0421_174 * log(s_0421 / ic0421) + ep1101_174 * log(s_1101 / ic1101) + ep1430_174 * log(s_1430 / ic1430))) - (cell * v0_244 * (1 + ep0467_244 * log(s_0467 / ic0467) + ep0732_244 * log(s_0732 / ic0732) + ep0451_244 * log(s_0451 / ic0451) + ep0454_244 * log(s_0454 / ic0454) + ep1333_244 * log(s_1333 / ic1333) + ep0783_244 * log(s_0783 / ic0783))) - (cell * v0_341 * (1 + ep1009_341 * log(s_1009 / ic1009) + ep0451_341 * log(s_0451 / ic0451) + ep1531_341 * log(s_1531 / ic1531) + ep1185_341 * log(s_1185 / ic1185))) - (0.01301 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0453) = 0.0;
    der(s_0454) = (cell * v0_17 * (1 + ep0411_17 * log(s_0411 / ic0411) + ep0454_17 * log(s_0454 / ic0454) + ep1430_17 * log(s_1430 / ic1430))) + (cell * v0_62 * (1 + ep0367_62 * log(s_0367 / ic0367) + ep0467_62 * log(s_0467 / ic0467) + ep0368_62 * log(s_0368 / ic0368) + ep0454_62 * log(s_0454 / ic0454))) + (cell * v0_82 * (1 + ep0397_82 * log(s_0397 / ic0397) + ep0467_82 * log(s_0467 / ic0467) + ep0785_82 * log(s_0785 / ic0785) + ep0454_82 * log(s_0454 / ic0454) + ep0789_82 * log(s_0789 / ic0789) + ep0783_82 * log(s_0783 / ic0783))) + (cell * v0_83 * (1 + ep0397_83 * log(s_0397 / ic0397) + ep0467_83 * log(s_0467 / ic0467) + ep0971_83 * log(s_0971 / ic0971) + ep0454_83 * log(s_0454 / ic0454) + ep1411_83 * log(s_1411 / ic1411) + ep0783_83 * log(s_0783 / ic0783))) + (cell * v0_84 * (1 + ep0397_84 * log(s_0397 / ic0397) + ep0467_84 * log(s_0467 / ic0467) + ep0976_84 * log(s_0976 / ic0976) + ep0454_84 * log(s_0454 / ic0454) + ep0533_84 * log(s_0533 / ic0533) + ep0783_84 * log(s_0783 / ic0783))) + (cell * v0_92 * (1 + ep0408_92 * log(s_0408 / ic0408) + ep0467_92 * log(s_0467 / ic0467) + ep0421_92 * log(s_0421 / ic0421) + ep0454_92 * log(s_0454 / ic0454))) + (cell * v0_97 * (1 + ep1327_97 * log(s_1327 / ic1327) + ep0454_97 * log(s_0454 / ic0454) + ep0875_97 * log(s_0875 / ic0875))) + (cell * v0_104 * (1 + ep1072_104 * log(s_1072 / ic1072) + ep0467_104 * log(s_0467 / ic0467) + ep1081_104 * log(s_1081 / ic1081) + ep0454_104 * log(s_0454 / ic0454) + ep1274_104 * log(s_1274 / ic1274) + ep0783_104 * log(s_0783 / ic0783))) + (cell * v0_105 * (1 + ep1072_105 * log(s_1072 / ic1072) + ep0467_105 * log(s_0467 / ic0467) + ep0451_105 * log(s_0451 / ic0451) + ep0454_105 * log(s_0454 / ic0454) + ep1068_105 * log(s_1068 / ic1068) + ep0783_105 * log(s_0783 / ic0783))) + (cell * v0_113 * (1 + ep1264_113 * log(s_1264 / ic1264) + ep0420_113 * log(s_0420 / ic0420) + ep0454_113 * log(s_0454 / ic0454) + ep0479_113 * log(s_0479 / ic0479) + ep0579_113 * log(s_0579 / ic0579))) + (cell * v0_177 * (1 + ep0467_177 * log(s_0467 / ic0467) + ep1095_177 * log(s_1095 / ic1095) + ep1690_177 * log(s_1690 / ic1690) + ep0454_177 * log(s_0454 / ic0454) + ep1105_177 * log(s_1105 / ic1105) + ep0783_177 * log(s_0783 / ic0783))) + (cell * v0_189 * (1 + ep0467_189 * log(s_0467 / ic0467) + ep1101_189 * log(s_1101 / ic1101) + ep1799_189 * log(s_1799 / ic1799) + ep0454_189 * log(s_0454 / ic0454) + ep1095_189 * log(s_1095 / ic1095) + ep0942_189 * log(s_0942 / ic0942) + ep0783_189 * log(s_0783 / ic0783))) + (cell * v0_235 * (1 + ep1018_235 * log(s_1018 / ic1018) + ep1258_235 * log(s_1258 / ic1258) + ep1334_235 * log(s_1334 / ic1334) + ep0454_235 * log(s_0454 / ic0454) + ep1017_235 * log(s_1017 / ic1017) + ep1260_235 * log(s_1260 / ic1260) + ep1333_235 * log(s_1333 / ic1333))) + (cell * v0_236 * (1 + ep1261_236 * log(s_1261 / ic1261) + ep0420_236 * log(s_0420 / ic0420) + ep0454_236 * log(s_0454 / ic0454) + ep0579_236 * log(s_0579 / ic0579) + ep1264_236 * log(s_1264 / ic1264))) + (cell * v0_244 * (1 + ep0467_244 * log(s_0467 / ic0467) + ep0732_244 * log(s_0732 / ic0732) + ep0451_244 * log(s_0451 / ic0451) + ep0454_244 * log(s_0454 / ic0454) + ep1333_244 * log(s_1333 / ic1333) + ep0783_244 * log(s_0783 / ic0783))) + (cell * v0_261 * (1 + ep0470_261 * log(s_0470 / ic0470) + ep0467_261 * log(s_0467 / ic0467) + ep0032_261 * log(s_0032 / ic0032) + ep0454_261 * log(s_0454 / ic0454) + ep0033_261 * log(s_0033 / ic0033) + ep0783_261 * log(s_0783 / ic0783))) + (cell * v0_289 * (1 + ep0467_289 * log(s_0467 / ic0467) + ep0446_289 * log(s_0446 / ic0446) + ep0454_289 * log(s_0454 / ic0454) + ep0360_289 * log(s_0360 / ic0360))) + (cell * v0_331 * (1 + ep0467_331 * log(s_0467 / ic0467) + ep0738_331 * log(s_0738 / ic0738) + ep0116_331 * log(s_0116 / ic0116) + ep1018_331 * log(s_1018 / ic1018) + ep1336_331 * log(s_1336 / ic1336) + ep0330_331 * log(s_0330 / ic0330) + ep0454_331 * log(s_0454 / ic0454) + ep0543_331 * log(s_0543 / ic0543) + ep1017_331 * log(s_1017 / ic1017) + ep1335_331 * log(s_1335 / ic1335) + ep0783_331 * log(s_0783 / ic0783))) - (cell * v0_94 * (1 + ep0454_94 * log(s_0454 / ic0454) + ep0467_94 * log(s_0467 / ic0467) + ep0421_94 * log(s_0421 / ic0421)));
    der(s_0457) = (cell * v0_101 * (1 + ep0526_101 * log(s_0526 / ic0526) + ep1101_101 * log(s_1101 / ic1101) + ep0457_101 * log(s_0457 / ic0457) + ep1095_101 * log(s_1095 / ic1095) + ep1531_101 * log(s_1531 / ic1531))) - (cell * v0_100 * (1 + ep0457_100 * log(s_0457 / ic0457) + ep0360_100 * log(s_0360 / ic0360) + ep0783_100 * log(s_0783 / ic0783) + ep1278_100 * log(s_1278 / ic1278)));
    der(s_0467) = (cell * v0_273 * (1 + ep0307_273 * log(s_0307 / ic0307) + ep0421_273 * log(s_0421 / ic0421) + ep0306_273 * log(s_0306 / ic0306) + ep0467_273 * log(s_0467 / ic0467))) + (cell * v0_293 * (1 + ep0421_293 * log(s_0421 / ic0421) + ep0783_293 * log(s_0783 / ic0783) + ep0467_293 * log(s_0467 / ic0467) + ep1430_293 * log(s_1430 / ic1430))) + (cell * v0_365 * (1 + ep0421_365 * log(s_0421 / ic0421) + ep1430_365 * log(s_1430 / ic1430) + ep0467_365 * log(s_0467 / ic0467))) - (cell * v0_55 * (1 + ep0312_55 * log(s_0312 / ic0312) + ep0467_55 * log(s_0467 / ic0467) + ep0237_55 * log(s_0237 / ic0237) + ep0421_55 * log(s_0421 / ic0421))) - (cell * v0_62 * (1 + ep0367_62 * log(s_0367 / ic0367) + ep0467_62 * log(s_0467 / ic0467) + ep0368_62 * log(s_0368 / ic0368) + ep0454_62 * log(s_0454 / ic0454))) - (cell * v0_67 * (1 + ep0384_67 * log(s_0384 / ic0384) + ep0467_67 * log(s_0467 / ic0467) + ep0393_67 * log(s_0393 / ic0393) + ep0421_67 * log(s_0421 / ic0421))) - (cell * v0_76 * (1 + ep0395_76 * log(s_0395 / ic0395) + ep0467_76 * log(s_0467 / ic0467) + ep0474_76 * log(s_0474 / ic0474) + ep0421_76 * log(s_0421 / ic0421) + ep1217_76 * log(s_1217 / ic1217) + ep1430_76 * log(s_1430 / ic1430))) - (cell * v0_77 * (1 + ep1302_77 * log(s_1302 / ic1302) + ep0467_77 * log(s_0467 / ic0467) + ep1304_77 * log(s_1304 / ic1304) + ep0421_77 * log(s_0421 / ic0421))) - (cell * v0_82 * (1 + ep0397_82 * log(s_0397 / ic0397) + ep0467_82 * log(s_0467 / ic0467) + ep0785_82 * log(s_0785 / ic0785) + ep0454_82 * log(s_0454 / ic0454) + ep0789_82 * log(s_0789 / ic0789) + ep0783_82 * log(s_0783 / ic0783))) - (cell * v0_83 * (1 + ep0397_83 * log(s_0397 / ic0397) + ep0467_83 * log(s_0467 / ic0467) + ep0971_83 * log(s_0971 / ic0971) + ep0454_83 * log(s_0454 / ic0454) + ep1411_83 * log(s_1411 / ic1411) + ep0783_83 * log(s_0783 / ic0783))) - (cell * v0_84 * (1 + ep0397_84 * log(s_0397 / ic0397) + ep0467_84 * log(s_0467 / ic0467) + ep0976_84 * log(s_0976 / ic0976) + ep0454_84 * log(s_0454 / ic0454) + ep0533_84 * log(s_0533 / ic0533) + ep0783_84 * log(s_0783 / ic0783))) - (cell * v0_92 * (1 + ep0408_92 * log(s_0408 / ic0408) + ep0467_92 * log(s_0467 / ic0467) + ep0421_92 * log(s_0421 / ic0421) + ep0454_92 * log(s_0454 / ic0454))) - (cell * v0_94 * (1 + ep0454_94 * log(s_0454 / ic0454) + ep0467_94 * log(s_0467 / ic0467) + ep0421_94 * log(s_0421 / ic0421))) - (cell * v0_98 * (1 + ep0412_98 * log(s_0412 / ic0412) + ep0467_98 * log(s_0467 / ic0467) + ep0421_98 * log(s_0421 / ic0421) + ep0252_98 * log(s_0252 / ic0252))) - (cell * v0_104 * (1 + ep1072_104 * log(s_1072 / ic1072) + ep0467_104 * log(s_0467 / ic0467) + ep1081_104 * log(s_1081 / ic1081) + ep0454_104 * log(s_0454 / ic0454) + ep1274_104 * log(s_1274 / ic1274) + ep0783_104 * log(s_0783 / ic0783))) - (cell * v0_105 * (1 + ep1072_105 * log(s_1072 / ic1072) + ep0467_105 * log(s_0467 / ic0467) + ep0451_105 * log(s_0451 / ic0451) + ep0454_105 * log(s_0454 / ic0454) + ep1068_105 * log(s_1068 / ic1068) + ep0783_105 * log(s_0783 / ic0783))) - (cell * v0_108 * (1 + ep1072_108 * log(s_1072 / ic1072) + ep0467_108 * log(s_0467 / ic0467) + ep0332_108 * log(s_0332 / ic0332) + ep0421_108 * log(s_0421 / ic0421))) - (cell * v0_111 * (1 + ep0467_111 * log(s_0467 / ic0467) + ep0360_111 * log(s_0360 / ic0360) + ep0783_111 * log(s_0783 / ic0783) + ep0099_111 * log(s_0099 / ic0099))) - (cell * v0_116 * (1 + ep0467_116 * log(s_0467 / ic0467) + ep0543_116 * log(s_0543 / ic0543) + ep0451_116 * log(s_0451 / ic0451) + ep0421_116 * log(s_0421 / ic0421) + ep0502_116 * log(s_0502 / ic0502))) - (cell * v0_124 * (1 + ep0467_124 * log(s_0467 / ic0467) + ep1101_124 * log(s_1101 / ic1101) + ep1792_124 * log(s_1792 / ic1792) + ep0421_124 * log(s_0421 / ic0421) + ep0575_124 * log(s_0575 / ic0575) + ep1095_124 * log(s_1095 / ic1095) + ep1430_124 * log(s_1430 / ic1430))) - (cell * v0_128 * (1 + ep0467_128 * log(s_0467 / ic0467) + ep0539_128 * log(s_0539 / ic0539) + ep0421_128 * log(s_0421 / ic0421) + ep0510_128 * log(s_0510 / ic0510))) - (cell * v0_129 * (1 + ep0600_129 * log(s_0600 / ic0600) + ep0467_129 * log(s_0467 / ic0467) + ep0421_129 * log(s_0421 / ic0421) + ep0603_129 * log(s_0603 / ic0603) + ep1430_129 * log(s_1430 / ic1430))) - (cell * v0_130 * (1 + ep0467_130 * log(s_0467 / ic0467) + ep0754_130 * log(s_0754 / ic0754) + ep0421_130 * log(s_0421 / ic0421) + ep0555_130 * log(s_0555 / ic0555))) - (cell * v0_131 * (1 + ep0467_131 * log(s_0467 / ic0467) + ep0543_131 * log(s_0543 / ic0543) + ep0371_131 * log(s_0371 / ic0371) + ep0421_131 * log(s_0421 / ic0421) + ep0755_131 * log(s_0755 / ic0755) + ep1430_131 * log(s_1430 / ic1430))) - (cell * v0_139 * (1 + ep0467_139 * log(s_0467 / ic0467) + ep0767_139 * log(s_0767 / ic0767) + ep1095_139 * log(s_1095 / ic1095) + ep0421_139 * log(s_0421 / ic0421) + ep0372_139 * log(s_0372 / ic0372) + ep1430_139 * log(s_1430 / ic1430))) - (cell * v0_148 * (1 + ep0467_148 * log(s_0467 / ic0467) + ep0802_148 * log(s_0802 / ic0802) + ep0421_148 * log(s_0421 / ic0421) + ep0795_148 * log(s_0795 / ic0795))) - (cell * v0_160 * (1 + ep0467_160 * log(s_0467 / ic0467) + ep0863_160 * log(s_0863 / ic0863) + ep0859_160 * log(s_0859 / ic0859) + ep0783_160 * log(s_0783 / ic0783))) - (cell * v0_161 * (1 + ep0467_161 * log(s_0467 / ic0467) + ep0867_161 * log(s_0867 / ic0867) + ep0337_161 * log(s_0337 / ic0337) + ep0133_161 * log(s_0133 / ic0133) + ep0421_161 * log(s_0421 / ic0421) + ep1430_161 * log(s_1430 / ic1430))) - (cell * v0_163 * (1 + ep0467_163 * log(s_0467 / ic0467) + ep0867_163 * log(s_0867 / ic0867) + ep1318_163 * log(s_1318 / ic1318) + ep0421_163 * log(s_0421 / ic0421) + ep1322_163 * log(s_1322 / ic1322) + ep1430_163 * log(s_1430 / ic1430))) - (cell * v0_168 * (1 + ep0467_168 * log(s_0467 / ic0467) + ep1095_168 * log(s_1095 / ic1095) + ep0421_168 * log(s_0421 / ic0421) + ep1099_168 * log(s_1099 / ic1099))) - (cell * v0_174 * (1 + ep0467_174 * log(s_0467 / ic0467) + ep1095_174 * log(s_1095 / ic1095) + ep0451_174 * log(s_0451 / ic0451) + ep0421_174 * log(s_0421 / ic0421) + ep1101_174 * log(s_1101 / ic1101) + ep1430_174 * log(s_1430 / ic1430))) - (cell * v0_177 * (1 + ep0467_177 * log(s_0467 / ic0467) + ep1095_177 * log(s_1095 / ic1095) + ep1690_177 * log(s_1690 / ic1690) + ep0454_177 * log(s_0454 / ic0454) + ep1105_177 * log(s_1105 / ic1105) + ep0783_177 * log(s_0783 / ic0783))) - (cell * v0_179 * (1 + ep0467_179 * log(s_0467 / ic0467) + ep0029_179 * log(s_0029 / ic0029) + ep0675_179 * log(s_0675 / ic0675) + ep0421_179 * log(s_0421 / ic0421))) - (cell * v0_189 * (1 + ep0467_189 * log(s_0467 / ic0467) + ep1101_189 * log(s_1101 / ic1101) + ep1799_189 * log(s_1799 / ic1799) + ep0454_189 * log(s_0454 / ic0454) + ep1095_189 * log(s_1095 / ic1095) + ep0942_189 * log(s_0942 / ic0942) + ep0783_189 * log(s_0783 / ic0783))) - (cell * v0_192 * (1 + ep0467_192 * log(s_0467 / ic0467) + ep0942_192 * log(s_0942 / ic0942) + ep0421_192 * log(s_0421 / ic0421) + ep0896_192 * log(s_0896 / ic0896))) - (cell * v0_194 * (1 + ep0467_194 * log(s_0467 / ic0467) + ep0622_194 * log(s_0622 / ic0622) + ep0421_194 * log(s_0421 / ic0421) + ep0627_194 * log(s_0627 / ic0627))) - (cell * v0_195 * (1 + ep0467_195 * log(s_0467 / ic0467) + ep0657_195 * log(s_0657 / ic0657) + ep0421_195 * log(s_0421 / ic0421) + ep0663_195 * log(s_0663 / ic0663))) - (cell * v0_200 * (1 + ep0467_200 * log(s_0467 / ic0467) + ep1113_200 * log(s_1113 / ic1113) + ep0421_200 * log(s_0421 / ic0421) + ep1363_200 * log(s_1363 / ic1363))) - (cell * v0_232 * (1 + ep0467_232 * log(s_0467 / ic0467) + ep1141_232 * log(s_1141 / ic1141) + ep1552_232 * log(s_1552 / ic1552) + ep1430_232 * log(s_1430 / ic1430) + ep0783_232 * log(s_0783 / ic0783))) - (cell * v0_237 * (1 + ep0467_237 * log(s_0467 / ic0467) + ep1265_237 * log(s_1265 / ic1265) + ep0420_237 * log(s_0420 / ic0420) + ep0783_237 * log(s_0783 / ic0783))) - (cell * v0_239 * (1 + ep0467_239 * log(s_0467 / ic0467) + ep1259_239 * log(s_1259 / ic1259) + ep1258_239 * log(s_1258 / ic1258) + ep0783_239 * log(s_0783 / ic0783))) - (cell * v0_243 * (1 + ep0467_243 * log(s_0467 / ic0467) + ep1333_243 * log(s_1333 / ic1333) + ep0421_243 * log(s_0421 / ic0421) + ep1335_243 * log(s_1335 / ic1335))) - (cell * v0_244 * (1 + ep0467_244 * log(s_0467 / ic0467) + ep0732_244 * log(s_0732 / ic0732) + ep0451_244 * log(s_0451 / ic0451) + ep0454_244 * log(s_0454 / ic0454) + ep1333_244 * log(s_1333 / ic1333) + ep0783_244 * log(s_0783 / ic0783))) - (cell * v0_245 * (1 + ep0467_245 * log(s_0467 / ic0467) + ep1340_245 * log(s_1340 / ic1340) + ep0732_245 * log(s_0732 / ic0732) + ep0783_245 * log(s_0783 / ic0783))) - (cell * v0_247 * (1 + ep0467_247 * log(s_0467 / ic0467) + ep0510_247 * log(s_0510 / ic0510) + ep0421_247 * log(s_0421 / ic0421) + ep0575_247 * log(s_0575 / ic0575))) - (cell * v0_248 * (1 + ep0467_248 * log(s_0467 / ic0467) + ep0795_248 * log(s_0795 / ic0795) + ep0421_248 * log(s_0421 / ic0421) + ep0805_248 * log(s_0805 / ic0805))) - (cell * v0_249 * (1 + ep0467_249 * log(s_0467 / ic0467) + ep0896_249 * log(s_0896 / ic0896) + ep0421_249 * log(s_0421 / ic0421) + ep0945_249 * log(s_0945 / ic0945))) - (cell * v0_250 * (1 + ep0467_250 * log(s_0467 / ic0467) + ep1733_250 * log(s_1733 / ic1733) + ep0421_250 * log(s_0421 / ic0421) + ep1792_250 * log(s_1792 / ic1792))) - (cell * v0_251 * (1 + ep0467_251 * log(s_0467 / ic0467) + ep0421_251 * log(s_0421 / ic0421) + ep1430_251 * log(s_1430 / ic1430))) - (cell * v0_259 * (1 + ep0467_259 * log(s_0467 / ic0467) + ep1413_259 * log(s_1413 / ic1413) + ep0754_259 * log(s_0754 / ic0754) + ep0783_259 * log(s_0783 / ic0783))) - (cell * v0_260 * (1 + ep0467_260 * log(s_0467 / ic0467) + ep0033_260 * log(s_0033 / ic0033) + ep0599_260 * log(s_0599 / ic0599) + ep0421_260 * log(s_0421 / ic0421))) - (cell * v0_261 * (1 + ep0470_261 * log(s_0470 / ic0470) + ep0467_261 * log(s_0467 / ic0467) + ep0032_261 * log(s_0032 / ic0032) + ep0454_261 * log(s_0454 / ic0454) + ep0033_261 * log(s_0033 / ic0033) + ep0783_261 * log(s_0783 / ic0783))) - (cell * v0_275 * (1 + ep0313_275 * log(s_0313 / ic0313) + ep0467_275 * log(s_0467 / ic0467) + ep0218_275 * log(s_0218 / ic0218) + ep0421_275 * log(s_0421 / ic0421))) - (cell * v0_281 * (1 + ep0342_281 * log(s_0342 / ic0342) + ep0467_281 * log(s_0467 / ic0467) + ep0474_281 * log(s_0474 / ic0474) + ep0362_281 * log(s_0362 / ic0362) + ep0421_281 * log(s_0421 / ic0421) + ep1430_281 * log(s_1430 / ic1430))) - (cell * v0_283 * (1 + ep0467_283 * log(s_0467 / ic0467) + ep0162_283 * log(s_0162 / ic0162) + ep0421_283 * log(s_0421 / ic0421) + ep0342_283 * log(s_0342 / ic0342) + ep1430_283 * log(s_1430 / ic1430))) - (cell * v0_285 * (1 + ep0344_285 * log(s_0344 / ic0344) + ep1072_285 * log(s_1072 / ic1072) + ep0467_285 * log(s_0467 / ic0467) + ep0040_285 * log(s_0040 / ic0040) + ep0421_285 * log(s_0421 / ic0421) + ep1430_285 * log(s_1430 / ic1430))) - (cell * v0_287 * (1 + ep0467_287 * log(s_0467 / ic0467) + ep1322_287 * log(s_1322 / ic1322) + ep1101_287 * log(s_1101 / ic1101) + ep0421_287 * log(s_0421 / ic0421) + ep0162_287 * log(s_0162 / ic0162) + ep1095_287 * log(s_1095 / ic1095) + ep1430_287 * log(s_1430 / ic1430))) - (cell * v0_288 * (1 + ep0467_288 * log(s_0467 / ic0467) + ep0929_288 * log(s_0929 / ic0929) + ep0361_288 * log(s_0361 / ic0361) + ep0421_288 * log(s_0421 / ic0421) + ep1318_288 * log(s_1318 / ic1318) + ep1430_288 * log(s_1430 / ic1430))) - (cell * v0_289 * (1 + ep0467_289 * log(s_0467 / ic0467) + ep0446_289 * log(s_0446 / ic0446) + ep0454_289 * log(s_0454 / ic0454) + ep0360_289 * log(s_0360 / ic0360))) - (cell * v0_305 * (1 + ep0467_305 * log(s_0467 / ic0467) + ep1546_305 * log(s_1546 / ic1546) + ep0421_305 * log(s_0421 / ic0421) + ep0863_305 * log(s_0863 / ic0863))) - (cell * v0_308 * (1 + ep0467_308 * log(s_0467 / ic0467) + ep0861_308 * log(s_0861 / ic0861) + ep0726_308 * log(s_0726 / ic0726) + ep0862_308 * log(s_0862 / ic0862))) - (cell * v0_318 * (1 + ep0467_318 * log(s_0467 / ic0467) + ep1571_318 * log(s_1571 / ic1571) + ep0421_318 * log(s_0421 / ic0421) + ep1574_318 * log(s_1574 / ic1574))) - (cell * v0_321 * (1 + ep0467_321 * log(s_0467 / ic0467) + ep0555_321 * log(s_0555 / ic0555) + ep1595_321 * log(s_1595 / ic1595) + ep0421_321 * log(s_0421 / ic0421) + ep1430_321 * log(s_1430 / ic1430) + ep1599_321 * log(s_1599 / ic1599))) - (cell * v0_324 * (1 + ep0467_324 * log(s_0467 / ic0467) + ep0945_324 * log(s_0945 / ic0945) + ep1609_324 * log(s_1609 / ic1609) + ep0412_324 * log(s_0412 / ic0412) + ep0896_324 * log(s_0896 / ic0896) + ep1430_324 * log(s_1430 / ic1430) + ep0783_324 * log(s_0783 / ic0783))) - (cell * v0_327 * (1 + ep0467_327 * log(s_0467 / ic0467) + ep1204_327 * log(s_1204 / ic1204) + ep0421_327 * log(s_0421 / ic0421) + ep0147_327 * log(s_0147 / ic0147))) - (cell * v0_330 * (1 + ep0467_330 * log(s_0467 / ic0467) + ep1643_330 * log(s_1643 / ic1643) + ep0421_330 * log(s_0421 / ic0421) + ep1644_330 * log(s_1644 / ic1644))) - (cell * v0_331 * (1 + ep0467_331 * log(s_0467 / ic0467) + ep0738_331 * log(s_0738 / ic0738) + ep0116_331 * log(s_0116 / ic0116) + ep1018_331 * log(s_1018 / ic1018) + ep1336_331 * log(s_1336 / ic1336) + ep0330_331 * log(s_0330 / ic0330) + ep0454_331 * log(s_0454 / ic0454) + ep0543_331 * log(s_0543 / ic0543) + ep1017_331 * log(s_1017 / ic1017) + ep1335_331 * log(s_1335 / ic1335) + ep0783_331 * log(s_0783 / ic0783))) - (cell * v0_351 * (1 + ep1041_351 * log(s_1041 / ic1041) + ep0467_351 * log(s_0467 / ic0467) + ep1750_351 * log(s_1750 / ic1750) + ep0421_351 * log(s_0421 / ic0421) + ep1430_351 * log(s_1430 / ic1430) + ep1751_351 * log(s_1751 / ic1751))) - (cell * v0_352 * (1 + ep0467_352 * log(s_0467 / ic0467) + ep0671_352 * log(s_0671 / ic0671) + ep1751_352 * log(s_1751 / ic1751) + ep0421_352 * log(s_0421 / ic0421) + ep1430_352 * log(s_1430 / ic1430) + ep1754_352 * log(s_1754 / ic1754))) - (cell * v0_353 * (1 + ep1242_353 * log(s_1242 / ic1242) + ep0467_353 * log(s_0467 / ic0467) + ep1754_353 * log(s_1754 / ic1754) + ep0421_353 * log(s_0421 / ic0421) + ep1430_353 * log(s_1430 / ic1430) + ep1752_353 * log(s_1752 / ic1752))) - (cell * v0_354 * (1 + ep0603_354 * log(s_0603 / ic0603) + ep0467_354 * log(s_0467 / ic0467) + ep1752_354 * log(s_1752 / ic1752) + ep0421_354 * log(s_0421 / ic0421) + ep1430_354 * log(s_1430 / ic1430) + ep1755_354 * log(s_1755 / ic1755))) - (cell * v0_356 * (1 + ep0467_356 * log(s_0467 / ic0467) + ep1762_356 * log(s_1762 / ic1762) + ep0421_356 * log(s_0421 / ic0421) + ep1733_356 * log(s_1733 / ic1733))) - (2.0 * cell * v0_390 * (1 + ep0229_390 * log(s_0229 / ic0229) + ep0467_390 * log(s_0467 / ic0467) + ep1333_390 * log(s_1333 / ic1333) + ep0226_390 * log(s_0226 / ic0226) + ep0421_390 * log(s_0421 / ic0421) + ep1334_390 * log(s_1334 / ic1334) + ep1430_390 * log(s_1430 / ic1430))) - (54.12 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0470) = (cell * v0_106 * (1 + ep1072_106 * log(s_1072 / ic1072) + ep0470_106 * log(s_0470 / ic0470) + ep0543_106 * log(s_0543 / ic0543))) - (cell * v0_261 * (1 + ep0470_261 * log(s_0470 / ic0470) + ep0467_261 * log(s_0467 / ic0467) + ep0032_261 * log(s_0032 / ic0032) + ep0454_261 * log(s_0454 / ic0454) + ep0033_261 * log(s_0033 / ic0033) + ep0783_261 * log(s_0783 / ic0783)));
    der(s_0474) = (cell * v0_193 * (1 + ep0543_193 * log(s_0543 / ic0543) + ep0474_193 * log(s_0474 / ic0474))) - (cell * v0_76 * (1 + ep0395_76 * log(s_0395 / ic0395) + ep0467_76 * log(s_0467 / ic0467) + ep0474_76 * log(s_0474 / ic0474) + ep0421_76 * log(s_0421 / ic0421) + ep1217_76 * log(s_1217 / ic1217) + ep1430_76 * log(s_1430 / ic1430))) - (cell * v0_281 * (1 + ep0342_281 * log(s_0342 / ic0342) + ep0467_281 * log(s_0467 / ic0467) + ep0474_281 * log(s_0474 / ic0474) + ep0362_281 * log(s_0362 / ic0362) + ep0421_281 * log(s_0421 / ic0421) + ep1430_281 * log(s_1430 / ic1430)));
    der(s_0476) = (cell * v0_112 * (1 + ep0378_112 * log(s_0378 / ic0378) + ep1552_112 * log(s_1552 / ic1552) + ep0755_112 * log(s_0755 / ic0755) + ep0377_112 * log(s_0377 / ic0377) + ep0476_112 * log(s_0476 / ic0476) + ep0333_112 * log(s_0333 / ic0333) + ep1141_112 * log(s_1141 / ic1141))) - (2e-06 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0479) = (cell * v0_113 * (1 + ep1264_113 * log(s_1264 / ic1264) + ep0420_113 * log(s_0420 / ic0420) + ep0454_113 * log(s_0454 / ic0454) + ep0479_113 * log(s_0479 / ic0479) + ep0579_113 * log(s_0579 / ic0579))) - (cell * v0_115 * (1 + ep0479_115 * log(s_0479 / ic0479) + ep0945_115 * log(s_0945 / ic0945) + ep0481_115 * log(s_0481 / ic0481) + ep0783_115 * log(s_0783 / ic0783)));
    der(s_0480) = (cell * v0_114 * (1 + ep0481_114 * log(s_0481 / ic0481) + ep0945_114 * log(s_0945 / ic0945) + ep0480_114 * log(s_0480 / ic0480) + ep0783_114 * log(s_0783 / ic0783))) - (0.000122 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0481) = (cell * v0_115 * (1 + ep0479_115 * log(s_0479 / ic0479) + ep0945_115 * log(s_0945 / ic0945) + ep0481_115 * log(s_0481 / ic0481) + ep0783_115 * log(s_0783 / ic0783))) - (cell * v0_114 * (1 + ep0481_114 * log(s_0481 / ic0481) + ep0945_114 * log(s_0945 / ic0945) + ep0480_114 * log(s_0480 / ic0480) + ep0783_114 * log(s_0783 / ic0783)));
    der(s_0488) = (cell * v0_85 * (1 + ep0574_85 * log(s_0574 / ic0574) + ep0860_85 * log(s_0860 / ic0860) + ep0488_85 * log(s_0488 / ic0488) + ep0859_85 * log(s_0859 / ic0859))) - (cell * v0_70 * (1 + ep0395_70 * log(s_0395 / ic0395) + ep0488_70 * log(s_0488 / ic0488) + ep0299_70 * log(s_0299 / ic0299) + ep0555_70 * log(s_0555 / ic0555)));
    der(s_0493) = (cell * v0_208 * (1 + ep0096_208 * log(s_0096 / ic0096) + ep0493_208 * log(s_0493 / ic0493) + ep0543_208 * log(s_0543 / ic0543))) - (cell * v0_340 * (1 + ep0493_340 * log(s_0493 / ic0493) + ep0913_340 * log(s_0913 / ic0913) + ep1009_340 * log(s_1009 / ic1009)));
    der(s_0497) = (cell * v0_366 * (1 + ep0499_366 * log(s_0499 / ic0499) + ep0497_366 * log(s_0497 / ic0497))) - (0.005205 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0499) = 0.0;
    der(s_0502) = (cell * v0_116 * (1 + ep0467_116 * log(s_0467 / ic0467) + ep0543_116 * log(s_0543 / ic0543) + ep0451_116 * log(s_0451 / ic0451) + ep0421_116 * log(s_0421 / ic0421) + ep0502_116 * log(s_0502 / ic0502))) - (cell * v0_107 * (1 + ep1072_107 * log(s_1072 / ic1072) + ep0502_107 * log(s_0502 / ic0502) + ep1312_107 * log(s_1312 / ic1312) + ep1430_107 * log(s_1430 / ic1430))) - (cell * v0_256 * (1 + ep0502_256 * log(s_0502 / ic0502) + ep1391_256 * log(s_1391 / ic1391) + ep1081_256 * log(s_1081 / ic1081) + ep1430_256 * log(s_1430 / ic1430)));
    der(s_0510) = (cell * v0_128 * (1 + ep0467_128 * log(s_0467 / ic0467) + ep0539_128 * log(s_0539 / ic0539) + ep0421_128 * log(s_0421 / ic0421) + ep0510_128 * log(s_0510 / ic0510))) - (cell * v0_247 * (1 + ep0467_247 * log(s_0467 / ic0467) + ep0510_247 * log(s_0510 / ic0510) + ep0421_247 * log(s_0421 / ic0421) + ep0575_247 * log(s_0575 / ic0575)));
    der(s_0512) = (cell * v0_118 * (1 + ep0575_118 * log(s_0575 / ic0575) + ep0073_118 * log(s_0073 / ic0073) + ep0512_118 * log(s_0512 / ic0512) + ep0783_118 * log(s_0783 / ic0783))) - (cell * v0_266 * (1 + ep0512_266 * log(s_0512 / ic0512) + ep1170_266 * log(s_1170 / ic1170) + ep0539_266 * log(s_0539 / ic0539) + ep1476_266 * log(s_1476 / ic1476)));
    der(s_0513) = (cell * v0_117 * (1 + ep0575_117 * log(s_0575 / ic0575) + ep0075_117 * log(s_0075 / ic0075) + ep0513_117 * log(s_0513 / ic0513) + ep0783_117 * log(s_0783 / ic0783))) - (cell * v0_265 * (1 + ep0513_265 * log(s_0513 / ic0513) + ep1170_265 * log(s_1170 / ic1170) + ep0539_265 * log(s_0539 / ic0539) + ep1477_265 * log(s_1477 / ic1477)));
    der(s_0520) = (cell * v0_367 * (1 + ep0522_367 * log(s_0522 / ic0522) + ep0520_367 * log(s_0520 / ic0520))) - (0.005205 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0522) = 0.0;
    der(s_0526) = (cell * v0_121 * (1 + ep0359_121 * log(s_0359 / ic0359) + ep0526_121 * log(s_0526 / ic0526) + ep1430_121 * log(s_1430 / ic1430))) - (cell * v0_57 * (1 + ep0526_57 * log(s_0526 / ic0526) + ep1101_57 * log(s_1101 / ic1101) + ep0316_57 * log(s_0316 / ic0316) + ep1095_57 * log(s_1095 / ic1095))) - (cell * v0_101 * (1 + ep0526_101 * log(s_0526 / ic0526) + ep1101_101 * log(s_1101 / ic1101) + ep0457_101 * log(s_0457 / ic0457) + ep1095_101 * log(s_1095 / ic1095) + ep1531_101 * log(s_1531 / ic1531))) - (cell * v0_119 * (1 + ep0526_119 * log(s_0526 / ic0526) + ep1497_119 * log(s_1497 / ic1497))) - (cell * v0_120 * (1 + ep0526_120 * log(s_0526 / ic0526) + ep0325_120 * log(s_0325 / ic0325) + ep1531_120 * log(s_1531 / ic1531)));
    der(s_0530) = (cell * v0_80 * (1 + ep0536_80 * log(s_0536 / ic0536) + ep0530_80 * log(s_0530 / ic0530))) - (cell * v0_81 * (1 + ep0530_81 * log(s_0530 / ic0530) + ep1027_81 * log(s_1027 / ic1027)));
    der(s_0533) = (cell * v0_84 * (1 + ep0397_84 * log(s_0397 / ic0397) + ep0467_84 * log(s_0467 / ic0467) + ep0976_84 * log(s_0976 / ic0976) + ep0454_84 * log(s_0454 / ic0454) + ep0533_84 * log(s_0533 / ic0533) + ep0783_84 * log(s_0783 / ic0783))) - (cell * v0_4 * (1 + ep0119_4 * log(s_0119 / ic0119) + ep0533_4 * log(s_0533 / ic0533) + ep0397_4 * log(s_0397 / ic0397) + ep0073_4 * log(s_0073 / ic0073))) - (cell * v0_181 * (1 + ep0920_181 * log(s_0920 / ic0920) + ep0533_181 * log(s_0533 / ic0533) + ep0119_181 * log(s_0119 / ic0119) + ep0397_181 * log(s_0397 / ic0397)));
    der(s_0536) = (cell * v0_122 * (1 + ep0395_122 * log(s_0395 / ic0395) + ep1399_122 * log(s_1399 / ic1399) + ep0536_122 * log(s_0536 / ic0536) + ep0555_122 * log(s_0555 / ic0555))) - (cell * v0_80 * (1 + ep0536_80 * log(s_0536 / ic0536) + ep0530_80 * log(s_0530 / ic0530)));
    der(s_0539) = (cell * v0_9 * (1 + ep0237_9 * log(s_0237 / ic0237) + ep0193_9 * log(s_0193 / ic0193) + ep0539_9 * log(s_0539 / ic0539))) + (cell * v0_24 * (1 + ep0542_24 * log(s_0542 / ic0542) + ep0147_24 * log(s_0147 / ic0147) + ep0539_24 * log(s_0539 / ic0539) + ep1038_24 * log(s_1038 / ic1038))) + (cell * v0_25 * (1 + ep0542_25 * log(s_0542 / ic0542) + ep1038_25 * log(s_1038 / ic1038) + ep0539_25 * log(s_0539 / ic0539) + ep1033_25 * log(s_1033 / ic1033))) + (cell * v0_265 * (1 + ep0513_265 * log(s_0513 / ic0513) + ep1170_265 * log(s_1170 / ic1170) + ep0539_265 * log(s_0539 / ic0539) + ep1477_265 * log(s_1477 / ic1477))) + (cell * v0_266 * (1 + ep0512_266 * log(s_0512 / ic0512) + ep1170_266 * log(s_1170 / ic1170) + ep0539_266 * log(s_0539 / ic0539) + ep1476_266 * log(s_1476 / ic1476))) + (cell * v0_276 * (1 + ep0599_276 * log(s_0599 / ic0599) + ep0575_276 * log(s_0575 / ic0575) + ep1083_276 * log(s_1083 / ic1083) + ep1277_276 * log(s_1277 / ic1277) + ep0539_276 * log(s_0539 / ic0539) + ep0783_276 * log(s_0783 / ic0783))) - (cell * v0_128 * (1 + ep0467_128 * log(s_0467 / ic0467) + ep0539_128 * log(s_0539 / ic0539) + ep0421_128 * log(s_0421 / ic0421) + ep0510_128 * log(s_0510 / ic0510)));
    der(s_0542) = (cell * v0_26 * (1 + ep0575_26 * log(s_0575 / ic0575) + ep0271_26 * log(s_0271 / ic0271) + ep0542_26 * log(s_0542 / ic0542) + ep0783_26 * log(s_0783 / ic0783))) - (cell * v0_24 * (1 + ep0542_24 * log(s_0542 / ic0542) + ep0147_24 * log(s_0147 / ic0147) + ep0539_24 * log(s_0539 / ic0539) + ep1038_24 * log(s_1038 / ic1038))) - (cell * v0_25 * (1 + ep0542_25 * log(s_0542 / ic0542) + ep1038_25 * log(s_1038 / ic1038) + ep0539_25 * log(s_0539 / ic0539) + ep1033_25 * log(s_1033 / ic1033)));
    der(s_0543) = (cell * v0_2 * (1 + ep0913_2 * log(s_0913 / ic0913) + ep1531_2 * log(s_1531 / ic1531) + ep0543_2 * log(s_0543 / ic0543) + ep0116_2 * log(s_0116 / ic0116))) + (cell * v0_8 * (1 + ep0232_8 * log(s_0232 / ic0232) + ep1531_8 * log(s_1531 / ic1531) + ep0041_8 * log(s_0041 / ic0041) + ep0543_8 * log(s_0543 / ic0543))) + (cell * v0_15 * (1 + ep0267_15 * log(s_0267 / ic0267) + ep0328_15 * log(s_0328 / ic0328) + ep0543_15 * log(s_0543 / ic0543))) + (cell * v0_47 * (1 + ep1216_47 * log(s_1216 / ic1216) + ep1218_47 * log(s_1218 / ic1218) + ep0543_47 * log(s_0543 / ic0543) + ep0555_47 * log(s_0555 / ic0555) + ep0289_47 * log(s_0289 / ic0289))) + (cell * v0_50 * (1 + ep0910_50 * log(s_0910 / ic0910) + ep1216_50 * log(s_1216 / ic1216) + ep0397_50 * log(s_0397 / ic0397) + ep0543_50 * log(s_0543 / ic0543) + ep0290_50 * log(s_0290 / ic0290))) + (cell * v0_52 * (1 + ep0789_52 * log(s_0789 / ic0789) + ep1216_52 * log(s_1216 / ic1216) + ep0304_52 * log(s_0304 / ic0304) + ep0397_52 * log(s_0397 / ic0397) + ep0543_52 * log(s_0543 / ic0543))) + (cell * v0_65 * (1 + ep1041_65 * log(s_1041 / ic1041) + ep1491_65 * log(s_1491 / ic1491) + ep0376_65 * log(s_0376 / ic0376) + ep0397_65 * log(s_0397 / ic0397) + ep0543_65 * log(s_0543 / ic0543))) + (cell * v0_68 * (1 + ep1531_68 * log(s_1531 / ic1531) + ep0042_68 * log(s_0042 / ic0042) + ep0543_68 * log(s_0543 / ic0543))) + (cell * v0_106 * (1 + ep1072_106 * log(s_1072 / ic1072) + ep0470_106 * log(s_0470 / ic0470) + ep0543_106 * log(s_0543 / ic0543))) + (2.0 * cell * v0_123 * (1 + ep0565_123 * log(s_0565 / ic0565) + ep1372_123 * log(s_1372 / ic1372) + ep0543_123 * log(s_0543 / ic0543) + ep1512_123 * log(s_1512 / ic1512))) + (cell * v0_133 * (1 + ep1242_133 * log(s_1242 / ic1242) + ep0543_133 * log(s_0543 / ic0543) + ep1131_133 * log(s_1131 / ic1131))) + (cell * v0_188 * (1 + ep0941_188 * log(s_0941 / ic0941) + ep0214_188 * log(s_0214 / ic0214) + ep0543_188 * log(s_0543 / ic0543))) + (cell * v0_208 * (1 + ep0096_208 * log(s_0096 / ic0096) + ep0493_208 * log(s_0493 / ic0493) + ep0543_208 * log(s_0543 / ic0543))) + (cell * v0_216 * (1 + ep1027_216 * log(s_1027 / ic1027) + ep1335_216 * log(s_1335 / ic1335) + ep0233_216 * log(s_0233 / ic0233) + ep0543_216 * log(s_0543 / ic0543) + ep1336_216 * log(s_1336 / ic1336))) + (cell * v0_246 * (1 + ep0360_246 * log(s_0360 / ic0360) + ep1537_246 * log(s_1537 / ic1537) + ep0543_246 * log(s_0543 / ic0543) + ep1340_246 * log(s_1340 / ic1340) + ep0783_246 * log(s_0783 / ic0783))) + (cell * v0_255 * (1 + ep0283_255 * log(s_0283 / ic0283) + ep0229_255 * log(s_0229 / ic0229) + ep0543_255 * log(s_0543 / ic0543))) + (cell * v0_258 * (1 + ep1397_258 * log(s_1397 / ic1397) + ep0543_258 * log(s_0543 / ic0543) + ep1762_258 * log(s_1762 / ic1762))) + (cell * v0_263 * (1 + ep1477_263 * log(s_1477 / ic1477) + ep0543_263 * log(s_0543 / ic0543) + ep1437_263 * log(s_1437 / ic1437))) + (cell * v0_264 * (1 + ep1476_264 * log(s_1476 / ic1476) + ep0543_264 * log(s_0543 / ic0543) + ep1435_264 * log(s_1435 / ic1435))) + (cell * v0_277 * (1 + ep1277_277 * log(s_1277 / ic1277) + ep0543_277 * log(s_0543 / ic0543) + ep1413_277 * log(s_1413 / ic1413))) + (cell * v0_295 * (1 + ep1497_295 * log(s_1497 / ic1497) + ep0543_295 * log(s_0543 / ic0543) + ep1429_295 * log(s_1429 / ic1429))) + (cell * v0_296 * (1 + ep1333_296 * log(s_1333 / ic1333) + ep1497_296 * log(s_1497 / ic1497) + ep0262_296 * log(s_0262 / ic0262) + ep0543_296 * log(s_0543 / ic0543) + ep1334_296 * log(s_1334 / ic1334))) + (cell * v0_299 * (1 + ep0116_299 * log(s_0116 / ic0116) + ep1333_299 * log(s_1333 / ic1333) + ep1362_299 * log(s_1362 / ic1362) + ep0543_299 * log(s_0543 / ic0543) + ep1334_299 * log(s_1334 / ic1334) + ep1530_299 * log(s_1530 / ic1530) + ep1430_299 * log(s_1430 / ic1430))) + (cell * v0_301 * (1 + ep0555_301 * log(s_0555 / ic0555) + ep1333_301 * log(s_1333 / ic1333) + ep1531_301 * log(s_1531 / ic1531) + ep0395_301 * log(s_0395 / ic0395) + ep0543_301 * log(s_0543 / ic0543) + ep1334_301 * log(s_1334 / ic1334))) + (cell * v0_303 * (1 + ep0555_303 * log(s_0555 / ic0555) + ep0862_303 * log(s_0862 / ic0862) + ep1531_303 * log(s_1531 / ic1531) + ep0395_303 * log(s_0395 / ic0395) + ep0543_303 * log(s_0543 / ic0543) + ep0861_303 * log(s_0861 / ic0861))) + (cell * v0_331 * (1 + ep0467_331 * log(s_0467 / ic0467) + ep0738_331 * log(s_0738 / ic0738) + ep0116_331 * log(s_0116 / ic0116) + ep1018_331 * log(s_1018 / ic1018) + ep1336_331 * log(s_1336 / ic1336) + ep0330_331 * log(s_0330 / ic0330) + ep0454_331 * log(s_0454 / ic0454) + ep0543_331 * log(s_0543 / ic0543) + ep1017_331 * log(s_1017 / ic1017) + ep1335_331 * log(s_1335 / ic1335) + ep0783_331 * log(s_0783 / ic0783))) + (4.0 * cell * v0_359 * (1 + ep1791_359 * log(s_1791 / ic1791) + ep0543_359 * log(s_0543 / ic0543) + ep0565_359 * log(s_0565 / ic0565))) - (cell * v0_116 * (1 + ep0467_116 * log(s_0467 / ic0467) + ep0543_116 * log(s_0543 / ic0543) + ep0451_116 * log(s_0451 / ic0451) + ep0421_116 * log(s_0421 / ic0421) + ep0502_116 * log(s_0502 / ic0502))) - (cell * v0_131 * (1 + ep0467_131 * log(s_0467 / ic0467) + ep0543_131 * log(s_0543 / ic0543) + ep0371_131 * log(s_0371 / ic0371) + ep0421_131 * log(s_0421 / ic0421) + ep0755_131 * log(s_0755 / ic0755) + ep1430_131 * log(s_1430 / ic1430))) - (cell * v0_193 * (1 + ep0543_193 * log(s_0543 / ic0543) + ep0474_193 * log(s_0474 / ic0474))) - (cell * v0_270 * (1 + ep0543_270 * log(s_0543 / ic0543) + ep1484_270 * log(s_1484 / ic1484) + ep1399_270 * log(s_1399 / ic1399) + ep1430_270 * log(s_1430 / ic1430))) - (cell * max(v0_368 * (1 + ep0543_368 * log(s_0543 / ic0543)), zero_flux));
    der(s_0545) = 0.0;
    der(s_0546) = (cell * v0_369 * (1 + ep0548_369 * log(s_0548 / ic0548) + ep0546_369 * log(s_0546 / ic0546))) - (2.5e-05 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0548) = 0.0;
    der(s_0555) = (cell * v0_14 * (1 + ep0282_14 * log(s_0282 / ic0282) + ep0395_14 * log(s_0395 / ic0395) + ep0266_14 * log(s_0266 / ic0266) + ep0555_14 * log(s_0555 / ic0555))) + (cell * v0_47 * (1 + ep1216_47 * log(s_1216 / ic1216) + ep1218_47 * log(s_1218 / ic1218) + ep0543_47 * log(s_0543 / ic0543) + ep0555_47 * log(s_0555 / ic0555) + ep0289_47 * log(s_0289 / ic0289))) + (cell * v0_69 * (1 + ep0395_69 * log(s_0395 / ic0395) + ep0391_69 * log(s_0391 / ic0391) + ep0555_69 * log(s_0555 / ic0555))) + (cell * v0_70 * (1 + ep0395_70 * log(s_0395 / ic0395) + ep0488_70 * log(s_0488 / ic0488) + ep0299_70 * log(s_0299 / ic0299) + ep0555_70 * log(s_0555 / ic0555))) + (cell * v0_71 * (1 + ep0395_71 * log(s_0395 / ic0395) + ep0737_71 * log(s_0737 / ic0737) + ep0295_71 * log(s_0295 / ic0295) + ep0555_71 * log(s_0555 / ic0555))) + (cell * v0_72 * (1 + ep0395_72 * log(s_0395 / ic0395) + ep0790_72 * log(s_0790 / ic0790) + ep0305_72 * log(s_0305 / ic0305) + ep0555_72 * log(s_0555 / ic0555))) + (cell * v0_73 * (1 + ep0395_73 * log(s_0395 / ic0395) + ep0984_73 * log(s_0984 / ic0984) + ep0303_73 * log(s_0303 / ic0303) + ep0555_73 * log(s_0555 / ic0555))) + (cell * v0_74 * (1 + ep0395_74 * log(s_0395 / ic0395) + ep1390_74 * log(s_1390 / ic1390) + ep0293_74 * log(s_0293 / ic0293) + ep0555_74 * log(s_0555 / ic0555))) + (cell * v0_75 * (1 + ep0395_75 * log(s_0395 / ic0395) + ep1632_75 * log(s_1632 / ic1632) + ep0297_75 * log(s_0297 / ic0297) + ep0555_75 * log(s_0555 / ic0555))) + (cell * v0_122 * (1 + ep0395_122 * log(s_0395 / ic0395) + ep1399_122 * log(s_1399 / ic1399) + ep0536_122 * log(s_0536 / ic0536) + ep0555_122 * log(s_0555 / ic0555))) + (cell * v0_130 * (1 + ep0467_130 * log(s_0467 / ic0467) + ep0754_130 * log(s_0754 / ic0754) + ep0421_130 * log(s_0421 / ic0421) + ep0555_130 * log(s_0555 / ic0555))) + (cell * v0_156 * (1 + ep0790_156 * log(s_0790 / ic0790) + ep0555_156 * log(s_0555 / ic0555) + ep0785_156 * log(s_0785 / ic0785))) + (cell * v0_157 * (1 + ep1412_157 * log(s_1412 / ic1412) + ep0555_157 * log(s_0555 / ic0555) + ep0971_157 * log(s_0971 / ic0971))) + (cell * v0_158 * (1 + ep0979_158 * log(s_0979 / ic0979) + ep0555_158 * log(s_0555 / ic0555) + ep0976_158 * log(s_0976 / ic0976))) + (cell * v0_165 * (1 + ep0395_165 * log(s_0395 / ic0395) + ep0653_165 * log(s_0653 / ic0653) + ep1287_165 * log(s_1287 / ic1287) + ep0555_165 * log(s_0555 / ic0555))) + (cell * v0_201 * (1 + ep1113_201 * log(s_1113 / ic1113) + ep1599_201 * log(s_1599 / ic1599) + ep0555_201 * log(s_0555 / ic0555) + ep1367_201 * log(s_1367 / ic1367))) + (cell * v0_230 * (1 + ep0397_230 * log(s_0397 / ic0397) + ep1217_230 * log(s_1217 / ic1217) + ep0555_230 * log(s_0555 / ic0555) + ep1216_230 * log(s_1216 / ic1216))) + (cell * v0_242 * (1 + ep0395_242 * log(s_0395 / ic0395) + ep1095_242 * log(s_1095 / ic1095) + ep1302_242 * log(s_1302 / ic1302) + ep0555_242 * log(s_0555 / ic0555))) + (cell * v0_316 * (1 + ep0395_316 * log(s_0395 / ic0395) + ep1170_316 * log(s_1170 / ic1170) + ep1358_316 * log(s_1358 / ic1358) + ep0555_316 * log(s_0555 / ic0555))) + (cell * v0_328 * (1 + ep1599_328 * log(s_1599 / ic1599) + ep0148_328 * log(s_0148 / ic0148) + ep0555_328 * log(s_0555 / ic0555) + ep1315_328 * log(s_1315 / ic1315))) - (cell * v0_66 * (1 + ep0381_66 * log(s_0381 / ic0381) + ep0555_66 * log(s_0555 / ic0555) + ep1333_66 * log(s_1333 / ic1333) + ep0395_66 * log(s_0395 / ic0395) + ep1334_66 * log(s_1334 / ic1334))) - (cell * v0_183 * (1 + ep1040_183 * log(s_1040 / ic1040) + ep0555_183 * log(s_0555 / ic0555) + ep0395_183 * log(s_0395 / ic0395) + ep0929_183 * log(s_0929 / ic0929))) - (cell * v0_291 * (1 + ep0393_291 * log(s_0393 / ic0393) + ep0555_291 * log(s_0555 / ic0555) + ep0395_291 * log(s_0395 / ic0395) + ep1430_291 * log(s_1430 / ic1430))) - (cell * v0_301 * (1 + ep0555_301 * log(s_0555 / ic0555) + ep1333_301 * log(s_1333 / ic1333) + ep1531_301 * log(s_1531 / ic1531) + ep0395_301 * log(s_0395 / ic0395) + ep0543_301 * log(s_0543 / ic0543) + ep1334_301 * log(s_1334 / ic1334))) - (cell * v0_302 * (1 + ep0555_302 * log(s_0555 / ic0555) + ep1531_302 * log(s_1531 / ic1531) + ep0395_302 * log(s_0395 / ic0395) + ep0867_302 * log(s_0867 / ic0867))) - (cell * v0_303 * (1 + ep0555_303 * log(s_0555 / ic0555) + ep0862_303 * log(s_0862 / ic0862) + ep1531_303 * log(s_1531 / ic1531) + ep0395_303 * log(s_0395 / ic0395) + ep0543_303 * log(s_0543 / ic0543) + ep0861_303 * log(s_0861 / ic0861))) - (cell * v0_321 * (1 + ep0467_321 * log(s_0467 / ic0467) + ep0555_321 * log(s_0555 / ic0555) + ep1595_321 * log(s_1595 / ic1595) + ep0421_321 * log(s_0421 / ic0421) + ep1430_321 * log(s_1430 / ic1430) + ep1599_321 * log(s_1599 / ic1599))) - (0.000576 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0565) = (cell * v0_359 * (1 + ep1791_359 * log(s_1791 / ic1791) + ep0543_359 * log(s_0543 / ic0543) + ep0565_359 * log(s_0565 / ic0565))) - (cell * v0_123 * (1 + ep0565_123 * log(s_0565 / ic0565) + ep1372_123 * log(s_1372 / ic1372) + ep0543_123 * log(s_0543 / ic0543) + ep1512_123 * log(s_1512 / ic1512)));
    der(s_0574) = (cell * v0_28 * (1 + ep0043_28 * log(s_0043 / ic0043) + ep0574_28 * log(s_0574 / ic0574))) - (cell * v0_85 * (1 + ep0574_85 * log(s_0574 / ic0574) + ep0860_85 * log(s_0860 / ic0860) + ep0488_85 * log(s_0488 / ic0488) + ep0859_85 * log(s_0859 / ic0859)));
    der(s_0575) = (cell * v0_124 * (1 + ep0467_124 * log(s_0467 / ic0467) + ep1101_124 * log(s_1101 / ic1101) + ep1792_124 * log(s_1792 / ic1792) + ep0421_124 * log(s_0421 / ic0421) + ep0575_124 * log(s_0575 / ic0575) + ep1095_124 * log(s_1095 / ic1095) + ep1430_124 * log(s_1430 / ic1430))) + (cell * v0_247 * (1 + ep0467_247 * log(s_0467 / ic0467) + ep0510_247 * log(s_0510 / ic0510) + ep0421_247 * log(s_0421 / ic0421) + ep0575_247 * log(s_0575 / ic0575))) - (cell * v0_10 * (1 + ep0194_10 * log(s_0194 / ic0194) + ep0575_10 * log(s_0575 / ic0575) + ep0312_10 * log(s_0312 / ic0312) + ep0783_10 * log(s_0783 / ic0783))) - (cell * v0_26 * (1 + ep0575_26 * log(s_0575 / ic0575) + ep0271_26 * log(s_0271 / ic0271) + ep0542_26 * log(s_0542 / ic0542) + ep0783_26 * log(s_0783 / ic0783))) - (cell * v0_117 * (1 + ep0575_117 * log(s_0575 / ic0575) + ep0075_117 * log(s_0075 / ic0075) + ep0513_117 * log(s_0513 / ic0513) + ep0783_117 * log(s_0783 / ic0783))) - (cell * v0_118 * (1 + ep0575_118 * log(s_0575 / ic0575) + ep0073_118 * log(s_0073 / ic0073) + ep0512_118 * log(s_0512 / ic0512) + ep0783_118 * log(s_0783 / ic0783))) - (cell * v0_276 * (1 + ep0599_276 * log(s_0599 / ic0599) + ep0575_276 * log(s_0575 / ic0575) + ep1083_276 * log(s_1083 / ic1083) + ep1277_276 * log(s_1277 / ic1277) + ep0539_276 * log(s_0539 / ic0539) + ep0783_276 * log(s_0783 / ic0783))) - (cell * v0_309 * (1 + ep0575_309 * log(s_0575 / ic0575) + ep0861_309 * log(s_0861 / ic0861) + ep0731_309 * log(s_0731 / ic0731) + ep0862_309 * log(s_0862 / ic0862))) - (0.1335 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0579) = (cell * v0_113 * (1 + ep1264_113 * log(s_1264 / ic1264) + ep0420_113 * log(s_0420 / ic0420) + ep0454_113 * log(s_0454 / ic0454) + ep0479_113 * log(s_0479 / ic0479) + ep0579_113 * log(s_0579 / ic0579))) + (cell * v0_236 * (1 + ep1261_236 * log(s_1261 / ic1261) + ep0420_236 * log(s_0420 / ic0420) + ep0454_236 * log(s_0454 / ic0454) + ep0579_236 * log(s_0579 / ic0579) + ep1264_236 * log(s_1264 / ic1264))) + (cell * v0_370 * (1 + ep0581_370 * log(s_0581 / ic0581) + ep0579_370 * log(s_0579 / ic0579))) - (cell * v0_238 * (1 + ep0585_238 * log(s_0585 / ic0585) + ep0579_238 * log(s_0579 / ic0579) + ep1260_238 * log(s_1260 / ic1260) + ep1259_238 * log(s_1259 / ic1259) + ep1265_238 * log(s_1265 / ic1265))) - (0.000709 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0581) = 0.0;
    der(s_0585) = (cell * v0_125 * (1 + ep0945_125 * log(s_0945 / ic0945) + ep0585_125 * log(s_0585 / ic0585) + ep0783_125 * log(s_0783 / ic0783))) - (cell * v0_238 * (1 + ep0585_238 * log(s_0585 / ic0585) + ep0579_238 * log(s_0579 / ic0579) + ep1260_238 * log(s_1260 / ic1260) + ep1259_238 * log(s_1259 / ic1259) + ep1265_238 * log(s_1265 / ic1265)));
    der(s_0599) = (cell * v0_260 * (1 + ep0467_260 * log(s_0467 / ic0467) + ep0033_260 * log(s_0033 / ic0033) + ep0599_260 * log(s_0599 / ic0599) + ep0421_260 * log(s_0421 / ic0421))) - (cell * v0_276 * (1 + ep0599_276 * log(s_0599 / ic0599) + ep0575_276 * log(s_0575 / ic0575) + ep1083_276 * log(s_1083 / ic1083) + ep1277_276 * log(s_1277 / ic1277) + ep0539_276 * log(s_0539 / ic0539) + ep0783_276 * log(s_0783 / ic0783)));
    der(s_0600) = (cell * v0_99 * (1 + ep1041_99 * log(s_1041 / ic1041) + ep0600_99 * log(s_0600 / ic0600))) + (cell * v0_240 * (1 + ep1725_240 * log(s_1725 / ic1725) + ep0600_240 * log(s_0600 / ic0600) + ep1719_240 * log(s_1719 / ic1719))) - (2.0 * cell * v0_129 * (1 + ep0600_129 * log(s_0600 / ic0600) + ep0467_129 * log(s_0467 / ic0467) + ep0421_129 * log(s_0421 / ic0421) + ep0603_129 * log(s_0603 / ic0603) + ep1430_129 * log(s_1430 / ic1430)));
    der(s_0603) = (cell * v0_129 * (1 + ep0600_129 * log(s_0600 / ic0600) + ep0467_129 * log(s_0467 / ic0467) + ep0421_129 * log(s_0421 / ic0421) + ep0603_129 * log(s_0603 / ic0603) + ep1430_129 * log(s_1430 / ic1430))) - (cell * v0_354 * (1 + ep0603_354 * log(s_0603 / ic0603) + ep0467_354 * log(s_0467 / ic0467) + ep1752_354 * log(s_1752 / ic1752) + ep0421_354 * log(s_0421 / ic0421) + ep1430_354 * log(s_1430 / ic1430) + ep1755_354 * log(s_1755 / ic1755)));
    der(s_0611) = (cell * v0_102 * (1 + ep0704_102 * log(s_0704 / ic0704) + ep0611_102 * log(s_0611 / ic0611))) - (cell * v0_22 * (1 + ep0611_22 * log(s_0611 / ic0611) + ep1484_22 * log(s_1484 / ic1484) + ep0272_22 * log(s_0272 / ic0272) + ep1430_22 * log(s_1430 / ic1430)));
    der(s_0620) = (cell * v0_204 * (1 + ep1101_204 * log(s_1101 / ic1101) + ep0341_204 * log(s_0341 / ic0341) + ep0343_204 * log(s_0343 / ic0343) + ep0620_204 * log(s_0620 / ic0620) + ep1095_204 * log(s_1095 / ic1095))) - (cell * v0_205 * (1 + ep0620_205 * log(s_0620 / ic0620) + ep0263_205 * log(s_0263 / ic0263)));
    der(s_0621) = (cell * v0_338 * (1 + ep0627_338 * log(s_0627 / ic0627) + ep0913_338 * log(s_0913 / ic0913) + ep0621_338 * log(s_0621 / ic0621) + ep0721_338 * log(s_0721 / ic0721))) - (cell * v0_23 * (1 + ep0621_23 * log(s_0621 / ic0621) + ep1484_23 * log(s_1484 / ic1484) + ep0195_23 * log(s_0195 / ic0195) + ep1430_23 * log(s_1430 / ic1430))) - (cell * v0_154 * (1 + ep0621_154 * log(s_0621 / ic0621) + ep1333_154 * log(s_1333 / ic1333) + ep0331_154 * log(s_0331 / ic0331) + ep1334_154 * log(s_1334 / ic1334))) - (cell * v0_336 * (1 + ep0621_336 * log(s_0621 / ic0621) + ep0627_336 * log(s_0627 / ic0627) + ep0913_336 * log(s_0913 / ic0913) + ep1561_336 * log(s_1561 / ic1561)));
    der(s_0622) = (cell * v0_363 * (1 + ep0657_363 * log(s_0657 / ic0657) + ep0622_363 * log(s_0622 / ic0622))) - (cell * v0_194 * (1 + ep0467_194 * log(s_0467 / ic0467) + ep0622_194 * log(s_0622 / ic0622) + ep0421_194 * log(s_0421 / ic0421) + ep0627_194 * log(s_0627 / ic0627))) - (cell * v0_375 * (1 + ep1484_375 * log(s_1484 / ic1484) + ep0622_375 * log(s_0622 / ic0622) + ep0627_375 * log(s_0627 / ic0627) + ep1531_375 * log(s_1531 / ic1531)));
    der(s_0627) = (cell * v0_167 * (1 + ep0663_167 * log(s_0663 / ic0663) + ep0627_167 * log(s_0627 / ic0627))) + (cell * v0_194 * (1 + ep0467_194 * log(s_0467 / ic0467) + ep0622_194 * log(s_0622 / ic0622) + ep0421_194 * log(s_0421 / ic0421) + ep0627_194 * log(s_0627 / ic0627))) + (cell * v0_375 * (1 + ep1484_375 * log(s_1484 / ic1484) + ep0622_375 * log(s_0622 / ic0622) + ep0627_375 * log(s_0627 / ic0627) + ep1531_375 * log(s_1531 / ic1531))) - (cell * v0_175 * (1 + ep0627_175 * log(s_0627 / ic0627) + ep1101_175 * log(s_1101 / ic1101) + ep0654_175 * log(s_0654 / ic0654) + ep1095_175 * log(s_1095 / ic1095))) - (cell * v0_336 * (1 + ep0621_336 * log(s_0621 / ic0621) + ep0627_336 * log(s_0627 / ic0627) + ep0913_336 * log(s_0913 / ic0913) + ep1561_336 * log(s_1561 / ic1561))) - (cell * v0_338 * (1 + ep0627_338 * log(s_0627 / ic0627) + ep0913_338 * log(s_0913 / ic0913) + ep0621_338 * log(s_0621 / ic0621) + ep0721_338 * log(s_0721 / ic0721)));
    der(s_0653) = (cell * v0_271 * (1 + ep0654_271 * log(s_0654 / ic0654) + ep0653_271 * log(s_0653 / ic0653))) - (cell * v0_165 * (1 + ep0395_165 * log(s_0395 / ic0395) + ep0653_165 * log(s_0653 / ic0653) + ep1287_165 * log(s_1287 / ic1287) + ep0555_165 * log(s_0555 / ic0555)));
    der(s_0654) = (cell * v0_175 * (1 + ep0627_175 * log(s_0627 / ic0627) + ep1101_175 * log(s_1101 / ic1101) + ep0654_175 * log(s_0654 / ic0654) + ep1095_175 * log(s_1095 / ic1095))) - (cell * v0_271 * (1 + ep0654_271 * log(s_0654 / ic0654) + ep0653_271 * log(s_0653 / ic0653)));
    der(s_0657) = (cell * v0_373 * (1 + ep0659_373 * log(s_0659 / ic0659) + ep0657_373 * log(s_0657 / ic0657))) - (cell * v0_195 * (1 + ep0467_195 * log(s_0467 / ic0467) + ep0657_195 * log(s_0657 / ic0657) + ep0421_195 * log(s_0421 / ic0421) + ep0663_195 * log(s_0663 / ic0663))) - (cell * v0_363 * (1 + ep0657_363 * log(s_0657 / ic0657) + ep0622_363 * log(s_0622 / ic0622))) - (cell * v0_374 * (1 + ep1484_374 * log(s_1484 / ic1484) + ep0657_374 * log(s_0657 / ic0657) + ep0663_374 * log(s_0663 / ic0663) + ep1531_374 * log(s_1531 / ic1531)));
    der(s_0659) = 0.0;
    der(s_0663) = (cell * v0_195 * (1 + ep0467_195 * log(s_0467 / ic0467) + ep0657_195 * log(s_0657 / ic0657) + ep0421_195 * log(s_0421 / ic0421) + ep0663_195 * log(s_0663 / ic0663))) + (cell * v0_374 * (1 + ep1484_374 * log(s_1484 / ic1484) + ep0657_374 * log(s_0657 / ic0657) + ep0663_374 * log(s_0663 / ic0663) + ep1531_374 * log(s_1531 / ic1531))) - (cell * v0_166 * (1 + ep0663_166 * log(s_0663 / ic0663) + ep1335_166 * log(s_1335 / ic1335) + ep0370_166 * log(s_0370 / ic0370) + ep1336_166 * log(s_1336 / ic1336))) - (cell * v0_167 * (1 + ep0663_167 * log(s_0663 / ic0663) + ep0627_167 * log(s_0627 / ic0627)));
    der(s_0671) = (cell * v0_170 * (1 + ep1095_170 * log(s_1095 / ic1095) + ep0671_170 * log(s_0671 / ic0671))) - (cell * v0_352 * (1 + ep0467_352 * log(s_0467 / ic0467) + ep0671_352 * log(s_0671 / ic0671) + ep1751_352 * log(s_1751 / ic1751) + ep0421_352 * log(s_0421 / ic0421) + ep1430_352 * log(s_1430 / ic1430) + ep1754_352 * log(s_1754 / ic1754)));
    der(s_0675) = (cell * v0_179 * (1 + ep0467_179 * log(s_0467 / ic0467) + ep0029_179 * log(s_0029 / ic0029) + ep0675_179 * log(s_0675 / ic0675) + ep0421_179 * log(s_0421 / ic0421))) + (cell * v0_274 * (1 + ep0306_274 * log(s_0306 / ic0306) + ep0675_274 * log(s_0675 / ic0675))) - (cell * v0_150 * (1 + ep0675_150 * log(s_0675 / ic0675) + ep1484_150 * log(s_1484 / ic1484)));
    der(s_0704) = (cell * v0_313 * (1 + ep0721_313 * log(s_0721 / ic0721) + ep0704_313 * log(s_0704 / ic0704))) - (cell * v0_18 * (1 + ep0704_18 * log(s_0704 / ic0704) + ep0255_18 * log(s_0255 / ic0255) + ep0867_18 * log(s_0867 / ic0867))) - (cell * v0_102 * (1 + ep0704_102 * log(s_0704 / ic0704) + ep0611_102 * log(s_0611 / ic0611))) - (cell * v0_312 * (1 + ep0704_312 * log(s_0704 / ic0704) + ep0446_312 * log(s_0446 / ic0446)));
    der(s_0721) = (cell * v0_337 * (1 + ep0913_337 * log(s_0913 / ic0913) + ep1561_337 * log(s_1561 / ic1561) + ep0446_337 * log(s_0446 / ic0446) + ep0721_337 * log(s_0721 / ic0721))) + (cell * v0_338 * (1 + ep0627_338 * log(s_0627 / ic0627) + ep0913_338 * log(s_0913 / ic0913) + ep0621_338 * log(s_0621 / ic0621) + ep0721_338 * log(s_0721 / ic0721))) - (cell * v0_313 * (1 + ep0721_313 * log(s_0721 / ic0721) + ep0704_313 * log(s_0704 / ic0704)));
    der(s_0726) = (cell * v0_308 * (1 + ep0467_308 * log(s_0467 / ic0467) + ep0861_308 * log(s_0861 / ic0861) + ep0726_308 * log(s_0726 / ic0726) + ep0862_308 * log(s_0862 / ic0862))) - (0.02617 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0731) = (cell * v0_309 * (1 + ep0575_309 * log(s_0575 / ic0575) + ep0861_309 * log(s_0861 / ic0861) + ep0731_309 * log(s_0731 / ic0731) + ep0862_309 * log(s_0862 / ic0862))) - (0.02702 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0732) = (cell * v0_245 * (1 + ep0467_245 * log(s_0467 / ic0467) + ep1340_245 * log(s_1340 / ic1340) + ep0732_245 * log(s_0732 / ic0732) + ep0783_245 * log(s_0783 / ic0783))) - (cell * v0_244 * (1 + ep0467_244 * log(s_0467 / ic0467) + ep0732_244 * log(s_0732 / ic0732) + ep0451_244 * log(s_0451 / ic0451) + ep0454_244 * log(s_0454 / ic0454) + ep1333_244 * log(s_1333 / ic1333) + ep0783_244 * log(s_0783 / ic0783)));
    der(s_0737) = (cell * v0_86 * (1 + ep1668_86 * log(s_1668 / ic1668) + ep0860_86 * log(s_0860 / ic0860) + ep0737_86 * log(s_0737 / ic0737) + ep0859_86 * log(s_0859 / ic0859))) - (cell * v0_71 * (1 + ep0395_71 * log(s_0395 / ic0395) + ep0737_71 * log(s_0737 / ic0737) + ep0295_71 * log(s_0295 / ic0295) + ep0555_71 * log(s_0555 / ic0555)));
    der(s_0738) = (cell * v0_342 * (1 + ep1552_342 * log(s_1552 / ic1552) + ep1336_342 * log(s_1336 / ic1336) + ep1189_342 * log(s_1189 / ic1189) + ep1407_342 * log(s_1407 / ic1407) + ep0333_342 * log(s_0333 / ic0333) + ep0738_342 * log(s_0738 / ic0738) + ep1141_342 * log(s_1141 / ic1141) + ep1335_342 * log(s_1335 / ic1335))) - (cell * v0_331 * (1 + ep0467_331 * log(s_0467 / ic0467) + ep0738_331 * log(s_0738 / ic0738) + ep0116_331 * log(s_0116 / ic0116) + ep1018_331 * log(s_1018 / ic1018) + ep1336_331 * log(s_1336 / ic1336) + ep0330_331 * log(s_0330 / ic0330) + ep0454_331 * log(s_0454 / ic0454) + ep0543_331 * log(s_0543 / ic0543) + ep1017_331 * log(s_1017 / ic1017) + ep1335_331 * log(s_1335 / ic1335) + ep0783_331 * log(s_0783 / ic0783)));
    der(s_0754) = (cell * v0_259 * (1 + ep0467_259 * log(s_0467 / ic0467) + ep1413_259 * log(s_1413 / ic1413) + ep0754_259 * log(s_0754 / ic0754) + ep0783_259 * log(s_0783 / ic0783))) - (cell * v0_130 * (1 + ep0467_130 * log(s_0467 / ic0467) + ep0754_130 * log(s_0754 / ic0754) + ep0421_130 * log(s_0421 / ic0421) + ep0555_130 * log(s_0555 / ic0555)));
    der(s_0755) = (cell * v0_131 * (1 + ep0467_131 * log(s_0467 / ic0467) + ep0543_131 * log(s_0543 / ic0543) + ep0371_131 * log(s_0371 / ic0371) + ep0421_131 * log(s_0421 / ic0421) + ep0755_131 * log(s_0755 / ic0755) + ep1430_131 * log(s_1430 / ic1430))) - (cell * v0_112 * (1 + ep0378_112 * log(s_0378 / ic0378) + ep1552_112 * log(s_1552 / ic1552) + ep0755_112 * log(s_0755 / ic0755) + ep0377_112 * log(s_0377 / ic0377) + ep0476_112 * log(s_0476 / ic0476) + ep0333_112 * log(s_0333 / ic0333) + ep1141_112 * log(s_1141 / ic1141)));
    der(s_0760) = (cell * v0_310 * (1 + ep0861_310 * log(s_0861 / ic0861) + ep0945_310 * log(s_0945 / ic0945) + ep0760_310 * log(s_0760 / ic0760) + ep0862_310 * log(s_0862 / ic0862))) - (0.02702 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0765) = (cell * v0_391 * (1 + ep0766_391 * log(s_0766 / ic0766) + ep0765_391 * log(s_0765 / ic0765) + ep1430_391 * log(s_1430 / ic1430))) - (cell * v0_140 * (1 + ep0765_140 * log(s_0765 / ic0765) + ep0367_140 * log(s_0367 / ic0367) + ep0936_140 * log(s_0936 / ic0936)));
    der(s_0766) = (cell * v0_141 * (1 + ep0191_141 * log(s_0191 / ic0191) + ep0766_141 * log(s_0766 / ic0766) + ep0783_141 * log(s_0783 / ic0783))) - (cell * v0_391 * (1 + ep0766_391 * log(s_0766 / ic0766) + ep0765_391 * log(s_0765 / ic0765) + ep1430_391 * log(s_1430 / ic1430)));
    der(s_0767) = (cell * v0_144 * (1 + ep0318_144 * log(s_0318 / ic0318) + ep0368_144 * log(s_0368 / ic0368) + ep0767_144 * log(s_0767 / ic0767) + ep0783_144 * log(s_0783 / ic0783))) - (cell * v0_139 * (1 + ep0467_139 * log(s_0467 / ic0467) + ep0767_139 * log(s_0767 / ic0767) + ep1095_139 * log(s_1095 / ic1095) + ep0421_139 * log(s_0421 / ic0421) + ep0372_139 * log(s_0372 / ic0372) + ep1430_139 * log(s_1430 / ic1430)));
    der(s_0768) = (cell * v0_360 * (1 + ep1552_360 * log(s_1552 / ic1552) + ep1791_360 * log(s_1791 / ic1791) + ep1551_360 * log(s_1551 / ic1551) + ep0768_360 * log(s_0768 / ic0768))) - (cell * v0_319 * (1 + ep0768_319 * log(s_0768 / ic0768) + ep1333_319 * log(s_1333 / ic1333) + ep1334_319 * log(s_1334 / ic1334) + ep1578_319 * log(s_1578 / ic1578)));
    der(s_0772) = (cell * v0_339 * (1 + ep0913_339 * log(s_0913 / ic0913) + ep0772_339 * log(s_0772 / ic0772))) - (cell * v0_182 * (1 + ep0772_182 * log(s_0772 / ic0772) + ep1336_182 * log(s_1336 / ic1336) + ep0920_182 * log(s_0920 / ic0920) + ep1335_182 * log(s_1335 / ic1335))) - (cell * v0_304 * (1 + ep0772_304 * log(s_0772 / ic0772) + ep1005_304 * log(s_1005 / ic1005) + ep1430_304 * log(s_1430 / ic1430) + ep1537_304 * log(s_1537 / ic1537)));
    der(s_0779) = (cell * v0_6 * (1 + ep0123_6 * log(s_0123 / ic0123) + ep1334_6 * log(s_1334 / ic1334) + ep0779_6 * log(s_0779 / ic0779) + ep1333_6 * log(s_1333 / ic1333))) - (cell * v0_147 * (1 + ep0779_147 * log(s_0779 / ic0779) + ep1028_147 * log(s_1028 / ic1028) + ep0903_147 * log(s_0903 / ic0903) + ep0783_147 * log(s_0783 / ic0783)));
    der(s_0783) = (cell * v0_10 * (1 + ep0194_10 * log(s_0194 / ic0194) + ep0575_10 * log(s_0575 / ic0575) + ep0312_10 * log(s_0312 / ic0312) + ep0783_10 * log(s_0783 / ic0783))) + (cell * v0_26 * (1 + ep0575_26 * log(s_0575 / ic0575) + ep0271_26 * log(s_0271 / ic0271) + ep0542_26 * log(s_0542 / ic0542) + ep0783_26 * log(s_0783 / ic0783))) + (cell * v0_82 * (1 + ep0397_82 * log(s_0397 / ic0397) + ep0467_82 * log(s_0467 / ic0467) + ep0785_82 * log(s_0785 / ic0785) + ep0454_82 * log(s_0454 / ic0454) + ep0789_82 * log(s_0789 / ic0789) + ep0783_82 * log(s_0783 / ic0783))) + (cell * v0_83 * (1 + ep0397_83 * log(s_0397 / ic0397) + ep0467_83 * log(s_0467 / ic0467) + ep0971_83 * log(s_0971 / ic0971) + ep0454_83 * log(s_0454 / ic0454) + ep1411_83 * log(s_1411 / ic1411) + ep0783_83 * log(s_0783 / ic0783))) + (cell * v0_84 * (1 + ep0397_84 * log(s_0397 / ic0397) + ep0467_84 * log(s_0467 / ic0467) + ep0976_84 * log(s_0976 / ic0976) + ep0454_84 * log(s_0454 / ic0454) + ep0533_84 * log(s_0533 / ic0533) + ep0783_84 * log(s_0783 / ic0783))) + (cell * v0_100 * (1 + ep0457_100 * log(s_0457 / ic0457) + ep0360_100 * log(s_0360 / ic0360) + ep0783_100 * log(s_0783 / ic0783) + ep1278_100 * log(s_1278 / ic1278))) + (cell * v0_104 * (1 + ep1072_104 * log(s_1072 / ic1072) + ep0467_104 * log(s_0467 / ic0467) + ep1081_104 * log(s_1081 / ic1081) + ep0454_104 * log(s_0454 / ic0454) + ep1274_104 * log(s_1274 / ic1274) + ep0783_104 * log(s_0783 / ic0783))) + (cell * v0_105 * (1 + ep1072_105 * log(s_1072 / ic1072) + ep0467_105 * log(s_0467 / ic0467) + ep0451_105 * log(s_0451 / ic0451) + ep0454_105 * log(s_0454 / ic0454) + ep1068_105 * log(s_1068 / ic1068) + ep0783_105 * log(s_0783 / ic0783))) + (cell * v0_111 * (1 + ep0467_111 * log(s_0467 / ic0467) + ep0360_111 * log(s_0360 / ic0360) + ep0783_111 * log(s_0783 / ic0783) + ep0099_111 * log(s_0099 / ic0099))) + (cell * v0_114 * (1 + ep0481_114 * log(s_0481 / ic0481) + ep0945_114 * log(s_0945 / ic0945) + ep0480_114 * log(s_0480 / ic0480) + ep0783_114 * log(s_0783 / ic0783))) + (cell * v0_115 * (1 + ep0479_115 * log(s_0479 / ic0479) + ep0945_115 * log(s_0945 / ic0945) + ep0481_115 * log(s_0481 / ic0481) + ep0783_115 * log(s_0783 / ic0783))) + (cell * v0_117 * (1 + ep0575_117 * log(s_0575 / ic0575) + ep0075_117 * log(s_0075 / ic0075) + ep0513_117 * log(s_0513 / ic0513) + ep0783_117 * log(s_0783 / ic0783))) + (cell * v0_118 * (1 + ep0575_118 * log(s_0575 / ic0575) + ep0073_118 * log(s_0073 / ic0073) + ep0512_118 * log(s_0512 / ic0512) + ep0783_118 * log(s_0783 / ic0783))) + (cell * v0_125 * (1 + ep0945_125 * log(s_0945 / ic0945) + ep0585_125 * log(s_0585 / ic0585) + ep0783_125 * log(s_0783 / ic0783))) + (cell * v0_141 * (1 + ep0191_141 * log(s_0191 / ic0191) + ep0766_141 * log(s_0766 / ic0766) + ep0783_141 * log(s_0783 / ic0783))) + (cell * v0_144 * (1 + ep0318_144 * log(s_0318 / ic0318) + ep0368_144 * log(s_0368 / ic0368) + ep0767_144 * log(s_0767 / ic0767) + ep0783_144 * log(s_0783 / ic0783))) + (cell * v0_147 * (1 + ep0779_147 * log(s_0779 / ic0779) + ep1028_147 * log(s_1028 / ic1028) + ep0903_147 * log(s_0903 / ic0903) + ep0783_147 * log(s_0783 / ic0783))) + (cell * v0_149 * (1 + ep0810_149 * log(s_0810 / ic0810) + ep0807_149 * log(s_0807 / ic0807) + ep0783_149 * log(s_0783 / ic0783))) + (cell * v0_160 * (1 + ep0467_160 * log(s_0467 / ic0467) + ep0863_160 * log(s_0863 / ic0863) + ep0859_160 * log(s_0859 / ic0859) + ep0783_160 * log(s_0783 / ic0783))) + (cell * v0_164 * (1 + ep0903_164 * log(s_0903 / ic0903) + ep1028_164 * log(s_1028 / ic1028) + ep0826_164 * log(s_0826 / ic0826) + ep0783_164 * log(s_0783 / ic0783))) + (cell * v0_173 * (1 + ep1101_173 * log(s_1101 / ic1101) + ep0360_173 * log(s_0360 / ic0360) + ep1095_173 * log(s_1095 / ic1095) + ep0783_173 * log(s_0783 / ic0783) + ep0361_173 * log(s_0361 / ic0361))) + (cell * v0_177 * (1 + ep0467_177 * log(s_0467 / ic0467) + ep1095_177 * log(s_1095 / ic1095) + ep1690_177 * log(s_1690 / ic1690) + ep0454_177 * log(s_0454 / ic0454) + ep1105_177 * log(s_1105 / ic1105) + ep0783_177 * log(s_0783 / ic0783))) + (cell * v0_189 * (1 + ep0467_189 * log(s_0467 / ic0467) + ep1101_189 * log(s_1101 / ic1101) + ep1799_189 * log(s_1799 / ic1799) + ep0454_189 * log(s_0454 / ic0454) + ep1095_189 * log(s_1095 / ic1095) + ep0942_189 * log(s_0942 / ic0942) + ep0783_189 * log(s_0783 / ic0783))) + (cell * v0_191 * (1 + ep0945_191 * log(s_0945 / ic0945) + ep0160_191 * log(s_0160 / ic0160) + ep0867_191 * log(s_0867 / ic0867) + ep0783_191 * log(s_0783 / ic0783))) + (cell * v0_202 * (1 + ep0325_202 * log(s_0325 / ic0325) + ep0435_202 * log(s_0435 / ic0435) + ep0283_202 * log(s_0283 / ic0283) + ep0783_202 * log(s_0783 / ic0783))) + (cell * v0_232 * (1 + ep0467_232 * log(s_0467 / ic0467) + ep1141_232 * log(s_1141 / ic1141) + ep1552_232 * log(s_1552 / ic1552) + ep1430_232 * log(s_1430 / ic1430) + ep0783_232 * log(s_0783 / ic0783))) + (cell * v0_237 * (1 + ep0467_237 * log(s_0467 / ic0467) + ep1265_237 * log(s_1265 / ic1265) + ep0420_237 * log(s_0420 / ic0420) + ep0783_237 * log(s_0783 / ic0783))) + (cell * v0_239 * (1 + ep0467_239 * log(s_0467 / ic0467) + ep1259_239 * log(s_1259 / ic1259) + ep1258_239 * log(s_1258 / ic1258) + ep0783_239 * log(s_0783 / ic0783))) + (cell * v0_244 * (1 + ep0467_244 * log(s_0467 / ic0467) + ep0732_244 * log(s_0732 / ic0732) + ep0451_244 * log(s_0451 / ic0451) + ep0454_244 * log(s_0454 / ic0454) + ep1333_244 * log(s_1333 / ic1333) + ep0783_244 * log(s_0783 / ic0783))) + (cell * v0_245 * (1 + ep0467_245 * log(s_0467 / ic0467) + ep1340_245 * log(s_1340 / ic1340) + ep0732_245 * log(s_0732 / ic0732) + ep0783_245 * log(s_0783 / ic0783))) + (cell * v0_246 * (1 + ep0360_246 * log(s_0360 / ic0360) + ep1537_246 * log(s_1537 / ic1537) + ep0543_246 * log(s_0543 / ic0543) + ep1340_246 * log(s_1340 / ic1340) + ep0783_246 * log(s_0783 / ic0783))) + (5.0 * cell * v0_254 * (1 + ep0826_254 * log(s_0826 / ic0826) + ep1028_254 * log(s_1028 / ic1028) + ep0435_254 * log(s_0435 / ic0435) + ep0783_254 * log(s_0783 / ic0783))) + (cell * v0_257 * (1 + ep1394_257 * log(s_1394 / ic1394) + ep0360_257 * log(s_0360 / ic0360) + ep1397_257 * log(s_1397 / ic1397) + ep0783_257 * log(s_0783 / ic0783))) + (cell * v0_259 * (1 + ep0467_259 * log(s_0467 / ic0467) + ep1413_259 * log(s_1413 / ic1413) + ep0754_259 * log(s_0754 / ic0754) + ep0783_259 * log(s_0783 / ic0783))) + (cell * v0_261 * (1 + ep0470_261 * log(s_0470 / ic0470) + ep0467_261 * log(s_0467 / ic0467) + ep0032_261 * log(s_0032 / ic0032) + ep0454_261 * log(s_0454 / ic0454) + ep0033_261 * log(s_0033 / ic0033) + ep0783_261 * log(s_0783 / ic0783))) + (cell * v0_276 * (1 + ep0599_276 * log(s_0599 / ic0599) + ep0575_276 * log(s_0575 / ic0575) + ep1083_276 * log(s_1083 / ic1083) + ep1277_276 * log(s_1277 / ic1277) + ep0539_276 * log(s_0539 / ic0539) + ep0783_276 * log(s_0783 / ic0783))) + (cell * v0_280 * (1 + ep0099_280 * log(s_0099 / ic0099) + ep0783_280 * log(s_0783 / ic0783) + ep0098_280 * log(s_0098 / ic0098))) + (cell * v0_324 * (1 + ep0467_324 * log(s_0467 / ic0467) + ep0945_324 * log(s_0945 / ic0945) + ep1609_324 * log(s_1609 / ic1609) + ep0412_324 * log(s_0412 / ic0412) + ep0896_324 * log(s_0896 / ic0896) + ep1430_324 * log(s_1430 / ic1430) + ep0783_324 * log(s_0783 / ic0783))) + (cell * v0_329 * (1 + ep0218_329 * log(s_0218 / ic0218) + ep0330_329 * log(s_0330 / ic0330) + ep0783_329 * log(s_0783 / ic0783) + ep1643_329 * log(s_1643 / ic1643))) + (cell * v0_331 * (1 + ep0467_331 * log(s_0467 / ic0467) + ep0738_331 * log(s_0738 / ic0738) + ep0116_331 * log(s_0116 / ic0116) + ep1018_331 * log(s_1018 / ic1018) + ep1336_331 * log(s_1336 / ic1336) + ep0330_331 * log(s_0330 / ic0330) + ep0454_331 * log(s_0454 / ic0454) + ep0543_331 * log(s_0543 / ic0543) + ep1017_331 * log(s_1017 / ic1017) + ep1335_331 * log(s_1335 / ic1335) + ep0783_331 * log(s_0783 / ic0783))) + (cell * v0_349 * (1 + ep1287_349 * log(s_1287 / ic1287) + ep1792_349 * log(s_1792 / ic1792) + ep0783_349 * log(s_0783 / ic0783) + ep1745_349 * log(s_1745 / ic1745))) + (8.0 * cell * v0_357 * (1 + ep0826_357 * log(s_0826 / ic0826) + ep1028_357 * log(s_1028 / ic1028) + ep0783_357 * log(s_0783 / ic0783) + ep1765_357 * log(s_1765 / ic1765))) + (0.7739 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux)) - (cell * v0_293 * (1 + ep0421_293 * log(s_0421 / ic0421) + ep0783_293 * log(s_0783 / ic0783) + ep0467_293 * log(s_0467 / ic0467) + ep1430_293 * log(s_1430 / ic1430)));
    der(s_0785) = (cell * v0_156 * (1 + ep0790_156 * log(s_0790 / ic0790) + ep0555_156 * log(s_0555 / ic0555) + ep0785_156 * log(s_0785 / ic0785))) - (cell * v0_82 * (1 + ep0397_82 * log(s_0397 / ic0397) + ep0467_82 * log(s_0467 / ic0467) + ep0785_82 * log(s_0785 / ic0785) + ep0454_82 * log(s_0454 / ic0454) + ep0789_82 * log(s_0789 / ic0789) + ep0783_82 * log(s_0783 / ic0783)));
    der(s_0789) = (cell * v0_82 * (1 + ep0397_82 * log(s_0397 / ic0397) + ep0467_82 * log(s_0467 / ic0467) + ep0785_82 * log(s_0785 / ic0785) + ep0454_82 * log(s_0454 / ic0454) + ep0789_82 * log(s_0789 / ic0789) + ep0783_82 * log(s_0783 / ic0783))) - (cell * v0_52 * (1 + ep0789_52 * log(s_0789 / ic0789) + ep1216_52 * log(s_1216 / ic1216) + ep0304_52 * log(s_0304 / ic0304) + ep0397_52 * log(s_0397 / ic0397) + ep0543_52 * log(s_0543 / ic0543)));
    der(s_0790) = (cell * v0_87 * (1 + ep1670_87 * log(s_1670 / ic1670) + ep0860_87 * log(s_0860 / ic0860) + ep0790_87 * log(s_0790 / ic0790) + ep0859_87 * log(s_0859 / ic0859))) - (cell * v0_72 * (1 + ep0395_72 * log(s_0395 / ic0395) + ep0790_72 * log(s_0790 / ic0790) + ep0305_72 * log(s_0305 / ic0305) + ep0555_72 * log(s_0555 / ic0555))) - (cell * v0_156 * (1 + ep0790_156 * log(s_0790 / ic0790) + ep0555_156 * log(s_0555 / ic0555) + ep0785_156 * log(s_0785 / ic0785)));
    der(s_0795) = (cell * v0_148 * (1 + ep0467_148 * log(s_0467 / ic0467) + ep0802_148 * log(s_0802 / ic0802) + ep0421_148 * log(s_0421 / ic0421) + ep0795_148 * log(s_0795 / ic0795))) - (cell * v0_248 * (1 + ep0467_248 * log(s_0467 / ic0467) + ep0795_248 * log(s_0795 / ic0795) + ep0421_248 * log(s_0421 / ic0421) + ep0805_248 * log(s_0805 / ic0805)));
    der(s_0802) = (cell * v0_335 * (1 + ep0807_335 * log(s_0807 / ic0807) + ep0336_335 * log(s_0336 / ic0336) + ep0372_335 * log(s_0372 / ic0372) + ep0802_335 * log(s_0802 / ic0802))) - (cell * v0_148 * (1 + ep0467_148 * log(s_0467 / ic0467) + ep0802_148 * log(s_0802 / ic0802) + ep0421_148 * log(s_0421 / ic0421) + ep0795_148 * log(s_0795 / ic0795)));
    der(s_0805) = (cell * v0_248 * (1 + ep0467_248 * log(s_0467 / ic0467) + ep0795_248 * log(s_0795 / ic0795) + ep0421_248 * log(s_0421 / ic0421) + ep0805_248 * log(s_0805 / ic0805))) - (0.02617 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0807) = (cell * v0_149 * (1 + ep0810_149 * log(s_0810 / ic0810) + ep0807_149 * log(s_0807 / ic0807) + ep0783_149 * log(s_0783 / ic0783))) - (cell * v0_335 * (1 + ep0807_335 * log(s_0807 / ic0807) + ep0336_335 * log(s_0336 / ic0336) + ep0372_335 * log(s_0372 / ic0372) + ep0802_335 * log(s_0802 / ic0802)));
    der(s_0810) = (cell * v0_311 * (1 + ep0861_311 * log(s_0861 / ic0861) + ep1792_311 * log(s_1792 / ic1792) + ep0810_311 * log(s_0810 / ic0810) + ep0862_311 * log(s_0862 / ic0862))) - (cell * v0_149 * (1 + ep0810_149 * log(s_0810 / ic0810) + ep0807_149 * log(s_0807 / ic0807) + ep0783_149 * log(s_0783 / ic0783)));
    der(s_0812) = (cell * v0_45 * (1 + ep0276_45 * log(s_0276 / ic0276) + ep0812_45 * log(s_0812 / ic0812))) - (cell * v0_151 * (1 + ep0812_151 * log(s_0812 / ic0812) + ep1336_151 * log(s_1336 / ic1336) + ep0910_151 * log(s_0910 / ic0910) + ep1335_151 * log(s_1335 / ic1335)));
    der(s_0813) = (cell * v0_48 * (1 + ep0277_48 * log(s_0277 / ic0277) + ep0813_48 * log(s_0813 / ic0813))) - (cell * v0_152 * (1 + ep0813_152 * log(s_0813 / ic0813) + ep1336_152 * log(s_1336 / ic1336) + ep1335_152 * log(s_1335 / ic1335) + ep1492_152 * log(s_1492 / ic1492)));
    der(s_0826) = (cell * v0_164 * (1 + ep0903_164 * log(s_0903 / ic0903) + ep1028_164 * log(s_1028 / ic1028) + ep0826_164 * log(s_0826 / ic0826) + ep0783_164 * log(s_0783 / ic0783))) - (cell * v0_254 * (1 + ep0826_254 * log(s_0826 / ic0826) + ep1028_254 * log(s_1028 / ic1028) + ep0435_254 * log(s_0435 / ic0435) + ep0783_254 * log(s_0783 / ic0783))) - (cell * v0_357 * (1 + ep0826_357 * log(s_0826 / ic0826) + ep1028_357 * log(s_1028 / ic1028) + ep0783_357 * log(s_0783 / ic0783) + ep1765_357 * log(s_1765 / ic1765)));
    der(s_0838) = (cell * v0_376 * (1 + ep0840_376 * log(s_0840 / ic0840) + ep0838_376 * log(s_0838 / ic0838))) - (cell * v0_159 * (1 + ep0838_159 * log(s_0838 / ic0838) + ep1511_159 * log(s_1511 / ic1511) + ep1508_159 * log(s_1508 / ic1508))) - (2.0 * cell * v0_210 * (1 + ep0860_210 * log(s_0860 / ic0860) + ep0838_210 * log(s_0838 / ic0838) + ep1018_210 * log(s_1018 / ic1018) + ep1019_210 * log(s_1019 / ic1019) + ep0859_210 * log(s_0859 / ic0859) + ep1017_210 * log(s_1017 / ic1017) + ep1020_210 * log(s_1020 / ic1020))) - (2.0 * cell * v0_211 * (1 + ep0860_211 * log(s_0860 / ic0860) + ep0838_211 * log(s_0838 / ic0838) + ep1018_211 * log(s_1018 / ic1018) + ep1020_211 * log(s_1020 / ic1020) + ep0859_211 * log(s_0859 / ic0859) + ep1017_211 * log(s_1017 / ic1017) + ep1022_211 * log(s_1022 / ic1022))) - (cell * v0_320 * (1 + ep0838_320 * log(s_0838 / ic0838) + ep1578_320 * log(s_1578 / ic1578) + ep1577_320 * log(s_1577 / ic1577))) - (0.006715 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0840) = 0.0;
    der(s_0841) = (cell * v0_377 * (1 + ep0843_377 * log(s_0843 / ic0843) + ep0841_377 * log(s_0841 / ic0841))) - (0.007808 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0843) = 0.0;
    der(s_0859) = (cell * v0_85 * (1 + ep0574_85 * log(s_0574 / ic0574) + ep0860_85 * log(s_0860 / ic0860) + ep0488_85 * log(s_0488 / ic0488) + ep0859_85 * log(s_0859 / ic0859))) + (cell * v0_86 * (1 + ep1668_86 * log(s_1668 / ic1668) + ep0860_86 * log(s_0860 / ic0860) + ep0737_86 * log(s_0737 / ic0737) + ep0859_86 * log(s_0859 / ic0859))) + (cell * v0_87 * (1 + ep1670_87 * log(s_1670 / ic1670) + ep0860_87 * log(s_0860 / ic0860) + ep0790_87 * log(s_0790 / ic0790) + ep0859_87 * log(s_0859 / ic0859))) + (cell * v0_88 * (1 + ep0860_88 * log(s_0860 / ic0860) + ep1674_88 * log(s_1674 / ic1674) + ep0859_88 * log(s_0859 / ic0859) + ep1412_88 * log(s_1412 / ic1412))) + (cell * v0_89 * (1 + ep0860_89 * log(s_0860 / ic0860) + ep1672_89 * log(s_1672 / ic1672) + ep0859_89 * log(s_0859 / ic0859) + ep0984_89 * log(s_0984 / ic0984))) + (cell * v0_90 * (1 + ep0860_90 * log(s_0860 / ic0860) + ep1676_90 * log(s_1676 / ic1676) + ep0859_90 * log(s_0859 / ic0859) + ep1390_90 * log(s_1390 / ic1390))) + (cell * v0_91 * (1 + ep0860_91 * log(s_0860 / ic0860) + ep1680_91 * log(s_1680 / ic1680) + ep0859_91 * log(s_0859 / ic0859) + ep1632_91 * log(s_1632 / ic1632))) + (cell * v0_160 * (1 + ep0467_160 * log(s_0467 / ic0467) + ep0863_160 * log(s_0863 / ic0863) + ep0859_160 * log(s_0859 / ic0859) + ep0783_160 * log(s_0783 / ic0783))) + (cell * v0_210 * (1 + ep0860_210 * log(s_0860 / ic0860) + ep0838_210 * log(s_0838 / ic0838) + ep1018_210 * log(s_1018 / ic1018) + ep1019_210 * log(s_1019 / ic1019) + ep0859_210 * log(s_0859 / ic0859) + ep1017_210 * log(s_1017 / ic1017) + ep1020_210 * log(s_1020 / ic1020))) + (cell * v0_211 * (1 + ep0860_211 * log(s_0860 / ic0860) + ep0838_211 * log(s_0838 / ic0838) + ep1018_211 * log(s_1018 / ic1018) + ep1020_211 * log(s_1020 / ic1020) + ep0859_211 * log(s_0859 / ic0859) + ep1017_211 * log(s_1017 / ic1017) + ep1022_211 * log(s_1022 / ic1022))) + (cell * v0_213 * (1 + ep0860_213 * log(s_0860 / ic0860) + ep1022_213 * log(s_1022 / ic1022) + ep0859_213 * log(s_0859 / ic0859) + ep1021_213 * log(s_1021 / ic1021))) - (cell * v0_155 * (1 + ep0859_155 * log(s_0859 / ic0859) + ep1334_155 * log(s_1334 / ic1334) + ep0860_155 * log(s_0860 / ic0860) + ep1333_155 * log(s_1333 / ic1333))) - (0.000223 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0860) = (cell * v0_155 * (1 + ep0859_155 * log(s_0859 / ic0859) + ep1334_155 * log(s_1334 / ic1334) + ep0860_155 * log(s_0860 / ic0860) + ep1333_155 * log(s_1333 / ic1333))) - (cell * v0_85 * (1 + ep0574_85 * log(s_0574 / ic0574) + ep0860_85 * log(s_0860 / ic0860) + ep0488_85 * log(s_0488 / ic0488) + ep0859_85 * log(s_0859 / ic0859))) - (cell * v0_86 * (1 + ep1668_86 * log(s_1668 / ic1668) + ep0860_86 * log(s_0860 / ic0860) + ep0737_86 * log(s_0737 / ic0737) + ep0859_86 * log(s_0859 / ic0859))) - (cell * v0_87 * (1 + ep1670_87 * log(s_1670 / ic1670) + ep0860_87 * log(s_0860 / ic0860) + ep0790_87 * log(s_0790 / ic0790) + ep0859_87 * log(s_0859 / ic0859))) - (cell * v0_88 * (1 + ep0860_88 * log(s_0860 / ic0860) + ep1674_88 * log(s_1674 / ic1674) + ep0859_88 * log(s_0859 / ic0859) + ep1412_88 * log(s_1412 / ic1412))) - (cell * v0_89 * (1 + ep0860_89 * log(s_0860 / ic0860) + ep1672_89 * log(s_1672 / ic1672) + ep0859_89 * log(s_0859 / ic0859) + ep0984_89 * log(s_0984 / ic0984))) - (cell * v0_90 * (1 + ep0860_90 * log(s_0860 / ic0860) + ep1676_90 * log(s_1676 / ic1676) + ep0859_90 * log(s_0859 / ic0859) + ep1390_90 * log(s_1390 / ic1390))) - (cell * v0_91 * (1 + ep0860_91 * log(s_0860 / ic0860) + ep1680_91 * log(s_1680 / ic1680) + ep0859_91 * log(s_0859 / ic0859) + ep1632_91 * log(s_1632 / ic1632))) - (cell * v0_210 * (1 + ep0860_210 * log(s_0860 / ic0860) + ep0838_210 * log(s_0838 / ic0838) + ep1018_210 * log(s_1018 / ic1018) + ep1019_210 * log(s_1019 / ic1019) + ep0859_210 * log(s_0859 / ic0859) + ep1017_210 * log(s_1017 / ic1017) + ep1020_210 * log(s_1020 / ic1020))) - (cell * v0_211 * (1 + ep0860_211 * log(s_0860 / ic0860) + ep0838_211 * log(s_0838 / ic0838) + ep1018_211 * log(s_1018 / ic1018) + ep1020_211 * log(s_1020 / ic1020) + ep0859_211 * log(s_0859 / ic0859) + ep1017_211 * log(s_1017 / ic1017) + ep1022_211 * log(s_1022 / ic1022))) - (cell * v0_213 * (1 + ep0860_213 * log(s_0860 / ic0860) + ep1022_213 * log(s_1022 / ic1022) + ep0859_213 * log(s_0859 / ic0859) + ep1021_213 * log(s_1021 / ic1021)));
    der(s_0861) = (2.0 * cell * v0_303 * (1 + ep0555_303 * log(s_0555 / ic0555) + ep0862_303 * log(s_0862 / ic0862) + ep1531_303 * log(s_1531 / ic1531) + ep0395_303 * log(s_0395 / ic0395) + ep0543_303 * log(s_0543 / ic0543) + ep0861_303 * log(s_0861 / ic0861))) - (2.0 * cell * v0_16 * (1 + ep0193_16 * log(s_0193 / ic0193) + ep0861_16 * log(s_0861 / ic0861) + ep0862_16 * log(s_0862 / ic0862) + ep0123_16 * log(s_0123 / ic0123))) - (2.0 * cell * v0_308 * (1 + ep0467_308 * log(s_0467 / ic0467) + ep0861_308 * log(s_0861 / ic0861) + ep0726_308 * log(s_0726 / ic0726) + ep0862_308 * log(s_0862 / ic0862))) - (2.0 * cell * v0_309 * (1 + ep0575_309 * log(s_0575 / ic0575) + ep0861_309 * log(s_0861 / ic0861) + ep0731_309 * log(s_0731 / ic0731) + ep0862_309 * log(s_0862 / ic0862))) - (2.0 * cell * v0_310 * (1 + ep0861_310 * log(s_0861 / ic0861) + ep0945_310 * log(s_0945 / ic0945) + ep0760_310 * log(s_0760 / ic0760) + ep0862_310 * log(s_0862 / ic0862))) - (2.0 * cell * v0_311 * (1 + ep0861_311 * log(s_0861 / ic0861) + ep1792_311 * log(s_1792 / ic1792) + ep0810_311 * log(s_0810 / ic0810) + ep0862_311 * log(s_0862 / ic0862)));
    der(s_0862) = (2.0 * cell * v0_16 * (1 + ep0193_16 * log(s_0193 / ic0193) + ep0861_16 * log(s_0861 / ic0861) + ep0862_16 * log(s_0862 / ic0862) + ep0123_16 * log(s_0123 / ic0123))) + (2.0 * cell * v0_308 * (1 + ep0467_308 * log(s_0467 / ic0467) + ep0861_308 * log(s_0861 / ic0861) + ep0726_308 * log(s_0726 / ic0726) + ep0862_308 * log(s_0862 / ic0862))) + (2.0 * cell * v0_309 * (1 + ep0575_309 * log(s_0575 / ic0575) + ep0861_309 * log(s_0861 / ic0861) + ep0731_309 * log(s_0731 / ic0731) + ep0862_309 * log(s_0862 / ic0862))) + (2.0 * cell * v0_310 * (1 + ep0861_310 * log(s_0861 / ic0861) + ep0945_310 * log(s_0945 / ic0945) + ep0760_310 * log(s_0760 / ic0760) + ep0862_310 * log(s_0862 / ic0862))) + (2.0 * cell * v0_311 * (1 + ep0861_311 * log(s_0861 / ic0861) + ep1792_311 * log(s_1792 / ic1792) + ep0810_311 * log(s_0810 / ic0810) + ep0862_311 * log(s_0862 / ic0862))) - (2.0 * cell * v0_303 * (1 + ep0555_303 * log(s_0555 / ic0555) + ep0862_303 * log(s_0862 / ic0862) + ep1531_303 * log(s_1531 / ic1531) + ep0395_303 * log(s_0395 / ic0395) + ep0543_303 * log(s_0543 / ic0543) + ep0861_303 * log(s_0861 / ic0861)));
    der(s_0863) = (cell * v0_305 * (1 + ep0467_305 * log(s_0467 / ic0467) + ep1546_305 * log(s_1546 / ic1546) + ep0421_305 * log(s_0421 / ic0421) + ep0863_305 * log(s_0863 / ic0863))) - (cell * v0_160 * (1 + ep0467_160 * log(s_0467 / ic0467) + ep0863_160 * log(s_0863 / ic0863) + ep0859_160 * log(s_0859 / ic0859) + ep0783_160 * log(s_0783 / ic0783)));
    der(s_0867) = (cell * v0_18 * (1 + ep0704_18 * log(s_0704 / ic0704) + ep0255_18 * log(s_0255 / ic0255) + ep0867_18 * log(s_0867 / ic0867))) + (2.0 * cell * v0_56 * (1 + ep0342_56 * log(s_0342 / ic0342) + ep1333_56 * log(s_1333 / ic1333) + ep0313_56 * log(s_0313 / ic0313) + ep0867_56 * log(s_0867 / ic0867) + ep1334_56 * log(s_1334 / ic1334))) + (cell * v0_190 * (1 + ep0945_190 * log(s_0945 / ic0945) + ep0191_190 * log(s_0191 / ic0191) + ep0867_190 * log(s_0867 / ic0867))) + (cell * v0_191 * (1 + ep0945_191 * log(s_0945 / ic0945) + ep0160_191 * log(s_0160 / ic0160) + ep0867_191 * log(s_0867 / ic0867) + ep0783_191 * log(s_0783 / ic0783))) + (cell * v0_302 * (1 + ep0555_302 * log(s_0555 / ic0555) + ep1531_302 * log(s_1531 / ic1531) + ep0395_302 * log(s_0395 / ic0395) + ep0867_302 * log(s_0867 / ic0867))) - (cell * v0_161 * (1 + ep0467_161 * log(s_0467 / ic0467) + ep0867_161 * log(s_0867 / ic0867) + ep0337_161 * log(s_0337 / ic0337) + ep0133_161 * log(s_0133 / ic0133) + ep0421_161 * log(s_0421 / ic0421) + ep1430_161 * log(s_1430 / ic1430))) - (cell * v0_163 * (1 + ep0467_163 * log(s_0467 / ic0467) + ep0867_163 * log(s_0867 / ic0867) + ep1318_163 * log(s_1318 / ic1318) + ep0421_163 * log(s_0421 / ic0421) + ep1322_163 * log(s_1322 / ic1322) + ep1430_163 * log(s_1430 / ic1430)));
    der(s_0875) = (cell * v0_95 * (1 + ep0040_95 * log(s_0040 / ic0040) + ep0343_95 * log(s_0343 / ic0343) + ep0875_95 * log(s_0875 / ic0875))) + (cell * v0_97 * (1 + ep1327_97 * log(s_1327 / ic1327) + ep0454_97 * log(s_0454 / ic0454) + ep0875_97 * log(s_0875 / ic0875))) + (cell * v0_103 * (1 + ep1274_103 * log(s_1274 / ic1274) + ep1061_103 * log(s_1061 / ic1061) + ep0875_103 * log(s_0875 / ic0875))) - (cell * v0_162 * (1 + ep0875_162 * log(s_0875 / ic0875) + ep1138_162 * log(s_1138 / ic1138)));
    der(s_0896) = (cell * v0_96 * (1 + ep1072_96 * log(s_1072 / ic1072) + ep0945_96 * log(s_0945 / ic0945) + ep1006_96 * log(s_1006 / ic1006) + ep1327_96 * log(s_1327 / ic1327) + ep0896_96 * log(s_0896 / ic0896) + ep1430_96 * log(s_1430 / ic1430))) + (cell * v0_192 * (1 + ep0467_192 * log(s_0467 / ic0467) + ep0942_192 * log(s_0942 / ic0942) + ep0421_192 * log(s_0421 / ic0421) + ep0896_192 * log(s_0896 / ic0896))) + (cell * v0_324 * (1 + ep0467_324 * log(s_0467 / ic0467) + ep0945_324 * log(s_0945 / ic0945) + ep1609_324 * log(s_1609 / ic1609) + ep0412_324 * log(s_0412 / ic0412) + ep0896_324 * log(s_0896 / ic0896) + ep1430_324 * log(s_1430 / ic1430) + ep0783_324 * log(s_0783 / ic0783))) - (cell * v0_249 * (1 + ep0467_249 * log(s_0467 / ic0467) + ep0896_249 * log(s_0896 / ic0896) + ep0421_249 * log(s_0421 / ic0421) + ep0945_249 * log(s_0945 / ic0945)));
    der(s_0903) = (cell * v0_147 * (1 + ep0779_147 * log(s_0779 / ic0779) + ep1028_147 * log(s_1028 / ic1028) + ep0903_147 * log(s_0903 / ic0903) + ep0783_147 * log(s_0783 / ic0783))) - (cell * v0_164 * (1 + ep0903_164 * log(s_0903 / ic0903) + ep1028_164 * log(s_1028 / ic1028) + ep0826_164 * log(s_0826 / ic0826) + ep0783_164 * log(s_0783 / ic0783)));
    der(s_0910) = (cell * v0_151 * (1 + ep0812_151 * log(s_0812 / ic0812) + ep1336_151 * log(s_1336 / ic1336) + ep0910_151 * log(s_0910 / ic0910) + ep1335_151 * log(s_1335 / ic1335))) - (cell * v0_50 * (1 + ep0910_50 * log(s_0910 / ic0910) + ep1216_50 * log(s_1216 / ic1216) + ep0397_50 * log(s_0397 / ic0397) + ep0543_50 * log(s_0543 / ic0543) + ep0290_50 * log(s_0290 / ic0290)));
    der(s_0913) = (cell * v0_11 * (1 + ep0201_11 * log(s_0201 / ic0201) + ep0913_11 * log(s_0913 / ic0913) + ep1531_11 * log(s_1531 / ic1531))) + (cell * v0_336 * (1 + ep0621_336 * log(s_0621 / ic0621) + ep0627_336 * log(s_0627 / ic0627) + ep0913_336 * log(s_0913 / ic0913) + ep1561_336 * log(s_1561 / ic1561))) + (cell * v0_340 * (1 + ep0493_340 * log(s_0493 / ic0493) + ep0913_340 * log(s_0913 / ic0913) + ep1009_340 * log(s_1009 / ic1009))) - (cell * v0_2 * (1 + ep0913_2 * log(s_0913 / ic0913) + ep1531_2 * log(s_1531 / ic1531) + ep0543_2 * log(s_0543 / ic0543) + ep0116_2 * log(s_0116 / ic0116))) - (cell * v0_178 * (1 + ep0913_178 * log(s_0913 / ic0913) + ep1333_178 * log(s_1333 / ic1333) + ep1430_178 * log(s_1430 / ic1430) + ep0307_178 * log(s_0307 / ic0307) + ep1334_178 * log(s_1334 / ic1334))) - (cell * v0_337 * (1 + ep0913_337 * log(s_0913 / ic0913) + ep1561_337 * log(s_1561 / ic1561) + ep0446_337 * log(s_0446 / ic0446) + ep0721_337 * log(s_0721 / ic0721))) - (cell * v0_338 * (1 + ep0627_338 * log(s_0627 / ic0627) + ep0913_338 * log(s_0913 / ic0913) + ep0621_338 * log(s_0621 / ic0621) + ep0721_338 * log(s_0721 / ic0721))) - (cell * v0_339 * (1 + ep0913_339 * log(s_0913 / ic0913) + ep0772_339 * log(s_0772 / ic0772)));
    der(s_0920) = (cell * v0_182 * (1 + ep0772_182 * log(s_0772 / ic0772) + ep1336_182 * log(s_1336 / ic1336) + ep0920_182 * log(s_0920 / ic0920) + ep1335_182 * log(s_1335 / ic1335))) - (cell * v0_180 * (1 + ep0920_180 * log(s_0920 / ic0920) + ep1411_180 * log(s_1411 / ic1411) + ep0121_180 * log(s_0121 / ic0121) + ep0397_180 * log(s_0397 / ic0397))) - (cell * v0_181 * (1 + ep0920_181 * log(s_0920 / ic0920) + ep0533_181 * log(s_0533 / ic0533) + ep0119_181 * log(s_0119 / ic0119) + ep0397_181 * log(s_0397 / ic0397)));
    der(s_0929) = (cell * v0_183 * (1 + ep1040_183 * log(s_1040 / ic1040) + ep0555_183 * log(s_0555 / ic0555) + ep0395_183 * log(s_0395 / ic0395) + ep0929_183 * log(s_0929 / ic0929))) + (cell * v0_184 * (1 + ep1170_184 * log(s_1170 / ic1170) + ep0337_184 * log(s_0337 / ic0337) + ep0929_184 * log(s_0929 / ic0929) + ep0336_184 * log(s_0336 / ic0336))) + (cell * v0_333 * (1 + ep1179_333 * log(s_1179 / ic1179) + ep0381_333 * log(s_0381 / ic0381) + ep0929_333 * log(s_0929 / ic0929))) - (cell * v0_288 * (1 + ep0467_288 * log(s_0467 / ic0467) + ep0929_288 * log(s_0929 / ic0929) + ep0361_288 * log(s_0361 / ic0361) + ep0421_288 * log(s_0421 / ic0421) + ep1318_288 * log(s_1318 / ic1318) + ep1430_288 * log(s_1430 / ic1430))) - (0.6126 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0936) = (cell * v0_140 * (1 + ep0765_140 * log(s_0765 / ic0765) + ep0367_140 * log(s_0367 / ic0367) + ep0936_140 * log(s_0936 / ic0936))) - (cell * v0_185 * (1 + ep0936_185 * log(s_0936 / ic0936) + ep1333_185 * log(s_1333 / ic1333) + ep0937_185 * log(s_0937 / ic0937) + ep1334_185 * log(s_1334 / ic1334)));
    der(s_0937) = (cell * v0_185 * (1 + ep0936_185 * log(s_0936 / ic0936) + ep1333_185 * log(s_1333 / ic1333) + ep0937_185 * log(s_0937 / ic0937) + ep1334_185 * log(s_1334 / ic1334))) - (cell * v0_186 * (1 + ep0937_186 * log(s_0937 / ic0937) + ep1732_186 * log(s_1732 / ic1732) + ep0941_186 * log(s_0941 / ic0941) + ep1731_186 * log(s_1731 / ic1731))) - (cell * v0_187 * (1 + ep0937_187 * log(s_0937 / ic0937) + ep1240_187 * log(s_1240 / ic1240) + ep0941_187 * log(s_0941 / ic0941) + ep1239_187 * log(s_1239 / ic1239)));
    der(s_0941) = (cell * v0_186 * (1 + ep0937_186 * log(s_0937 / ic0937) + ep1732_186 * log(s_1732 / ic1732) + ep0941_186 * log(s_0941 / ic0941) + ep1731_186 * log(s_1731 / ic1731))) + (cell * v0_187 * (1 + ep0937_187 * log(s_0937 / ic0937) + ep1240_187 * log(s_1240 / ic1240) + ep0941_187 * log(s_0941 / ic0941) + ep1239_187 * log(s_1239 / ic1239))) - (2.0 * cell * v0_188 * (1 + ep0941_188 * log(s_0941 / ic0941) + ep0214_188 * log(s_0214 / ic0214) + ep0543_188 * log(s_0543 / ic0543)));
    der(s_0942) = (cell * v0_189 * (1 + ep0467_189 * log(s_0467 / ic0467) + ep1101_189 * log(s_1101 / ic1101) + ep1799_189 * log(s_1799 / ic1799) + ep0454_189 * log(s_0454 / ic0454) + ep1095_189 * log(s_1095 / ic1095) + ep0942_189 * log(s_0942 / ic0942) + ep0783_189 * log(s_0783 / ic0783))) - (cell * v0_192 * (1 + ep0467_192 * log(s_0467 / ic0467) + ep0942_192 * log(s_0942 / ic0942) + ep0421_192 * log(s_0421 / ic0421) + ep0896_192 * log(s_0896 / ic0896)));
    der(s_0945) = (cell * v0_249 * (1 + ep0467_249 * log(s_0467 / ic0467) + ep0896_249 * log(s_0896 / ic0896) + ep0421_249 * log(s_0421 / ic0421) + ep0945_249 * log(s_0945 / ic0945))) - (cell * v0_96 * (1 + ep1072_96 * log(s_1072 / ic1072) + ep0945_96 * log(s_0945 / ic0945) + ep1006_96 * log(s_1006 / ic1006) + ep1327_96 * log(s_1327 / ic1327) + ep0896_96 * log(s_0896 / ic0896) + ep1430_96 * log(s_1430 / ic1430))) - (cell * v0_114 * (1 + ep0481_114 * log(s_0481 / ic0481) + ep0945_114 * log(s_0945 / ic0945) + ep0480_114 * log(s_0480 / ic0480) + ep0783_114 * log(s_0783 / ic0783))) - (cell * v0_115 * (1 + ep0479_115 * log(s_0479 / ic0479) + ep0945_115 * log(s_0945 / ic0945) + ep0481_115 * log(s_0481 / ic0481) + ep0783_115 * log(s_0783 / ic0783))) - (cell * v0_125 * (1 + ep0945_125 * log(s_0945 / ic0945) + ep0585_125 * log(s_0585 / ic0585) + ep0783_125 * log(s_0783 / ic0783))) - (cell * v0_190 * (1 + ep0945_190 * log(s_0945 / ic0945) + ep0191_190 * log(s_0191 / ic0191) + ep0867_190 * log(s_0867 / ic0867))) - (cell * v0_191 * (1 + ep0945_191 * log(s_0945 / ic0945) + ep0160_191 * log(s_0160 / ic0160) + ep0867_191 * log(s_0867 / ic0867) + ep0783_191 * log(s_0783 / ic0783))) - (cell * v0_310 * (1 + ep0861_310 * log(s_0861 / ic0861) + ep0945_310 * log(s_0945 / ic0945) + ep0760_310 * log(s_0760 / ic0760) + ep0862_310 * log(s_0862 / ic0862))) - (cell * v0_324 * (1 + ep0467_324 * log(s_0467 / ic0467) + ep0945_324 * log(s_0945 / ic0945) + ep1609_324 * log(s_1609 / ic1609) + ep0412_324 * log(s_0412 / ic0412) + ep0896_324 * log(s_0896 / ic0896) + ep1430_324 * log(s_1430 / ic1430) + ep0783_324 * log(s_0783 / ic0783))) - (0.2151 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_0971) = (cell * v0_157 * (1 + ep1412_157 * log(s_1412 / ic1412) + ep0555_157 * log(s_0555 / ic0555) + ep0971_157 * log(s_0971 / ic0971))) - (cell * v0_83 * (1 + ep0397_83 * log(s_0397 / ic0397) + ep0467_83 * log(s_0467 / ic0467) + ep0971_83 * log(s_0971 / ic0971) + ep0454_83 * log(s_0454 / ic0454) + ep1411_83 * log(s_1411 / ic1411) + ep0783_83 * log(s_0783 / ic0783)));
    der(s_0976) = (cell * v0_158 * (1 + ep0979_158 * log(s_0979 / ic0979) + ep0555_158 * log(s_0555 / ic0555) + ep0976_158 * log(s_0976 / ic0976))) - (cell * v0_84 * (1 + ep0397_84 * log(s_0397 / ic0397) + ep0467_84 * log(s_0467 / ic0467) + ep0976_84 * log(s_0976 / ic0976) + ep0454_84 * log(s_0454 / ic0454) + ep0533_84 * log(s_0533 / ic0533) + ep0783_84 * log(s_0783 / ic0783)));
    der(s_0979) = (cell * v0_19 * (1 + ep1674_19 * log(s_1674 / ic1674) + ep0979_19 * log(s_0979 / ic0979))) - (cell * v0_158 * (1 + ep0979_158 * log(s_0979 / ic0979) + ep0555_158 * log(s_0555 / ic0555) + ep0976_158 * log(s_0976 / ic0976)));
    der(s_0984) = (cell * v0_89 * (1 + ep0860_89 * log(s_0860 / ic0860) + ep1672_89 * log(s_1672 / ic1672) + ep0859_89 * log(s_0859 / ic0859) + ep0984_89 * log(s_0984 / ic0984))) - (cell * v0_73 * (1 + ep0395_73 * log(s_0395 / ic0395) + ep0984_73 * log(s_0984 / ic0984) + ep0303_73 * log(s_0303 / ic0303) + ep0555_73 * log(s_0555 / ic0555)));
    der(s_0991) = (cell * v0_221 * (1 + ep1072_221 * log(s_1072 / ic1072) + ep1372_221 * log(s_1372 / ic1372) + ep0991_221 * log(s_0991 / ic0991) + ep1005_221 * log(s_1005 / ic1005))) - (cell * v0_228 * (1 + ep0991_228 * log(s_0991 / ic0991) + ep1399_228 * log(s_1399 / ic1399) + ep1138_228 * log(s_1138 / ic1138) + ep1372_228 * log(s_1372 / ic1372)));
    der(s_0994) = (cell * v0_325 * (1 + ep1336_325 * log(s_1336 / ic1336) + ep1612_325 * log(s_1612 / ic1612) + ep0994_325 * log(s_0994 / ic0994) + ep1335_325 * log(s_1335 / ic1335))) - (cell * v0_127 * (1 + ep1358_127 * log(s_1358 / ic1358) + ep0994_127 * log(s_0994 / ic0994) + ep0384_127 * log(s_0384 / ic0384) + ep1083_127 * log(s_1083 / ic1083)));
    der(s_0998) = (cell * v0_203 * (1 + ep1493_203 * log(s_1493 / ic1493) + ep0998_203 * log(s_0998 / ic0998) + ep0451_203 * log(s_0451 / ic0451))) - (cell * v0_361 * (1 + ep0998_361 * log(s_0998 / ic0998) + ep1791_361 * log(s_1791 / ic1791)));
    der(s_1005) = (cell * v0_221 * (1 + ep1072_221 * log(s_1072 / ic1072) + ep1372_221 * log(s_1372 / ic1372) + ep0991_221 * log(s_0991 / ic0991) + ep1005_221 * log(s_1005 / ic1005))) - (cell * v0_304 * (1 + ep0772_304 * log(s_0772 / ic0772) + ep1005_304 * log(s_1005 / ic1005) + ep1430_304 * log(s_1430 / ic1430) + ep1537_304 * log(s_1537 / ic1537)));
    der(s_1006) = (cell * v0_206 * (1 + ep0352_206 * log(s_0352 / ic0352) + ep1006_206 * log(s_1006 / ic1006))) - (cell * v0_96 * (1 + ep1072_96 * log(s_1072 / ic1072) + ep0945_96 * log(s_0945 / ic0945) + ep1006_96 * log(s_1006 / ic1006) + ep1327_96 * log(s_1327 / ic1327) + ep0896_96 * log(s_0896 / ic0896) + ep1430_96 * log(s_1430 / ic1430))) - (cell * v0_207 * (1 + ep1006_207 * log(s_1006 / ic1006) + ep1333_207 * log(s_1333 / ic1333) + ep1334_207 * log(s_1334 / ic1334) + ep1799_207 * log(s_1799 / ic1799)));
    der(s_1009) = (cell * v0_340 * (1 + ep0493_340 * log(s_0493 / ic0493) + ep0913_340 * log(s_0913 / ic0913) + ep1009_340 * log(s_1009 / ic1009))) - (cell * v0_341 * (1 + ep1009_341 * log(s_1009 / ic1009) + ep0451_341 * log(s_0451 / ic0451) + ep1531_341 * log(s_1531 / ic1531) + ep1185_341 * log(s_1185 / ic1185)));
    der(s_1017) = (cell * v0_209 * (1 + ep0377_209 * log(s_0377 / ic0377) + ep1018_209 * log(s_1018 / ic1018) + ep1019_209 * log(s_1019 / ic1019) + ep1017_209 * log(s_1017 / ic1017) + ep1020_209 * log(s_1020 / ic1020))) + (2.0 * cell * v0_210 * (1 + ep0860_210 * log(s_0860 / ic0860) + ep0838_210 * log(s_0838 / ic0838) + ep1018_210 * log(s_1018 / ic1018) + ep1019_210 * log(s_1019 / ic1019) + ep0859_210 * log(s_0859 / ic0859) + ep1017_210 * log(s_1017 / ic1017) + ep1020_210 * log(s_1020 / ic1020))) + (2.0 * cell * v0_211 * (1 + ep0860_211 * log(s_0860 / ic0860) + ep0838_211 * log(s_0838 / ic0838) + ep1018_211 * log(s_1018 / ic1018) + ep1020_211 * log(s_1020 / ic1020) + ep0859_211 * log(s_0859 / ic0859) + ep1017_211 * log(s_1017 / ic1017) + ep1022_211 * log(s_1022 / ic1022))) + (cell * v0_235 * (1 + ep1018_235 * log(s_1018 / ic1018) + ep1258_235 * log(s_1258 / ic1258) + ep1334_235 * log(s_1334 / ic1334) + ep0454_235 * log(s_0454 / ic0454) + ep1017_235 * log(s_1017 / ic1017) + ep1260_235 * log(s_1260 / ic1260) + ep1333_235 * log(s_1333 / ic1333))) + (cell * v0_331 * (1 + ep0467_331 * log(s_0467 / ic0467) + ep0738_331 * log(s_0738 / ic0738) + ep0116_331 * log(s_0116 / ic0116) + ep1018_331 * log(s_1018 / ic1018) + ep1336_331 * log(s_1336 / ic1336) + ep0330_331 * log(s_0330 / ic0330) + ep0454_331 * log(s_0454 / ic0454) + ep0543_331 * log(s_0543 / ic0543) + ep1017_331 * log(s_1017 / ic1017) + ep1335_331 * log(s_1335 / ic1335) + ep0783_331 * log(s_0783 / ic0783))) - (cell * v0_215 * (1 + ep1083_215 * log(s_1083 / ic1083) + ep1017_215 * log(s_1017 / ic1017) + ep1041_215 * log(s_1041 / ic1041) + ep1018_215 * log(s_1018 / ic1018)));
    der(s_1018) = (cell * v0_215 * (1 + ep1083_215 * log(s_1083 / ic1083) + ep1017_215 * log(s_1017 / ic1017) + ep1041_215 * log(s_1041 / ic1041) + ep1018_215 * log(s_1018 / ic1018))) - (cell * v0_209 * (1 + ep0377_209 * log(s_0377 / ic0377) + ep1018_209 * log(s_1018 / ic1018) + ep1019_209 * log(s_1019 / ic1019) + ep1017_209 * log(s_1017 / ic1017) + ep1020_209 * log(s_1020 / ic1020))) - (2.0 * cell * v0_210 * (1 + ep0860_210 * log(s_0860 / ic0860) + ep0838_210 * log(s_0838 / ic0838) + ep1018_210 * log(s_1018 / ic1018) + ep1019_210 * log(s_1019 / ic1019) + ep0859_210 * log(s_0859 / ic0859) + ep1017_210 * log(s_1017 / ic1017) + ep1020_210 * log(s_1020 / ic1020))) - (2.0 * cell * v0_211 * (1 + ep0860_211 * log(s_0860 / ic0860) + ep0838_211 * log(s_0838 / ic0838) + ep1018_211 * log(s_1018 / ic1018) + ep1020_211 * log(s_1020 / ic1020) + ep0859_211 * log(s_0859 / ic0859) + ep1017_211 * log(s_1017 / ic1017) + ep1022_211 * log(s_1022 / ic1022))) - (cell * v0_235 * (1 + ep1018_235 * log(s_1018 / ic1018) + ep1258_235 * log(s_1258 / ic1258) + ep1334_235 * log(s_1334 / ic1334) + ep0454_235 * log(s_0454 / ic0454) + ep1017_235 * log(s_1017 / ic1017) + ep1260_235 * log(s_1260 / ic1260) + ep1333_235 * log(s_1333 / ic1333))) - (cell * v0_331 * (1 + ep0467_331 * log(s_0467 / ic0467) + ep0738_331 * log(s_0738 / ic0738) + ep0116_331 * log(s_0116 / ic0116) + ep1018_331 * log(s_1018 / ic1018) + ep1336_331 * log(s_1336 / ic1336) + ep0330_331 * log(s_0330 / ic0330) + ep0454_331 * log(s_0454 / ic0454) + ep0543_331 * log(s_0543 / ic0543) + ep1017_331 * log(s_1017 / ic1017) + ep1335_331 * log(s_1335 / ic1335) + ep0783_331 * log(s_0783 / ic0783)));
    der(s_1019) = (cell * v0_212 * (1 + ep1020_212 * log(s_1020 / ic1020) + ep0378_212 * log(s_0378 / ic0378) + ep1019_212 * log(s_1019 / ic1019))) + (cell * v0_214 * (1 + ep1021_214 * log(s_1021 / ic1021) + ep0380_214 * log(s_0380 / ic0380) + ep1019_214 * log(s_1019 / ic1019))) - (cell * v0_209 * (1 + ep0377_209 * log(s_0377 / ic0377) + ep1018_209 * log(s_1018 / ic1018) + ep1019_209 * log(s_1019 / ic1019) + ep1017_209 * log(s_1017 / ic1017) + ep1020_209 * log(s_1020 / ic1020))) - (cell * v0_210 * (1 + ep0860_210 * log(s_0860 / ic0860) + ep0838_210 * log(s_0838 / ic0838) + ep1018_210 * log(s_1018 / ic1018) + ep1019_210 * log(s_1019 / ic1019) + ep0859_210 * log(s_0859 / ic0859) + ep1017_210 * log(s_1017 / ic1017) + ep1020_210 * log(s_1020 / ic1020)));
    der(s_1020) = (cell * v0_209 * (1 + ep0377_209 * log(s_0377 / ic0377) + ep1018_209 * log(s_1018 / ic1018) + ep1019_209 * log(s_1019 / ic1019) + ep1017_209 * log(s_1017 / ic1017) + ep1020_209 * log(s_1020 / ic1020))) + (cell * v0_210 * (1 + ep0860_210 * log(s_0860 / ic0860) + ep0838_210 * log(s_0838 / ic0838) + ep1018_210 * log(s_1018 / ic1018) + ep1019_210 * log(s_1019 / ic1019) + ep0859_210 * log(s_0859 / ic0859) + ep1017_210 * log(s_1017 / ic1017) + ep1020_210 * log(s_1020 / ic1020))) - (cell * v0_211 * (1 + ep0860_211 * log(s_0860 / ic0860) + ep0838_211 * log(s_0838 / ic0838) + ep1018_211 * log(s_1018 / ic1018) + ep1020_211 * log(s_1020 / ic1020) + ep0859_211 * log(s_0859 / ic0859) + ep1017_211 * log(s_1017 / ic1017) + ep1022_211 * log(s_1022 / ic1022))) - (cell * v0_212 * (1 + ep1020_212 * log(s_1020 / ic1020) + ep0378_212 * log(s_0378 / ic0378) + ep1019_212 * log(s_1019 / ic1019)));
    der(s_1021) = (cell * v0_213 * (1 + ep0860_213 * log(s_0860 / ic0860) + ep1022_213 * log(s_1022 / ic1022) + ep0859_213 * log(s_0859 / ic0859) + ep1021_213 * log(s_1021 / ic1021))) - (cell * v0_214 * (1 + ep1021_214 * log(s_1021 / ic1021) + ep0380_214 * log(s_0380 / ic0380) + ep1019_214 * log(s_1019 / ic1019)));
    der(s_1022) = (cell * v0_211 * (1 + ep0860_211 * log(s_0860 / ic0860) + ep0838_211 * log(s_0838 / ic0838) + ep1018_211 * log(s_1018 / ic1018) + ep1020_211 * log(s_1020 / ic1020) + ep0859_211 * log(s_0859 / ic0859) + ep1017_211 * log(s_1017 / ic1017) + ep1022_211 * log(s_1022 / ic1022))) - (cell * v0_213 * (1 + ep0860_213 * log(s_0860 / ic0860) + ep1022_213 * log(s_1022 / ic1022) + ep0859_213 * log(s_0859 / ic0859) + ep1021_213 * log(s_1021 / ic1021)));
    der(s_1027) = (cell * v0_81 * (1 + ep0530_81 * log(s_0530 / ic0530) + ep1027_81 * log(s_1027 / ic1027))) - (cell * v0_216 * (1 + ep1027_216 * log(s_1027 / ic1027) + ep1335_216 * log(s_1335 / ic1335) + ep0233_216 * log(s_0233 / ic0233) + ep0543_216 * log(s_0543 / ic0543) + ep1336_216 * log(s_1336 / ic1336)));
    der(s_1028) = (cell * v0_7 * (1 + ep0123_7 * log(s_0123 / ic0123) + ep1334_7 * log(s_1334 / ic1334) + ep1028_7 * log(s_1028 / ic1028) + ep1333_7 * log(s_1333 / ic1333))) - (cell * v0_147 * (1 + ep0779_147 * log(s_0779 / ic0779) + ep1028_147 * log(s_1028 / ic1028) + ep0903_147 * log(s_0903 / ic0903) + ep0783_147 * log(s_0783 / ic0783))) - (cell * v0_164 * (1 + ep0903_164 * log(s_0903 / ic0903) + ep1028_164 * log(s_1028 / ic1028) + ep0826_164 * log(s_0826 / ic0826) + ep0783_164 * log(s_0783 / ic0783))) - (5.0 * cell * v0_254 * (1 + ep0826_254 * log(s_0826 / ic0826) + ep1028_254 * log(s_1028 / ic1028) + ep0435_254 * log(s_0435 / ic0435) + ep0783_254 * log(s_0783 / ic0783))) - (8.0 * cell * v0_357 * (1 + ep0826_357 * log(s_0826 / ic0826) + ep1028_357 * log(s_1028 / ic1028) + ep0783_357 * log(s_0783 / ic0783) + ep1765_357 * log(s_1765 / ic1765)));
    der(s_1033) = (cell * v0_25 * (1 + ep0542_25 * log(s_0542 / ic0542) + ep1038_25 * log(s_1038 / ic1038) + ep0539_25 * log(s_0539 / ic0539) + ep1033_25 * log(s_1033 / ic1033))) - (0.01946 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1038) = (cell * v0_24 * (1 + ep0542_24 * log(s_0542 / ic0542) + ep0147_24 * log(s_0147 / ic0147) + ep0539_24 * log(s_0539 / ic0539) + ep1038_24 * log(s_1038 / ic1038))) - (cell * v0_25 * (1 + ep0542_25 * log(s_0542 / ic0542) + ep1038_25 * log(s_1038 / ic1038) + ep0539_25 * log(s_0539 / ic0539) + ep1033_25 * log(s_1033 / ic1033)));
    der(s_1040) = (cell * v0_224 * (1 + ep1333_224 * log(s_1333 / ic1333) + ep1179_224 * log(s_1179 / ic1179) + ep1040_224 * log(s_1040 / ic1040) + ep1334_224 * log(s_1334 / ic1334))) - (cell * v0_183 * (1 + ep1040_183 * log(s_1040 / ic1040) + ep0555_183 * log(s_0555 / ic0555) + ep0395_183 * log(s_0395 / ic0395) + ep0929_183 * log(s_0929 / ic0929)));
    der(s_1041) = (cell * v0_215 * (1 + ep1083_215 * log(s_1083 / ic1083) + ep1017_215 * log(s_1017 / ic1017) + ep1041_215 * log(s_1041 / ic1041) + ep1018_215 * log(s_1018 / ic1018))) + (cell * v0_220 * (1 + ep1095_220 * log(s_1095 / ic1095) + ep1531_220 * log(s_1531 / ic1531) + ep0233_220 * log(s_0233 / ic0233) + ep1041_220 * log(s_1041 / ic1041))) - (cell * v0_65 * (1 + ep1041_65 * log(s_1041 / ic1041) + ep1491_65 * log(s_1491 / ic1491) + ep0376_65 * log(s_0376 / ic0376) + ep0397_65 * log(s_0397 / ic0397) + ep0543_65 * log(s_0543 / ic0543))) - (cell * v0_99 * (1 + ep1041_99 * log(s_1041 / ic1041) + ep0600_99 * log(s_0600 / ic0600))) - (cell * v0_351 * (1 + ep1041_351 * log(s_1041 / ic1041) + ep0467_351 * log(s_0467 / ic0467) + ep1750_351 * log(s_1750 / ic1750) + ep0421_351 * log(s_0421 / ic0421) + ep1430_351 * log(s_1430 / ic1430) + ep1751_351 * log(s_1751 / ic1751))) - (0.5137 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1061) = (cell * v0_103 * (1 + ep1274_103 * log(s_1274 / ic1274) + ep1061_103 * log(s_1061 / ic1061) + ep0875_103 * log(s_0875 / ic0875))) - (0.2958 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1068) = (cell * v0_105 * (1 + ep1072_105 * log(s_1072 / ic1072) + ep0467_105 * log(s_0467 / ic0467) + ep0451_105 * log(s_0451 / ic0451) + ep0454_105 * log(s_0454 / ic0454) + ep1068_105 * log(s_1068 / ic1068) + ep0783_105 * log(s_0783 / ic0783))) - (0.2411 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1072) = (cell * v0_109 * (1 + ep1095_109 * log(s_1095 / ic1095) + ep1399_109 * log(s_1399 / ic1399) + ep0233_109 * log(s_0233 / ic0233) + ep1072_109 * log(s_1072 / ic1072))) - (cell * v0_96 * (1 + ep1072_96 * log(s_1072 / ic1072) + ep0945_96 * log(s_0945 / ic0945) + ep1006_96 * log(s_1006 / ic1006) + ep1327_96 * log(s_1327 / ic1327) + ep0896_96 * log(s_0896 / ic0896) + ep1430_96 * log(s_1430 / ic1430))) - (cell * v0_104 * (1 + ep1072_104 * log(s_1072 / ic1072) + ep0467_104 * log(s_0467 / ic0467) + ep1081_104 * log(s_1081 / ic1081) + ep0454_104 * log(s_0454 / ic0454) + ep1274_104 * log(s_1274 / ic1274) + ep0783_104 * log(s_0783 / ic0783))) - (cell * v0_105 * (1 + ep1072_105 * log(s_1072 / ic1072) + ep0467_105 * log(s_0467 / ic0467) + ep0451_105 * log(s_0451 / ic0451) + ep0454_105 * log(s_0454 / ic0454) + ep1068_105 * log(s_1068 / ic1068) + ep0783_105 * log(s_0783 / ic0783))) - (cell * v0_106 * (1 + ep1072_106 * log(s_1072 / ic1072) + ep0470_106 * log(s_0470 / ic0470) + ep0543_106 * log(s_0543 / ic0543))) - (cell * v0_107 * (1 + ep1072_107 * log(s_1072 / ic1072) + ep0502_107 * log(s_0502 / ic0502) + ep1312_107 * log(s_1312 / ic1312) + ep1430_107 * log(s_1430 / ic1430))) - (cell * v0_108 * (1 + ep1072_108 * log(s_1072 / ic1072) + ep0467_108 * log(s_0467 / ic0467) + ep0332_108 * log(s_0332 / ic0332) + ep0421_108 * log(s_0421 / ic0421))) - (cell * v0_221 * (1 + ep1072_221 * log(s_1072 / ic1072) + ep1372_221 * log(s_1372 / ic1372) + ep0991_221 * log(s_0991 / ic0991) + ep1005_221 * log(s_1005 / ic1005))) - (cell * v0_285 * (1 + ep0344_285 * log(s_0344 / ic0344) + ep1072_285 * log(s_1072 / ic1072) + ep0467_285 * log(s_0467 / ic0467) + ep0040_285 * log(s_0040 / ic0040) + ep0421_285 * log(s_0421 / ic0421) + ep1430_285 * log(s_1430 / ic1430))) - (0.2411 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1075) = (cell * v0_110 * (1 + ep0332_110 * log(s_0332 / ic0332) + ep1336_110 * log(s_1336 / ic1336) + ep1075_110 * log(s_1075 / ic1075) + ep1335_110 * log(s_1335 / ic1335) + ep1430_110 * log(s_1430 / ic1430))) - (cell * v0_137 * (1 + ep1075_137 * log(s_1075 / ic1075) + ep1531_137 * log(s_1531 / ic1531) + ep0155_137 * log(s_0155 / ic0155))) - (cell * v0_199 * (1 + ep1075_199 * log(s_1075 / ic1075) + ep1336_199 * log(s_1336 / ic1336) + ep1113_199 * log(s_1113 / ic1113) + ep1335_199 * log(s_1335 / ic1335)));
    der(s_1081) = (cell * v0_256 * (1 + ep0502_256 * log(s_0502 / ic0502) + ep1391_256 * log(s_1391 / ic1391) + ep1081_256 * log(s_1081 / ic1081) + ep1430_256 * log(s_1430 / ic1430))) - (cell * v0_104 * (1 + ep1072_104 * log(s_1072 / ic1072) + ep0467_104 * log(s_0467 / ic0467) + ep1081_104 * log(s_1081 / ic1081) + ep0454_104 * log(s_0454 / ic0454) + ep1274_104 * log(s_1274 / ic1274) + ep0783_104 * log(s_0783 / ic0783)));
    der(s_1082) = (cell * v0_253 * (1 + ep1083_253 * log(s_1083 / ic1083) + ep1367_253 * log(s_1367 / ic1367) + ep1082_253 * log(s_1082 / ic1082) + ep1595_253 * log(s_1595 / ic1595))) - (cell * v0_126 * (1 + ep1082_126 * log(s_1082 / ic1082) + ep1112_126 * log(s_1112 / ic1112) + ep0451_126 * log(s_0451 / ic0451) + ep1531_126 * log(s_1531 / ic1531)));
    der(s_1083) = (cell * v0_127 * (1 + ep1358_127 * log(s_1358 / ic1358) + ep0994_127 * log(s_0994 / ic0994) + ep0384_127 * log(s_0384 / ic0384) + ep1083_127 * log(s_1083 / ic1083))) - (cell * v0_215 * (1 + ep1083_215 * log(s_1083 / ic1083) + ep1017_215 * log(s_1017 / ic1017) + ep1041_215 * log(s_1041 / ic1041) + ep1018_215 * log(s_1018 / ic1018))) - (cell * v0_253 * (1 + ep1083_253 * log(s_1083 / ic1083) + ep1367_253 * log(s_1367 / ic1367) + ep1082_253 * log(s_1082 / ic1082) + ep1595_253 * log(s_1595 / ic1595))) - (cell * v0_276 * (1 + ep0599_276 * log(s_0599 / ic0599) + ep0575_276 * log(s_0575 / ic0575) + ep1083_276 * log(s_1083 / ic1083) + ep1277_276 * log(s_1277 / ic1277) + ep0539_276 * log(s_0539 / ic0539) + ep0783_276 * log(s_0783 / ic0783))) - (0.09158 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1095) = (cell * v0_57 * (1 + ep0526_57 * log(s_0526 / ic0526) + ep1101_57 * log(s_1101 / ic1101) + ep0316_57 * log(s_0316 / ic0316) + ep1095_57 * log(s_1095 / ic1095))) + (cell * v0_101 * (1 + ep0526_101 * log(s_0526 / ic0526) + ep1101_101 * log(s_1101 / ic1101) + ep0457_101 * log(s_0457 / ic0457) + ep1095_101 * log(s_1095 / ic1095) + ep1531_101 * log(s_1531 / ic1531))) + (cell * v0_124 * (1 + ep0467_124 * log(s_0467 / ic0467) + ep1101_124 * log(s_1101 / ic1101) + ep1792_124 * log(s_1792 / ic1792) + ep0421_124 * log(s_0421 / ic0421) + ep0575_124 * log(s_0575 / ic0575) + ep1095_124 * log(s_1095 / ic1095) + ep1430_124 * log(s_1430 / ic1430))) + (cell * v0_169 * (1 + ep0233_169 * log(s_0233 / ic0233) + ep1336_169 * log(s_1336 / ic1336) + ep0451_169 * log(s_0451 / ic0451) + ep1095_169 * log(s_1095 / ic1095) + ep1335_169 * log(s_1335 / ic1335))) + (cell * v0_173 * (1 + ep1101_173 * log(s_1101 / ic1101) + ep0360_173 * log(s_0360 / ic0360) + ep1095_173 * log(s_1095 / ic1095) + ep0783_173 * log(s_0783 / ic0783) + ep0361_173 * log(s_0361 / ic0361))) + (cell * v0_175 * (1 + ep0627_175 * log(s_0627 / ic0627) + ep1101_175 * log(s_1101 / ic1101) + ep0654_175 * log(s_0654 / ic0654) + ep1095_175 * log(s_1095 / ic1095))) + (cell * v0_189 * (1 + ep0467_189 * log(s_0467 / ic0467) + ep1101_189 * log(s_1101 / ic1101) + ep1799_189 * log(s_1799 / ic1799) + ep0454_189 * log(s_0454 / ic0454) + ep1095_189 * log(s_1095 / ic1095) + ep0942_189 * log(s_0942 / ic0942) + ep0783_189 * log(s_0783 / ic0783))) + (cell * v0_204 * (1 + ep1101_204 * log(s_1101 / ic1101) + ep0341_204 * log(s_0341 / ic0341) + ep0343_204 * log(s_0343 / ic0343) + ep0620_204 * log(s_0620 / ic0620) + ep1095_204 * log(s_1095 / ic1095))) + (cell * v0_287 * (1 + ep0467_287 * log(s_0467 / ic0467) + ep1322_287 * log(s_1322 / ic1322) + ep1101_287 * log(s_1101 / ic1101) + ep0421_287 * log(s_0421 / ic0421) + ep0162_287 * log(s_0162 / ic0162) + ep1095_287 * log(s_1095 / ic1095) + ep1430_287 * log(s_1430 / ic1430))) - (cell * v0_79 * (1 + ep1303_79 * log(s_1303 / ic1303) + ep1095_79 * log(s_1095 / ic1095) + ep1321_79 * log(s_1321 / ic1321) + ep0233_79 * log(s_0233 / ic0233))) - (cell * v0_109 * (1 + ep1095_109 * log(s_1095 / ic1095) + ep1399_109 * log(s_1399 / ic1399) + ep0233_109 * log(s_0233 / ic0233) + ep1072_109 * log(s_1072 / ic1072))) - (cell * v0_139 * (1 + ep0467_139 * log(s_0467 / ic0467) + ep0767_139 * log(s_0767 / ic0767) + ep1095_139 * log(s_1095 / ic1095) + ep0421_139 * log(s_0421 / ic0421) + ep0372_139 * log(s_0372 / ic0372) + ep1430_139 * log(s_1430 / ic1430))) - (cell * v0_168 * (1 + ep0467_168 * log(s_0467 / ic0467) + ep1095_168 * log(s_1095 / ic1095) + ep0421_168 * log(s_0421 / ic0421) + ep1099_168 * log(s_1099 / ic1099))) - (cell * v0_170 * (1 + ep1095_170 * log(s_1095 / ic1095) + ep0671_170 * log(s_0671 / ic0671))) - (cell * v0_174 * (1 + ep0467_174 * log(s_0467 / ic0467) + ep1095_174 * log(s_1095 / ic1095) + ep0451_174 * log(s_0451 / ic0451) + ep0421_174 * log(s_0421 / ic0421) + ep1101_174 * log(s_1101 / ic1101) + ep1430_174 * log(s_1430 / ic1430))) - (cell * v0_177 * (1 + ep0467_177 * log(s_0467 / ic0467) + ep1095_177 * log(s_1095 / ic1095) + ep1690_177 * log(s_1690 / ic1690) + ep0454_177 * log(s_0454 / ic0454) + ep1105_177 * log(s_1105 / ic1105) + ep0783_177 * log(s_0783 / ic0783))) - (cell * v0_198 * (1 + ep1095_198 * log(s_1095 / ic1095) + ep0263_198 * log(s_0263 / ic0263) + ep0233_198 * log(s_0233 / ic0233) + ep1110_198 * log(s_1110 / ic1110))) - (cell * v0_217 * (1 + ep0051_217 * log(s_0051 / ic0051) + ep1095_217 * log(s_1095 / ic1095) + ep0233_217 * log(s_0233 / ic0233) + ep1119_217 * log(s_1119 / ic1119))) - (cell * v0_220 * (1 + ep1095_220 * log(s_1095 / ic1095) + ep1531_220 * log(s_1531 / ic1531) + ep0233_220 * log(s_0233 / ic0233) + ep1041_220 * log(s_1041 / ic1041))) - (cell * v0_225 * (1 + ep0328_225 * log(s_0328 / ic0328) + ep1095_225 * log(s_1095 / ic1095) + ep0233_225 * log(s_0233 / ic0233) + ep1127_225 * log(s_1127 / ic1127))) - (cell * v0_242 * (1 + ep0395_242 * log(s_0395 / ic0395) + ep1095_242 * log(s_1095 / ic1095) + ep1302_242 * log(s_1302 / ic1302) + ep0555_242 * log(s_0555 / ic0555))) - (cell * v0_252 * (1 + ep1095_252 * log(s_1095 / ic1095) + ep0231_252 * log(s_0231 / ic0231) + ep0233_252 * log(s_0233 / ic0233) + ep1362_252 * log(s_1362 / ic1362))) - (cell * v0_262 * (1 + ep1095_262 * log(s_1095 / ic1095) + ep1429_262 * log(s_1429 / ic1429) + ep0233_262 * log(s_0233 / ic0233) + ep1151_262 * log(s_1151 / ic1151))) - (cell * v0_290 * (1 + ep0308_290 * log(s_0308 / ic0308) + ep1095_290 * log(s_1095 / ic1095) + ep0233_290 * log(s_0233 / ic0233) + ep1364_290 * log(s_1364 / ic1364))) - (cell * v0_323 * (1 + ep1095_323 * log(s_1095 / ic1095) + ep1315_323 * log(s_1315 / ic1315) + ep0233_323 * log(s_0233 / ic0233) + ep1316_323 * log(s_1316 / ic1316))) - (cell * v0_343 * (1 + ep0262_343 * log(s_0262 / ic0262) + ep1095_343 * log(s_1095 / ic1095) + ep0233_343 * log(s_0233 / ic0233) + ep1189_343 * log(s_1189 / ic1189))) - (cell * v0_362 * (1 + ep0282_362 * log(s_0282 / ic0282) + ep1095_362 * log(s_1095 / ic1095) + ep0233_362 * log(s_0233 / ic0233) + ep1193_362 * log(s_1193 / ic1193))) - (0.2632 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1098) = (cell * v0_176 * (1 + ep1105_176 * log(s_1105 / ic1105) + ep1336_176 * log(s_1336 / ic1336) + ep1098_176 * log(s_1098 / ic1098) + ep1335_176 * log(s_1335 / ic1335) + ep1690_176 * log(s_1690 / ic1690))) - (cell * v0_171 * (1 + ep1098_171 * log(s_1098 / ic1098) + ep0345_171 * log(s_0345 / ic0345)));
    der(s_1099) = (cell * v0_168 * (1 + ep0467_168 * log(s_0467 / ic0467) + ep1095_168 * log(s_1095 / ic1095) + ep0421_168 * log(s_0421 / ic0421) + ep1099_168 * log(s_1099 / ic1099))) - (cell * v0_172 * (1 + ep1099_172 * log(s_1099 / ic1099) + ep1336_172 * log(s_1336 / ic1336) + ep1100_172 * log(s_1100 / ic1100) + ep1335_172 * log(s_1335 / ic1335) + ep1430_172 * log(s_1430 / ic1430)));
    der(s_1100) = (cell * v0_172 * (1 + ep1099_172 * log(s_1099 / ic1099) + ep1336_172 * log(s_1336 / ic1336) + ep1100_172 * log(s_1100 / ic1100) + ep1335_172 * log(s_1335 / ic1335) + ep1430_172 * log(s_1430 / ic1430))) - (cell * v0_222 * (1 + ep1100_222 * log(s_1100 / ic1100) + ep0128_222 * log(s_0128 / ic0128)));
    der(s_1101) = (cell * v0_174 * (1 + ep0467_174 * log(s_0467 / ic0467) + ep1095_174 * log(s_1095 / ic1095) + ep0451_174 * log(s_0451 / ic0451) + ep0421_174 * log(s_0421 / ic0421) + ep1101_174 * log(s_1101 / ic1101) + ep1430_174 * log(s_1430 / ic1430))) - (cell * v0_57 * (1 + ep0526_57 * log(s_0526 / ic0526) + ep1101_57 * log(s_1101 / ic1101) + ep0316_57 * log(s_0316 / ic0316) + ep1095_57 * log(s_1095 / ic1095))) - (cell * v0_101 * (1 + ep0526_101 * log(s_0526 / ic0526) + ep1101_101 * log(s_1101 / ic1101) + ep0457_101 * log(s_0457 / ic0457) + ep1095_101 * log(s_1095 / ic1095) + ep1531_101 * log(s_1531 / ic1531))) - (cell * v0_124 * (1 + ep0467_124 * log(s_0467 / ic0467) + ep1101_124 * log(s_1101 / ic1101) + ep1792_124 * log(s_1792 / ic1792) + ep0421_124 * log(s_0421 / ic0421) + ep0575_124 * log(s_0575 / ic0575) + ep1095_124 * log(s_1095 / ic1095) + ep1430_124 * log(s_1430 / ic1430))) - (cell * v0_173 * (1 + ep1101_173 * log(s_1101 / ic1101) + ep0360_173 * log(s_0360 / ic0360) + ep1095_173 * log(s_1095 / ic1095) + ep0783_173 * log(s_0783 / ic0783) + ep0361_173 * log(s_0361 / ic0361))) - (cell * v0_175 * (1 + ep0627_175 * log(s_0627 / ic0627) + ep1101_175 * log(s_1101 / ic1101) + ep0654_175 * log(s_0654 / ic0654) + ep1095_175 * log(s_1095 / ic1095))) - (cell * v0_189 * (1 + ep0467_189 * log(s_0467 / ic0467) + ep1101_189 * log(s_1101 / ic1101) + ep1799_189 * log(s_1799 / ic1799) + ep0454_189 * log(s_0454 / ic0454) + ep1095_189 * log(s_1095 / ic1095) + ep0942_189 * log(s_0942 / ic0942) + ep0783_189 * log(s_0783 / ic0783))) - (cell * v0_204 * (1 + ep1101_204 * log(s_1101 / ic1101) + ep0341_204 * log(s_0341 / ic0341) + ep0343_204 * log(s_0343 / ic0343) + ep0620_204 * log(s_0620 / ic0620) + ep1095_204 * log(s_1095 / ic1095))) - (cell * v0_287 * (1 + ep0467_287 * log(s_0467 / ic0467) + ep1322_287 * log(s_1322 / ic1322) + ep1101_287 * log(s_1101 / ic1101) + ep0421_287 * log(s_0421 / ic0421) + ep0162_287 * log(s_0162 / ic0162) + ep1095_287 * log(s_1095 / ic1095) + ep1430_287 * log(s_1430 / ic1430))) - (0.2632 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1105) = (cell * v0_177 * (1 + ep0467_177 * log(s_0467 / ic0467) + ep1095_177 * log(s_1095 / ic1095) + ep1690_177 * log(s_1690 / ic1690) + ep0454_177 * log(s_0454 / ic0454) + ep1105_177 * log(s_1105 / ic1105) + ep0783_177 * log(s_0783 / ic0783))) - (cell * v0_176 * (1 + ep1105_176 * log(s_1105 / ic1105) + ep1336_176 * log(s_1336 / ic1336) + ep1098_176 * log(s_1098 / ic1098) + ep1335_176 * log(s_1335 / ic1335) + ep1690_176 * log(s_1690 / ic1690)));
    der(s_1106) = (cell * v0_196 * (1 + ep1109_196 * log(s_1109 / ic1109) + ep1333_196 * log(s_1333 / ic1333) + ep1106_196 * log(s_1106 / ic1106) + ep1334_196 * log(s_1334 / ic1334))) - (0.09474 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1109) = (cell * v0_197 * (1 + ep1110_197 * log(s_1110 / ic1110) + ep1109_197 * log(s_1109 / ic1109) + ep1430_197 * log(s_1430 / ic1430))) - (cell * v0_196 * (1 + ep1109_196 * log(s_1109 / ic1109) + ep1333_196 * log(s_1333 / ic1333) + ep1106_196 * log(s_1106 / ic1106) + ep1334_196 * log(s_1334 / ic1334)));
    der(s_1110) = (cell * v0_198 * (1 + ep1095_198 * log(s_1095 / ic1095) + ep0263_198 * log(s_0263 / ic0263) + ep0233_198 * log(s_0233 / ic0233) + ep1110_198 * log(s_1110 / ic1110))) - (cell * v0_197 * (1 + ep1110_197 * log(s_1110 / ic1110) + ep1109_197 * log(s_1109 / ic1109) + ep1430_197 * log(s_1430 / ic1430)));
    der(s_1112) = (cell * v0_126 * (1 + ep1082_126 * log(s_1082 / ic1082) + ep1112_126 * log(s_1112 / ic1112) + ep0451_126 * log(s_0451 / ic0451) + ep1531_126 * log(s_1531 / ic1531))) + (cell * v0_315 * (1 + ep1558_315 * log(s_1558 / ic1558) + ep0310_315 * log(s_0310 / ic0310) + ep1112_315 * log(s_1112 / ic1112))) - (cell * v0_233 * (1 + ep0354_233 * log(s_0354 / ic0354) + ep1112_233 * log(s_1112 / ic1112) + ep1141_233 * log(s_1141 / ic1141) + ep0337_233 * log(s_0337 / ic0337)));
    der(s_1113) = (cell * v0_199 * (1 + ep1075_199 * log(s_1075 / ic1075) + ep1336_199 * log(s_1336 / ic1336) + ep1113_199 * log(s_1113 / ic1113) + ep1335_199 * log(s_1335 / ic1335))) - (cell * v0_200 * (1 + ep0467_200 * log(s_0467 / ic0467) + ep1113_200 * log(s_1113 / ic1113) + ep0421_200 * log(s_0421 / ic0421) + ep1363_200 * log(s_1363 / ic1363))) - (cell * v0_201 * (1 + ep1113_201 * log(s_1113 / ic1113) + ep1599_201 * log(s_1599 / ic1599) + ep0555_201 * log(s_0555 / ic0555) + ep1367_201 * log(s_1367 / ic1367)));
    der(s_1119) = (cell * v0_217 * (1 + ep0051_217 * log(s_0051 / ic0051) + ep1095_217 * log(s_1095 / ic1095) + ep0233_217 * log(s_0233 / ic0233) + ep1119_217 * log(s_1119 / ic1119))) - (0.2905 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1127) = (cell * v0_225 * (1 + ep0328_225 * log(s_0328 / ic0328) + ep1095_225 * log(s_1095 / ic1095) + ep0233_225 * log(s_0233 / ic0233) + ep1127_225 * log(s_1127 / ic1127))) - (0.4505 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1131) = (cell * v0_133 * (1 + ep1242_133 * log(s_1242 / ic1242) + ep0543_133 * log(s_0543 / ic0543) + ep1131_133 * log(s_1131 / ic1131))) - (0.3432 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1138) = (cell * v0_162 * (1 + ep0875_162 * log(s_0875 / ic0875) + ep1138_162 * log(s_1138 / ic1138))) + (cell * v0_228 * (1 + ep0991_228 * log(s_0991 / ic0991) + ep1399_228 * log(s_1399 / ic1399) + ep1138_228 * log(s_1138 / ic1138) + ep1372_228 * log(s_1372 / ic1372))) - (cell * v0_227 * (1 + ep1138_227 * log(s_1138 / ic1138) + ep1333_227 * log(s_1333 / ic1333) + ep1334_227 * log(s_1334 / ic1334) + ep1399_227 * log(s_1399 / ic1399)));
    der(s_1141) = (cell * v0_112 * (1 + ep0378_112 * log(s_0378 / ic0378) + ep1552_112 * log(s_1552 / ic1552) + ep0755_112 * log(s_0755 / ic0755) + ep0377_112 * log(s_0377 / ic0377) + ep0476_112 * log(s_0476 / ic0476) + ep0333_112 * log(s_0333 / ic0333) + ep1141_112 * log(s_1141 / ic1141))) + (cell * v0_233 * (1 + ep0354_233 * log(s_0354 / ic0354) + ep1112_233 * log(s_1112 / ic1112) + ep1141_233 * log(s_1141 / ic1141) + ep0337_233 * log(s_0337 / ic0337))) + (cell * v0_342 * (1 + ep1552_342 * log(s_1552 / ic1552) + ep1336_342 * log(s_1336 / ic1336) + ep1189_342 * log(s_1189 / ic1189) + ep1407_342 * log(s_1407 / ic1407) + ep0333_342 * log(s_0333 / ic0333) + ep0738_342 * log(s_0738 / ic0738) + ep1141_342 * log(s_1141 / ic1141) + ep1335_342 * log(s_1335 / ic1335))) - (cell * v0_232 * (1 + ep0467_232 * log(s_0467 / ic0467) + ep1141_232 * log(s_1141 / ic1141) + ep1552_232 * log(s_1552 / ic1552) + ep1430_232 * log(s_1430 / ic1430) + ep0783_232 * log(s_0783 / ic0783))) - (0.1537 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1151) = (cell * v0_262 * (1 + ep1095_262 * log(s_1095 / ic1095) + ep1429_262 * log(s_1429 / ic1429) + ep0233_262 * log(s_0233 / ic0233) + ep1151_262 * log(s_1151 / ic1151))) - (0.1853 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1155) = (cell * v0_300 * (1 + ep0128_300 * log(s_0128 / ic0128) + ep1336_300 * log(s_1336 / ic1336) + ep1335_300 * log(s_1335 / ic1335) + ep1155_300 * log(s_1155 / ic1155))) - (0.2211 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1170) = (cell * v0_267 * (1 + ep1364_267 * log(s_1364 / ic1364) + ep1430_267 * log(s_1430 / ic1430) + ep1170_267 * log(s_1170 / ic1170))) - (cell * v0_184 * (1 + ep1170_184 * log(s_1170 / ic1170) + ep0337_184 * log(s_0337 / ic0337) + ep0929_184 * log(s_0929 / ic0929) + ep0336_184 * log(s_0336 / ic0336))) - (cell * v0_265 * (1 + ep0513_265 * log(s_0513 / ic0513) + ep1170_265 * log(s_1170 / ic1170) + ep0539_265 * log(s_0539 / ic0539) + ep1477_265 * log(s_1477 / ic1477))) - (cell * v0_266 * (1 + ep0512_266 * log(s_0512 / ic0512) + ep1170_266 * log(s_1170 / ic1170) + ep0539_266 * log(s_0539 / ic0539) + ep1476_266 * log(s_1476 / ic1476))) - (cell * v0_316 * (1 + ep0395_316 * log(s_0395 / ic0395) + ep1170_316 * log(s_1170 / ic1170) + ep1358_316 * log(s_1358 / ic1358) + ep0555_316 * log(s_0555 / ic0555))) - (0.2158 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1179) = (cell * v0_334 * (1 + ep1363_334 * log(s_1363 / ic1363) + ep1430_334 * log(s_1430 / ic1430) + ep1179_334 * log(s_1179 / ic1179))) - (cell * v0_223 * (1 + ep1179_223 * log(s_1179 / ic1179) + ep0232_223 * log(s_0232 / ic0232) + ep0451_223 * log(s_0451 / ic0451))) - (cell * v0_224 * (1 + ep1333_224 * log(s_1333 / ic1333) + ep1179_224 * log(s_1179 / ic1179) + ep1040_224 * log(s_1040 / ic1040) + ep1334_224 * log(s_1334 / ic1334))) - (cell * v0_333 * (1 + ep1179_333 * log(s_1179 / ic1179) + ep0381_333 * log(s_0381 / ic0381) + ep0929_333 * log(s_0929 / ic0929))) - (0.2537 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1185) = (cell * v0_341 * (1 + ep1009_341 * log(s_1009 / ic1009) + ep0451_341 * log(s_0451 / ic0451) + ep1531_341 * log(s_1531 / ic1531) + ep1185_341 * log(s_1185 / ic1185))) - (0.05684 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1189) = (cell * v0_343 * (1 + ep0262_343 * log(s_0262 / ic0262) + ep1095_343 * log(s_1095 / ic1095) + ep0233_343 * log(s_0233 / ic0233) + ep1189_343 * log(s_1189 / ic1189))) - (cell * v0_342 * (1 + ep1552_342 * log(s_1552 / ic1552) + ep1336_342 * log(s_1336 / ic1336) + ep1189_342 * log(s_1189 / ic1189) + ep1407_342 * log(s_1407 / ic1407) + ep0333_342 * log(s_0333 / ic0333) + ep0738_342 * log(s_0738 / ic0738) + ep1141_342 * log(s_1141 / ic1141) + ep1335_342 * log(s_1335 / ic1335))) - (0.1379 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1193) = (cell * v0_362 * (1 + ep0282_362 * log(s_0282 / ic0282) + ep1095_362 * log(s_1095 / ic1095) + ep0233_362 * log(s_0233 / ic0233) + ep1193_362 * log(s_1193 / ic1193))) - (0.4232 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1204) = (cell * v0_226 * (1 + ep0149_226 * log(s_0149 / ic0149) + ep1734_226 * log(s_1734 / ic1734) + ep1204_226 * log(s_1204 / ic1204) + ep1733_226 * log(s_1733 / ic1733))) - (cell * v0_327 * (1 + ep0467_327 * log(s_0467 / ic0467) + ep1204_327 * log(s_1204 / ic1204) + ep0421_327 * log(s_0421 / ic0421) + ep0147_327 * log(s_0147 / ic0147)));
    der(s_1211) = (cell * v0_322 * (1 + ep1316_322 * log(s_1316 / ic1316) + ep1211_322 * log(s_1211 / ic1211) + ep1595_322 * log(s_1595 / ic1595))) - (cell * v0_134 * (1 + ep1211_134 * log(s_1211 / ic1211) + ep1242_134 * log(s_1242 / ic1242)));
    der(s_1212) = (cell * v0_378 * (1 + ep1214_378 * log(s_1214 / ic1214) + ep1212_378 * log(s_1212 / ic1212))) - (0.008675 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1214) = 0.0;
    der(s_1216) = (cell * v0_230 * (1 + ep0397_230 * log(s_0397 / ic0397) + ep1217_230 * log(s_1217 / ic1217) + ep0555_230 * log(s_0555 / ic0555) + ep1216_230 * log(s_1216 / ic1216))) - (cell * v0_47 * (1 + ep1216_47 * log(s_1216 / ic1216) + ep1218_47 * log(s_1218 / ic1218) + ep0543_47 * log(s_0543 / ic0543) + ep0555_47 * log(s_0555 / ic0555) + ep0289_47 * log(s_0289 / ic0289))) - (cell * v0_50 * (1 + ep0910_50 * log(s_0910 / ic0910) + ep1216_50 * log(s_1216 / ic1216) + ep0397_50 * log(s_0397 / ic0397) + ep0543_50 * log(s_0543 / ic0543) + ep0290_50 * log(s_0290 / ic0290))) - (cell * v0_52 * (1 + ep0789_52 * log(s_0789 / ic0789) + ep1216_52 * log(s_1216 / ic1216) + ep0304_52 * log(s_0304 / ic0304) + ep0397_52 * log(s_0397 / ic0397) + ep0543_52 * log(s_0543 / ic0543)));
    der(s_1217) = (cell * v0_76 * (1 + ep0395_76 * log(s_0395 / ic0395) + ep0467_76 * log(s_0467 / ic0467) + ep0474_76 * log(s_0474 / ic0474) + ep0421_76 * log(s_0421 / ic0421) + ep1217_76 * log(s_1217 / ic1217) + ep1430_76 * log(s_1430 / ic1430))) - (cell * v0_229 * (1 + ep1552_229 * log(s_1552 / ic1552) + ep1217_229 * log(s_1217 / ic1217) + ep1551_229 * log(s_1551 / ic1551) + ep1218_229 * log(s_1218 / ic1218))) - (cell * v0_230 * (1 + ep0397_230 * log(s_0397 / ic0397) + ep1217_230 * log(s_1217 / ic1217) + ep0555_230 * log(s_0555 / ic0555) + ep1216_230 * log(s_1216 / ic1216)));
    der(s_1218) = (cell * v0_229 * (1 + ep1552_229 * log(s_1552 / ic1552) + ep1217_229 * log(s_1217 / ic1217) + ep1551_229 * log(s_1551 / ic1551) + ep1218_229 * log(s_1218 / ic1218))) - (cell * v0_47 * (1 + ep1216_47 * log(s_1216 / ic1216) + ep1218_47 * log(s_1218 / ic1218) + ep0543_47 * log(s_0543 / ic0543) + ep0555_47 * log(s_0555 / ic0555) + ep0289_47 * log(s_0289 / ic0289)));
    der(s_1239) = (cell * v0_143 * (1 + ep0052_143 * log(s_0052 / ic0052) + ep1240_143 * log(s_1240 / ic1240) + ep1239_143 * log(s_1239 / ic1239) + ep1394_143 * log(s_1394 / ic1394))) + (cell * v0_187 * (1 + ep0937_187 * log(s_0937 / ic0937) + ep1240_187 * log(s_1240 / ic1240) + ep0941_187 * log(s_0941 / ic0941) + ep1239_187 * log(s_1239 / ic1239))) - (cell * v0_371 * (1 + ep1239_371 * log(s_1239 / ic1239) + ep1372_371 * log(s_1372 / ic1372) + ep1240_371 * log(s_1240 / ic1240)));
    der(s_1240) = (cell * v0_371 * (1 + ep1239_371 * log(s_1239 / ic1239) + ep1372_371 * log(s_1372 / ic1372) + ep1240_371 * log(s_1240 / ic1240))) - (cell * v0_143 * (1 + ep0052_143 * log(s_0052 / ic0052) + ep1240_143 * log(s_1240 / ic1240) + ep1239_143 * log(s_1239 / ic1239) + ep1394_143 * log(s_1394 / ic1394))) - (cell * v0_187 * (1 + ep0937_187 * log(s_0937 / ic0937) + ep1240_187 * log(s_1240 / ic1240) + ep0941_187 * log(s_0941 / ic0941) + ep1239_187 * log(s_1239 / ic1239)));
    der(s_1242) = (cell * v0_134 * (1 + ep1211_134 * log(s_1211 / ic1211) + ep1242_134 * log(s_1242 / ic1242))) - (cell * v0_133 * (1 + ep1242_133 * log(s_1242 / ic1242) + ep0543_133 * log(s_0543 / ic0543) + ep1131_133 * log(s_1131 / ic1131))) - (cell * v0_353 * (1 + ep1242_353 * log(s_1242 / ic1242) + ep0467_353 * log(s_0467 / ic0467) + ep1754_353 * log(s_1754 / ic1754) + ep0421_353 * log(s_0421 / ic0421) + ep1430_353 * log(s_1430 / ic1430) + ep1752_353 * log(s_1752 / ic1752)));
    der(s_1248) = (cell * v0_292 * (1 + ep1492_292 * log(s_1492 / ic1492) + ep1248_292 * log(s_1248 / ic1248) + ep1491_292 * log(s_1491 / ic1491))) - (cell * max(v0_380 * (1 + ep1248_380 * log(s_1248 / ic1248)), zero_flux));
    der(s_1250) = 0.0;
    der(s_1255) = (cell * v0_379 * (1 + ep1257_379 * log(s_1257 / ic1257) + ep1255_379 * log(s_1255 / ic1255))) - (0.000691 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1257) = 0.0;
    der(s_1258) = (cell * v0_239 * (1 + ep0467_239 * log(s_0467 / ic0467) + ep1259_239 * log(s_1259 / ic1259) + ep1258_239 * log(s_1258 / ic1258) + ep0783_239 * log(s_0783 / ic0783))) - (cell * v0_235 * (1 + ep1018_235 * log(s_1018 / ic1018) + ep1258_235 * log(s_1258 / ic1258) + ep1334_235 * log(s_1334 / ic1334) + ep0454_235 * log(s_0454 / ic0454) + ep1017_235 * log(s_1017 / ic1017) + ep1260_235 * log(s_1260 / ic1260) + ep1333_235 * log(s_1333 / ic1333)));
    der(s_1259) = (2.0 * cell * v0_238 * (1 + ep0585_238 * log(s_0585 / ic0585) + ep0579_238 * log(s_0579 / ic0579) + ep1260_238 * log(s_1260 / ic1260) + ep1259_238 * log(s_1259 / ic1259) + ep1265_238 * log(s_1265 / ic1265))) - (cell * v0_239 * (1 + ep0467_239 * log(s_0467 / ic0467) + ep1259_239 * log(s_1259 / ic1259) + ep1258_239 * log(s_1258 / ic1258) + ep0783_239 * log(s_0783 / ic0783)));
    der(s_1260) = (cell * v0_235 * (1 + ep1018_235 * log(s_1018 / ic1018) + ep1258_235 * log(s_1258 / ic1258) + ep1334_235 * log(s_1334 / ic1334) + ep0454_235 * log(s_0454 / ic0454) + ep1017_235 * log(s_1017 / ic1017) + ep1260_235 * log(s_1260 / ic1260) + ep1333_235 * log(s_1333 / ic1333))) - (2.0 * cell * v0_238 * (1 + ep0585_238 * log(s_0585 / ic0585) + ep0579_238 * log(s_0579 / ic0579) + ep1260_238 * log(s_1260 / ic1260) + ep1259_238 * log(s_1259 / ic1259) + ep1265_238 * log(s_1265 / ic1265)));
    der(s_1261) = (cell * v0_381 * (1 + ep1263_381 * log(s_1263 / ic1263) + ep1261_381 * log(s_1261 / ic1261))) - (cell * v0_236 * (1 + ep1261_236 * log(s_1261 / ic1261) + ep0420_236 * log(s_0420 / ic0420) + ep0454_236 * log(s_0454 / ic0454) + ep0579_236 * log(s_0579 / ic0579) + ep1264_236 * log(s_1264 / ic1264))) - (7e-06 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1263) = 0.0;
    der(s_1264) = (cell * v0_236 * (1 + ep1261_236 * log(s_1261 / ic1261) + ep0420_236 * log(s_0420 / ic0420) + ep0454_236 * log(s_0454 / ic0454) + ep0579_236 * log(s_0579 / ic0579) + ep1264_236 * log(s_1264 / ic1264))) - (cell * v0_113 * (1 + ep1264_113 * log(s_1264 / ic1264) + ep0420_113 * log(s_0420 / ic0420) + ep0454_113 * log(s_0454 / ic0454) + ep0479_113 * log(s_0479 / ic0479) + ep0579_113 * log(s_0579 / ic0579)));
    der(s_1265) = (cell * v0_238 * (1 + ep0585_238 * log(s_0585 / ic0585) + ep0579_238 * log(s_0579 / ic0579) + ep1260_238 * log(s_1260 / ic1260) + ep1259_238 * log(s_1259 / ic1259) + ep1265_238 * log(s_1265 / ic1265))) - (cell * v0_237 * (1 + ep0467_237 * log(s_0467 / ic0467) + ep1265_237 * log(s_1265 / ic1265) + ep0420_237 * log(s_0420 / ic0420) + ep0783_237 * log(s_0783 / ic0783)));
    der(s_1274) = (cell * v0_104 * (1 + ep1072_104 * log(s_1072 / ic1072) + ep0467_104 * log(s_0467 / ic0467) + ep1081_104 * log(s_1081 / ic1081) + ep0454_104 * log(s_0454 / ic0454) + ep1274_104 * log(s_1274 / ic1274) + ep0783_104 * log(s_0783 / ic0783))) - (cell * v0_103 * (1 + ep1274_103 * log(s_1274 / ic1274) + ep1061_103 * log(s_1061 / ic1061) + ep0875_103 * log(s_0875 / ic0875)));
    der(s_1277) = (cell * v0_276 * (1 + ep0599_276 * log(s_0599 / ic0599) + ep0575_276 * log(s_0575 / ic0575) + ep1083_276 * log(s_1083 / ic1083) + ep1277_276 * log(s_1277 / ic1277) + ep0539_276 * log(s_0539 / ic0539) + ep0783_276 * log(s_0783 / ic0783))) - (cell * v0_277 * (1 + ep1277_277 * log(s_1277 / ic1277) + ep0543_277 * log(s_0543 / ic0543) + ep1413_277 * log(s_1413 / ic1413)));
    der(s_1278) = (cell * v0_100 * (1 + ep0457_100 * log(s_0457 / ic0457) + ep0360_100 * log(s_0360 / ic0360) + ep0783_100 * log(s_0783 / ic0783) + ep1278_100 * log(s_1278 / ic1278))) - (cell * v0_286 * (1 + ep1278_286 * log(s_1278 / ic1278) + ep0096_286 * log(s_0096 / ic0096)));
    der(s_1287) = (cell * v0_165 * (1 + ep0395_165 * log(s_0395 / ic0395) + ep0653_165 * log(s_0653 / ic0653) + ep1287_165 * log(s_1287 / ic1287) + ep0555_165 * log(s_0555 / ic0555))) - (cell * v0_349 * (1 + ep1287_349 * log(s_1287 / ic1287) + ep1792_349 * log(s_1792 / ic1792) + ep0783_349 * log(s_0783 / ic0783) + ep1745_349 * log(s_1745 / ic1745)));
    der(s_1302) = (cell * v0_242 * (1 + ep0395_242 * log(s_0395 / ic0395) + ep1095_242 * log(s_1095 / ic1095) + ep1302_242 * log(s_1302 / ic1302) + ep0555_242 * log(s_0555 / ic0555))) - (cell * v0_77 * (1 + ep1302_77 * log(s_1302 / ic1302) + ep0467_77 * log(s_0467 / ic0467) + ep1304_77 * log(s_1304 / ic1304) + ep0421_77 * log(s_0421 / ic0421)));
    der(s_1303) = (cell * v0_241 * (1 + ep1304_241 * log(s_1304 / ic1304) + ep1336_241 * log(s_1336 / ic1336) + ep1303_241 * log(s_1303 / ic1303) + ep1335_241 * log(s_1335 / ic1335) + ep1430_241 * log(s_1430 / ic1430))) - (cell * v0_79 * (1 + ep1303_79 * log(s_1303 / ic1303) + ep1095_79 * log(s_1095 / ic1095) + ep1321_79 * log(s_1321 / ic1321) + ep0233_79 * log(s_0233 / ic0233)));
    der(s_1304) = (cell * v0_77 * (1 + ep1302_77 * log(s_1302 / ic1302) + ep0467_77 * log(s_0467 / ic0467) + ep1304_77 * log(s_1304 / ic1304) + ep0421_77 * log(s_0421 / ic0421))) - (cell * v0_241 * (1 + ep1304_241 * log(s_1304 / ic1304) + ep1336_241 * log(s_1336 / ic1336) + ep1303_241 * log(s_1303 / ic1303) + ep1335_241 * log(s_1335 / ic1335) + ep1430_241 * log(s_1430 / ic1430)));
    der(s_1312) = (cell * v0_107 * (1 + ep1072_107 * log(s_1072 / ic1072) + ep0502_107 * log(s_0502 / ic0502) + ep1312_107 * log(s_1312 / ic1312) + ep1430_107 * log(s_1430 / ic1430))) - (cell * v0_142 * (1 + ep1312_142 * log(s_1312 / ic1312) + ep0052_142 * log(s_0052 / ic0052)));
    der(s_1315) = (cell * v0_328 * (1 + ep1599_328 * log(s_1599 / ic1599) + ep0148_328 * log(s_0148 / ic0148) + ep0555_328 * log(s_0555 / ic0555) + ep1315_328 * log(s_1315 / ic1315))) - (cell * v0_323 * (1 + ep1095_323 * log(s_1095 / ic1095) + ep1315_323 * log(s_1315 / ic1315) + ep0233_323 * log(s_0233 / ic0233) + ep1316_323 * log(s_1316 / ic1316)));
    der(s_1316) = (cell * v0_323 * (1 + ep1095_323 * log(s_1095 / ic1095) + ep1315_323 * log(s_1315 / ic1315) + ep0233_323 * log(s_0233 / ic0233) + ep1316_323 * log(s_1316 / ic1316))) - (cell * v0_322 * (1 + ep1316_322 * log(s_1316 / ic1316) + ep1211_322 * log(s_1211 / ic1211) + ep1595_322 * log(s_1595 / ic1595)));
    der(s_1318) = (cell * v0_288 * (1 + ep0467_288 * log(s_0467 / ic0467) + ep0929_288 * log(s_0929 / ic0929) + ep0361_288 * log(s_0361 / ic0361) + ep0421_288 * log(s_0421 / ic0421) + ep1318_288 * log(s_1318 / ic1318) + ep1430_288 * log(s_1430 / ic1430))) - (cell * v0_163 * (1 + ep0467_163 * log(s_0467 / ic0467) + ep0867_163 * log(s_0867 / ic0867) + ep1318_163 * log(s_1318 / ic1318) + ep0421_163 * log(s_0421 / ic0421) + ep1322_163 * log(s_1322 / ic1322) + ep1430_163 * log(s_1430 / ic1430)));
    der(s_1321) = (cell * v0_79 * (1 + ep1303_79 * log(s_1303 / ic1303) + ep1095_79 * log(s_1095 / ic1095) + ep1321_79 * log(s_1321 / ic1321) + ep0233_79 * log(s_0233 / ic0233))) - (cell * v0_78 * (1 + ep1321_78 * log(s_1321 / ic1321) + ep0384_78 * log(s_0384 / ic0384) + ep1391_78 * log(s_1391 / ic1391)));
    der(s_1322) = (cell * v0_163 * (1 + ep0467_163 * log(s_0467 / ic0467) + ep0867_163 * log(s_0867 / ic0867) + ep1318_163 * log(s_1318 / ic1318) + ep0421_163 * log(s_0421 / ic0421) + ep1322_163 * log(s_1322 / ic1322) + ep1430_163 * log(s_1430 / ic1430))) - (cell * v0_287 * (1 + ep0467_287 * log(s_0467 / ic0467) + ep1322_287 * log(s_1322 / ic1322) + ep1101_287 * log(s_1101 / ic1101) + ep0421_287 * log(s_0421 / ic0421) + ep0162_287 * log(s_0162 / ic0162) + ep1095_287 * log(s_1095 / ic1095) + ep1430_287 * log(s_1430 / ic1430)));
    der(s_1327) = (cell * v0_96 * (1 + ep1072_96 * log(s_1072 / ic1072) + ep0945_96 * log(s_0945 / ic0945) + ep1006_96 * log(s_1006 / ic1006) + ep1327_96 * log(s_1327 / ic1327) + ep0896_96 * log(s_0896 / ic0896) + ep1430_96 * log(s_1430 / ic1430))) - (cell * v0_97 * (1 + ep1327_97 * log(s_1327 / ic1327) + ep0454_97 * log(s_0454 / ic0454) + ep0875_97 * log(s_0875 / ic0875)));
    der(s_1329) = (cell * v0_384 * (1 + ep1331_384 * log(s_1331 / ic1331) + ep1329_384 * log(s_1329 / ic1329))) - (0.000323 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1331) = 0.0;
    der(s_1333) = (cell * v0_6 * (1 + ep0123_6 * log(s_0123 / ic0123) + ep1334_6 * log(s_1334 / ic1334) + ep0779_6 * log(s_0779 / ic0779) + ep1333_6 * log(s_1333 / ic1333))) + (cell * v0_7 * (1 + ep0123_7 * log(s_0123 / ic0123) + ep1334_7 * log(s_1334 / ic1334) + ep1028_7 * log(s_1028 / ic1028) + ep1333_7 * log(s_1333 / ic1333))) + (cell * v0_35 * (1 + ep0293_35 * log(s_0293 / ic0293) + ep1334_35 * log(s_1334 / ic1334) + ep0044_35 * log(s_0044 / ic0044) + ep1333_35 * log(s_1333 / ic1333))) + (cell * v0_36 * (1 + ep0295_36 * log(s_0295 / ic0295) + ep1334_36 * log(s_1334 / ic1334) + ep0045_36 * log(s_0045 / ic0045) + ep1333_36 * log(s_1333 / ic1333))) + (cell * v0_37 * (1 + ep0297_37 * log(s_0297 / ic0297) + ep1334_37 * log(s_1334 / ic1334) + ep0046_37 * log(s_0046 / ic0046) + ep1333_37 * log(s_1333 / ic1333))) + (cell * v0_38 * (1 + ep0299_38 * log(s_0299 / ic0299) + ep1334_38 * log(s_1334 / ic1334) + ep0047_38 * log(s_0047 / ic0047) + ep1333_38 * log(s_1333 / ic1333))) + (cell * v0_39 * (1 + ep0303_39 * log(s_0303 / ic0303) + ep1334_39 * log(s_1334 / ic1334) + ep0049_39 * log(s_0049 / ic0049) + ep1333_39 * log(s_1333 / ic1333))) + (cell * v0_40 * (1 + ep0305_40 * log(s_0305 / ic0305) + ep1334_40 * log(s_1334 / ic1334) + ep0050_40 * log(s_0050 / ic0050) + ep1333_40 * log(s_1333 / ic1333))) + (cell * v0_41 * (1 + ep0391_41 * log(s_0391 / ic0391) + ep1334_41 * log(s_1334 / ic1334) + ep0043_41 * log(s_0043 / ic0043) + ep1333_41 * log(s_1333 / ic1333))) + (cell * v0_60 * (1 + ep0336_60 * log(s_0336 / ic0336) + ep1334_60 * log(s_1334 / ic1334) + ep0354_60 * log(s_0354 / ic0354) + ep1333_60 * log(s_1333 / ic1333))) + (cell * v0_155 * (1 + ep0859_155 * log(s_0859 / ic0859) + ep1334_155 * log(s_1334 / ic1334) + ep0860_155 * log(s_0860 / ic0860) + ep1333_155 * log(s_1333 / ic1333))) + (cell * v0_235 * (1 + ep1018_235 * log(s_1018 / ic1018) + ep1258_235 * log(s_1258 / ic1258) + ep1334_235 * log(s_1334 / ic1334) + ep0454_235 * log(s_0454 / ic0454) + ep1017_235 * log(s_1017 / ic1017) + ep1260_235 * log(s_1260 / ic1260) + ep1333_235 * log(s_1333 / ic1333))) + (cell * v0_244 * (1 + ep0467_244 * log(s_0467 / ic0467) + ep0732_244 * log(s_0732 / ic0732) + ep0451_244 * log(s_0451 / ic0451) + ep0454_244 * log(s_0454 / ic0454) + ep1333_244 * log(s_1333 / ic1333) + ep0783_244 * log(s_0783 / ic0783))) + (cell * v0_326 * (1 + ep0214_326 * log(s_0214 / ic0214) + ep1334_326 * log(s_1334 / ic1334) + ep0029_326 * log(s_0029 / ic0029) + ep1333_326 * log(s_1333 / ic1333))) + (cell * v0_383 * (1 + ep1334_383 * log(s_1334 / ic1334) + ep1335_383 * log(s_1335 / ic1335) + ep1333_383 * log(s_1333 / ic1333) + ep1336_383 * log(s_1336 / ic1336))) - (cell * v0_43 * (1 + ep0265_43 * log(s_0265 / ic0265) + ep1333_43 * log(s_1333 / ic1333) + ep0267_43 * log(s_0267 / ic0267) + ep1334_43 * log(s_1334 / ic1334))) - (cell * v0_56 * (1 + ep0342_56 * log(s_0342 / ic0342) + ep1333_56 * log(s_1333 / ic1333) + ep0313_56 * log(s_0313 / ic0313) + ep0867_56 * log(s_0867 / ic0867) + ep1334_56 * log(s_1334 / ic1334))) - (cell * v0_66 * (1 + ep0381_66 * log(s_0381 / ic0381) + ep0555_66 * log(s_0555 / ic0555) + ep1333_66 * log(s_1333 / ic1333) + ep0395_66 * log(s_0395 / ic0395) + ep1334_66 * log(s_1334 / ic1334))) - (cell * v0_153 * (1 + ep0331_153 * log(s_0331 / ic0331) + ep1333_153 * log(s_1333 / ic1333) + ep1334_153 * log(s_1334 / ic1334) + ep0231_153 * log(s_0231 / ic0231))) - (cell * v0_154 * (1 + ep0621_154 * log(s_0621 / ic0621) + ep1333_154 * log(s_1333 / ic1333) + ep0331_154 * log(s_0331 / ic0331) + ep1334_154 * log(s_1334 / ic1334))) - (cell * v0_178 * (1 + ep0913_178 * log(s_0913 / ic0913) + ep1333_178 * log(s_1333 / ic1333) + ep1430_178 * log(s_1430 / ic1430) + ep0307_178 * log(s_0307 / ic0307) + ep1334_178 * log(s_1334 / ic1334))) - (cell * v0_185 * (1 + ep0936_185 * log(s_0936 / ic0936) + ep1333_185 * log(s_1333 / ic1333) + ep0937_185 * log(s_0937 / ic0937) + ep1334_185 * log(s_1334 / ic1334))) - (2.0 * cell * v0_196 * (1 + ep1109_196 * log(s_1109 / ic1109) + ep1333_196 * log(s_1333 / ic1333) + ep1106_196 * log(s_1106 / ic1106) + ep1334_196 * log(s_1334 / ic1334))) - (cell * v0_207 * (1 + ep1006_207 * log(s_1006 / ic1006) + ep1333_207 * log(s_1333 / ic1333) + ep1334_207 * log(s_1334 / ic1334) + ep1799_207 * log(s_1799 / ic1799))) - (cell * v0_224 * (1 + ep1333_224 * log(s_1333 / ic1333) + ep1179_224 * log(s_1179 / ic1179) + ep1040_224 * log(s_1040 / ic1040) + ep1334_224 * log(s_1334 / ic1334))) - (cell * v0_227 * (1 + ep1138_227 * log(s_1138 / ic1138) + ep1333_227 * log(s_1333 / ic1333) + ep1334_227 * log(s_1334 / ic1334) + ep1399_227 * log(s_1399 / ic1399))) - (cell * v0_243 * (1 + ep0467_243 * log(s_0467 / ic0467) + ep1333_243 * log(s_1333 / ic1333) + ep0421_243 * log(s_0421 / ic0421) + ep1335_243 * log(s_1335 / ic1335))) - (cell * v0_272 * (1 + ep0306_272 * log(s_0306 / ic0306) + ep1333_272 * log(s_1333 / ic1333) + ep0308_272 * log(s_0308 / ic0308) + ep1334_272 * log(s_1334 / ic1334))) - (cell * v0_296 * (1 + ep1333_296 * log(s_1333 / ic1333) + ep1497_296 * log(s_1497 / ic1497) + ep0262_296 * log(s_0262 / ic0262) + ep0543_296 * log(s_0543 / ic0543) + ep1334_296 * log(s_1334 / ic1334))) - (cell * v0_299 * (1 + ep0116_299 * log(s_0116 / ic0116) + ep1333_299 * log(s_1333 / ic1333) + ep1362_299 * log(s_1362 / ic1362) + ep0543_299 * log(s_0543 / ic0543) + ep1334_299 * log(s_1334 / ic1334) + ep1530_299 * log(s_1530 / ic1530) + ep1430_299 * log(s_1430 / ic1430))) - (cell * v0_301 * (1 + ep0555_301 * log(s_0555 / ic0555) + ep1333_301 * log(s_1333 / ic1333) + ep1531_301 * log(s_1531 / ic1531) + ep0395_301 * log(s_0395 / ic0395) + ep0543_301 * log(s_0543 / ic0543) + ep1334_301 * log(s_1334 / ic1334))) - (cell * v0_319 * (1 + ep0768_319 * log(s_0768 / ic0768) + ep1333_319 * log(s_1333 / ic1333) + ep1334_319 * log(s_1334 / ic1334) + ep1578_319 * log(s_1578 / ic1578))) - (cell * v0_390 * (1 + ep0229_390 * log(s_0229 / ic0229) + ep0467_390 * log(s_0467 / ic0467) + ep1333_390 * log(s_1333 / ic1333) + ep0226_390 * log(s_0226 / ic0226) + ep0421_390 * log(s_0421 / ic0421) + ep1334_390 * log(s_1334 / ic1334) + ep1430_390 * log(s_1430 / ic1430))) - (cell * v0_392 * (1 + ep1333_392 * log(s_1333 / ic1333) + ep1530_392 * log(s_1530 / ic1530) + ep1334_392 * log(s_1334 / ic1334) + ep1522_392 * log(s_1522 / ic1522))) - (0.001831 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1334) = (cell * v0_43 * (1 + ep0265_43 * log(s_0265 / ic0265) + ep1333_43 * log(s_1333 / ic1333) + ep0267_43 * log(s_0267 / ic0267) + ep1334_43 * log(s_1334 / ic1334))) + (cell * v0_56 * (1 + ep0342_56 * log(s_0342 / ic0342) + ep1333_56 * log(s_1333 / ic1333) + ep0313_56 * log(s_0313 / ic0313) + ep0867_56 * log(s_0867 / ic0867) + ep1334_56 * log(s_1334 / ic1334))) + (cell * v0_66 * (1 + ep0381_66 * log(s_0381 / ic0381) + ep0555_66 * log(s_0555 / ic0555) + ep1333_66 * log(s_1333 / ic1333) + ep0395_66 * log(s_0395 / ic0395) + ep1334_66 * log(s_1334 / ic1334))) + (cell * v0_153 * (1 + ep0331_153 * log(s_0331 / ic0331) + ep1333_153 * log(s_1333 / ic1333) + ep1334_153 * log(s_1334 / ic1334) + ep0231_153 * log(s_0231 / ic0231))) + (cell * v0_154 * (1 + ep0621_154 * log(s_0621 / ic0621) + ep1333_154 * log(s_1333 / ic1333) + ep0331_154 * log(s_0331 / ic0331) + ep1334_154 * log(s_1334 / ic1334))) + (cell * v0_178 * (1 + ep0913_178 * log(s_0913 / ic0913) + ep1333_178 * log(s_1333 / ic1333) + ep1430_178 * log(s_1430 / ic1430) + ep0307_178 * log(s_0307 / ic0307) + ep1334_178 * log(s_1334 / ic1334))) + (cell * v0_185 * (1 + ep0936_185 * log(s_0936 / ic0936) + ep1333_185 * log(s_1333 / ic1333) + ep0937_185 * log(s_0937 / ic0937) + ep1334_185 * log(s_1334 / ic1334))) + (2.0 * cell * v0_196 * (1 + ep1109_196 * log(s_1109 / ic1109) + ep1333_196 * log(s_1333 / ic1333) + ep1106_196 * log(s_1106 / ic1106) + ep1334_196 * log(s_1334 / ic1334))) + (cell * v0_207 * (1 + ep1006_207 * log(s_1006 / ic1006) + ep1333_207 * log(s_1333 / ic1333) + ep1334_207 * log(s_1334 / ic1334) + ep1799_207 * log(s_1799 / ic1799))) + (cell * v0_224 * (1 + ep1333_224 * log(s_1333 / ic1333) + ep1179_224 * log(s_1179 / ic1179) + ep1040_224 * log(s_1040 / ic1040) + ep1334_224 * log(s_1334 / ic1334))) + (cell * v0_227 * (1 + ep1138_227 * log(s_1138 / ic1138) + ep1333_227 * log(s_1333 / ic1333) + ep1334_227 * log(s_1334 / ic1334) + ep1399_227 * log(s_1399 / ic1399))) + (cell * v0_272 * (1 + ep0306_272 * log(s_0306 / ic0306) + ep1333_272 * log(s_1333 / ic1333) + ep0308_272 * log(s_0308 / ic0308) + ep1334_272 * log(s_1334 / ic1334))) + (cell * v0_296 * (1 + ep1333_296 * log(s_1333 / ic1333) + ep1497_296 * log(s_1497 / ic1497) + ep0262_296 * log(s_0262 / ic0262) + ep0543_296 * log(s_0543 / ic0543) + ep1334_296 * log(s_1334 / ic1334))) + (cell * v0_299 * (1 + ep0116_299 * log(s_0116 / ic0116) + ep1333_299 * log(s_1333 / ic1333) + ep1362_299 * log(s_1362 / ic1362) + ep0543_299 * log(s_0543 / ic0543) + ep1334_299 * log(s_1334 / ic1334) + ep1530_299 * log(s_1530 / ic1530) + ep1430_299 * log(s_1430 / ic1430))) + (cell * v0_301 * (1 + ep0555_301 * log(s_0555 / ic0555) + ep1333_301 * log(s_1333 / ic1333) + ep1531_301 * log(s_1531 / ic1531) + ep0395_301 * log(s_0395 / ic0395) + ep0543_301 * log(s_0543 / ic0543) + ep1334_301 * log(s_1334 / ic1334))) + (cell * v0_319 * (1 + ep0768_319 * log(s_0768 / ic0768) + ep1333_319 * log(s_1333 / ic1333) + ep1334_319 * log(s_1334 / ic1334) + ep1578_319 * log(s_1578 / ic1578))) + (cell * v0_390 * (1 + ep0229_390 * log(s_0229 / ic0229) + ep0467_390 * log(s_0467 / ic0467) + ep1333_390 * log(s_1333 / ic1333) + ep0226_390 * log(s_0226 / ic0226) + ep0421_390 * log(s_0421 / ic0421) + ep1334_390 * log(s_1334 / ic1334) + ep1430_390 * log(s_1430 / ic1430))) + (cell * v0_392 * (1 + ep1333_392 * log(s_1333 / ic1333) + ep1530_392 * log(s_1530 / ic1530) + ep1334_392 * log(s_1334 / ic1334) + ep1522_392 * log(s_1522 / ic1522))) - (cell * v0_6 * (1 + ep0123_6 * log(s_0123 / ic0123) + ep1334_6 * log(s_1334 / ic1334) + ep0779_6 * log(s_0779 / ic0779) + ep1333_6 * log(s_1333 / ic1333))) - (cell * v0_7 * (1 + ep0123_7 * log(s_0123 / ic0123) + ep1334_7 * log(s_1334 / ic1334) + ep1028_7 * log(s_1028 / ic1028) + ep1333_7 * log(s_1333 / ic1333))) - (cell * v0_35 * (1 + ep0293_35 * log(s_0293 / ic0293) + ep1334_35 * log(s_1334 / ic1334) + ep0044_35 * log(s_0044 / ic0044) + ep1333_35 * log(s_1333 / ic1333))) - (cell * v0_36 * (1 + ep0295_36 * log(s_0295 / ic0295) + ep1334_36 * log(s_1334 / ic1334) + ep0045_36 * log(s_0045 / ic0045) + ep1333_36 * log(s_1333 / ic1333))) - (cell * v0_37 * (1 + ep0297_37 * log(s_0297 / ic0297) + ep1334_37 * log(s_1334 / ic1334) + ep0046_37 * log(s_0046 / ic0046) + ep1333_37 * log(s_1333 / ic1333))) - (cell * v0_38 * (1 + ep0299_38 * log(s_0299 / ic0299) + ep1334_38 * log(s_1334 / ic1334) + ep0047_38 * log(s_0047 / ic0047) + ep1333_38 * log(s_1333 / ic1333))) - (cell * v0_39 * (1 + ep0303_39 * log(s_0303 / ic0303) + ep1334_39 * log(s_1334 / ic1334) + ep0049_39 * log(s_0049 / ic0049) + ep1333_39 * log(s_1333 / ic1333))) - (cell * v0_40 * (1 + ep0305_40 * log(s_0305 / ic0305) + ep1334_40 * log(s_1334 / ic1334) + ep0050_40 * log(s_0050 / ic0050) + ep1333_40 * log(s_1333 / ic1333))) - (cell * v0_41 * (1 + ep0391_41 * log(s_0391 / ic0391) + ep1334_41 * log(s_1334 / ic1334) + ep0043_41 * log(s_0043 / ic0043) + ep1333_41 * log(s_1333 / ic1333))) - (cell * v0_60 * (1 + ep0336_60 * log(s_0336 / ic0336) + ep1334_60 * log(s_1334 / ic1334) + ep0354_60 * log(s_0354 / ic0354) + ep1333_60 * log(s_1333 / ic1333))) - (cell * v0_155 * (1 + ep0859_155 * log(s_0859 / ic0859) + ep1334_155 * log(s_1334 / ic1334) + ep0860_155 * log(s_0860 / ic0860) + ep1333_155 * log(s_1333 / ic1333))) - (cell * v0_235 * (1 + ep1018_235 * log(s_1018 / ic1018) + ep1258_235 * log(s_1258 / ic1258) + ep1334_235 * log(s_1334 / ic1334) + ep0454_235 * log(s_0454 / ic0454) + ep1017_235 * log(s_1017 / ic1017) + ep1260_235 * log(s_1260 / ic1260) + ep1333_235 * log(s_1333 / ic1333))) - (cell * v0_326 * (1 + ep0214_326 * log(s_0214 / ic0214) + ep1334_326 * log(s_1334 / ic1334) + ep0029_326 * log(s_0029 / ic0029) + ep1333_326 * log(s_1333 / ic1333))) - (cell * v0_383 * (1 + ep1334_383 * log(s_1334 / ic1334) + ep1335_383 * log(s_1335 / ic1335) + ep1333_383 * log(s_1333 / ic1333) + ep1336_383 * log(s_1336 / ic1336)));
    der(s_1335) = (cell * v0_3 * (1 + ep0116_3 * log(s_0116 / ic0116) + ep1336_3 * log(s_1336 / ic1336) + ep0194_3 * log(s_0194 / ic0194) + ep1335_3 * log(s_1335 / ic1335))) + (cell * v0_12 * (1 + ep0203_12 * log(s_0203 / ic0203) + ep1336_12 * log(s_1336 / ic1336) + ep1335_12 * log(s_1335 / ic1335) + ep0032_12 * log(s_0032 / ic0032))) + (cell * v0_46 * (1 + ep1336_46 * log(s_1336 / ic1336) + ep0289_46 * log(s_0289 / ic0289) + ep0276_46 * log(s_0276 / ic0276) + ep1335_46 * log(s_1335 / ic1335))) + (cell * v0_49 * (1 + ep1336_49 * log(s_1336 / ic1336) + ep0290_49 * log(s_0290 / ic0290) + ep0277_49 * log(s_0277 / ic0277) + ep1335_49 * log(s_1335 / ic1335))) + (cell * v0_51 * (1 + ep0304_51 * log(s_0304 / ic0304) + ep1336_51 * log(s_1336 / ic1336) + ep0028_51 * log(s_0028 / ic0028) + ep1335_51 * log(s_1335 / ic1335))) + (cell * v0_61 * (1 + ep0347_61 * log(s_0347 / ic0347) + ep1336_61 * log(s_1336 / ic1336) + ep0346_61 * log(s_0346 / ic0346) + ep1335_61 * log(s_1335 / ic1335))) + (cell * v0_110 * (1 + ep0332_110 * log(s_0332 / ic0332) + ep1336_110 * log(s_1336 / ic1336) + ep1075_110 * log(s_1075 / ic1075) + ep1335_110 * log(s_1335 / ic1335) + ep1430_110 * log(s_1430 / ic1430))) + (cell * v0_136 * (1 + ep0155_136 * log(s_0155 / ic0155) + ep1336_136 * log(s_1336 / ic1336) + ep1335_136 * log(s_1335 / ic1335) + ep0148_136 * log(s_0148 / ic0148))) + (cell * v0_138 * (1 + ep0372_138 * log(s_0372 / ic0372) + ep1336_138 * log(s_1336 / ic1336) + ep1335_138 * log(s_1335 / ic1335) + ep0337_138 * log(s_0337 / ic0337))) + (cell * v0_151 * (1 + ep0812_151 * log(s_0812 / ic0812) + ep1336_151 * log(s_1336 / ic1336) + ep0910_151 * log(s_0910 / ic0910) + ep1335_151 * log(s_1335 / ic1335))) + (cell * v0_152 * (1 + ep0813_152 * log(s_0813 / ic0813) + ep1336_152 * log(s_1336 / ic1336) + ep1335_152 * log(s_1335 / ic1335) + ep1492_152 * log(s_1492 / ic1492))) + (cell * v0_169 * (1 + ep0233_169 * log(s_0233 / ic0233) + ep1336_169 * log(s_1336 / ic1336) + ep0451_169 * log(s_0451 / ic0451) + ep1095_169 * log(s_1095 / ic1095) + ep1335_169 * log(s_1335 / ic1335))) + (cell * v0_172 * (1 + ep1099_172 * log(s_1099 / ic1099) + ep1336_172 * log(s_1336 / ic1336) + ep1100_172 * log(s_1100 / ic1100) + ep1335_172 * log(s_1335 / ic1335) + ep1430_172 * log(s_1430 / ic1430))) + (cell * v0_176 * (1 + ep1105_176 * log(s_1105 / ic1105) + ep1336_176 * log(s_1336 / ic1336) + ep1098_176 * log(s_1098 / ic1098) + ep1335_176 * log(s_1335 / ic1335) + ep1690_176 * log(s_1690 / ic1690))) + (cell * v0_182 * (1 + ep0772_182 * log(s_0772 / ic0772) + ep1336_182 * log(s_1336 / ic1336) + ep0920_182 * log(s_0920 / ic0920) + ep1335_182 * log(s_1335 / ic1335))) + (cell * v0_199 * (1 + ep1075_199 * log(s_1075 / ic1075) + ep1336_199 * log(s_1336 / ic1336) + ep1113_199 * log(s_1113 / ic1113) + ep1335_199 * log(s_1335 / ic1335))) + (cell * v0_218 * (1 + ep0042_218 * log(s_0042 / ic0042) + ep1336_218 * log(s_1336 / ic1336) + ep0017_218 * log(s_0017 / ic0017) + ep1335_218 * log(s_1335 / ic1335))) + (cell * v0_219 * (1 + ep0041_219 * log(s_0041 / ic0041) + ep1336_219 * log(s_1336 / ic1336) + ep0018_219 * log(s_0018 / ic0018) + ep1335_219 * log(s_1335 / ic1335))) + (cell * v0_241 * (1 + ep1304_241 * log(s_1304 / ic1304) + ep1336_241 * log(s_1336 / ic1336) + ep1303_241 * log(s_1303 / ic1303) + ep1335_241 * log(s_1335 / ic1335) + ep1430_241 * log(s_1430 / ic1430))) + (cell * v0_243 * (1 + ep0467_243 * log(s_0467 / ic0467) + ep1333_243 * log(s_1333 / ic1333) + ep0421_243 * log(s_0421 / ic0421) + ep1335_243 * log(s_1335 / ic1335))) + (cell * v0_300 * (1 + ep0128_300 * log(s_0128 / ic0128) + ep1336_300 * log(s_1336 / ic1336) + ep1335_300 * log(s_1335 / ic1335) + ep1155_300 * log(s_1155 / ic1155))) + (cell * v0_317 * (1 + ep0270_317 * log(s_0270 / ic0270) + ep1336_317 * log(s_1336 / ic1336) + ep1335_317 * log(s_1335 / ic1335) + ep1571_317 * log(s_1571 / ic1571))) + (3.0 * cell * v0_325 * (1 + ep1336_325 * log(s_1336 / ic1336) + ep1612_325 * log(s_1612 / ic1612) + ep0994_325 * log(s_0994 / ic0994) + ep1335_325 * log(s_1335 / ic1335))) + (cell * v0_331 * (1 + ep0467_331 * log(s_0467 / ic0467) + ep0738_331 * log(s_0738 / ic0738) + ep0116_331 * log(s_0116 / ic0116) + ep1018_331 * log(s_1018 / ic1018) + ep1336_331 * log(s_1336 / ic1336) + ep0330_331 * log(s_0330 / ic0330) + ep0454_331 * log(s_0454 / ic0454) + ep0543_331 * log(s_0543 / ic0543) + ep1017_331 * log(s_1017 / ic1017) + ep1335_331 * log(s_1335 / ic1335) + ep0783_331 * log(s_0783 / ic0783))) + (cell * v0_332 * (1 + ep1336_332 * log(s_1336 / ic1336) + ep1406_332 * log(s_1406 / ic1406) + ep1335_332 * log(s_1335 / ic1335) + ep1544_332 * log(s_1544 / ic1544))) + (cell * v0_342 * (1 + ep1552_342 * log(s_1552 / ic1552) + ep1336_342 * log(s_1336 / ic1336) + ep1189_342 * log(s_1189 / ic1189) + ep1407_342 * log(s_1407 / ic1407) + ep0333_342 * log(s_0333 / ic0333) + ep0738_342 * log(s_0738 / ic0738) + ep1141_342 * log(s_1141 / ic1141) + ep1335_342 * log(s_1335 / ic1335))) + (cell * v0_346 * (1 + ep1336_346 * log(s_1336 / ic1336) + ep1742_346 * log(s_1742 / ic1742) + ep1335_346 * log(s_1335 / ic1335) + ep1750_346 * log(s_1750 / ic1750))) - (cell * v0_166 * (1 + ep0663_166 * log(s_0663 / ic0663) + ep1335_166 * log(s_1335 / ic1335) + ep0370_166 * log(s_0370 / ic0370) + ep1336_166 * log(s_1336 / ic1336))) - (cell * v0_216 * (1 + ep1027_216 * log(s_1027 / ic1027) + ep1335_216 * log(s_1335 / ic1335) + ep0233_216 * log(s_0233 / ic0233) + ep0543_216 * log(s_0543 / ic0543) + ep1336_216 * log(s_1336 / ic1336))) - (cell * v0_234 * (1 + ep0336_234 * log(s_0336 / ic0336) + ep1335_234 * log(s_1335 / ic1335) + ep0335_234 * log(s_0335 / ic0335) + ep1336_234 * log(s_1336 / ic1336))) - (cell * v0_383 * (1 + ep1334_383 * log(s_1334 / ic1334) + ep1335_383 * log(s_1335 / ic1335) + ep1333_383 * log(s_1333 / ic1333) + ep1336_383 * log(s_1336 / ic1336))) - (0.000447 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1336) = (cell * v0_166 * (1 + ep0663_166 * log(s_0663 / ic0663) + ep1335_166 * log(s_1335 / ic1335) + ep0370_166 * log(s_0370 / ic0370) + ep1336_166 * log(s_1336 / ic1336))) + (cell * v0_216 * (1 + ep1027_216 * log(s_1027 / ic1027) + ep1335_216 * log(s_1335 / ic1335) + ep0233_216 * log(s_0233 / ic0233) + ep0543_216 * log(s_0543 / ic0543) + ep1336_216 * log(s_1336 / ic1336))) + (cell * v0_234 * (1 + ep0336_234 * log(s_0336 / ic0336) + ep1335_234 * log(s_1335 / ic1335) + ep0335_234 * log(s_0335 / ic0335) + ep1336_234 * log(s_1336 / ic1336))) + (cell * v0_383 * (1 + ep1334_383 * log(s_1334 / ic1334) + ep1335_383 * log(s_1335 / ic1335) + ep1333_383 * log(s_1333 / ic1333) + ep1336_383 * log(s_1336 / ic1336))) - (cell * v0_3 * (1 + ep0116_3 * log(s_0116 / ic0116) + ep1336_3 * log(s_1336 / ic1336) + ep0194_3 * log(s_0194 / ic0194) + ep1335_3 * log(s_1335 / ic1335))) - (cell * v0_12 * (1 + ep0203_12 * log(s_0203 / ic0203) + ep1336_12 * log(s_1336 / ic1336) + ep1335_12 * log(s_1335 / ic1335) + ep0032_12 * log(s_0032 / ic0032))) - (cell * v0_46 * (1 + ep1336_46 * log(s_1336 / ic1336) + ep0289_46 * log(s_0289 / ic0289) + ep0276_46 * log(s_0276 / ic0276) + ep1335_46 * log(s_1335 / ic1335))) - (cell * v0_49 * (1 + ep1336_49 * log(s_1336 / ic1336) + ep0290_49 * log(s_0290 / ic0290) + ep0277_49 * log(s_0277 / ic0277) + ep1335_49 * log(s_1335 / ic1335))) - (cell * v0_51 * (1 + ep0304_51 * log(s_0304 / ic0304) + ep1336_51 * log(s_1336 / ic1336) + ep0028_51 * log(s_0028 / ic0028) + ep1335_51 * log(s_1335 / ic1335))) - (cell * v0_61 * (1 + ep0347_61 * log(s_0347 / ic0347) + ep1336_61 * log(s_1336 / ic1336) + ep0346_61 * log(s_0346 / ic0346) + ep1335_61 * log(s_1335 / ic1335))) - (cell * v0_110 * (1 + ep0332_110 * log(s_0332 / ic0332) + ep1336_110 * log(s_1336 / ic1336) + ep1075_110 * log(s_1075 / ic1075) + ep1335_110 * log(s_1335 / ic1335) + ep1430_110 * log(s_1430 / ic1430))) - (cell * v0_136 * (1 + ep0155_136 * log(s_0155 / ic0155) + ep1336_136 * log(s_1336 / ic1336) + ep1335_136 * log(s_1335 / ic1335) + ep0148_136 * log(s_0148 / ic0148))) - (cell * v0_138 * (1 + ep0372_138 * log(s_0372 / ic0372) + ep1336_138 * log(s_1336 / ic1336) + ep1335_138 * log(s_1335 / ic1335) + ep0337_138 * log(s_0337 / ic0337))) - (cell * v0_151 * (1 + ep0812_151 * log(s_0812 / ic0812) + ep1336_151 * log(s_1336 / ic1336) + ep0910_151 * log(s_0910 / ic0910) + ep1335_151 * log(s_1335 / ic1335))) - (cell * v0_152 * (1 + ep0813_152 * log(s_0813 / ic0813) + ep1336_152 * log(s_1336 / ic1336) + ep1335_152 * log(s_1335 / ic1335) + ep1492_152 * log(s_1492 / ic1492))) - (cell * v0_169 * (1 + ep0233_169 * log(s_0233 / ic0233) + ep1336_169 * log(s_1336 / ic1336) + ep0451_169 * log(s_0451 / ic0451) + ep1095_169 * log(s_1095 / ic1095) + ep1335_169 * log(s_1335 / ic1335))) - (cell * v0_172 * (1 + ep1099_172 * log(s_1099 / ic1099) + ep1336_172 * log(s_1336 / ic1336) + ep1100_172 * log(s_1100 / ic1100) + ep1335_172 * log(s_1335 / ic1335) + ep1430_172 * log(s_1430 / ic1430))) - (cell * v0_176 * (1 + ep1105_176 * log(s_1105 / ic1105) + ep1336_176 * log(s_1336 / ic1336) + ep1098_176 * log(s_1098 / ic1098) + ep1335_176 * log(s_1335 / ic1335) + ep1690_176 * log(s_1690 / ic1690))) - (cell * v0_182 * (1 + ep0772_182 * log(s_0772 / ic0772) + ep1336_182 * log(s_1336 / ic1336) + ep0920_182 * log(s_0920 / ic0920) + ep1335_182 * log(s_1335 / ic1335))) - (cell * v0_199 * (1 + ep1075_199 * log(s_1075 / ic1075) + ep1336_199 * log(s_1336 / ic1336) + ep1113_199 * log(s_1113 / ic1113) + ep1335_199 * log(s_1335 / ic1335))) - (cell * v0_218 * (1 + ep0042_218 * log(s_0042 / ic0042) + ep1336_218 * log(s_1336 / ic1336) + ep0017_218 * log(s_0017 / ic0017) + ep1335_218 * log(s_1335 / ic1335))) - (cell * v0_219 * (1 + ep0041_219 * log(s_0041 / ic0041) + ep1336_219 * log(s_1336 / ic1336) + ep0018_219 * log(s_0018 / ic0018) + ep1335_219 * log(s_1335 / ic1335))) - (cell * v0_241 * (1 + ep1304_241 * log(s_1304 / ic1304) + ep1336_241 * log(s_1336 / ic1336) + ep1303_241 * log(s_1303 / ic1303) + ep1335_241 * log(s_1335 / ic1335) + ep1430_241 * log(s_1430 / ic1430))) - (cell * v0_300 * (1 + ep0128_300 * log(s_0128 / ic0128) + ep1336_300 * log(s_1336 / ic1336) + ep1335_300 * log(s_1335 / ic1335) + ep1155_300 * log(s_1155 / ic1155))) - (cell * v0_317 * (1 + ep0270_317 * log(s_0270 / ic0270) + ep1336_317 * log(s_1336 / ic1336) + ep1335_317 * log(s_1335 / ic1335) + ep1571_317 * log(s_1571 / ic1571))) - (3.0 * cell * v0_325 * (1 + ep1336_325 * log(s_1336 / ic1336) + ep1612_325 * log(s_1612 / ic1612) + ep0994_325 * log(s_0994 / ic0994) + ep1335_325 * log(s_1335 / ic1335))) - (cell * v0_331 * (1 + ep0467_331 * log(s_0467 / ic0467) + ep0738_331 * log(s_0738 / ic0738) + ep0116_331 * log(s_0116 / ic0116) + ep1018_331 * log(s_1018 / ic1018) + ep1336_331 * log(s_1336 / ic1336) + ep0330_331 * log(s_0330 / ic0330) + ep0454_331 * log(s_0454 / ic0454) + ep0543_331 * log(s_0543 / ic0543) + ep1017_331 * log(s_1017 / ic1017) + ep1335_331 * log(s_1335 / ic1335) + ep0783_331 * log(s_0783 / ic0783))) - (cell * v0_332 * (1 + ep1336_332 * log(s_1336 / ic1336) + ep1406_332 * log(s_1406 / ic1406) + ep1335_332 * log(s_1335 / ic1335) + ep1544_332 * log(s_1544 / ic1544))) - (cell * v0_342 * (1 + ep1552_342 * log(s_1552 / ic1552) + ep1336_342 * log(s_1336 / ic1336) + ep1189_342 * log(s_1189 / ic1189) + ep1407_342 * log(s_1407 / ic1407) + ep0333_342 * log(s_0333 / ic0333) + ep0738_342 * log(s_0738 / ic0738) + ep1141_342 * log(s_1141 / ic1141) + ep1335_342 * log(s_1335 / ic1335))) - (cell * v0_346 * (1 + ep1336_346 * log(s_1336 / ic1336) + ep1742_346 * log(s_1742 / ic1742) + ep1335_346 * log(s_1335 / ic1335) + ep1750_346 * log(s_1750 / ic1750)));
    der(s_1340) = (cell * v0_246 * (1 + ep0360_246 * log(s_0360 / ic0360) + ep1537_246 * log(s_1537 / ic1537) + ep0543_246 * log(s_0543 / ic0543) + ep1340_246 * log(s_1340 / ic1340) + ep0783_246 * log(s_0783 / ic0783))) - (cell * v0_245 * (1 + ep0467_245 * log(s_0467 / ic0467) + ep1340_245 * log(s_1340 / ic1340) + ep0732_245 * log(s_0732 / ic0732) + ep0783_245 * log(s_0783 / ic0783)));
    der(s_1358) = (cell * v0_316 * (1 + ep0395_316 * log(s_0395 / ic0395) + ep1170_316 * log(s_1170 / ic1170) + ep1358_316 * log(s_1358 / ic1358) + ep0555_316 * log(s_0555 / ic0555))) - (cell * v0_127 * (1 + ep1358_127 * log(s_1358 / ic1358) + ep0994_127 * log(s_0994 / ic0994) + ep0384_127 * log(s_0384 / ic0384) + ep1083_127 * log(s_1083 / ic1083)));
    der(s_1362) = (cell * v0_252 * (1 + ep1095_252 * log(s_1095 / ic1095) + ep0231_252 * log(s_0231 / ic0231) + ep0233_252 * log(s_0233 / ic0233) + ep1362_252 * log(s_1362 / ic1362))) - (cell * v0_299 * (1 + ep0116_299 * log(s_0116 / ic0116) + ep1333_299 * log(s_1333 / ic1333) + ep1362_299 * log(s_1362 / ic1362) + ep0543_299 * log(s_0543 / ic0543) + ep1334_299 * log(s_1334 / ic1334) + ep1530_299 * log(s_1530 / ic1530) + ep1430_299 * log(s_1430 / ic1430)));
    der(s_1363) = (cell * v0_200 * (1 + ep0467_200 * log(s_0467 / ic0467) + ep1113_200 * log(s_1113 / ic1113) + ep0421_200 * log(s_0421 / ic0421) + ep1363_200 * log(s_1363 / ic1363))) - (cell * v0_334 * (1 + ep1363_334 * log(s_1363 / ic1363) + ep1430_334 * log(s_1430 / ic1430) + ep1179_334 * log(s_1179 / ic1179)));
    der(s_1364) = (cell * v0_290 * (1 + ep0308_290 * log(s_0308 / ic0308) + ep1095_290 * log(s_1095 / ic1095) + ep0233_290 * log(s_0233 / ic0233) + ep1364_290 * log(s_1364 / ic1364))) - (cell * v0_267 * (1 + ep1364_267 * log(s_1364 / ic1364) + ep1430_267 * log(s_1430 / ic1430) + ep1170_267 * log(s_1170 / ic1170)));
    der(s_1367) = (cell * v0_201 * (1 + ep1113_201 * log(s_1113 / ic1113) + ep1599_201 * log(s_1599 / ic1599) + ep0555_201 * log(s_0555 / ic0555) + ep1367_201 * log(s_1367 / ic1367))) - (cell * v0_253 * (1 + ep1083_253 * log(s_1083 / ic1083) + ep1367_253 * log(s_1367 / ic1367) + ep1082_253 * log(s_1082 / ic1082) + ep1595_253 * log(s_1595 / ic1595)));
    der(s_1372) = (cell * v0_228 * (1 + ep0991_228 * log(s_0991 / ic0991) + ep1399_228 * log(s_1399 / ic1399) + ep1138_228 * log(s_1138 / ic1138) + ep1372_228 * log(s_1372 / ic1372))) + (cell * v0_385 * (1 + ep1374_385 * log(s_1374 / ic1374) + ep1372_385 * log(s_1372 / ic1372))) - (cell * v0_123 * (1 + ep0565_123 * log(s_0565 / ic0565) + ep1372_123 * log(s_1372 / ic1372) + ep0543_123 * log(s_0543 / ic0543) + ep1512_123 * log(s_1512 / ic1512))) - (cell * v0_221 * (1 + ep1072_221 * log(s_1072 / ic1072) + ep1372_221 * log(s_1372 / ic1372) + ep0991_221 * log(s_0991 / ic0991) + ep1005_221 * log(s_1005 / ic1005))) - (1.5 * cell * v0_297 * (1 + ep1372_297 * log(s_1372 / ic1372) + ep1512_297 * log(s_1512 / ic1512) + ep1511_297 * log(s_1511 / ic1511))) - (0.5 * cell * v0_371 * (1 + ep1239_371 * log(s_1239 / ic1239) + ep1372_371 * log(s_1372 / ic1372) + ep1240_371 * log(s_1240 / ic1240))) - (0.5 * cell * v0_372 * (1 + ep1372_372 * log(s_1372 / ic1372) + ep1731_372 * log(s_1731 / ic1731) + ep1732_372 * log(s_1732 / ic1732)));
    der(s_1374) = 0.0;
    der(s_1390) = (cell * v0_90 * (1 + ep0860_90 * log(s_0860 / ic0860) + ep1676_90 * log(s_1676 / ic1676) + ep0859_90 * log(s_0859 / ic0859) + ep1390_90 * log(s_1390 / ic1390))) - (cell * v0_74 * (1 + ep0395_74 * log(s_0395 / ic0395) + ep1390_74 * log(s_1390 / ic1390) + ep0293_74 * log(s_0293 / ic0293) + ep0555_74 * log(s_0555 / ic0555)));
    der(s_1391) = (cell * v0_78 * (1 + ep1321_78 * log(s_1321 / ic1321) + ep0384_78 * log(s_0384 / ic0384) + ep1391_78 * log(s_1391 / ic1391))) - (cell * v0_256 * (1 + ep0502_256 * log(s_0502 / ic0502) + ep1391_256 * log(s_1391 / ic1391) + ep1081_256 * log(s_1081 / ic1081) + ep1430_256 * log(s_1430 / ic1430)));
    der(s_1394) = (cell * v0_135 * (1 + ep0052_135 * log(s_0052 / ic0052) + ep1732_135 * log(s_1732 / ic1732) + ep1394_135 * log(s_1394 / ic1394) + ep1731_135 * log(s_1731 / ic1731))) + (cell * v0_143 * (1 + ep0052_143 * log(s_0052 / ic0052) + ep1240_143 * log(s_1240 / ic1240) + ep1239_143 * log(s_1239 / ic1239) + ep1394_143 * log(s_1394 / ic1394))) - (cell * v0_257 * (1 + ep1394_257 * log(s_1394 / ic1394) + ep0360_257 * log(s_0360 / ic0360) + ep1397_257 * log(s_1397 / ic1397) + ep0783_257 * log(s_0783 / ic0783)));
    der(s_1397) = (cell * v0_257 * (1 + ep1394_257 * log(s_1394 / ic1394) + ep0360_257 * log(s_0360 / ic0360) + ep1397_257 * log(s_1397 / ic1397) + ep0783_257 * log(s_0783 / ic0783))) - (cell * v0_258 * (1 + ep1397_258 * log(s_1397 / ic1397) + ep0543_258 * log(s_0543 / ic0543) + ep1762_258 * log(s_1762 / ic1762)));
    der(s_1399) = (cell * v0_227 * (1 + ep1138_227 * log(s_1138 / ic1138) + ep1333_227 * log(s_1333 / ic1333) + ep1334_227 * log(s_1334 / ic1334) + ep1399_227 * log(s_1399 / ic1399))) + (cell * v0_270 * (1 + ep0543_270 * log(s_0543 / ic0543) + ep1484_270 * log(s_1484 / ic1484) + ep1399_270 * log(s_1399 / ic1399) + ep1430_270 * log(s_1430 / ic1430))) - (cell * v0_109 * (1 + ep1095_109 * log(s_1095 / ic1095) + ep1399_109 * log(s_1399 / ic1399) + ep0233_109 * log(s_0233 / ic0233) + ep1072_109 * log(s_1072 / ic1072))) - (cell * v0_122 * (1 + ep0395_122 * log(s_0395 / ic0395) + ep1399_122 * log(s_1399 / ic1399) + ep0536_122 * log(s_0536 / ic0536) + ep0555_122 * log(s_0555 / ic0555))) - (cell * v0_228 * (1 + ep0991_228 * log(s_0991 / ic0991) + ep1399_228 * log(s_1399 / ic1399) + ep1138_228 * log(s_1138 / ic1138) + ep1372_228 * log(s_1372 / ic1372)));
    der(s_1406) = (cell * v0_269 * (1 + ep0252_269 * log(s_0252 / ic0252) + ep1544_269 * log(s_1544 / ic1544) + ep0411_269 * log(s_0411 / ic0411) + ep1612_269 * log(s_1612 / ic1612) + ep1406_269 * log(s_1406 / ic1406))) - (cell * v0_332 * (1 + ep1336_332 * log(s_1336 / ic1336) + ep1406_332 * log(s_1406 / ic1406) + ep1335_332 * log(s_1335 / ic1335) + ep1544_332 * log(s_1544 / ic1544)));
    der(s_1407) = (cell * v0_342 * (1 + ep1552_342 * log(s_1552 / ic1552) + ep1336_342 * log(s_1336 / ic1336) + ep1189_342 * log(s_1189 / ic1189) + ep1407_342 * log(s_1407 / ic1407) + ep0333_342 * log(s_0333 / ic0333) + ep0738_342 * log(s_0738 / ic0738) + ep1141_342 * log(s_1141 / ic1141) + ep1335_342 * log(s_1335 / ic1335))) - (cell * max(v0_396 * (1 + ep1407_396 * log(s_1407 / ic1407)), zero_flux));
    der(s_1411) = (cell * v0_83 * (1 + ep0397_83 * log(s_0397 / ic0397) + ep0467_83 * log(s_0467 / ic0467) + ep0971_83 * log(s_0971 / ic0971) + ep0454_83 * log(s_0454 / ic0454) + ep1411_83 * log(s_1411 / ic1411) + ep0783_83 * log(s_0783 / ic0783))) - (cell * v0_5 * (1 + ep0121_5 * log(s_0121 / ic0121) + ep1411_5 * log(s_1411 / ic1411) + ep0397_5 * log(s_0397 / ic0397) + ep0075_5 * log(s_0075 / ic0075))) - (cell * v0_180 * (1 + ep0920_180 * log(s_0920 / ic0920) + ep1411_180 * log(s_1411 / ic1411) + ep0121_180 * log(s_0121 / ic0121) + ep0397_180 * log(s_0397 / ic0397)));
    der(s_1412) = (cell * v0_88 * (1 + ep0860_88 * log(s_0860 / ic0860) + ep1674_88 * log(s_1674 / ic1674) + ep0859_88 * log(s_0859 / ic0859) + ep1412_88 * log(s_1412 / ic1412))) - (cell * v0_157 * (1 + ep1412_157 * log(s_1412 / ic1412) + ep0555_157 * log(s_0555 / ic0555) + ep0971_157 * log(s_0971 / ic0971)));
    der(s_1413) = (cell * v0_277 * (1 + ep1277_277 * log(s_1277 / ic1277) + ep0543_277 * log(s_0543 / ic0543) + ep1413_277 * log(s_1413 / ic1413))) - (cell * v0_259 * (1 + ep0467_259 * log(s_0467 / ic0467) + ep1413_259 * log(s_1413 / ic1413) + ep0754_259 * log(s_0754 / ic0754) + ep0783_259 * log(s_0783 / ic0783)));
    der(s_1429) = (cell * v0_295 * (1 + ep1497_295 * log(s_1497 / ic1497) + ep0543_295 * log(s_0543 / ic0543) + ep1429_295 * log(s_1429 / ic1429))) - (cell * v0_262 * (1 + ep1095_262 * log(s_1095 / ic1095) + ep1429_262 * log(s_1429 / ic1429) + ep0233_262 * log(s_0233 / ic0233) + ep1151_262 * log(s_1151 / ic1151)));
    der(s_1430) = (cell * v0_17 * (1 + ep0411_17 * log(s_0411 / ic0411) + ep0454_17 * log(s_0454 / ic0454) + ep1430_17 * log(s_1430 / ic1430))) + (cell * v0_21 * (1 + ep0195_21 * log(s_0195 / ic0195) + ep0269_21 * log(s_0269 / ic0269) + ep1430_21 * log(s_1430 / ic1430))) + (cell * v0_22 * (1 + ep0611_22 * log(s_0611 / ic0611) + ep1484_22 * log(s_1484 / ic1484) + ep0272_22 * log(s_0272 / ic0272) + ep1430_22 * log(s_1430 / ic1430))) + (cell * v0_23 * (1 + ep0621_23 * log(s_0621 / ic0621) + ep1484_23 * log(s_1484 / ic1484) + ep0195_23 * log(s_0195 / ic0195) + ep1430_23 * log(s_1430 / ic1430))) + (cell * v0_27 * (1 + ep0272_27 * log(s_0272 / ic0272) + ep0271_27 * log(s_0271 / ic0271) + ep1430_27 * log(s_1430 / ic1430))) + (cell * v0_53 * (1 + ep1484_53 * log(s_1484 / ic1484) + ep1574_53 * log(s_1574 / ic1574) + ep0359_53 * log(s_0359 / ic0359) + ep1430_53 * log(s_1430 / ic1430))) + (cell * v0_76 * (1 + ep0395_76 * log(s_0395 / ic0395) + ep0467_76 * log(s_0467 / ic0467) + ep0474_76 * log(s_0474 / ic0474) + ep0421_76 * log(s_0421 / ic0421) + ep1217_76 * log(s_1217 / ic1217) + ep1430_76 * log(s_1430 / ic1430))) + (cell * v0_96 * (1 + ep1072_96 * log(s_1072 / ic1072) + ep0945_96 * log(s_0945 / ic0945) + ep1006_96 * log(s_1006 / ic1006) + ep1327_96 * log(s_1327 / ic1327) + ep0896_96 * log(s_0896 / ic0896) + ep1430_96 * log(s_1430 / ic1430))) + (cell * v0_107 * (1 + ep1072_107 * log(s_1072 / ic1072) + ep0502_107 * log(s_0502 / ic0502) + ep1312_107 * log(s_1312 / ic1312) + ep1430_107 * log(s_1430 / ic1430))) + (cell * v0_110 * (1 + ep0332_110 * log(s_0332 / ic0332) + ep1336_110 * log(s_1336 / ic1336) + ep1075_110 * log(s_1075 / ic1075) + ep1335_110 * log(s_1335 / ic1335) + ep1430_110 * log(s_1430 / ic1430))) + (cell * v0_121 * (1 + ep0359_121 * log(s_0359 / ic0359) + ep0526_121 * log(s_0526 / ic0526) + ep1430_121 * log(s_1430 / ic1430))) + (cell * v0_124 * (1 + ep0467_124 * log(s_0467 / ic0467) + ep1101_124 * log(s_1101 / ic1101) + ep1792_124 * log(s_1792 / ic1792) + ep0421_124 * log(s_0421 / ic0421) + ep0575_124 * log(s_0575 / ic0575) + ep1095_124 * log(s_1095 / ic1095) + ep1430_124 * log(s_1430 / ic1430))) + (cell * v0_129 * (1 + ep0600_129 * log(s_0600 / ic0600) + ep0467_129 * log(s_0467 / ic0467) + ep0421_129 * log(s_0421 / ic0421) + ep0603_129 * log(s_0603 / ic0603) + ep1430_129 * log(s_1430 / ic1430))) + (cell * v0_131 * (1 + ep0467_131 * log(s_0467 / ic0467) + ep0543_131 * log(s_0543 / ic0543) + ep0371_131 * log(s_0371 / ic0371) + ep0421_131 * log(s_0421 / ic0421) + ep0755_131 * log(s_0755 / ic0755) + ep1430_131 * log(s_1430 / ic1430))) + (cell * v0_139 * (1 + ep0467_139 * log(s_0467 / ic0467) + ep0767_139 * log(s_0767 / ic0767) + ep1095_139 * log(s_1095 / ic1095) + ep0421_139 * log(s_0421 / ic0421) + ep0372_139 * log(s_0372 / ic0372) + ep1430_139 * log(s_1430 / ic1430))) + (cell * v0_161 * (1 + ep0467_161 * log(s_0467 / ic0467) + ep0867_161 * log(s_0867 / ic0867) + ep0337_161 * log(s_0337 / ic0337) + ep0133_161 * log(s_0133 / ic0133) + ep0421_161 * log(s_0421 / ic0421) + ep1430_161 * log(s_1430 / ic1430))) + (cell * v0_163 * (1 + ep0467_163 * log(s_0467 / ic0467) + ep0867_163 * log(s_0867 / ic0867) + ep1318_163 * log(s_1318 / ic1318) + ep0421_163 * log(s_0421 / ic0421) + ep1322_163 * log(s_1322 / ic1322) + ep1430_163 * log(s_1430 / ic1430))) + (cell * v0_172 * (1 + ep1099_172 * log(s_1099 / ic1099) + ep1336_172 * log(s_1336 / ic1336) + ep1100_172 * log(s_1100 / ic1100) + ep1335_172 * log(s_1335 / ic1335) + ep1430_172 * log(s_1430 / ic1430))) + (cell * v0_174 * (1 + ep0467_174 * log(s_0467 / ic0467) + ep1095_174 * log(s_1095 / ic1095) + ep0451_174 * log(s_0451 / ic0451) + ep0421_174 * log(s_0421 / ic0421) + ep1101_174 * log(s_1101 / ic1101) + ep1430_174 * log(s_1430 / ic1430))) + (cell * v0_197 * (1 + ep1110_197 * log(s_1110 / ic1110) + ep1109_197 * log(s_1109 / ic1109) + ep1430_197 * log(s_1430 / ic1430))) + (cell * v0_232 * (1 + ep0467_232 * log(s_0467 / ic0467) + ep1141_232 * log(s_1141 / ic1141) + ep1552_232 * log(s_1552 / ic1552) + ep1430_232 * log(s_1430 / ic1430) + ep0783_232 * log(s_0783 / ic0783))) + (cell * v0_241 * (1 + ep1304_241 * log(s_1304 / ic1304) + ep1336_241 * log(s_1336 / ic1336) + ep1303_241 * log(s_1303 / ic1303) + ep1335_241 * log(s_1335 / ic1335) + ep1430_241 * log(s_1430 / ic1430))) + (cell * v0_251 * (1 + ep0467_251 * log(s_0467 / ic0467) + ep0421_251 * log(s_0421 / ic0421) + ep1430_251 * log(s_1430 / ic1430))) + (cell * v0_256 * (1 + ep0502_256 * log(s_0502 / ic0502) + ep1391_256 * log(s_1391 / ic1391) + ep1081_256 * log(s_1081 / ic1081) + ep1430_256 * log(s_1430 / ic1430))) + (cell * v0_267 * (1 + ep1364_267 * log(s_1364 / ic1364) + ep1430_267 * log(s_1430 / ic1430) + ep1170_267 * log(s_1170 / ic1170))) + (cell * v0_270 * (1 + ep0543_270 * log(s_0543 / ic0543) + ep1484_270 * log(s_1484 / ic1484) + ep1399_270 * log(s_1399 / ic1399) + ep1430_270 * log(s_1430 / ic1430))) + (cell * v0_281 * (1 + ep0342_281 * log(s_0342 / ic0342) + ep0467_281 * log(s_0467 / ic0467) + ep0474_281 * log(s_0474 / ic0474) + ep0362_281 * log(s_0362 / ic0362) + ep0421_281 * log(s_0421 / ic0421) + ep1430_281 * log(s_1430 / ic1430))) + (cell * v0_283 * (1 + ep0467_283 * log(s_0467 / ic0467) + ep0162_283 * log(s_0162 / ic0162) + ep0421_283 * log(s_0421 / ic0421) + ep0342_283 * log(s_0342 / ic0342) + ep1430_283 * log(s_1430 / ic1430))) + (cell * v0_285 * (1 + ep0344_285 * log(s_0344 / ic0344) + ep1072_285 * log(s_1072 / ic1072) + ep0467_285 * log(s_0467 / ic0467) + ep0040_285 * log(s_0040 / ic0040) + ep0421_285 * log(s_0421 / ic0421) + ep1430_285 * log(s_1430 / ic1430))) + (cell * v0_287 * (1 + ep0467_287 * log(s_0467 / ic0467) + ep1322_287 * log(s_1322 / ic1322) + ep1101_287 * log(s_1101 / ic1101) + ep0421_287 * log(s_0421 / ic0421) + ep0162_287 * log(s_0162 / ic0162) + ep1095_287 * log(s_1095 / ic1095) + ep1430_287 * log(s_1430 / ic1430))) + (cell * v0_288 * (1 + ep0467_288 * log(s_0467 / ic0467) + ep0929_288 * log(s_0929 / ic0929) + ep0361_288 * log(s_0361 / ic0361) + ep0421_288 * log(s_0421 / ic0421) + ep1318_288 * log(s_1318 / ic1318) + ep1430_288 * log(s_1430 / ic1430))) + (cell * v0_291 * (1 + ep0393_291 * log(s_0393 / ic0393) + ep0555_291 * log(s_0555 / ic0555) + ep0395_291 * log(s_0395 / ic0395) + ep1430_291 * log(s_1430 / ic1430))) + (cell * v0_293 * (1 + ep0421_293 * log(s_0421 / ic0421) + ep0783_293 * log(s_0783 / ic0783) + ep0467_293 * log(s_0467 / ic0467) + ep1430_293 * log(s_1430 / ic1430))) + (cell * v0_298 * (1 + ep0405_298 * log(s_0405 / ic0405) + ep0445_298 * log(s_0445 / ic0445) + ep0408_298 * log(s_0408 / ic0408) + ep1430_298 * log(s_1430 / ic1430))) + (cell * v0_299 * (1 + ep0116_299 * log(s_0116 / ic0116) + ep1333_299 * log(s_1333 / ic1333) + ep1362_299 * log(s_1362 / ic1362) + ep0543_299 * log(s_0543 / ic0543) + ep1334_299 * log(s_1334 / ic1334) + ep1530_299 * log(s_1530 / ic1530) + ep1430_299 * log(s_1430 / ic1430))) + (cell * v0_304 * (1 + ep0772_304 * log(s_0772 / ic0772) + ep1005_304 * log(s_1005 / ic1005) + ep1430_304 * log(s_1430 / ic1430) + ep1537_304 * log(s_1537 / ic1537))) + (cell * v0_306 * (1 + ep0311_306 * log(s_0311 / ic0311) + ep0255_306 * log(s_0255 / ic0255) + ep0364_306 * log(s_0364 / ic0364) + ep1430_306 * log(s_1430 / ic1430))) + (cell * v0_321 * (1 + ep0467_321 * log(s_0467 / ic0467) + ep0555_321 * log(s_0555 / ic0555) + ep1595_321 * log(s_1595 / ic1595) + ep0421_321 * log(s_0421 / ic0421) + ep1430_321 * log(s_1430 / ic1430) + ep1599_321 * log(s_1599 / ic1599))) + (cell * v0_324 * (1 + ep0467_324 * log(s_0467 / ic0467) + ep0945_324 * log(s_0945 / ic0945) + ep1609_324 * log(s_1609 / ic1609) + ep0412_324 * log(s_0412 / ic0412) + ep0896_324 * log(s_0896 / ic0896) + ep1430_324 * log(s_1430 / ic1430) + ep0783_324 * log(s_0783 / ic0783))) + (cell * v0_334 * (1 + ep1363_334 * log(s_1363 / ic1363) + ep1430_334 * log(s_1430 / ic1430) + ep1179_334 * log(s_1179 / ic1179))) + (cell * v0_347 * (1 + ep1484_347 * log(s_1484 / ic1484) + ep1745_347 * log(s_1745 / ic1745) + ep1430_347 * log(s_1430 / ic1430) + ep1742_347 * log(s_1742 / ic1742))) + (cell * v0_351 * (1 + ep1041_351 * log(s_1041 / ic1041) + ep0467_351 * log(s_0467 / ic0467) + ep1750_351 * log(s_1750 / ic1750) + ep0421_351 * log(s_0421 / ic0421) + ep1430_351 * log(s_1430 / ic1430) + ep1751_351 * log(s_1751 / ic1751))) + (cell * v0_352 * (1 + ep0467_352 * log(s_0467 / ic0467) + ep0671_352 * log(s_0671 / ic0671) + ep1751_352 * log(s_1751 / ic1751) + ep0421_352 * log(s_0421 / ic0421) + ep1430_352 * log(s_1430 / ic1430) + ep1754_352 * log(s_1754 / ic1754))) + (cell * v0_353 * (1 + ep1242_353 * log(s_1242 / ic1242) + ep0467_353 * log(s_0467 / ic0467) + ep1754_353 * log(s_1754 / ic1754) + ep0421_353 * log(s_0421 / ic0421) + ep1430_353 * log(s_1430 / ic1430) + ep1752_353 * log(s_1752 / ic1752))) + (cell * v0_354 * (1 + ep0603_354 * log(s_0603 / ic0603) + ep0467_354 * log(s_0467 / ic0467) + ep1752_354 * log(s_1752 / ic1752) + ep0421_354 * log(s_0421 / ic0421) + ep1430_354 * log(s_1430 / ic1430) + ep1755_354 * log(s_1755 / ic1755))) + (cell * v0_358 * (1 + ep1765_358 * log(s_1765 / ic1765) + ep1430_358 * log(s_1430 / ic1430) + ep1768_358 * log(s_1768 / ic1768))) + (cell * v0_386 * (1 + ep1432_386 * log(s_1432 / ic1432) + ep1430_386 * log(s_1430 / ic1430))) + (2.0 * cell * v0_390 * (1 + ep0229_390 * log(s_0229 / ic0229) + ep0467_390 * log(s_0467 / ic0467) + ep1333_390 * log(s_1333 / ic1333) + ep0226_390 * log(s_0226 / ic0226) + ep0421_390 * log(s_0421 / ic0421) + ep1334_390 * log(s_1334 / ic1334) + ep1430_390 * log(s_1430 / ic1430))) + (cell * v0_391 * (1 + ep0766_391 * log(s_0766 / ic0766) + ep0765_391 * log(s_0765 / ic0765) + ep1430_391 * log(s_1430 / ic1430))) + (cell * v0_393 * (1 + ep0346_393 * log(s_0346 / ic0346) + ep0311_393 * log(s_0311 / ic0311) + ep1430_393 * log(s_1430 / ic1430))) + (53.95 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux)) - (cell * v0_178 * (1 + ep0913_178 * log(s_0913 / ic0913) + ep1333_178 * log(s_1333 / ic1333) + ep1430_178 * log(s_1430 / ic1430) + ep0307_178 * log(s_0307 / ic0307) + ep1334_178 * log(s_1334 / ic1334))) - (cell * v0_365 * (1 + ep0421_365 * log(s_0421 / ic0421) + ep1430_365 * log(s_1430 / ic1430) + ep0467_365 * log(s_0467 / ic0467)));
    der(s_1432) = 0.0;
    der(s_1435) = (cell * v0_264 * (1 + ep1476_264 * log(s_1476 / ic1476) + ep0543_264 * log(s_0543 / ic0543) + ep1435_264 * log(s_1435 / ic1435))) - (0.07521 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1437) = (cell * v0_263 * (1 + ep1477_263 * log(s_1477 / ic1477) + ep0543_263 * log(s_0543 / ic0543) + ep1437_263 * log(s_1437 / ic1437))) - (0.06382 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1476) = (cell * v0_266 * (1 + ep0512_266 * log(s_0512 / ic0512) + ep1170_266 * log(s_1170 / ic1170) + ep0539_266 * log(s_0539 / ic0539) + ep1476_266 * log(s_1476 / ic1476))) - (cell * v0_264 * (1 + ep1476_264 * log(s_1476 / ic1476) + ep0543_264 * log(s_0543 / ic0543) + ep1435_264 * log(s_1435 / ic1435)));
    der(s_1477) = (cell * v0_265 * (1 + ep0513_265 * log(s_0513 / ic0513) + ep1170_265 * log(s_1170 / ic1170) + ep0539_265 * log(s_0539 / ic0539) + ep1477_265 * log(s_1477 / ic1477))) - (cell * v0_263 * (1 + ep1477_263 * log(s_1477 / ic1477) + ep0543_263 * log(s_0543 / ic0543) + ep1437_263 * log(s_1437 / ic1437)));
    der(s_1484) = (cell * v0_150 * (1 + ep0675_150 * log(s_0675 / ic0675) + ep1484_150 * log(s_1484 / ic1484))) - (cell * v0_22 * (1 + ep0611_22 * log(s_0611 / ic0611) + ep1484_22 * log(s_1484 / ic1484) + ep0272_22 * log(s_0272 / ic0272) + ep1430_22 * log(s_1430 / ic1430))) - (cell * v0_23 * (1 + ep0621_23 * log(s_0621 / ic0621) + ep1484_23 * log(s_1484 / ic1484) + ep0195_23 * log(s_0195 / ic0195) + ep1430_23 * log(s_1430 / ic1430))) - (cell * v0_53 * (1 + ep1484_53 * log(s_1484 / ic1484) + ep1574_53 * log(s_1574 / ic1574) + ep0359_53 * log(s_0359 / ic0359) + ep1430_53 * log(s_1430 / ic1430))) - (cell * v0_270 * (1 + ep0543_270 * log(s_0543 / ic0543) + ep1484_270 * log(s_1484 / ic1484) + ep1399_270 * log(s_1399 / ic1399) + ep1430_270 * log(s_1430 / ic1430))) - (cell * v0_347 * (1 + ep1484_347 * log(s_1484 / ic1484) + ep1745_347 * log(s_1745 / ic1745) + ep1430_347 * log(s_1430 / ic1430) + ep1742_347 * log(s_1742 / ic1742))) - (cell * v0_374 * (1 + ep1484_374 * log(s_1484 / ic1484) + ep0657_374 * log(s_0657 / ic0657) + ep0663_374 * log(s_0663 / ic0663) + ep1531_374 * log(s_1531 / ic1531))) - (cell * v0_375 * (1 + ep1484_375 * log(s_1484 / ic1484) + ep0622_375 * log(s_0622 / ic0622) + ep0627_375 * log(s_0627 / ic0627) + ep1531_375 * log(s_1531 / ic1531)));
    der(s_1491) = (cell * v0_292 * (1 + ep1492_292 * log(s_1492 / ic1492) + ep1248_292 * log(s_1248 / ic1248) + ep1491_292 * log(s_1491 / ic1491))) - (cell * v0_65 * (1 + ep1041_65 * log(s_1041 / ic1041) + ep1491_65 * log(s_1491 / ic1491) + ep0376_65 * log(s_0376 / ic0376) + ep0397_65 * log(s_0397 / ic0397) + ep0543_65 * log(s_0543 / ic0543)));
    der(s_1492) = (cell * v0_152 * (1 + ep0813_152 * log(s_0813 / ic0813) + ep1336_152 * log(s_1336 / ic1336) + ep1335_152 * log(s_1335 / ic1335) + ep1492_152 * log(s_1492 / ic1492))) - (cell * v0_292 * (1 + ep1492_292 * log(s_1492 / ic1492) + ep1248_292 * log(s_1248 / ic1248) + ep1491_292 * log(s_1491 / ic1491)));
    der(s_1493) = (cell * v0_294 * (1 + ep0345_294 * log(s_0345 / ic0345) + ep1493_294 * log(s_1493 / ic1493))) - (4.0 * cell * v0_203 * (1 + ep1493_203 * log(s_1493 / ic1493) + ep0998_203 * log(s_0998 / ic0998) + ep0451_203 * log(s_0451 / ic0451)));
    der(s_1494) = (cell * v0_387 * (1 + ep1496_387 * log(s_1496 / ic1496) + ep1494_387 * log(s_1494 / ic1494))) - (0.1952 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1496) = 0.0;
    der(s_1497) = (cell * v0_119 * (1 + ep0526_119 * log(s_0526 / ic0526) + ep1497_119 * log(s_1497 / ic1497))) - (cell * v0_295 * (1 + ep1497_295 * log(s_1497 / ic1497) + ep0543_295 * log(s_0543 / ic0543) + ep1429_295 * log(s_1429 / ic1429))) - (cell * v0_296 * (1 + ep1333_296 * log(s_1333 / ic1333) + ep1497_296 * log(s_1497 / ic1497) + ep0262_296 * log(s_0262 / ic0262) + ep0543_296 * log(s_0543 / ic0543) + ep1334_296 * log(s_1334 / ic1334)));
    der(s_1508) = (cell * v0_159 * (1 + ep0838_159 * log(s_0838 / ic0838) + ep1511_159 * log(s_1511 / ic1511) + ep1508_159 * log(s_1508 / ic1508))) - (0.000223 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1511) = (cell * v0_297 * (1 + ep1372_297 * log(s_1372 / ic1372) + ep1512_297 * log(s_1512 / ic1512) + ep1511_297 * log(s_1511 / ic1511))) - (cell * v0_159 * (1 + ep0838_159 * log(s_0838 / ic0838) + ep1511_159 * log(s_1511 / ic1511) + ep1508_159 * log(s_1508 / ic1508)));
    der(s_1512) = (cell * v0_123 * (1 + ep0565_123 * log(s_0565 / ic0565) + ep1372_123 * log(s_1372 / ic1372) + ep0543_123 * log(s_0543 / ic0543) + ep1512_123 * log(s_1512 / ic1512))) - (cell * v0_297 * (1 + ep1372_297 * log(s_1372 / ic1372) + ep1512_297 * log(s_1512 / ic1512) + ep1511_297 * log(s_1511 / ic1511)));
    der(s_1522) = (cell * v0_392 * (1 + ep1333_392 * log(s_1333 / ic1333) + ep1530_392 * log(s_1530 / ic1530) + ep1334_392 * log(s_1334 / ic1334) + ep1522_392 * log(s_1522 / ic1522))) - (0.000223 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1530) = (cell * v0_299 * (1 + ep0116_299 * log(s_0116 / ic0116) + ep1333_299 * log(s_1333 / ic1333) + ep1362_299 * log(s_1362 / ic1362) + ep0543_299 * log(s_0543 / ic0543) + ep1334_299 * log(s_1334 / ic1334) + ep1530_299 * log(s_1530 / ic1530) + ep1430_299 * log(s_1430 / ic1430))) - (cell * v0_392 * (1 + ep1333_392 * log(s_1333 / ic1333) + ep1530_392 * log(s_1530 / ic1530) + ep1334_392 * log(s_1334 / ic1334) + ep1522_392 * log(s_1522 / ic1522)));
    der(s_1531) = (cell * v0_11 * (1 + ep0201_11 * log(s_0201 / ic0201) + ep0913_11 * log(s_0913 / ic0913) + ep1531_11 * log(s_1531 / ic1531))) + (cell * v0_58 * (1 + ep0316_58 * log(s_0316 / ic0316) + ep0318_58 * log(s_0318 / ic0318) + ep1531_58 * log(s_1531 / ic1531))) + (cell * v0_101 * (1 + ep0526_101 * log(s_0526 / ic0526) + ep1101_101 * log(s_1101 / ic1101) + ep0457_101 * log(s_0457 / ic0457) + ep1095_101 * log(s_1095 / ic1095) + ep1531_101 * log(s_1531 / ic1531))) + (cell * v0_120 * (1 + ep0526_120 * log(s_0526 / ic0526) + ep0325_120 * log(s_0325 / ic0325) + ep1531_120 * log(s_1531 / ic1531))) + (cell * v0_126 * (1 + ep1082_126 * log(s_1082 / ic1082) + ep1112_126 * log(s_1112 / ic1112) + ep0451_126 * log(s_0451 / ic0451) + ep1531_126 * log(s_1531 / ic1531))) + (cell * v0_374 * (1 + ep1484_374 * log(s_1484 / ic1484) + ep0657_374 * log(s_0657 / ic0657) + ep0663_374 * log(s_0663 / ic0663) + ep1531_374 * log(s_1531 / ic1531))) + (cell * v0_375 * (1 + ep1484_375 * log(s_1484 / ic1484) + ep0622_375 * log(s_0622 / ic0622) + ep0627_375 * log(s_0627 / ic0627) + ep1531_375 * log(s_1531 / ic1531))) - (cell * v0_2 * (1 + ep0913_2 * log(s_0913 / ic0913) + ep1531_2 * log(s_1531 / ic1531) + ep0543_2 * log(s_0543 / ic0543) + ep0116_2 * log(s_0116 / ic0116))) - (cell * v0_8 * (1 + ep0232_8 * log(s_0232 / ic0232) + ep1531_8 * log(s_1531 / ic1531) + ep0041_8 * log(s_0041 / ic0041) + ep0543_8 * log(s_0543 / ic0543))) - (2.0 * cell * v0_68 * (1 + ep1531_68 * log(s_1531 / ic1531) + ep0042_68 * log(s_0042 / ic0042) + ep0543_68 * log(s_0543 / ic0543))) - (cell * v0_137 * (1 + ep1075_137 * log(s_1075 / ic1075) + ep1531_137 * log(s_1531 / ic1531) + ep0155_137 * log(s_0155 / ic0155))) - (cell * v0_220 * (1 + ep1095_220 * log(s_1095 / ic1095) + ep1531_220 * log(s_1531 / ic1531) + ep0233_220 * log(s_0233 / ic0233) + ep1041_220 * log(s_1041 / ic1041))) - (cell * v0_301 * (1 + ep0555_301 * log(s_0555 / ic0555) + ep1333_301 * log(s_1333 / ic1333) + ep1531_301 * log(s_1531 / ic1531) + ep0395_301 * log(s_0395 / ic0395) + ep0543_301 * log(s_0543 / ic0543) + ep1334_301 * log(s_1334 / ic1334))) - (cell * v0_302 * (1 + ep0555_302 * log(s_0555 / ic0555) + ep1531_302 * log(s_1531 / ic1531) + ep0395_302 * log(s_0395 / ic0395) + ep0867_302 * log(s_0867 / ic0867))) - (cell * v0_303 * (1 + ep0555_303 * log(s_0555 / ic0555) + ep0862_303 * log(s_0862 / ic0862) + ep1531_303 * log(s_1531 / ic1531) + ep0395_303 * log(s_0395 / ic0395) + ep0543_303 * log(s_0543 / ic0543) + ep0861_303 * log(s_0861 / ic0861))) - (cell * v0_341 * (1 + ep1009_341 * log(s_1009 / ic1009) + ep0451_341 * log(s_0451 / ic0451) + ep1531_341 * log(s_1531 / ic1531) + ep1185_341 * log(s_1185 / ic1185)));
    der(s_1537) = (cell * v0_304 * (1 + ep0772_304 * log(s_0772 / ic0772) + ep1005_304 * log(s_1005 / ic1005) + ep1430_304 * log(s_1430 / ic1430) + ep1537_304 * log(s_1537 / ic1537))) - (cell * v0_246 * (1 + ep0360_246 * log(s_0360 / ic0360) + ep1537_246 * log(s_1537 / ic1537) + ep0543_246 * log(s_0543 / ic0543) + ep1340_246 * log(s_1340 / ic1340) + ep0783_246 * log(s_0783 / ic0783)));
    der(s_1544) = (cell * v0_332 * (1 + ep1336_332 * log(s_1336 / ic1336) + ep1406_332 * log(s_1406 / ic1406) + ep1335_332 * log(s_1335 / ic1335) + ep1544_332 * log(s_1544 / ic1544))) - (cell * v0_269 * (1 + ep0252_269 * log(s_0252 / ic0252) + ep1544_269 * log(s_1544 / ic1544) + ep0411_269 * log(s_0411 / ic0411) + ep1612_269 * log(s_1612 / ic1612) + ep1406_269 * log(s_1406 / ic1406)));
    der(s_1546) = (cell * v0_307 * (1 + ep0364_307 * log(s_0364 / ic0364) + ep0311_307 * log(s_0311 / ic0311) + ep1546_307 * log(s_1546 / ic1546))) - (cell * v0_305 * (1 + ep0467_305 * log(s_0467 / ic0467) + ep1546_305 * log(s_1546 / ic1546) + ep0421_305 * log(s_0421 / ic0421) + ep0863_305 * log(s_0863 / ic0863))) - (0.000223 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1550) = (cell * v0_93 * (1 + ep0376_93 * log(s_0376 / ic0376) + ep1552_93 * log(s_1552 / ic1552) + ep1550_93 * log(s_1550 / ic1550) + ep0371_93 * log(s_0371 / ic0371))) - (cell * max(v0_397 * (1 + ep1550_397 * log(s_1550 / ic1550)), zero_flux));
    der(s_1551) = (cell * v0_229 * (1 + ep1552_229 * log(s_1552 / ic1552) + ep1217_229 * log(s_1217 / ic1217) + ep1551_229 * log(s_1551 / ic1551) + ep1218_229 * log(s_1218 / ic1218))) + (2.0 * cell * v0_360 * (1 + ep1552_360 * log(s_1552 / ic1552) + ep1791_360 * log(s_1791 / ic1791) + ep1551_360 * log(s_1551 / ic1551) + ep0768_360 * log(s_0768 / ic0768))) - (cell * v0_314 * (1 + ep1551_314 * log(s_1551 / ic1551) + ep0405_314 * log(s_0405 / ic0405) + ep1558_314 * log(s_1558 / ic1558)));
    der(s_1552) = (cell * v0_232 * (1 + ep0467_232 * log(s_0467 / ic0467) + ep1141_232 * log(s_1141 / ic1141) + ep1552_232 * log(s_1552 / ic1552) + ep1430_232 * log(s_1430 / ic1430) + ep0783_232 * log(s_0783 / ic0783))) - (cell * v0_93 * (1 + ep0376_93 * log(s_0376 / ic0376) + ep1552_93 * log(s_1552 / ic1552) + ep1550_93 * log(s_1550 / ic1550) + ep0371_93 * log(s_0371 / ic0371))) - (cell * v0_112 * (1 + ep0378_112 * log(s_0378 / ic0378) + ep1552_112 * log(s_1552 / ic1552) + ep0755_112 * log(s_0755 / ic0755) + ep0377_112 * log(s_0377 / ic0377) + ep0476_112 * log(s_0476 / ic0476) + ep0333_112 * log(s_0333 / ic0333) + ep1141_112 * log(s_1141 / ic1141))) - (cell * v0_229 * (1 + ep1552_229 * log(s_1552 / ic1552) + ep1217_229 * log(s_1217 / ic1217) + ep1551_229 * log(s_1551 / ic1551) + ep1218_229 * log(s_1218 / ic1218))) - (cell * v0_342 * (1 + ep1552_342 * log(s_1552 / ic1552) + ep1336_342 * log(s_1336 / ic1336) + ep1189_342 * log(s_1189 / ic1189) + ep1407_342 * log(s_1407 / ic1407) + ep0333_342 * log(s_0333 / ic0333) + ep0738_342 * log(s_0738 / ic0738) + ep1141_342 * log(s_1141 / ic1141) + ep1335_342 * log(s_1335 / ic1335))) - (2.0 * cell * v0_360 * (1 + ep1552_360 * log(s_1552 / ic1552) + ep1791_360 * log(s_1791 / ic1791) + ep1551_360 * log(s_1551 / ic1551) + ep0768_360 * log(s_0768 / ic0768))) - (0.000223 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1558) = (cell * v0_314 * (1 + ep1551_314 * log(s_1551 / ic1551) + ep0405_314 * log(s_0405 / ic0405) + ep1558_314 * log(s_1558 / ic1558))) - (cell * v0_315 * (1 + ep1558_315 * log(s_1558 / ic1558) + ep0310_315 * log(s_0310 / ic0310) + ep1112_315 * log(s_1112 / ic1112)));
    der(s_1561) = (cell * v0_336 * (1 + ep0621_336 * log(s_0621 / ic0621) + ep0627_336 * log(s_0627 / ic0627) + ep0913_336 * log(s_0913 / ic0913) + ep1561_336 * log(s_1561 / ic1561))) - (cell * v0_337 * (1 + ep0913_337 * log(s_0913 / ic0913) + ep1561_337 * log(s_1561 / ic1561) + ep0446_337 * log(s_0446 / ic0446) + ep0721_337 * log(s_0721 / ic0721)));
    der(s_1571) = (cell * v0_317 * (1 + ep0270_317 * log(s_0270 / ic0270) + ep1336_317 * log(s_1336 / ic1336) + ep1335_317 * log(s_1335 / ic1335) + ep1571_317 * log(s_1571 / ic1571))) - (cell * v0_318 * (1 + ep0467_318 * log(s_0467 / ic0467) + ep1571_318 * log(s_1571 / ic1571) + ep0421_318 * log(s_0421 / ic0421) + ep1574_318 * log(s_1574 / ic1574)));
    der(s_1574) = (cell * v0_318 * (1 + ep0467_318 * log(s_0467 / ic0467) + ep1571_318 * log(s_1571 / ic1571) + ep0421_318 * log(s_0421 / ic0421) + ep1574_318 * log(s_1574 / ic1574))) - (cell * v0_53 * (1 + ep1484_53 * log(s_1484 / ic1484) + ep1574_53 * log(s_1574 / ic1574) + ep0359_53 * log(s_0359 / ic0359) + ep1430_53 * log(s_1430 / ic1430)));
    der(s_1577) = (cell * v0_320 * (1 + ep0838_320 * log(s_0838 / ic0838) + ep1578_320 * log(s_1578 / ic1578) + ep1577_320 * log(s_1577 / ic1577))) - (0.000223 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1578) = (cell * v0_319 * (1 + ep0768_319 * log(s_0768 / ic0768) + ep1333_319 * log(s_1333 / ic1333) + ep1334_319 * log(s_1334 / ic1334) + ep1578_319 * log(s_1578 / ic1578))) - (cell * v0_320 * (1 + ep0838_320 * log(s_0838 / ic0838) + ep1578_320 * log(s_1578 / ic1578) + ep1577_320 * log(s_1577 / ic1577)));
    der(s_1595) = (cell * v0_253 * (1 + ep1083_253 * log(s_1083 / ic1083) + ep1367_253 * log(s_1367 / ic1367) + ep1082_253 * log(s_1082 / ic1082) + ep1595_253 * log(s_1595 / ic1595))) + (cell * v0_322 * (1 + ep1316_322 * log(s_1316 / ic1316) + ep1211_322 * log(s_1211 / ic1211) + ep1595_322 * log(s_1595 / ic1595))) - (cell * v0_321 * (1 + ep0467_321 * log(s_0467 / ic0467) + ep0555_321 * log(s_0555 / ic0555) + ep1595_321 * log(s_1595 / ic1595) + ep0421_321 * log(s_0421 / ic0421) + ep1430_321 * log(s_1430 / ic1430) + ep1599_321 * log(s_1599 / ic1599)));
    der(s_1599) = (cell * v0_321 * (1 + ep0467_321 * log(s_0467 / ic0467) + ep0555_321 * log(s_0555 / ic0555) + ep1595_321 * log(s_1595 / ic1595) + ep0421_321 * log(s_0421 / ic0421) + ep1430_321 * log(s_1430 / ic1430) + ep1599_321 * log(s_1599 / ic1599))) - (cell * v0_201 * (1 + ep1113_201 * log(s_1113 / ic1113) + ep1599_201 * log(s_1599 / ic1599) + ep0555_201 * log(s_0555 / ic0555) + ep1367_201 * log(s_1367 / ic1367))) - (cell * v0_328 * (1 + ep1599_328 * log(s_1599 / ic1599) + ep0148_328 * log(s_0148 / ic0148) + ep0555_328 * log(s_0555 / ic0555) + ep1315_328 * log(s_1315 / ic1315)));
    der(s_1609) = (cell * v0_388 * (1 + ep1611_388 * log(s_1611 / ic1611) + ep1609_388 * log(s_1609 / ic1609))) - (cell * v0_324 * (1 + ep0467_324 * log(s_0467 / ic0467) + ep0945_324 * log(s_0945 / ic0945) + ep1609_324 * log(s_1609 / ic1609) + ep0412_324 * log(s_0412 / ic0412) + ep0896_324 * log(s_0896 / ic0896) + ep1430_324 * log(s_1430 / ic1430) + ep0783_324 * log(s_0783 / ic0783))) - (0.004338 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1611) = 0.0;
    der(s_1612) = (cell * v0_269 * (1 + ep0252_269 * log(s_0252 / ic0252) + ep1544_269 * log(s_1544 / ic1544) + ep0411_269 * log(s_0411 / ic0411) + ep1612_269 * log(s_1612 / ic1612) + ep1406_269 * log(s_1406 / ic1406))) - (cell * v0_325 * (1 + ep1336_325 * log(s_1336 / ic1336) + ep1612_325 * log(s_1612 / ic1612) + ep0994_325 * log(s_0994 / ic0994) + ep1335_325 * log(s_1335 / ic1335)));
    der(s_1632) = (cell * v0_91 * (1 + ep0860_91 * log(s_0860 / ic0860) + ep1680_91 * log(s_1680 / ic1680) + ep0859_91 * log(s_0859 / ic0859) + ep1632_91 * log(s_1632 / ic1632))) - (cell * v0_75 * (1 + ep0395_75 * log(s_0395 / ic0395) + ep1632_75 * log(s_1632 / ic1632) + ep0297_75 * log(s_0297 / ic0297) + ep0555_75 * log(s_0555 / ic0555)));
    der(s_1643) = (cell * v0_329 * (1 + ep0218_329 * log(s_0218 / ic0218) + ep0330_329 * log(s_0330 / ic0330) + ep0783_329 * log(s_0783 / ic0783) + ep1643_329 * log(s_1643 / ic1643))) - (cell * v0_330 * (1 + ep0467_330 * log(s_0467 / ic0467) + ep1643_330 * log(s_1643 / ic1643) + ep0421_330 * log(s_0421 / ic0421) + ep1644_330 * log(s_1644 / ic1644)));
    der(s_1644) = (cell * v0_330 * (1 + ep0467_330 * log(s_0467 / ic0467) + ep1643_330 * log(s_1643 / ic1643) + ep0421_330 * log(s_0421 / ic0421) + ep1644_330 * log(s_1644 / ic1644))) - (0.000223 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1668) = (cell * v0_29 * (1 + ep0044_29 * log(s_0044 / ic0044) + ep1668_29 * log(s_1668 / ic1668))) - (cell * v0_86 * (1 + ep1668_86 * log(s_1668 / ic1668) + ep0860_86 * log(s_0860 / ic0860) + ep0737_86 * log(s_0737 / ic0737) + ep0859_86 * log(s_0859 / ic0859)));
    der(s_1670) = (cell * v0_30 * (1 + ep0045_30 * log(s_0045 / ic0045) + ep1670_30 * log(s_1670 / ic1670))) - (cell * v0_87 * (1 + ep1670_87 * log(s_1670 / ic1670) + ep0860_87 * log(s_0860 / ic0860) + ep0790_87 * log(s_0790 / ic0790) + ep0859_87 * log(s_0859 / ic0859)));
    der(s_1672) = (cell * v0_32 * (1 + ep0047_32 * log(s_0047 / ic0047) + ep1672_32 * log(s_1672 / ic1672))) - (cell * v0_89 * (1 + ep0860_89 * log(s_0860 / ic0860) + ep1672_89 * log(s_1672 / ic1672) + ep0859_89 * log(s_0859 / ic0859) + ep0984_89 * log(s_0984 / ic0984)));
    der(s_1674) = (cell * v0_31 * (1 + ep0046_31 * log(s_0046 / ic0046) + ep1674_31 * log(s_1674 / ic1674))) - (cell * v0_19 * (1 + ep1674_19 * log(s_1674 / ic1674) + ep0979_19 * log(s_0979 / ic0979))) - (cell * v0_88 * (1 + ep0860_88 * log(s_0860 / ic0860) + ep1674_88 * log(s_1674 / ic1674) + ep0859_88 * log(s_0859 / ic0859) + ep1412_88 * log(s_1412 / ic1412)));
    der(s_1676) = (cell * v0_33 * (1 + ep0049_33 * log(s_0049 / ic0049) + ep1676_33 * log(s_1676 / ic1676))) - (cell * v0_90 * (1 + ep0860_90 * log(s_0860 / ic0860) + ep1676_90 * log(s_1676 / ic1676) + ep0859_90 * log(s_0859 / ic0859) + ep1390_90 * log(s_1390 / ic1390)));
    der(s_1680) = (cell * v0_34 * (1 + ep0050_34 * log(s_0050 / ic0050) + ep1680_34 * log(s_1680 / ic1680))) - (cell * v0_91 * (1 + ep0860_91 * log(s_0860 / ic0860) + ep1680_91 * log(s_1680 / ic1680) + ep0859_91 * log(s_0859 / ic0859) + ep1632_91 * log(s_1632 / ic1632)));
    der(s_1690) = (cell * v0_176 * (1 + ep1105_176 * log(s_1105 / ic1105) + ep1336_176 * log(s_1336 / ic1336) + ep1098_176 * log(s_1098 / ic1098) + ep1335_176 * log(s_1335 / ic1335) + ep1690_176 * log(s_1690 / ic1690))) - (cell * v0_177 * (1 + ep0467_177 * log(s_0467 / ic0467) + ep1095_177 * log(s_1095 / ic1095) + ep1690_177 * log(s_1690 / ic1690) + ep0454_177 * log(s_0454 / ic0454) + ep1105_177 * log(s_1105 / ic1105) + ep0783_177 * log(s_0783 / ic0783)));
    der(s_1719) = (cell * v0_240 * (1 + ep1725_240 * log(s_1725 / ic1725) + ep0600_240 * log(s_0600 / ic0600) + ep1719_240 * log(s_1719 / ic1719))) - (0.01389 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1725) = (cell * v0_382 * (1 + ep1776_382 * log(s_1776 / ic1776) + ep1765_382 * log(s_1765 / ic1765) + ep1725_382 * log(s_1725 / ic1725))) - (cell * v0_240 * (1 + ep1725_240 * log(s_1725 / ic1725) + ep0600_240 * log(s_0600 / ic0600) + ep1719_240 * log(s_1719 / ic1719)));
    der(s_1731) = (cell * v0_135 * (1 + ep0052_135 * log(s_0052 / ic0052) + ep1732_135 * log(s_1732 / ic1732) + ep1394_135 * log(s_1394 / ic1394) + ep1731_135 * log(s_1731 / ic1731))) + (cell * v0_186 * (1 + ep0937_186 * log(s_0937 / ic0937) + ep1732_186 * log(s_1732 / ic1732) + ep0941_186 * log(s_0941 / ic0941) + ep1731_186 * log(s_1731 / ic1731))) - (cell * v0_372 * (1 + ep1372_372 * log(s_1372 / ic1372) + ep1731_372 * log(s_1731 / ic1731) + ep1732_372 * log(s_1732 / ic1732)));
    der(s_1732) = (cell * v0_372 * (1 + ep1372_372 * log(s_1372 / ic1372) + ep1731_372 * log(s_1731 / ic1731) + ep1732_372 * log(s_1732 / ic1732))) - (cell * v0_135 * (1 + ep0052_135 * log(s_0052 / ic0052) + ep1732_135 * log(s_1732 / ic1732) + ep1394_135 * log(s_1394 / ic1394) + ep1731_135 * log(s_1731 / ic1731))) - (cell * v0_186 * (1 + ep0937_186 * log(s_0937 / ic0937) + ep1732_186 * log(s_1732 / ic1732) + ep0941_186 * log(s_0941 / ic0941) + ep1731_186 * log(s_1731 / ic1731)));
    der(s_1733) = (cell * v0_226 * (1 + ep0149_226 * log(s_0149 / ic0149) + ep1734_226 * log(s_1734 / ic1734) + ep1204_226 * log(s_1204 / ic1204) + ep1733_226 * log(s_1733 / ic1733))) + (cell * v0_350 * (1 + ep1745_350 * log(s_1745 / ic1745) + ep1777_350 * log(s_1777 / ic1777) + ep1776_350 * log(s_1776 / ic1776) + ep1733_350 * log(s_1733 / ic1733))) + (cell * v0_356 * (1 + ep0467_356 * log(s_0467 / ic0467) + ep1762_356 * log(s_1762 / ic1762) + ep0421_356 * log(s_0421 / ic0421) + ep1733_356 * log(s_1733 / ic1733))) - (cell * v0_250 * (1 + ep0467_250 * log(s_0467 / ic0467) + ep1733_250 * log(s_1733 / ic1733) + ep0421_250 * log(s_0421 / ic0421) + ep1792_250 * log(s_1792 / ic1792)));
    der(s_1734) = (cell * v0_344 * (1 + ep0028_344 * log(s_0028 / ic0028) + ep1735_344 * log(s_1735 / ic1735) + ep0397_344 * log(s_0397 / ic0397) + ep1734_344 * log(s_1734 / ic1734))) - (cell * v0_226 * (1 + ep0149_226 * log(s_0149 / ic0149) + ep1734_226 * log(s_1734 / ic1734) + ep1204_226 * log(s_1204 / ic1204) + ep1733_226 * log(s_1733 / ic1733))) - (cell * v0_355 * (1 + ep1734_355 * log(s_1734 / ic1734) + ep0149_355 * log(s_0149 / ic0149) + ep1762_355 * log(s_1762 / ic1762)));
    der(s_1735) = (cell * v0_345 * (1 + ep1736_345 * log(s_1736 / ic1736) + ep0384_345 * log(s_0384 / ic0384) + ep1735_345 * log(s_1735 / ic1735))) - (cell * v0_344 * (1 + ep0028_344 * log(s_0028 / ic0028) + ep1735_344 * log(s_1735 / ic1735) + ep0397_344 * log(s_0397 / ic0397) + ep1734_344 * log(s_1734 / ic1734)));
    der(s_1736) = (cell * v0_348 * (1 + ep0028_348 * log(s_0028 / ic0028) + ep1745_348 * log(s_1745 / ic1745) + ep0397_348 * log(s_0397 / ic0397) + ep1736_348 * log(s_1736 / ic1736))) - (cell * v0_345 * (1 + ep1736_345 * log(s_1736 / ic1736) + ep0384_345 * log(s_0384 / ic0384) + ep1735_345 * log(s_1735 / ic1735)));
    der(s_1742) = (cell * v0_347 * (1 + ep1484_347 * log(s_1484 / ic1484) + ep1745_347 * log(s_1745 / ic1745) + ep1430_347 * log(s_1430 / ic1430) + ep1742_347 * log(s_1742 / ic1742))) - (cell * v0_346 * (1 + ep1336_346 * log(s_1336 / ic1336) + ep1742_346 * log(s_1742 / ic1742) + ep1335_346 * log(s_1335 / ic1335) + ep1750_346 * log(s_1750 / ic1750)));
    der(s_1745) = (cell * v0_349 * (1 + ep1287_349 * log(s_1287 / ic1287) + ep1792_349 * log(s_1792 / ic1792) + ep0783_349 * log(s_0783 / ic0783) + ep1745_349 * log(s_1745 / ic1745))) - (cell * v0_347 * (1 + ep1484_347 * log(s_1484 / ic1484) + ep1745_347 * log(s_1745 / ic1745) + ep1430_347 * log(s_1430 / ic1430) + ep1742_347 * log(s_1742 / ic1742))) - (cell * v0_348 * (1 + ep0028_348 * log(s_0028 / ic0028) + ep1745_348 * log(s_1745 / ic1745) + ep0397_348 * log(s_0397 / ic0397) + ep1736_348 * log(s_1736 / ic1736))) - (cell * v0_350 * (1 + ep1745_350 * log(s_1745 / ic1745) + ep1777_350 * log(s_1777 / ic1777) + ep1776_350 * log(s_1776 / ic1776) + ep1733_350 * log(s_1733 / ic1733)));
    der(s_1750) = (cell * v0_346 * (1 + ep1336_346 * log(s_1336 / ic1336) + ep1742_346 * log(s_1742 / ic1742) + ep1335_346 * log(s_1335 / ic1335) + ep1750_346 * log(s_1750 / ic1750))) - (cell * v0_351 * (1 + ep1041_351 * log(s_1041 / ic1041) + ep0467_351 * log(s_0467 / ic0467) + ep1750_351 * log(s_1750 / ic1750) + ep0421_351 * log(s_0421 / ic0421) + ep1430_351 * log(s_1430 / ic1430) + ep1751_351 * log(s_1751 / ic1751)));
    der(s_1751) = (cell * v0_351 * (1 + ep1041_351 * log(s_1041 / ic1041) + ep0467_351 * log(s_0467 / ic0467) + ep1750_351 * log(s_1750 / ic1750) + ep0421_351 * log(s_0421 / ic0421) + ep1430_351 * log(s_1430 / ic1430) + ep1751_351 * log(s_1751 / ic1751))) - (cell * v0_352 * (1 + ep0467_352 * log(s_0467 / ic0467) + ep0671_352 * log(s_0671 / ic0671) + ep1751_352 * log(s_1751 / ic1751) + ep0421_352 * log(s_0421 / ic0421) + ep1430_352 * log(s_1430 / ic1430) + ep1754_352 * log(s_1754 / ic1754)));
    der(s_1752) = (cell * v0_353 * (1 + ep1242_353 * log(s_1242 / ic1242) + ep0467_353 * log(s_0467 / ic0467) + ep1754_353 * log(s_1754 / ic1754) + ep0421_353 * log(s_0421 / ic0421) + ep1430_353 * log(s_1430 / ic1430) + ep1752_353 * log(s_1752 / ic1752))) - (cell * v0_354 * (1 + ep0603_354 * log(s_0603 / ic0603) + ep0467_354 * log(s_0467 / ic0467) + ep1752_354 * log(s_1752 / ic1752) + ep0421_354 * log(s_0421 / ic0421) + ep1430_354 * log(s_1430 / ic1430) + ep1755_354 * log(s_1755 / ic1755)));
    der(s_1754) = (cell * v0_352 * (1 + ep0467_352 * log(s_0467 / ic0467) + ep0671_352 * log(s_0671 / ic0671) + ep1751_352 * log(s_1751 / ic1751) + ep0421_352 * log(s_0421 / ic0421) + ep1430_352 * log(s_1430 / ic1430) + ep1754_352 * log(s_1754 / ic1754))) - (cell * v0_353 * (1 + ep1242_353 * log(s_1242 / ic1242) + ep0467_353 * log(s_0467 / ic0467) + ep1754_353 * log(s_1754 / ic1754) + ep0421_353 * log(s_0421 / ic0421) + ep1430_353 * log(s_1430 / ic1430) + ep1752_353 * log(s_1752 / ic1752)));
    der(s_1755) = (cell * v0_354 * (1 + ep0603_354 * log(s_0603 / ic0603) + ep0467_354 * log(s_0467 / ic0467) + ep1752_354 * log(s_1752 / ic1752) + ep0421_354 * log(s_0421 / ic0421) + ep1430_354 * log(s_1430 / ic1430) + ep1755_354 * log(s_1755 / ic1755))) - (cell * v0_268 * (1 + ep1768_268 * log(s_1768 / ic1768) + ep1755_268 * log(s_1755 / ic1755) + ep1777_268 * log(s_1777 / ic1777) + ep1762_268 * log(s_1762 / ic1762)));
    der(s_1762) = (cell * v0_258 * (1 + ep1397_258 * log(s_1397 / ic1397) + ep0543_258 * log(s_0543 / ic0543) + ep1762_258 * log(s_1762 / ic1762))) + (cell * v0_268 * (1 + ep1768_268 * log(s_1768 / ic1768) + ep1755_268 * log(s_1755 / ic1755) + ep1777_268 * log(s_1777 / ic1777) + ep1762_268 * log(s_1762 / ic1762))) + (cell * v0_355 * (1 + ep1734_355 * log(s_1734 / ic1734) + ep0149_355 * log(s_0149 / ic0149) + ep1762_355 * log(s_1762 / ic1762))) - (cell * v0_356 * (1 + ep0467_356 * log(s_0467 / ic0467) + ep1762_356 * log(s_1762 / ic1762) + ep0421_356 * log(s_0421 / ic0421) + ep1733_356 * log(s_1733 / ic1733)));
    der(s_1765) = (cell * v0_357 * (1 + ep0826_357 * log(s_0826 / ic0826) + ep1028_357 * log(s_1028 / ic1028) + ep0783_357 * log(s_0783 / ic0783) + ep1765_357 * log(s_1765 / ic1765))) + (2.0 * cell * v0_382 * (1 + ep1776_382 * log(s_1776 / ic1776) + ep1765_382 * log(s_1765 / ic1765) + ep1725_382 * log(s_1725 / ic1725))) - (cell * v0_358 * (1 + ep1765_358 * log(s_1765 / ic1765) + ep1430_358 * log(s_1430 / ic1430) + ep1768_358 * log(s_1768 / ic1768))) - (5.5e-05 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1768) = (cell * v0_358 * (1 + ep1765_358 * log(s_1765 / ic1765) + ep1430_358 * log(s_1430 / ic1430) + ep1768_358 * log(s_1768 / ic1768))) - (cell * v0_268 * (1 + ep1768_268 * log(s_1768 / ic1768) + ep1755_268 * log(s_1755 / ic1755) + ep1777_268 * log(s_1777 / ic1777) + ep1762_268 * log(s_1762 / ic1762)));
    der(s_1776) = (cell * v0_350 * (1 + ep1745_350 * log(s_1745 / ic1745) + ep1777_350 * log(s_1777 / ic1777) + ep1776_350 * log(s_1776 / ic1776) + ep1733_350 * log(s_1733 / ic1733))) - (2.0 * cell * v0_382 * (1 + ep1776_382 * log(s_1776 / ic1776) + ep1765_382 * log(s_1765 / ic1765) + ep1725_382 * log(s_1725 / ic1725)));
    der(s_1777) = (cell * v0_268 * (1 + ep1768_268 * log(s_1768 / ic1768) + ep1755_268 * log(s_1755 / ic1755) + ep1777_268 * log(s_1777 / ic1777) + ep1762_268 * log(s_1762 / ic1762))) - (cell * v0_350 * (1 + ep1745_350 * log(s_1745 / ic1745) + ep1777_350 * log(s_1777 / ic1777) + ep1776_350 * log(s_1776 / ic1776) + ep1733_350 * log(s_1733 / ic1733)));
    der(s_1791) = (cell * v0_361 * (1 + ep0998_361 * log(s_0998 / ic0998) + ep1791_361 * log(s_1791 / ic1791))) - (cell * v0_359 * (1 + ep1791_359 * log(s_1791 / ic1791) + ep0543_359 * log(s_0543 / ic0543) + ep0565_359 * log(s_0565 / ic0565))) - (cell * v0_360 * (1 + ep1552_360 * log(s_1552 / ic1552) + ep1791_360 * log(s_1791 / ic1791) + ep1551_360 * log(s_1551 / ic1551) + ep0768_360 * log(s_0768 / ic0768)));
    der(s_1792) = (cell * v0_250 * (1 + ep0467_250 * log(s_0467 / ic0467) + ep1733_250 * log(s_1733 / ic1733) + ep0421_250 * log(s_0421 / ic0421) + ep1792_250 * log(s_1792 / ic1792))) - (cell * v0_124 * (1 + ep0467_124 * log(s_0467 / ic0467) + ep1101_124 * log(s_1101 / ic1101) + ep1792_124 * log(s_1792 / ic1792) + ep0421_124 * log(s_0421 / ic0421) + ep0575_124 * log(s_0575 / ic0575) + ep1095_124 * log(s_1095 / ic1095) + ep1430_124 * log(s_1430 / ic1430))) - (cell * v0_311 * (1 + ep0861_311 * log(s_0861 / ic0861) + ep1792_311 * log(s_1792 / ic1792) + ep0810_311 * log(s_0810 / ic0810) + ep0862_311 * log(s_0862 / ic0862))) - (cell * v0_349 * (1 + ep1287_349 * log(s_1287 / ic1287) + ep1792_349 * log(s_1792 / ic1792) + ep0783_349 * log(s_0783 / ic0783) + ep1745_349 * log(s_1745 / ic1745))) - (0.1441 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1799) = (cell * v0_207 * (1 + ep1006_207 * log(s_1006 / ic1006) + ep1333_207 * log(s_1333 / ic1333) + ep1334_207 * log(s_1334 / ic1334) + ep1799_207 * log(s_1799 / ic1799))) - (cell * v0_189 * (1 + ep0467_189 * log(s_0467 / ic0467) + ep1101_189 * log(s_1101 / ic1101) + ep1799_189 * log(s_1799 / ic1799) + ep0454_189 * log(s_0454 / ic0454) + ep1095_189 * log(s_1095 / ic1095) + ep0942_189 * log(s_0942 / ic0942) + ep0783_189 * log(s_0783 / ic0783)));
    der(s_1804) = (cell * v0_389 * (1 + ep1806_389 * log(s_1806 / ic1806) + ep1804_389 * log(s_1804 / ic1804))) - (0.000341 * cell * max(v0_398 * (1 + ep0133_398 * log(s_0133 / ic0133) + ep0378_398 * log(s_0378 / ic0378) + ep0226_398 * log(s_0226 / ic0226) + ep0380_398 * log(s_0380 / ic0380) + ep1041_398 * log(s_1041 / ic1041) + ep1552_398 * log(s_1552 / ic1552) + ep1061_398 * log(s_1061 / ic1061) + ep1068_398 * log(s_1068 / ic1068) + ep1072_398 * log(s_1072 / ic1072) + ep0467_398 * log(s_0467 / ic0467) + ep0480_398 * log(s_0480 / ic0480) + ep0476_398 * log(s_0476 / ic0476) + ep0497_398 * log(s_0497 / ic0497) + ep0520_398 * log(s_0520 / ic0520) + ep0555_398 * log(s_0555 / ic0555) + ep0546_398 * log(s_0546 / ic0546) + ep0575_398 * log(s_0575 / ic0575) + ep0579_398 * log(s_0579 / ic0579) + ep1083_398 * log(s_1083 / ic1083) + ep0726_398 * log(s_0726 / ic0726) + ep0731_398 * log(s_0731 / ic0731) + ep0760_398 * log(s_0760 / ic0760) + ep0805_398 * log(s_0805 / ic0805) + ep0859_398 * log(s_0859 / ic0859) + ep0838_398 * log(s_0838 / ic0838) + ep0841_398 * log(s_0841 / ic0841) + ep1101_398 * log(s_1101 / ic1101) + ep1095_398 * log(s_1095 / ic1095) + ep0929_398 * log(s_0929 / ic0929) + ep0945_398 * log(s_0945 / ic0945) + ep1106_398 * log(s_1106 / ic1106) + ep1119_398 * log(s_1119 / ic1119) + ep1494_398 * log(s_1494 / ic1494) + ep1127_398 * log(s_1127 / ic1127) + ep1131_398 * log(s_1131 / ic1131) + ep1141_398 * log(s_1141 / ic1141) + ep1212_398 * log(s_1212 / ic1212) + ep0336_398 * log(s_0336 / ic0336) + ep1255_398 * log(s_1255 / ic1255) + ep1261_398 * log(s_1261 / ic1261) + ep1333_398 * log(s_1333 / ic1333) + ep1335_398 * log(s_1335 / ic1335) + ep0451_398 * log(s_0451 / ic0451) + ep1329_398 * log(s_1329 / ic1329) + ep1437_398 * log(s_1437 / ic1437) + ep1435_398 * log(s_1435 / ic1435) + ep1151_398 * log(s_1151 / ic1151) + ep1508_398 * log(s_1508 / ic1508) + ep1155_398 * log(s_1155 / ic1155) + ep1522_398 * log(s_1522 / ic1522) + ep1546_398 * log(s_1546 / ic1546) + ep1170_398 * log(s_1170 / ic1170) + ep1577_398 * log(s_1577 / ic1577) + ep1609_398 * log(s_1609 / ic1609) + ep0337_398 * log(s_0337 / ic0337) + ep1644_398 * log(s_1644 / ic1644) + ep1179_398 * log(s_1179 / ic1179) + ep1185_398 * log(s_1185 / ic1185) + ep1189_398 * log(s_1189 / ic1189) + ep1765_398 * log(s_1765 / ic1765) + ep1792_398 * log(s_1792 / ic1792) + ep1193_398 * log(s_1193 / ic1193) + ep1804_398 * log(s_1804 / ic1804) + ep1033_398 * log(s_1033 / ic1033) + ep1719_398 * log(s_1719 / ic1719)), zero_flux));
    der(s_1806) = 0.0;
    der(s_1807) = 0.0;
    der(s_1835) = 0.0;
    der(s_2072) = 0.0;
    der(s_2093) = 0.0;
    der(e_0001) = 0.0;
    der(e_0002) = 0.0;
    der(e_0003) = 0.0;
    der(e_0005) = 0.0;
    der(e_0006) = 0.0;
    der(e_0008) = 0.0;
    der(e_0010) = 0.0;
    der(e_0012) = 0.0;
    der(e_0020) = 0.0;
    der(e_0022) = 0.0;
    der(e_0030) = 0.0;
    der(e_0031) = 0.0;
    der(e_0032) = 0.0;
    der(e_0033) = 0.0;
    der(e_0034) = 0.0;
    der(e_0035) = 0.0;
    der(e_0036) = 0.0;
    der(e_0037) = 0.0;
    der(e_0038) = 0.0;
    der(e_0039) = 0.0;
    der(e_0040) = 0.0;
    der(e_0041) = 0.0;
    der(e_0042) = 0.0;
    der(e_0043) = 0.0;
    der(e_0044) = 0.0;
    der(e_0045) = 0.0;
    der(e_0046) = 0.0;
    der(e_0048) = 0.0;
    der(e_0051) = 0.0;
    der(e_0052) = 0.0;
    der(e_0053) = 0.0;
    der(e_0054) = 0.0;
    der(e_0060) = 0.0;
    der(e_0061) = 0.0;
    der(e_0062) = 0.0;
    der(e_0063) = 0.0;
    der(e_0064) = 0.0;
    der(e_0065) = 0.0;
    der(e_0071) = 0.0;
    der(e_0074) = 0.0;
    der(e_0076) = 0.0;
    der(e_0077) = 0.0;
    der(e_0078) = 0.0;
    der(e_0079) = 0.0;
    der(e_0080) = 0.0;
    der(e_0081) = 0.0;
    der(e_0082) = 0.0;
    der(e_0083) = 0.0;
    der(e_0084) = 0.0;
    der(e_0085) = 0.0;
    der(e_0094) = 0.0;
    der(e_0099) = 0.0;
    der(e_0100) = 0.0;
    der(e_0103) = 0.0;
    der(e_0110) = 0.0;
    der(e_0116) = 0.0;
    der(e_0125) = 0.0;
    der(e_0134) = 0.0;
    der(e_0135) = 0.0;
    der(e_0137) = 0.0;
    der(e_0138) = 0.0;
    der(e_0139) = 0.0;
    der(e_0144) = 0.0;
    der(e_0145) = 0.0;
    der(e_0146) = 0.0;
    der(e_0149) = 0.0;
    der(e_0150) = 0.0;
    der(e_0151) = 0.0;
    der(e_0152) = 0.0;
    der(e_0162) = 0.0;
    der(e_0167) = 0.0;
    der(e_0168) = 0.0;
    der(e_0175) = 0.0;
    der(e_0177) = 0.0;
    der(e_0183) = 0.0;
    der(e_0184) = 0.0;
    der(e_0185) = 0.0;
    der(e_0186) = 0.0;
    der(e_0188) = 0.0;
    der(e_0221) = 0.0;
    der(e_0223) = 0.0;
    der(e_0225) = 0.0;
    der(e_0238) = 0.0;
    der(e_0246) = 0.0;
    der(e_0253) = 0.0;
    der(e_0254) = 0.0;
    der(e_0260) = 0.0;
    der(e_0263) = 0.0;
    der(e_0264) = 0.0;
    der(e_0273) = 0.0;
    der(e_0274) = 0.0;
    der(e_0275) = 0.0;
    der(e_0276) = 0.0;
    der(e_0277) = 0.0;
    der(e_0278) = 0.0;
    der(e_0279) = 0.0;
    der(e_0280) = 0.0;
    der(e_0281) = 0.0;
    der(e_0282) = 0.0;
    der(e_0291) = 0.0;
    der(e_0292) = 0.0;
    der(e_0300) = 0.0;
    der(e_0313) = 0.0;
    der(e_0318) = 0.0;
    der(e_0323) = 0.0;
    der(e_0324) = 0.0;
    der(e_0326) = 0.0;
    der(e_0327) = 0.0;
    der(e_0328) = 0.0;
    der(e_0330) = 0.0;
    der(e_0331) = 0.0;
    der(e_0332) = 0.0;
    der(e_0342) = 0.0;
    der(e_0368) = 0.0;
    der(e_0372) = 0.0;
    der(e_0373) = 0.0;
    der(e_0374) = 0.0;
    der(e_0375) = 0.0;
    der(e_0376) = 0.0;
    der(e_0377) = 0.0;
    der(e_0378) = 0.0;
    der(e_0389) = 0.0;
    der(e_0391) = 0.0;
    der(e_0395) = 0.0;
    der(e_0403) = 0.0;
    der(e_0404) = 0.0;
    der(e_0405) = 0.0;
    der(e_0406) = 0.0;
    der(e_0416) = 0.0;
    der(e_0425) = 0.0;
    der(e_0426) = 0.0;
    der(e_0427) = 0.0;
    der(e_0428) = 0.0;
    der(e_0429) = 0.0;
    der(e_0431) = 0.0;
    der(e_0432) = 0.0;
    der(e_0433) = 0.0;
    der(e_0435) = 0.0;
    der(e_0436) = 0.0;
    der(e_0439) = 0.0;
    der(e_0451) = 0.0;
    der(e_0466) = 0.0;
    der(e_0514) = 0.0;
    der(e_0515) = 0.0;
    der(e_0516) = 0.0;
    der(e_0519) = 0.0;
    der(e_0531) = 0.0;
    der(e_0540) = 0.0;
    der(e_0541) = 0.0;
    der(e_0544) = 0.0;
    der(e_0554) = 0.0;
    der(e_0559) = 0.0;
    der(e_0561) = 0.0;
    der(e_0567) = 0.0;
    der(e_0572) = 0.0;
    der(e_0577) = 0.0;
    der(e_0578) = 0.0;
    der(e_0579) = 0.0;
    der(e_0580) = 0.0;
    der(e_0586) = 0.0;
    der(e_0605) = 0.0;
    der(e_0606) = 0.0;
    der(e_0607) = 0.0;
    der(e_0608) = 0.0;
    der(e_0609) = 0.0;
    der(e_0610) = 0.0;
    der(e_0611) = 0.0;
    der(e_0612) = 0.0;
    der(e_0641) = 0.0;
    der(e_0657) = 0.0;
    der(e_0682) = 0.0;
    der(e_0691) = 0.0;
    der(e_0717) = 0.0;
    der(e_0719) = 0.0;
    der(e_0720) = 0.0;
    der(e_0727) = 0.0;
    der(e_0728) = 0.0;
    der(e_0729) = 0.0;
    der(e_0730) = 0.0;
    der(e_0731) = 0.0;
    der(e_0732) = 0.0;
    der(e_0734) = 0.0;
    der(e_0735) = 0.0;
    der(e_0736) = 0.0;
    der(e_0742) = 0.0;
    der(e_0743) = 0.0;
    der(e_0746) = 0.0;
    der(e_0750) = 0.0;
    der(e_0757) = 0.0;
    der(e_0765) = 0.0;
    der(e_0768) = 0.0;
    der(e_0770) = 0.0;
    der(e_0771) = 0.0;
    der(e_0774) = 0.0;
    der(e_0775) = 0.0;
    der(e_0776) = 0.0;
    der(e_0791) = 0.0;
    der(e_0793) = 0.0;
    der(e_0795) = 0.0;
    der(e_0796) = 0.0;
    der(e_0798) = 0.0;
    der(e_0799) = 0.0;
    der(e_0803) = 0.0;
    der(e_0804) = 0.0;
    der(e_0805) = 0.0;
    der(e_0813) = 0.0;
    der(e_0815) = 0.0;
    der(e_0818) = 0.0;
    der(e_0819) = 0.0;
    der(e_0821) = 0.0;
    der(e_0822) = 0.0;
    der(e_0823) = 0.0;
    der(e_0825) = 0.0;
    der(e_0826) = 0.0;
    der(e_0827) = 0.0;
    der(e_0828) = 0.0;
    der(e_0839) = 0.0;
    der(e_0848) = 0.0;
    der(e_0866) = 0.0;
    der(e_0867) = 0.0;
    der(e_0868) = 0.0;
    der(e_0869) = 0.0;
    der(e_0870) = 0.0;
    der(e_0871) = 0.0;
    der(e_0872) = 0.0;
    der(e_0873) = 0.0;
    der(e_0875) = 0.0;
    der(e_0876) = 0.0;
    der(e_0893) = 0.0;
    der(e_0894) = 0.0;
    der(e_0896) = 0.0;
    der(e_0897) = 0.0;
    der(e_0903) = 0.0;
    der(e_0911) = 0.0;
    der(e_0918) = 0.0;
    der(e_0919) = 0.0;
    der(e_0925) = 0.0;
    der(e_0926) = 0.0;
    der(e_0928) = 0.0;
    der(e_0931) = 0.0;
    der(e_0941) = 0.0;
    der(e_0951) = 0.0;
    der(e_0953) = 0.0;
    der(e_0960) = 0.0;
    der(e_0962) = 0.0;
    der(e_0964) = 0.0;
    der(e_0974) = 0.0;
    der(e_0975) = 0.0;
    der(e_0977) = 0.0;
    der(e_0978) = 0.0;
    der(e_0979) = 0.0;
    der(e_0986) = 0.0;
    der(e_0987) = 0.0;
    der(e_0988) = 0.0;
    der(e_0990) = 0.0;
    der(e_0991) = 0.0;
    der(e_0993) = 0.0;
    der(e_0994) = 0.0;
    der(e_1004) = 0.0;
    der(e_1005) = 0.0;
    der(e_1006) = 0.0;
    der(e_1010) = 0.0;
    der(e_1014) = 0.0;
    der(e_1015) = 0.0;
    der(e_1019) = 0.0;
    der(e_1023) = 0.0;
    der(e_1026) = 0.0;
    der(e_1027) = 0.0;
    der(e_1028) = 0.0;
    der(e_1029) = 0.0;
    der(e_1034) = 0.0;
    der(e_1045) = 0.0;
    der(e_1086) = 0.0;
    der(e_1105) = 0.0;
    der(e_1106) = 0.0;
    der(e_1108) = 0.0;
    der(e_1109) = 0.0;
    der(e_1110) = 0.0;
    der(e_1125) = 0.0;
    der(e_1126) = 0.0;
    der(e_1127) = 0.0;
    der(e_1128) = 0.0;
    der(e_1129) = 0.0;
    der(e_1130) = 0.0;
    der(e_1136) = 0.0;
    der(e_1137) = 0.0;
    der(e_1141) = 0.0;
    der(e_1149) = 0.0;
    der(e_1150) = 0.0;
    der(e_1160) = 0.0;
    der(e_1167) = 0.0;
    der(e_1168) = 0.0;
    der(e_1169) = 0.0;
    der(e_1170) = 0.0;
    der(e_1172) = 0.0;
    der(e_1184) = 0.0;
    der(e_1185) = 0.0;
    der(e_1186) = 0.0;
    der(e_1188) = 0.0;
    der(e_1189) = 0.0;
    der(e_1196) = 0.0;
    der(e_1200) = 0.0;
    der(e_1201) = 0.0;
    der(e_1202) = 0.0;
    der(e_1203) = 0.0;
    der(e_1205) = 0.0;
    der(e_1206) = 0.0;
    der(e_1207) = 0.0;
    der(e_1210) = 0.0;
    der(e_1226) = 0.0;
    der(e_1227) = 0.0;
    der(e_1232) = 0.0;
    der(e_1233) = 0.0;
    der(e_1234) = 0.0;
    der(e_1238) = 0.0;
    der(e_1239) = 0.0;
    der(e_1240) = 0.0;
    der(e_1241) = 0.0;
    der(e_1242) = 0.0;
    der(e_1243) = 0.0;
    der(e_1244) = 0.0;
    der(e_1247) = 0.0;
    der(e_1248) = 0.0;
    der(e_1249) = 0.0;
    der(e_1250) = 0.0;
    der(e_1251) = 0.0;
    der(e_1252) = 0.0;
    der(e_1253) = 0.0;
    der(e_1254) = 0.0;
    der(e_1256) = 0.0;
    der(e_1257) = 0.0;
    der(e_1258) = 0.0;
    der(e_1259) = 0.0;
    der(e_1262) = 0.0;
    der(e_1263) = 0.0;
    der(e_1264) = 0.0;
    der(e_1271) = 0.0;
    der(e_1272) = 0.0;
    der(e_1273) = 0.0;
    der(e_1275) = 0.0;
    der(e_1276) = 0.0;
    der(e_1277) = 0.0;
    der(e_1291) = 0.0;
    der(e_1298) = 0.0;
    der(e_1312) = 0.0;
    der(e_1313) = 0.0;
    der(e_1315) = 0.0;
    der(e_1326) = 0.0;
    der(e_1334) = 0.0;
    der(e_1335) = 0.0;
    der(e_1339) = 0.0;
    der(e_1340) = 0.0;
    der(e_1341) = 0.0;
    der(e_1355) = 0.0;
    der(e_1366) = 0.0;
    der(e_1367) = 0.0;
    der(e_1369) = 0.0;
    der(e_1373) = 0.0;
    der(e_1374) = 0.0;
    der(e_1376) = 0.0;
    der(e_1377) = 0.0;




end BIOMD469;
