
#ifndef BIOMD175_PERTHREAD_SYSTEMDEFINITION_H
#define BIOMD175_PERTHREAD_SYSTEMDEFINITION_H

#include <fstream>
#include <iostream>
#include <string>


template<class Precision> __forceinline__ __device__ void PerThread_OdeFunction(
	int tid, int NT, \
	Precision*    F, Precision*    X, Precision     T, \
	Precision* cPAR, Precision* sPAR, int*      sPARi, Precision* ACC, int* ACCi  		
) {
    ACC[1]=(0.001696352841391009 * (X[70] + X[71]));
    ACC[0]=(0.05319148936170213 * X[4]);
    F[71]=((sPAR[235] * (X[70] * X[69])) + (((-(sPAR[168])) - sPAR[80]) * X[71]));
    F[69]=((sPAR[80] * X[71]) + ((sPAR[81] * X[116]) + ((sPAR[168] * X[71]) + ((sPAR[169] * X[116]) + (((-(sPAR[236])) * (X[115] * X[69])) - (sPAR[235] * (X[70] * X[69])))))));
    F[116]=((sPAR[236] * (X[115] * X[69])) + (((-(sPAR[169])) - sPAR[81]) * X[116]));
    F[117]=((sPAR[234] * (X[115] * X[82])) + (((-(sPAR[167])) - sPAR[79]) * X[117]));
    F[68]=((sPAR[232] * (X[67] * X[82])) + (((-(sPAR[165])) - sPAR[78]) * X[68]));
    F[115]=((sPAR[78] * X[68]) + ((sPAR[80] * X[71]) + ((sPAR[167] * X[117]) + ((sPAR[169] * X[116]) + (X[115] * (((-(sPAR[236])) * X[69]) - (sPAR[234] * X[82])))))));
    F[114]=(sPAR[64] * (sPAR[65] - X[114]));
    F[76]=(((sPAR[10] * X[77]) + ((sPAR[11] * (X[79] + X[78])) + ((X[76] * (((-(sPAR[175])) * X[50]) - (sPAR[230] * X[66]))) - (sPAR[186] * (X[76] * X[58]))))) / sPAR[51]);
    F[5]=(((sPAR[1] * (X[72] + X[73])) + (X[5] * (((-(sPAR[229])) * X[33]) - (sPAR[170] * X[6])))) / sPAR[51]);
    F[99]=((2.0 * (sPAR[231] * (X[95] * X[113]))) - (sPAR[164] * X[99]));
    F[4]=((sPAR[92] * (X[86] * (X[3] / (sPAR[13] + X[3])))) - (sPAR[53] * (X[4] / (sPAR[26] + X[4]))));
    F[79]=((sPAR[107] * (X[78] * (X[70] / (sPAR[25] + X[78])))) + ((sPAR[230] * (X[76] * X[66])) - (X[79] * (sPAR[11] + (sPAR[63] / (sPAR[39] + X[79]))))));
    F[73]=((sPAR[106] * (X[72] * (X[70] / (sPAR[24] + X[72])))) + ((sPAR[229] * (X[5] * X[33])) - (X[73] * (sPAR[1] + (sPAR[62] / (sPAR[38] + X[73]))))));
    F[66]=((sPAR[105] * (X[58] * (X[70] / (sPAR[23] + X[58])))) + ((sPAR[11] * X[79]) + (((-(sPAR[230])) * (X[76] * X[66])) - (sPAR[61] * (X[66] / (sPAR[37] + X[66]))))));
    F[49]=((sPAR[104] * (X[34] * (X[70] / (sPAR[22] + X[34])))) - (sPAR[60] * (X[49] / (sPAR[36] + X[49]))));
    F[33]=((sPAR[103] * (X[6] * (X[70] / (sPAR[21] + X[6])))) + ((sPAR[1] * X[73]) + (((-(sPAR[229])) * (X[5] * X[33])) - (sPAR[59] * (X[33] / (sPAR[35] + X[33]))))));
    F[112]=((4.0 * (sPAR[220] * (X[9] * X[113]))) + ((3.0 * (sPAR[221] * (X[15] * X[113]))) + ((2.0 * (sPAR[222] * (X[38] * X[113]))) + ((2.0 * (sPAR[223] * (X[54] * X[113]))) + ((2.0 * (sPAR[224] * (X[45] * X[113]))) + ((2.0 * (sPAR[225] * (X[62] * X[113]))) + ((3.0 * (sPAR[226] * (X[22] * X[113]))) + ((3.0 * (sPAR[228] * (X[29] * X[113]))) + ((2.0 * (sPAR[231] * (X[95] * X[113]))) + (((((((((((-(sPAR[83])) * X[12]) - (sPAR[163] * X[32])) - (sPAR[160] * X[65])) - (sPAR[158] * X[57])) - (sPAR[156] * X[18])) - (sPAR[155] * X[12])) - (sPAR[157] * X[41])) - (sPAR[159] * X[48])) - (sPAR[164] * X[99])) - (sPAR[161] * X[25])))))))))));
    F[32]=((3.0 * (sPAR[228] * (X[29] * X[113]))) - (sPAR[163] * X[32]));
    F[25]=((3.0 * (sPAR[226] * (X[22] * X[113]))) - (sPAR[161] * X[25]));
    F[65]=((2.0 * (sPAR[225] * (X[62] * X[113]))) - (sPAR[160] * X[65]));
    F[48]=((2.0 * (sPAR[224] * (X[45] * X[113]))) - (sPAR[159] * X[48]));
    F[57]=((2.0 * (sPAR[223] * (X[54] * X[113]))) - (sPAR[158] * X[57]));
    F[41]=((2.0 * (sPAR[222] * (X[38] * X[113]))) - (sPAR[157] * X[41]));
    F[18]=((3.0 * (sPAR[221] * (X[15] * X[113]))) - (sPAR[156] * X[18]));
    F[12]=((4.0 * (sPAR[220] * (X[9] * X[113]))) + (((-(sPAR[155])) - sPAR[83]) * X[12]));
    F[113]=((sPAR[83] * X[12]) + ((-4.0 * (sPAR[220] * (X[9] * X[113]))) + ((sPAR[155] * X[12]) + ((-3.0 * (sPAR[221] * (X[15] * X[113]))) + ((sPAR[156] * X[18]) + ((-2.0 * (sPAR[222] * (X[38] * X[113]))) + ((sPAR[157] * X[41]) + ((-2.0 * (sPAR[223] * (X[54] * X[113]))) + ((sPAR[158] * X[57]) + ((-2.0 * (sPAR[224] * (X[45] * X[113]))) + ((sPAR[159] * X[48]) + ((-2.0 * (sPAR[225] * (X[62] * X[113]))) + ((sPAR[160] * X[65]) + ((-3.0 * (sPAR[226] * (X[22] * X[113]))) + ((sPAR[161] * X[25]) + ((-3.0 * (sPAR[228] * (X[29] * X[113]))) + ((sPAR[163] * X[32]) + ((-2.0 * (sPAR[231] * (X[95] * X[113]))) + (sPAR[164] * X[99])))))))))))))))))));
    F[30]=((2.0 * (sPAR[219] * (X[29] * X[88]))) - (sPAR[154] * (X[107] * (X[30] / (X[107] + (X[108] + sPAR[66]))))));
    F[28]=((sPAR[218] * (X[29] * X[80])) - (sPAR[153] * X[28]));
    F[31]=((6.0 * (sPAR[217] * (X[29] * X[93]))) - (sPAR[152] * (X[109] * (X[31] / (X[109] + (X[110] + (X[111] + sPAR[66])))))));
    F[27]=((4.0 * (sPAR[215] * (X[29] * X[75]))) - (sPAR[150] * (X[102] * (X[27] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))));
    F[23]=((2.0 * (sPAR[214] * (X[22] * X[88]))) - (sPAR[149] * (X[107] * (X[23] / (X[107] + (X[108] + sPAR[66]))))));
    F[21]=((3.0 * (sPAR[213] * (X[22] * X[80]))) - (sPAR[148] * X[21]));
    F[24]=((5.0 * (sPAR[212] * (X[22] * X[93]))) - (sPAR[147] * (X[109] * (X[24] / (X[109] + (X[110] + (X[111] + sPAR[66])))))));
    F[20]=((4.0 * (sPAR[211] * (X[22] * X[75]))) - (sPAR[146] * (X[102] * (X[20] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))));
    F[29]=((sPAR[102] * X[26]) + ((-4.0 * (sPAR[215] * (X[29] * X[75]))) + ((sPAR[150] * (X[102] * (X[27] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))) + ((-6.0 * (sPAR[217] * (X[29] * X[93]))) + ((sPAR[152] * (X[109] * (X[31] / (X[109] + (X[110] + (X[111] + sPAR[66])))))) + ((sPAR[153] * X[28]) + ((-2.0 * (sPAR[219] * (X[29] * X[88]))) + ((sPAR[154] * (X[107] * (X[30] / (X[107] + (X[108] + sPAR[66]))))) + ((-3.0 * (sPAR[228] * (X[29] * X[113]))) + ((sPAR[163] * X[32]) + ((X[29] * (((-(sPAR[52])) / (sPAR[12] + X[29])) - (sPAR[218] * X[80]))) - (sPAR[77] * (X[112] * X[29])))))))))))));
    F[22]=((sPAR[101] * X[19]) + ((-4.0 * (sPAR[211] * (X[22] * X[75]))) + ((sPAR[146] * (X[102] * (X[20] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))) + ((-5.0 * (sPAR[212] * (X[22] * X[93]))) + ((sPAR[147] * (X[109] * (X[24] / (X[109] + (X[110] + (X[111] + sPAR[66])))))) + ((-3.0 * (sPAR[213] * (X[22] * X[80]))) + ((sPAR[148] * X[21]) + ((-2.0 * (sPAR[214] * (X[22] * X[88]))) + ((sPAR[149] * (X[107] * (X[23] / (X[107] + (X[108] + sPAR[66]))))) + ((-3.0 * (sPAR[226] * (X[22] * X[113]))) + ((sPAR[161] * X[25]) + (((-(sPAR[76])) * (X[112] * X[22])) - (sPAR[52] * (X[22] / (sPAR[12] + X[22])))))))))))))));
    F[26]=((sPAR[210] * (X[78] * X[72])) + ((sPAR[52] * (X[29] / (sPAR[12] + X[29]))) + ((sPAR[77] * (X[112] * X[29])) + (((-(sPAR[102])) - sPAR[145]) * X[26]))));
    F[19]=((sPAR[209] * (X[77] * X[72])) + ((sPAR[52] * (X[22] / (sPAR[12] + X[22]))) + ((sPAR[76] * (X[112] * X[22])) + (((-(sPAR[101])) - sPAR[144]) * X[19]))));
    F[106]=((sPAR[196] * (X[102] * X[83])) + ((sPAR[205] * (X[100] * X[83])) + ((sPAR[208] * (X[103] * X[83])) + ((((-(sPAR[140])) * X[101]) - (sPAR[143] * X[2])) - (sPAR[131] * X[104])))));
    F[101]=((sPAR[205] * (X[100] * X[83])) - (sPAR[140] * X[101]));
    F[100]=((sPAR[204] * (X[87] * X[75])) + ((sPAR[140] * X[101]) + (X[100] * (((-(sPAR[205])) * X[83]) - sPAR[139]))));
    F[2]=((sPAR[206] * (X[104] * X[0])) + ((sPAR[208] * (X[103] * X[83])) - (X[2] * (sPAR[143] + (sPAR[141] * (X[94] / (sPAR[66] + (X[94] + (X[95] + (X[98] + (X[97] + (X[96] + X[99]))))))))))));
    F[1]=((sPAR[100] * (X[0] * (X[70] / (sPAR[20] + X[0])))) - (sPAR[58] * (X[1] / (sPAR[34] + X[1]))));
    F[84]=((sPAR[99] * (X[83] * (X[70] / (sPAR[19] + X[83])))) - (sPAR[57] * (X[84] / (sPAR[33] + X[84]))));
    F[70]=((sPAR[79] * X[117]) + ((sPAR[168] * X[71]) - (sPAR[235] * (X[70] * X[69]))));
    F[67]=((sPAR[81] * X[116]) + ((sPAR[165] * X[68]) - (sPAR[232] * (X[67] * X[82]))));
    F[82]=((sPAR[97] * (X[90] * (X[81] / (sPAR[17] + X[81])))) + ((sPAR[78] * X[68]) + ((sPAR[79] * X[117]) + ((sPAR[165] * X[68]) + ((sPAR[167] * X[117]) + ((((-(sPAR[232])) * (X[67] * X[82])) - (sPAR[234] * (X[115] * X[82]))) - (sPAR[55] * (X[82] / (sPAR[31] + X[82])))))))));
    F[81]=((sPAR[55] * (X[82] / (sPAR[31] + X[82]))) - (sPAR[97] * (X[90] * (X[81] / (sPAR[17] + X[81])))));
    F[90]=((sPAR[96] * (X[92] * (X[89] / (sPAR[16] + X[89])))) - (sPAR[54] * (X[90] / (sPAR[40] + X[90]))));
    F[89]=((sPAR[54] * (X[90] / (sPAR[40] + X[90]))) - (sPAR[96] * (X[92] * (X[89] / (sPAR[16] + X[89])))));
    F[108]=((sPAR[95] * (X[107] * (X[9] + (X[15] + (X[38] + (X[45] + (X[54] + (X[62] + (X[22] + X[29]))))))))) + (((-(sPAR[52])) * (X[108] / (sPAR[12] + X[108]))) - (sPAR[75] * (X[112] * X[108]))));
    F[92]=((sPAR[94] * (X[106] * (X[91] / (sPAR[15] + X[91])))) + ((((-(sPAR[238])) * (X[108] * (X[92] / (sPAR[29] + X[92])))) - (sPAR[82] * X[92])) - (sPAR[237] * (X[107] * (X[92] / (sPAR[28] + X[92]))))));
    F[91]=((sPAR[238] * (X[108] * (X[92] / (sPAR[29] + X[92])))) + ((sPAR[82] * X[92]) + ((sPAR[237] * (X[107] * (X[92] / (sPAR[28] + X[92])))) - (sPAR[94] * (X[106] * (X[91] / (sPAR[15] + X[91])))))));
    F[3]=((sPAR[53] * (X[4] / (sPAR[26] + X[4]))) - (sPAR[92] * (X[86] * (X[3] / (sPAR[13] + X[3])))));
    F[86]=((sPAR[93] * ((1.0 - (X[114] * (X[9] / (X[9] + (X[15] + (X[38] + (X[45] + (X[54] + (X[62] + (X[22] + (X[29] + sPAR[66]))))))))))) * (X[105] * (X[85] / (sPAR[14] + X[85]))))) + ((-3.0 * (sPAR[44] * (X[86] / (sPAR[27] + X[86])))) + ((sPAR[137] * (X[87] * (X[94] / (sPAR[66] + (X[94] + (X[95] + (X[98] + (X[97] + (X[96] + X[99]))))))))) - (sPAR[202] * (X[86] * X[0])))));
    F[85]=((3.0 * (sPAR[44] * (X[86] / (sPAR[27] + X[86])))) - (sPAR[93] * ((1.0 - (X[114] * (X[9] / (X[9] + (X[15] + (X[38] + (X[45] + (X[54] + (X[62] + (X[22] + (X[29] + sPAR[66]))))))))))) * (X[105] * (X[85] / (sPAR[14] + X[85]))))));
    F[87]=((sPAR[202] * (X[86] * X[0])) + ((sPAR[139] * X[100]) + (X[87] * (((-(sPAR[204])) * X[75]) - (sPAR[137] * (X[94] / (sPAR[66] + (X[94] + (X[95] + (X[98] + (X[97] + (X[96] + X[99]))))))))))));
    F[74]=((sPAR[83] * X[9]) + ((((sPAR[170] * (X[5] * X[6])) + ((sPAR[229] * (X[5] * X[33])) + ((sPAR[230] * (X[76] * X[66])) + ((sPAR[175] * (X[76] * X[50])) + ((sPAR[186] * (X[76] * X[58])) + ((((-(sPAR[1])) * (X[72] + X[73])) - (sPAR[11] * (X[79] + X[78]))) - (sPAR[10] * X[77]))))))) / sPAR[51]) + (sPAR[64] * (X[114] - sPAR[65]))));
    F[97]=((2.0 * (sPAR[201] * (X[95] * X[88]))) - (sPAR[136] * (X[97] * (X[107] / (X[107] + (X[108] + sPAR[66]))))));
    F[96]=((3.0 * (sPAR[200] * (X[95] * X[80]))) - (sPAR[135] * X[96]));
    F[98]=((3.0 * (sPAR[199] * (X[95] * X[93]))) - (sPAR[134] * (X[98] * (X[109] / (X[109] + (X[110] + (X[111] + sPAR[66])))))));
    F[111]=((sPAR[198] * (X[110] * X[75])) - (sPAR[133] * (X[111] * (X[102] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))));
    F[103]=((sPAR[197] * (X[102] * X[0])) + ((sPAR[143] * X[2]) + (X[103] * (((-(sPAR[208])) * X[83]) - (sPAR[132] * (X[94] / (sPAR[66] + (X[94] + (X[95] + (X[98] + (X[97] + (X[96] + X[99]))))))))))));
    F[104]=((sPAR[196] * (X[102] * X[83])) + ((sPAR[141] * (X[2] * (X[94] / (sPAR[66] + (X[94] + (X[95] + (X[98] + (X[97] + (X[96] + X[99]))))))))) + (X[104] * (((-(sPAR[206])) * X[0]) - sPAR[131]))));
    F[95]=((sPAR[91] * (X[94] * (X[9] + (X[15] + (X[38] + (X[45] + (X[54] + (X[62] + (X[22] + X[29]))))))))) + ((-3.0 * (sPAR[199] * (X[95] * X[93]))) + ((sPAR[134] * (X[98] * (X[109] / (X[109] + (X[110] + (X[111] + sPAR[66])))))) + ((-3.0 * (sPAR[200] * (X[95] * X[80]))) + ((sPAR[135] * X[96]) + ((-2.0 * (sPAR[201] * (X[95] * X[88]))) + ((sPAR[136] * (X[97] * (X[107] / (X[107] + (X[108] + sPAR[66]))))) + ((-2.0 * (sPAR[231] * (X[95] * X[113]))) + ((sPAR[164] * X[99]) + (((-(sPAR[52])) * (X[95] / (sPAR[12] + X[95]))) - (sPAR[74] * (X[112] * X[95]))))))))))));
    F[110]=((sPAR[90] * (X[109] * (X[9] + (X[15] + (X[38] + (X[45] + (X[54] + (X[62] + (X[22] + X[29]))))))))) + ((sPAR[133] * (X[111] * (X[102] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))) + ((X[110] * (((-(sPAR[52])) / (sPAR[12] + X[110])) - (sPAR[198] * X[75]))) - (sPAR[73] * (X[112] * X[110])))));
    F[94]=((sPAR[197] * (X[102] * X[0])) + ((sPAR[202] * (X[86] * X[0])) + ((sPAR[206] * (X[104] * X[0])) + ((sPAR[52] * (X[95] / (sPAR[12] + X[95]))) + ((sPAR[74] * (X[112] * X[95])) + (((((-(sPAR[137])) * (X[87] * (X[94] / (sPAR[66] + (X[94] + (X[95] + (X[98] + (X[97] + (X[96] + X[99]))))))))) - (sPAR[91] * (X[94] * (X[9] + (X[15] + (X[38] + (X[45] + (X[54] + (X[62] + (X[22] + X[29])))))))))) - (sPAR[141] * (X[2] * (X[94] / (sPAR[66] + (X[94] + (X[95] + (X[98] + (X[97] + (X[96] + X[99])))))))))) - (sPAR[132] * (X[103] * (X[94] / (sPAR[66] + (X[94] + (X[95] + (X[98] + (X[97] + (X[96] + X[99])))))))))))))));
    F[107]=((2.0 * (sPAR[173] * (X[9] * X[88]))) + ((2.0 * (sPAR[177] * (X[15] * X[88]))) + ((2.0 * (sPAR[181] * (X[38] * X[88]))) + ((2.0 * (sPAR[185] * (X[54] * X[88]))) + ((2.0 * (sPAR[190] * (X[45] * X[88]))) + ((2.0 * (sPAR[194] * (X[62] * X[88]))) + ((2.0 * (sPAR[201] * (X[95] * X[88]))) + ((2.0 * (sPAR[214] * (X[22] * X[88]))) + ((2.0 * (sPAR[219] * (X[29] * X[88]))) + ((sPAR[52] * (X[108] / (sPAR[12] + X[108]))) + ((sPAR[75] * (X[112] * X[108])) + ((X[107] * (((-(sPAR[149])) * (X[23] / (X[107] + (X[108] + sPAR[66])))) - (sPAR[95] * (X[9] + (X[15] + (X[38] + (X[45] + (X[54] + (X[62] + (X[22] + X[29])))))))))) + ((((((((((-(sPAR[83])) * X[10]) - (sPAR[154] * (X[107] * (X[30] / (X[107] + (X[108] + sPAR[66])))))) - (sPAR[136] * (X[97] * (X[107] / (X[107] + (X[108] + sPAR[66])))))) - (sPAR[125] * (X[107] * (X[46] / (X[107] + (X[108] + sPAR[66])))))) - (sPAR[117] * (X[107] * (X[39] / (X[107] + (X[108] + sPAR[66])))))) - (sPAR[110] * (X[107] * (X[10] / (X[107] + (X[108] + sPAR[66])))))) - (sPAR[113] * (X[107] * (X[16] / (X[107] + (X[108] + sPAR[66])))))) - (sPAR[121] * (X[107] * (X[55] / (X[107] + (X[108] + sPAR[66])))))) - (sPAR[129] * (X[107] * (X[63] / (X[107] + (X[108] + sPAR[66]))))))))))))))))));
    F[105]=((3.0 * (sPAR[180] * (X[38] * X[80]))) + ((4.0 * (sPAR[184] * (X[54] * X[80]))) + ((sPAR[189] * (X[45] * X[80])) + ((2.0 * (sPAR[193] * (X[62] * X[80]))) + ((3.0 * (sPAR[200] * (X[95] * X[80]))) + ((3.0 * (sPAR[213] * (X[22] * X[80]))) + ((sPAR[218] * (X[29] * X[80])) + ((((((((-(sPAR[135])) * X[96]) - (sPAR[153] * X[28])) - (sPAR[124] * X[44])) - (sPAR[116] * X[37])) - (sPAR[120] * X[53])) - (sPAR[148] * X[21])) - (sPAR[128] * X[61])))))))));
    F[109]=((8.0 * (sPAR[172] * (X[9] * X[93]))) + ((6.0 * (sPAR[176] * (X[15] * X[93]))) + ((3.0 * (sPAR[179] * (X[38] * X[93]))) + ((3.0 * (sPAR[183] * (X[54] * X[93]))) + ((4.0 * (sPAR[188] * (X[45] * X[93]))) + ((4.0 * (sPAR[192] * (X[62] * X[93]))) + ((3.0 * (sPAR[199] * (X[95] * X[93]))) + ((5.0 * (sPAR[212] * (X[22] * X[93]))) + ((6.0 * (sPAR[217] * (X[29] * X[93]))) + ((sPAR[52] * (X[110] / (sPAR[12] + X[110]))) + ((sPAR[73] * (X[112] * X[110])) + ((X[109] * (((-(sPAR[147])) * (X[24] / (X[109] + (X[110] + (X[111] + sPAR[66]))))) - (sPAR[90] * (X[9] + (X[15] + (X[38] + (X[45] + (X[54] + (X[62] + (X[22] + X[29])))))))))) + ((((((((((-(sPAR[83])) * X[11]) - (sPAR[152] * (X[109] * (X[31] / (X[109] + (X[110] + (X[111] + sPAR[66]))))))) - (sPAR[134] * (X[98] * (X[109] / (X[109] + (X[110] + (X[111] + sPAR[66]))))))) - (sPAR[123] * (X[109] * (X[47] / (X[109] + (X[110] + (X[111] + sPAR[66]))))))) - (sPAR[115] * (X[109] * (X[40] / (X[109] + (X[110] + (X[111] + sPAR[66]))))))) - (sPAR[109] * (X[109] * (X[11] / (X[109] + (X[110] + (X[111] + sPAR[66]))))))) - (sPAR[112] * (X[109] * (X[17] / (X[109] + (X[110] + (X[111] + sPAR[66]))))))) - (sPAR[119] * (X[109] * (X[56] / (X[109] + (X[110] + (X[111] + sPAR[66]))))))) - (sPAR[127] * (X[109] * (X[64] / (X[109] + (X[110] + (X[111] + sPAR[66])))))))))))))))))));
    F[102]=((4.0 * (sPAR[171] * (X[9] * X[75]))) + ((3.0 * (sPAR[174] * (X[15] * X[75]))) + ((3.0 * (sPAR[178] * (X[38] * X[75]))) + ((4.0 * (sPAR[182] * (X[54] * X[75]))) + ((3.0 * (sPAR[187] * (X[45] * X[75]))) + ((4.0 * (sPAR[191] * (X[62] * X[75]))) + ((sPAR[198] * (X[110] * X[75])) + ((4.0 * (sPAR[211] * (X[22] * X[75]))) + ((4.0 * (sPAR[215] * (X[29] * X[75]))) + ((sPAR[131] * X[104]) + ((sPAR[132] * (X[103] * (X[94] / (sPAR[66] + (X[94] + (X[95] + (X[98] + (X[97] + (X[96] + X[99]))))))))) + ((X[102] * (((-(sPAR[150])) * (X[27] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66])))))) - (sPAR[197] * X[0]))) + (((((((((((-(sPAR[83])) * X[8]) - (sPAR[196] * (X[102] * X[83]))) - (sPAR[146] * (X[102] * (X[20] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66])))))))) - (sPAR[126] * (X[102] * (X[60] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66])))))))) - (sPAR[118] * (X[102] * (X[52] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66])))))))) - (sPAR[111] * (X[102] * (X[14] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66])))))))) - (sPAR[108] * (X[102] * (X[8] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66])))))))) - (sPAR[114] * (X[102] * (X[36] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66])))))))) - (sPAR[122] * (X[102] * (X[43] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66])))))))) - (sPAR[133] * (X[111] * (X[102] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))))))))))))))));
    F[63]=((2.0 * (sPAR[194] * (X[62] * X[88]))) - (sPAR[129] * (X[107] * (X[63] / (X[107] + (X[108] + sPAR[66]))))));
    F[61]=((2.0 * (sPAR[193] * (X[62] * X[80]))) - (sPAR[128] * X[61]));
    F[64]=((4.0 * (sPAR[192] * (X[62] * X[93]))) - (sPAR[127] * (X[109] * (X[64] / (X[109] + (X[110] + (X[111] + sPAR[66])))))));
    F[60]=((4.0 * (sPAR[191] * (X[62] * X[75]))) - (sPAR[126] * (X[102] * (X[60] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))));
    F[46]=((2.0 * (sPAR[190] * (X[45] * X[88]))) - (sPAR[125] * (X[107] * (X[46] / (X[107] + (X[108] + sPAR[66]))))));
    F[44]=((sPAR[189] * (X[45] * X[80])) - (sPAR[124] * X[44]));
    F[47]=((4.0 * (sPAR[188] * (X[45] * X[93]))) - (sPAR[123] * (X[109] * (X[47] / (X[109] + (X[110] + (X[111] + sPAR[66])))))));
    F[43]=((3.0 * (sPAR[187] * (X[45] * X[75]))) - (sPAR[122] * (X[102] * (X[43] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))));
    F[55]=((2.0 * (sPAR[185] * (X[54] * X[88]))) - (sPAR[121] * (X[107] * (X[55] / (X[107] + (X[108] + sPAR[66]))))));
    F[53]=((4.0 * (sPAR[184] * (X[54] * X[80]))) - (sPAR[120] * X[53]));
    F[56]=((3.0 * (sPAR[183] * (X[54] * X[93]))) - (sPAR[119] * (X[109] * (X[56] / (X[109] + (X[110] + (X[111] + sPAR[66])))))));
    F[52]=((4.0 * (sPAR[182] * (X[54] * X[75]))) - (sPAR[118] * (X[102] * (X[52] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))));
    F[39]=((2.0 * (sPAR[181] * (X[38] * X[88]))) - (sPAR[117] * (X[107] * (X[39] / (X[107] + (X[108] + sPAR[66]))))));
    F[37]=((3.0 * (sPAR[180] * (X[38] * X[80]))) - (sPAR[116] * X[37]));
    F[40]=((3.0 * (sPAR[179] * (X[38] * X[93]))) - (sPAR[115] * (X[109] * (X[40] / (X[109] + (X[110] + (X[111] + sPAR[66])))))));
    F[36]=((3.0 * (sPAR[178] * (X[38] * X[75]))) - (sPAR[114] * (X[102] * (X[36] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))));
    F[16]=((2.0 * (sPAR[177] * (X[15] * X[88]))) - (sPAR[113] * (X[107] * (X[16] / (X[107] + (X[108] + sPAR[66]))))));
    F[17]=((6.0 * (sPAR[176] * (X[15] * X[93]))) - (sPAR[112] * (X[109] * (X[17] / (X[109] + (X[110] + (X[111] + sPAR[66])))))));
    F[14]=((3.0 * (sPAR[174] * (X[15] * X[75]))) - (sPAR[111] * (X[102] * (X[14] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))));
    F[10]=((2.0 * (sPAR[173] * (X[9] * X[88]))) + (((-(sPAR[110])) * (X[107] * (X[10] / (X[107] + (X[108] + sPAR[66]))))) - (sPAR[83] * X[10])));
    F[11]=((8.0 * (sPAR[172] * (X[9] * X[93]))) + (((-(sPAR[109])) * (X[109] * (X[11] / (X[109] + (X[110] + (X[111] + sPAR[66])))))) - (sPAR[83] * X[11])));
    F[8]=((4.0 * (sPAR[171] * (X[9] * X[75]))) + (((-(sPAR[108])) * (X[102] * (X[8] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))) - (sPAR[83] * X[8])));
    F[0]=((sPAR[132] * (X[103] * (X[94] / (sPAR[66] + (X[94] + (X[95] + (X[98] + (X[97] + (X[96] + X[99]))))))))) + ((sPAR[137] * (X[87] * (X[94] / (sPAR[66] + (X[94] + (X[95] + (X[98] + (X[97] + (X[96] + X[99]))))))))) + ((sPAR[58] * (X[1] / (sPAR[34] + X[1]))) + ((sPAR[141] * (X[2] * (X[94] / (sPAR[66] + (X[94] + (X[95] + (X[98] + (X[97] + (X[96] + X[99]))))))))) + (((((-(sPAR[202])) * (X[86] * X[0])) - (sPAR[206] * (X[104] * X[0]))) - (sPAR[100] * (X[0] * (X[70] / (sPAR[20] + X[0]))))) - (sPAR[197] * (X[102] * X[0])))))));
    F[83]=((sPAR[131] * X[104]) + ((sPAR[57] * (X[84] / (sPAR[33] + X[84]))) + ((sPAR[140] * X[101]) + ((sPAR[143] * X[2]) + (((((-(sPAR[99])) * (X[83] * (X[70] / (sPAR[19] + X[83])))) - (sPAR[208] * (X[103] * X[83]))) - (sPAR[205] * (X[100] * X[83]))) - (sPAR[196] * (X[102] * X[83])))))));
    F[88]=((sPAR[83] * X[10]) + ((-2.0 * (sPAR[173] * (X[9] * X[88]))) + ((sPAR[110] * (X[107] * (X[10] / (X[107] + (X[108] + sPAR[66]))))) + ((-2.0 * (sPAR[177] * (X[15] * X[88]))) + ((sPAR[113] * (X[107] * (X[16] / (X[107] + (X[108] + sPAR[66]))))) + ((-2.0 * (sPAR[181] * (X[38] * X[88]))) + ((sPAR[117] * (X[107] * (X[39] / (X[107] + (X[108] + sPAR[66]))))) + ((-2.0 * (sPAR[185] * (X[54] * X[88]))) + ((sPAR[121] * (X[107] * (X[55] / (X[107] + (X[108] + sPAR[66]))))) + ((-2.0 * (sPAR[190] * (X[45] * X[88]))) + ((sPAR[125] * (X[107] * (X[46] / (X[107] + (X[108] + sPAR[66]))))) + ((-2.0 * (sPAR[194] * (X[62] * X[88]))) + ((sPAR[129] * (X[107] * (X[63] / (X[107] + (X[108] + sPAR[66]))))) + ((-2.0 * (sPAR[201] * (X[95] * X[88]))) + ((sPAR[136] * (X[97] * (X[107] / (X[107] + (X[108] + sPAR[66]))))) + ((-2.0 * (sPAR[214] * (X[22] * X[88]))) + ((sPAR[149] * (X[107] * (X[23] / (X[107] + (X[108] + sPAR[66]))))) + ((-2.0 * (sPAR[219] * (X[29] * X[88]))) + (sPAR[154] * (X[107] * (X[30] / (X[107] + (X[108] + sPAR[66])))))))))))))))))))))));
    F[80]=((sPAR[116] * X[37]) + ((-3.0 * (sPAR[180] * (X[38] * X[80]))) + ((-4.0 * (sPAR[184] * (X[54] * X[80]))) + ((sPAR[120] * X[53]) + ((sPAR[124] * X[44]) + ((-2.0 * (sPAR[193] * (X[62] * X[80]))) + ((sPAR[128] * X[61]) + ((-3.0 * (sPAR[200] * (X[95] * X[80]))) + ((sPAR[135] * X[96]) + ((-3.0 * (sPAR[213] * (X[22] * X[80]))) + ((sPAR[148] * X[21]) + ((sPAR[153] * X[28]) + (((-(sPAR[218])) * (X[29] * X[80])) - (sPAR[189] * (X[45] * X[80])))))))))))))));
    F[93]=((sPAR[83] * X[11]) + ((-8.0 * (sPAR[172] * (X[9] * X[93]))) + ((sPAR[109] * (X[109] * (X[11] / (X[109] + (X[110] + (X[111] + sPAR[66])))))) + ((-6.0 * (sPAR[176] * (X[15] * X[93]))) + ((sPAR[112] * (X[109] * (X[17] / (X[109] + (X[110] + (X[111] + sPAR[66])))))) + ((-3.0 * (sPAR[179] * (X[38] * X[93]))) + ((sPAR[115] * (X[109] * (X[40] / (X[109] + (X[110] + (X[111] + sPAR[66])))))) + ((-3.0 * (sPAR[183] * (X[54] * X[93]))) + ((sPAR[119] * (X[109] * (X[56] / (X[109] + (X[110] + (X[111] + sPAR[66])))))) + ((-4.0 * (sPAR[188] * (X[45] * X[93]))) + ((sPAR[123] * (X[109] * (X[47] / (X[109] + (X[110] + (X[111] + sPAR[66])))))) + ((-4.0 * (sPAR[192] * (X[62] * X[93]))) + ((sPAR[127] * (X[109] * (X[64] / (X[109] + (X[110] + (X[111] + sPAR[66])))))) + ((-3.0 * (sPAR[199] * (X[95] * X[93]))) + ((sPAR[134] * (X[98] * (X[109] / (X[109] + (X[110] + (X[111] + sPAR[66])))))) + ((-5.0 * (sPAR[212] * (X[22] * X[93]))) + ((sPAR[147] * (X[109] * (X[24] / (X[109] + (X[110] + (X[111] + sPAR[66])))))) + ((-6.0 * (sPAR[217] * (X[29] * X[93]))) + (sPAR[152] * (X[109] * (X[31] / (X[109] + (X[110] + (X[111] + sPAR[66]))))))))))))))))))))))));
    F[75]=((sPAR[83] * X[8]) + ((-4.0 * (sPAR[171] * (X[9] * X[75]))) + ((sPAR[108] * (X[102] * (X[8] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))) + ((-3.0 * (sPAR[174] * (X[15] * X[75]))) + ((sPAR[111] * (X[102] * (X[14] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))) + ((-3.0 * (sPAR[178] * (X[38] * X[75]))) + ((sPAR[114] * (X[102] * (X[36] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))) + ((-4.0 * (sPAR[182] * (X[54] * X[75]))) + ((sPAR[118] * (X[102] * (X[52] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))) + ((-3.0 * (sPAR[187] * (X[45] * X[75]))) + ((sPAR[122] * (X[102] * (X[43] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))) + ((-4.0 * (sPAR[191] * (X[62] * X[75]))) + ((sPAR[126] * (X[102] * (X[60] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))) + ((sPAR[133] * (X[111] * (X[102] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))) + ((sPAR[139] * X[100]) + ((-4.0 * (sPAR[211] * (X[22] * X[75]))) + ((sPAR[146] * (X[102] * (X[20] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))) + ((-4.0 * (sPAR[215] * (X[29] * X[75]))) + ((sPAR[150] * (X[102] * (X[27] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))) + (((-(sPAR[204])) * (X[87] * X[75])) - (sPAR[198] * (X[110] * X[75]))))))))))))))))))))));
    F[62]=((sPAR[89] * X[59]) + ((-4.0 * (sPAR[191] * (X[62] * X[75]))) + ((sPAR[126] * (X[102] * (X[60] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))) + ((-4.0 * (sPAR[192] * (X[62] * X[93]))) + ((sPAR[127] * (X[109] * (X[64] / (X[109] + (X[110] + (X[111] + sPAR[66])))))) + ((-2.0 * (sPAR[193] * (X[62] * X[80]))) + ((sPAR[128] * X[61]) + ((-2.0 * (sPAR[194] * (X[62] * X[88]))) + ((sPAR[129] * (X[107] * (X[63] / (X[107] + (X[108] + sPAR[66]))))) + ((-2.0 * (sPAR[225] * (X[62] * X[113]))) + ((sPAR[160] * X[65]) + (((-(sPAR[72])) * (X[112] * X[62])) - (sPAR[52] * (X[62] / (sPAR[12] + X[62])))))))))))))));
    F[45]=((sPAR[88] * X[42]) + ((-3.0 * (sPAR[187] * (X[45] * X[75]))) + ((sPAR[122] * (X[102] * (X[43] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))) + ((-4.0 * (sPAR[188] * (X[45] * X[93]))) + ((sPAR[123] * (X[109] * (X[47] / (X[109] + (X[110] + (X[111] + sPAR[66])))))) + ((sPAR[124] * X[44]) + ((-2.0 * (sPAR[190] * (X[45] * X[88]))) + ((sPAR[125] * (X[107] * (X[46] / (X[107] + (X[108] + sPAR[66]))))) + ((-2.0 * (sPAR[224] * (X[45] * X[113]))) + ((sPAR[159] * X[48]) + ((X[45] * (((-(sPAR[52])) / (sPAR[12] + X[45])) - (sPAR[189] * X[80]))) - (sPAR[71] * (X[112] * X[45])))))))))))));
    F[54]=((sPAR[87] * X[51]) + ((-4.0 * (sPAR[182] * (X[54] * X[75]))) + ((sPAR[118] * (X[102] * (X[52] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))) + ((-3.0 * (sPAR[183] * (X[54] * X[93]))) + ((sPAR[119] * (X[109] * (X[56] / (X[109] + (X[110] + (X[111] + sPAR[66])))))) + ((-4.0 * (sPAR[184] * (X[54] * X[80]))) + ((sPAR[120] * X[53]) + ((-2.0 * (sPAR[185] * (X[54] * X[88]))) + ((sPAR[121] * (X[107] * (X[55] / (X[107] + (X[108] + sPAR[66]))))) + ((-2.0 * (sPAR[223] * (X[54] * X[113]))) + ((sPAR[158] * X[57]) + (((-(sPAR[70])) * (X[112] * X[54])) - (sPAR[52] * (X[54] / (sPAR[12] + X[54])))))))))))))));
    F[38]=((sPAR[86] * X[35]) + ((-3.0 * (sPAR[178] * (X[38] * X[75]))) + ((sPAR[114] * (X[102] * (X[36] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))) + ((-3.0 * (sPAR[179] * (X[38] * X[93]))) + ((sPAR[115] * (X[109] * (X[40] / (X[109] + (X[110] + (X[111] + sPAR[66])))))) + ((-3.0 * (sPAR[180] * (X[38] * X[80]))) + ((sPAR[116] * X[37]) + ((-2.0 * (sPAR[181] * (X[38] * X[88]))) + ((sPAR[117] * (X[107] * (X[39] / (X[107] + (X[108] + sPAR[66]))))) + ((-2.0 * (sPAR[222] * (X[38] * X[113]))) + ((sPAR[157] * X[41]) + (((-(sPAR[69])) * (X[112] * X[38])) - (sPAR[52] * (X[38] / (sPAR[12] + X[38])))))))))))))));
    F[15]=((sPAR[85] * X[13]) + ((-3.0 * (sPAR[174] * (X[15] * X[75]))) + ((sPAR[111] * (X[102] * (X[14] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))) + ((-6.0 * (sPAR[176] * (X[15] * X[93]))) + ((sPAR[112] * (X[109] * (X[17] / (X[109] + (X[110] + (X[111] + sPAR[66])))))) + ((-2.0 * (sPAR[177] * (X[15] * X[88]))) + ((sPAR[113] * (X[107] * (X[16] / (X[107] + (X[108] + sPAR[66]))))) + ((-3.0 * (sPAR[221] * (X[15] * X[113]))) + ((sPAR[156] * X[18]) + (((-(sPAR[52])) * (X[15] / (sPAR[12] + X[15]))) - (sPAR[68] * (X[112] * X[15]))))))))))));
    F[9]=((sPAR[84] * X[7]) + ((-4.0 * (sPAR[171] * (X[9] * X[75]))) + ((sPAR[108] * (X[102] * (X[8] / (X[102] + (X[103] + (X[104] + (X[2] + sPAR[66]))))))) + ((-8.0 * (sPAR[172] * (X[9] * X[93]))) + ((sPAR[109] * (X[109] * (X[11] / (X[109] + (X[110] + (X[111] + sPAR[66])))))) + ((-2.0 * (sPAR[173] * (X[9] * X[88]))) + ((sPAR[110] * (X[107] * (X[10] / (X[107] + (X[108] + sPAR[66]))))) + ((-4.0 * (sPAR[220] * (X[9] * X[113]))) + ((sPAR[155] * X[12]) + (((-(X[9])) * (sPAR[83] + (sPAR[52] / (sPAR[12] + X[9])))) - (sPAR[67] * (X[112] * X[9]))))))))))));
    F[59]=((sPAR[233] * pow(X[78],2.0)) + ((sPAR[52] * (X[62] / (sPAR[12] + X[62]))) + ((sPAR[72] * (X[112] * X[62])) + (((-(sPAR[89])) - sPAR[166]) * X[59]))));
    F[42]=((sPAR[227] * (X[78] * X[34])) + ((sPAR[52] * (X[45] / (sPAR[12] + X[45]))) + ((sPAR[71] * (X[112] * X[45])) + (((-(sPAR[88])) - sPAR[162]) * X[42]))));
    F[51]=((sPAR[216] * (X[77] * X[78])) + ((sPAR[52] * (X[54] / (sPAR[12] + X[54]))) + ((sPAR[70] * (X[112] * X[54])) + (((-(sPAR[87])) - sPAR[151]) * X[51]))));
    F[35]=((sPAR[207] * (X[77] * X[34])) + ((sPAR[52] * (X[38] / (sPAR[12] + X[38]))) + ((sPAR[69] * (X[112] * X[38])) + (((-(sPAR[86])) - sPAR[142]) * X[35]))));
    F[13]=((sPAR[203] * (X[72] * X[34])) + ((sPAR[52] * (X[15] / (sPAR[12] + X[15]))) + ((sPAR[68] * (X[112] * X[15])) + (((-(sPAR[85])) - sPAR[138]) * X[13]))));
    F[7]=((sPAR[195] * pow(X[72],2.0)) + ((sPAR[52] * (X[9] / (sPAR[12] + X[9]))) + ((sPAR[67] * (X[112] * X[9])) + (((-(sPAR[84])) - sPAR[130]) * X[7]))));
    F[78]=((sPAR[186] * (X[76] * X[58])) + ((sPAR[151] * X[51]) + ((sPAR[162] * X[42]) + ((2.0 * (sPAR[166] * X[59])) + ((2.0 * ((-(sPAR[233])) * pow(X[78],2.0))) + ((sPAR[145] * X[26]) + ((sPAR[63] * (X[79] / (sPAR[39] + X[79]))) + (((((-(X[78])) * (sPAR[11] + (sPAR[227] * X[34]))) - (sPAR[107] * (X[78] * (X[70] / (sPAR[25] + X[78]))))) - (sPAR[210] * (X[78] * X[72]))) - (sPAR[216] * (X[77] * X[78]))))))))));
    F[77]=((sPAR[175] * (X[76] * X[50])) + ((sPAR[142] * X[35]) + ((sPAR[151] * X[51]) + ((sPAR[144] * X[19]) + (X[77] * ((((-(sPAR[207])) * X[34]) - (sPAR[209] * X[72])) - (sPAR[10] + (sPAR[216] * X[78]))))))));
    F[72]=((sPAR[170] * (X[5] * X[6])) + ((2.0 * (sPAR[130] * X[7])) + ((2.0 * ((-(sPAR[195])) * pow(X[72],2.0))) + ((sPAR[138] * X[13]) + ((sPAR[144] * X[19]) + ((sPAR[145] * X[26]) + ((sPAR[62] * (X[73] / (sPAR[38] + X[73]))) + ((((((-(sPAR[209])) * (X[77] * X[72])) - (sPAR[106] * (X[72] * (X[70] / (sPAR[24] + X[72]))))) - (sPAR[1] * X[72])) - (sPAR[210] * (X[78] * X[72]))) - (sPAR[203] * (X[72] * X[34]))))))))));
    F[58]=((sPAR[11] * X[78]) + ((sPAR[61] * (X[66] / (sPAR[37] + X[66]))) + (((-(sPAR[105])) * (X[58] * (X[70] / (sPAR[23] + X[58])))) - (sPAR[186] * (X[76] * X[58])))));
    F[50]=((sPAR[10] * X[77]) - (sPAR[175] * (X[76] * X[50])));
    F[34]=((sPAR[138] * X[13]) + ((sPAR[142] * X[35]) + ((sPAR[162] * X[42]) + ((sPAR[60] * (X[49] / (sPAR[36] + X[49]))) + (((((-(sPAR[207])) * (X[77] * X[34])) - (sPAR[104] * (X[34] * (X[70] / (sPAR[22] + X[34]))))) - (sPAR[227] * (X[78] * X[34]))) - (sPAR[203] * (X[72] * X[34])))))));
    F[6]=((sPAR[1] * X[72]) + ((sPAR[59] * (X[33] / (sPAR[35] + X[33]))) + (((-(sPAR[103])) * (X[6] * (X[70] / (sPAR[21] + X[6])))) - (sPAR[170] * (X[5] * X[6])))));

}

template<class Precision> __forceinline__ __device__ void PerThread_EventFunction(
	int tid, int NT, Precision*	  EF, \
	Precision     T, Precision    dT, Precision*    TD, Precision*	X, \
	Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi  		
) {
    

}

template<class Precision> __forceinline__ __device__ void PerThread_ActionAfterEventDetection(
    int tid, int NT, int IDX, int& UDT, \
    Precision    &T, Precision   &dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi
) {
    
}

template<class Precision> __forceinline__ __device__ void PerThread_ActionAfterSuccessfulTimeStep(
    int tid, int NT, int& UDT, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR, int*       sPARi, Precision* ACC, int* ACCi
) {
    
}

template<class Precision> __forceinline__ __device__ void PerThread_Initialization(
    int tid, int NT, int& DOIDX, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR,       int* sPARi, Precision* ACC, int* ACCi
) {
    T     = TD[0];
    DOIDX = 0;
    ACC[0]=0.0; //norm_Akt_star
    ACC[1]=0.0; //norm_Erk_star
    sPAR[0]=444.2921; //Akt_Abund
    sPAR[1]=0.0175; //EGF_off
    sPAR[2]=35.005; //ERKPpase_Abund
    sPAR[3]=749.9716; //ERK_Abund
    sPAR[4]=274.0; //ErbB1_Abund
    sPAR[5]=158.0; //ErbB2_Abund
    sPAR[6]=294.0; //ErbB3_Abund
    sPAR[7]=399.0; //ErbB4_Abund
    sPAR[8]=43.1; //Gab1_Abund
    sPAR[9]=82.40000000000001; //Grb2_Abund
    sPAR[10]=0.0009; //HRGoff_3
    sPAR[11]=0.0973; //HRGoff_4
    sPAR[12]=486.1398; //KmPY
    sPAR[13]=698.6022; //Kmf47
    sPAR[14]=715.5688; //Kmf48
    sPAR[15]=343.2483; //Kmf49
    sPAR[16]=599.7076; //Kmf51
    sPAR[17]=545.4408; //Kmf52
    sPAR[18]=812.254; //Kmf53
    sPAR[19]=457.9645; //Kmf54
    sPAR[20]=460.9446; //Kmf55
    sPAR[21]=485.2626; //Kmf81
    sPAR[22]=781.4374; //Kmf82
    sPAR[23]=609.4766; //Kmf83
    sPAR[24]=622.3847; //Kmf84
    sPAR[25]=179.6486; //Kmf85
    sPAR[26]=483.8622; //Kmr47
    sPAR[27]=324.9294; //Kmr48
    sPAR[28]=753.1667; //Kmr49
    sPAR[29]=381.2208; //Kmr49b
    sPAR[30]=346.4779; //Kmr51
    sPAR[31]=675.2994; //Kmr52
    sPAR[32]=944.7692; //Kmr53
    sPAR[33]=336.183; //Kmr54
    sPAR[34]=643.9247; //Kmr55
    sPAR[35]=323.4012; //Kmr81
    sPAR[36]=595.8395; //Kmr82
    sPAR[37]=653.5184; //Kmr83
    sPAR[38]=258.4637; //Kmr84
    sPAR[39]=290.7667; //Kmr85
    sPAR[40]=988.4496; //Kmrb51
    sPAR[41]=772.0; //MEK_Abund
    sPAR[42]=46.4; //PI3K_Abund
    sPAR[43]=197.0; //PIP2_Abund
    sPAR[44]=693.5786000000001; //PTEN
    sPAR[45]=500.0; //PTP1B_Abund
    sPAR[46]=743.0; //Raf_Abund
    sPAR[47]=93.59999999999999; //RasGAP_Abund
    sPAR[48]=95.7; //Ras_Abund
    sPAR[49]=82.3; //SOS_Abund
    sPAR[50]=11.5; //Shc_Abund
    sPAR[51]=33.3; //VeVc
    sPAR[52]=223.8776; //VmaxPY
    sPAR[53]=590.5058; //Vmaxr47
    sPAR[54]=16.737; //Vmaxr51
    sPAR[55]=199.2773; //Vmaxr52
    sPAR[56]=59.2314; //Vmaxr53
    sPAR[57]=588.2671; //Vmaxr54
    sPAR[58]=646.9003; //Vmaxr55
    sPAR[59]=242.6034; //Vmaxr81
    sPAR[60]=398.1931; //Vmaxr82
    sPAR[61]=534.0531; //Vmaxr83
    sPAR[62]=634.1626; //Vmaxr84
    sPAR[63]=369.2261; //Vmaxr85
    sPAR[64]=0.0849; //a98
    sPAR[65]=0.1833; //b98
    sPAR[66]=1e-16; //eps
    sPAR[67]=29.8531; //kPTP10
    sPAR[68]=78.20399999999999; //kPTP11
    sPAR[69]=11.4211; //kPTP12
    sPAR[70]=55.2104; //kPTP13
    sPAR[71]=57.7506; //kPTP14
    sPAR[72]=60.2628; //kPTP15
    sPAR[73]=83.4465; //kPTP38
    sPAR[74]=79.61320000000001; //kPTP39
    sPAR[75]=96.5716; //kPTP50
    sPAR[76]=7.4766; //kPTP63
    sPAR[77]=48.6335; //kPTP64
    sPAR[78]=20.0037; //kcat90
    sPAR[79]=0.2004; //kcat92
    sPAR[80]=0.9966; //kcat94
    sPAR[81]=19.9851; //kcat96
    sPAR[82]=9.978300000000001; //kcon49
    sPAR[83]=0.0259; //kdeg
    sPAR[84]=0.6496; //kf10
    sPAR[85]=0.3721; //kf11
    sPAR[86]=1.8012; //kf12
    sPAR[87]=0.8875; //kf13
    sPAR[88]=6.1726; //kf14
    sPAR[89]=1.3565; //kf15
    sPAR[90]=279.9929; //kf38
    sPAR[91]=385.7428; //kf39
    sPAR[92]=24.6048; //kf47
    sPAR[93]=16.833; //kf48
    sPAR[94]=44.3501; //kf49
    sPAR[95]=389.1061; //kf50
    sPAR[96]=3.6515; //kf51
    sPAR[97]=0.7745; //kf52
    sPAR[98]=0.6094000000000001; //kf53
    sPAR[99]=0.0538; //kf54
    sPAR[100]=0.2256; //kf55
    sPAR[101]=0.9297; //kf63
    sPAR[102]=1.2083; //kf64
    sPAR[103]=1.361; //kf81
    sPAR[104]=6.9987; //kf82
    sPAR[105]=1.7628; //kf83
    sPAR[106]=4.6894; //kf84
    sPAR[107]=6.7591; //kf85
    sPAR[108]=0.5737; //koff16
    sPAR[109]=4.6874; //koff17
    sPAR[110]=2.2768; //koff18
    sPAR[111]=2.3361; //koff19
    sPAR[112]=0.6761; //koff20
    sPAR[113]=4.7291; //koff21
    sPAR[114]=3.6962; //koff22
    sPAR[115]=2.3619; //koff23
    sPAR[116]=4.4226; //koff24
    sPAR[117]=2.225; //koff25
    sPAR[118]=0.0103; //koff26
    sPAR[119]=1.8922; //koff27
    sPAR[120]=4.6432; //koff28
    sPAR[121]=2.0148; //koff29
    sPAR[122]=4.9936; //koff30
    sPAR[123]=1.2204; //koff31
    sPAR[124]=3.8752; //koff32
    sPAR[125]=1.2817; //koff33
    sPAR[126]=3.2036; //koff34
    sPAR[127]=1.8696; //koff35
    sPAR[128]=1.2567; //koff36
    sPAR[129]=0.4059; //koff37
    sPAR[130]=0.1717; //koff4
    sPAR[131]=3.1051; //koff40
    sPAR[132]=7.0487; //koff41
    sPAR[133]=3.5195; //koff42
    sPAR[134]=0.5441; //koff43
    sPAR[135]=0.4265; //koff44
    sPAR[136]=3.9967; //koff45
    sPAR[137]=0.5194; //koff46
    sPAR[138]=4.3985; //koff5
    sPAR[139]=0.4526; //koff57
    sPAR[140]=6.3059; //koff58
    sPAR[141]=9.172000000000001; //koff59
    sPAR[142]=2.6619; //koff6
    sPAR[143]=4.9981; //koff60
    sPAR[144]=5.229; //koff61
    sPAR[145]=5.5142; //koff62
    sPAR[146]=0.1185; //koff65
    sPAR[147]=2.2988; //koff66
    sPAR[148]=1.6142; //koff67
    sPAR[149]=2.8871; //koff68
    sPAR[150]=3.97; //koff69
    sPAR[151]=8.0557; //koff7
    sPAR[152]=2.6069; //koff70
    sPAR[153]=2.2988; //koff71
    sPAR[154]=0.907; //koff72
    sPAR[155]=3.0048; //koff73
    sPAR[156]=1.2496; //koff74
    sPAR[157]=1.4323; //koff75
    sPAR[158]=2.1542; //koff76
    sPAR[159]=1.2237; //koff77
    sPAR[160]=0.2007; //koff78
    sPAR[161]=1.1852; //koff79
    sPAR[162]=9.103400000000001; //koff8
    sPAR[163]=2.9373; //koff80
    sPAR[164]=3.9255; //koff88
    sPAR[165]=99.9637; //koff89
    sPAR[166]=5.5425; //koff9
    sPAR[167]=99.9983; //koff91
    sPAR[168]=100.0037; //koff93
    sPAR[169]=100.0023; //koff95
    sPAR[170]=0.00010086; //kon1
    sPAR[171]=0.0097; //kon16
    sPAR[172]=0.0049; //kon17
    sPAR[173]=0.0117; //kon18
    sPAR[174]=0.0896; //kon19
    sPAR[175]=0.0059; //kon2
    sPAR[176]=0.0478; //kon20
    sPAR[177]=0.0114; //kon21
    sPAR[178]=0.0007; //kon22
    sPAR[179]=0.0138; //kon23
    sPAR[180]=0.005; //kon24
    sPAR[181]=0.09950000000000001; //kon25
    sPAR[182]=0.0355; //kon26
    sPAR[183]=0.0201; //kon27
    sPAR[184]=0.0074; //kon28
    sPAR[185]=0.0346; //kon29
    sPAR[186]=0.0334; //kon3
    sPAR[187]=0.002; //kon30
    sPAR[188]=0.0032; //kon31
    sPAR[189]=0.0009; //kon32
    sPAR[190]=0.0335; //kon33
    sPAR[191]=0.0001; //kon34
    sPAR[192]=0.0602; //kon35
    sPAR[193]=0.0043; //kon36
    sPAR[194]=0.0791; //kon37
    sPAR[195]=0.5004999999999999; //kon4
    sPAR[196]=0.0191; //kon40
    sPAR[197]=0.0051; //kon41
    sPAR[198]=0.0023; //kon42
    sPAR[199]=0.0127; //kon43
    sPAR[200]=0.0122; //kon44
    sPAR[201]=0.0028; //kon45
    sPAR[202]=0.0148; //kon46
    sPAR[203]=2.5427; //kon5
    sPAR[204]=0.0039; //kon57
    sPAR[205]=0.0215; //kon58
    sPAR[206]=0.0077; //kon59
    sPAR[207]=0.2283; //kon6
    sPAR[208]=0.00011994; //kon60
    sPAR[209]=0.8048; //kon61
    sPAR[210]=1.782; //kon62
    sPAR[211]=0.0123; //kon65
    sPAR[212]=0.00019264; //kon66
    sPAR[213]=6.6667e-05; //kon67
    sPAR[214]=0.0045; //kon68
    sPAR[215]=0.008399999999999999; //kon69
    sPAR[216]=1.0606; //kon7
    sPAR[217]=0.0116; //kon70
    sPAR[218]=0.0078; //kon71
    sPAR[219]=0.0355; //kon72
    sPAR[220]=0.0116; //kon73
    sPAR[221]=0.0133; //kon74
    sPAR[222]=0.0137; //kon75
    sPAR[223]=0.0053; //kon76
    sPAR[224]=0.0101; //kon77
    sPAR[225]=0.0076; //kon78
    sPAR[226]=0.0078; //kon79
    sPAR[227]=1.0259; //kon8
    sPAR[228]=0.0002; //kon80
    sPAR[229]=0.0038; //kon86
    sPAR[230]=0.0008; //kon87
    sPAR[231]=0.0108; //kon88
    sPAR[232]=0.1997; //kon89
    sPAR[233]=2.2868; //kon9
    sPAR[234]=0.1966; //kon91
    sPAR[235]=0.2003; //kon93
    sPAR[236]=0.1993; //kon95
    sPAR[237]=552.6746000000001; //kr49
    sPAR[238]=640.8212; //kr49b
    sPAR[239]=0.0; //kr51
    X[0]=43.1; //A
    X[1]=0.0; //AP
    X[2]=0.0; //A_SigG_O
    X[3]=444.0; //Akt
    X[4]=0.0; //Aktstar
    X[5]=10.0; //E
    X[6]=274.0; //E1
    X[7]=0.0; //E11
    X[8]=0.0; //E11G
    X[9]=0.0; //E11P
    X[10]=0.0; //E11R
    X[11]=0.0; //E11S
    X[12]=0.0; //E11T
    X[13]=0.0; //E12
    X[14]=0.0; //E12G
    X[15]=0.0; //E12P
    X[16]=0.0; //E12R
    X[17]=0.0; //E12S
    X[18]=0.0; //E12T
    X[19]=0.0; //E13
    X[20]=0.0; //E13G
    X[21]=0.0; //E13I
    X[22]=0.0; //E13P
    X[23]=0.0; //E13R
    X[24]=0.0; //E13S
    X[25]=0.0; //E13T
    X[26]=0.0; //E14
    X[27]=0.0; //E14G
    X[28]=0.0; //E14I
    X[29]=0.0; //E14P
    X[30]=0.0; //E14R
    X[31]=0.0; //E14S
    X[32]=0.0; //E14T
    X[33]=0.0; //E1_PT
    X[34]=158.0; //E2
    X[35]=0.0; //E23
    X[36]=0.0; //E23G
    X[37]=0.0; //E23I
    X[38]=0.0; //E23P
    X[39]=0.0; //E23R
    X[40]=0.0; //E23S
    X[41]=0.0; //E23T
    X[42]=0.0; //E24
    X[43]=0.0; //E24G
    X[44]=0.0; //E24I
    X[45]=0.0; //E24P
    X[46]=0.0; //E24R
    X[47]=0.0; //E24S
    X[48]=0.0; //E24T
    X[49]=0.0; //E2_PT
    X[50]=294.0; //E3
    X[51]=0.0; //E34
    X[52]=0.0; //E34G
    X[53]=0.0; //E34I
    X[54]=0.0; //E34P
    X[55]=0.0; //E34R
    X[56]=0.0; //E34S
    X[57]=0.0; //E34T
    X[58]=399.0; //E4
    X[59]=0.0; //E44
    X[60]=0.0; //E44G
    X[61]=0.0; //E44I
    X[62]=0.0; //E44P
    X[63]=0.0; //E44R
    X[64]=0.0; //E44S
    X[65]=0.0; //E44T
    X[66]=0.0; //E4_PT
    X[67]=750.0; //ERK
    X[68]=0.0; //ERK_MEKstar
    X[69]=0.0; //ERKpase
    X[70]=0.0; //ERKstar
    X[71]=35.0; //ERKstar_ERKpase
    X[72]=0.0; //E_E1
    X[73]=0.0; //E_E1_PT
    X[74]=0.0; //Empty
    X[75]=82.40000000000001; //G
    X[76]=10.0; //H
    X[77]=0.0; //H_E3
    X[78]=0.0; //H_E4
    X[79]=0.0; //H_E4_PT
    X[80]=46.4; //I
    X[81]=772.0; //MEK
    X[82]=0.0; //MEKstar
    X[83]=82.3; //O
    X[84]=0.0; //OP
    X[85]=197.0; //P2
    X[86]=0.0; //P3
    X[87]=0.0; //P3_A
    X[88]=93.59999999999999; //R
    X[89]=743.0; //Raf
    X[90]=0.0; //Rafstar
    X[91]=95.7; //RsD
    X[92]=0.0; //RsT
    X[93]=11.5; //S
    X[94]=0.0; //SigA
    X[95]=0.0; //SigAP
    X[96]=0.0; //SigAP_I
    X[97]=0.0; //SigAP_R
    X[98]=0.0; //SigAP_S
    X[99]=0.0; //SigAP_T
    X[100]=0.0; //SigA_G
    X[101]=0.0; //SigA_G_O
    X[102]=0.0; //SigG
    X[103]=0.0; //SigG_A
    X[104]=0.0; //SigG_O
    X[105]=0.0; //SigI
    X[106]=0.0; //SigO
    X[107]=0.0; //SigR
    X[108]=0.0; //SigRP
    X[109]=0.0; //SigS
    X[110]=0.0; //SigSP
    X[111]=0.0; //SigSP_G
    X[112]=0.0; //SigT
    X[113]=500.0; //T
    X[114]=0.0; //fint
    X[115]=0.0; //pERK
    X[116]=0.0; //pERK_ERKpase
    X[117]=0.0; //pERK_MEKstar

}

template <class Precision> __forceinline__ __device__ void PerThread_Finalization(
    int tid, int NT, int& DOIDX, \
    Precision&    T, Precision&   dT, Precision*    TD, Precision*   X, \
    Precision* cPAR, Precision* sPAR,       int* sPARi, Precision* ACC, int* ACCi
) {
	
}


#endif
