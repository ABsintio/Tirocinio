
model BIOMD281 "Chance1960_Glycolysis_Respiration"

    function pow
        input  Real x;
        input  Real power;
        output Real y;
        algorithm
            y := x^power;
    end pow;

    parameter Real k_0 = 3000000000.0;
    parameter Real k_1 = 10000000000.0;
    parameter Real k_2 = 40000000000.0;
    parameter Real k_3 = 40000000000.0;
    parameter Real k_4 = 100000.0;
    parameter Real k_5 = 2000000000.0;
    parameter Real k_6 = 80000000.0;
    parameter Real k_7 = 600000000000.0;
    parameter Real k_8 = 400000000.0;
    parameter Real k_9 = 6000000000.0;
    parameter Real k_10 = 10000000000.0;
    parameter Real k_11 = 5000000000.0;
    parameter Real k_12 = 500000000.0;
    parameter Real k_13 = 10000000.0;
    parameter Real k_14 = 20000000.0;
    parameter Real k_15 = 7500000000000.0;
    parameter Real k_16 = 400000000.0;
    parameter Real k_17 = 15000000000.0;
    parameter Real k_18 = 120000000.0;
    parameter Real k_19 = 4000000.0;
    parameter Real k_20 = 3000000000.0;
    parameter Real k_21 = 2000000.0;
    parameter Real cell = 1.0;

    Real GLU_0(start=0.0);
    Real ENZ_0(start=0.0);
    Real ENG_0(start=0.0);
    Real TP1_0(start=0.0);
    Real ADP_0(start=0.0);
    Real GLP_0(start=0.0);
    Real ETZ_0(start=0.0);
    Real ETG_0(start=0.0);
    Real GPP_0(start=0.0);
    Real GAP_0(start=0.0);
    Real DHA_0(start=0.0);
    Real DPN_0(start=0.0);
    Real DPH_0(start=0.0);
    Real PID_0(start=0.0);
    Real DGA_0(start=0.0);
    Real PGA_0(start=0.0);
    Real PYR_0(start=0.0);
    Real LAC_0(start=0.0);
    Real DIN_0(start=0.0);
    Real DIH_0(start=0.0);
    Real XI_0(start=0.0);
    Real XSI_0(start=0.0);
    Real OXY_0(start=0.0);
    Real XSP_0(start=0.0);
    Real TP2_0(start=0.0);
    Real DBP_0(start=0.0);
    Real PUE_0(start=0.0);
    Real PPP_0(start=0.0);
    Real AGP_0(start=0.0);
    Real MOD_0(start=0.0);
    Real MOB_0(start=0.0);
    Real MOX_0(start=0.0);

    Real GLU;
    Real ENZ;
    Real ENG;
    Real TP1;
    Real ADP;
    Real GLP;
    Real ETZ;
    Real ETG;
    Real GPP;
    Real GAP;
    Real DHA;
    Real DPN;
    Real DPH;
    Real PID;
    Real DGA;
    Real PGA;
    Real PYR;
    Real LAC;
    Real DIN;
    Real DIH;
    Real XI;
    Real XSI;
    Real OXY;
    Real XSP;
    Real TP2;
    Real DBP;
    Real PUE;
    Real PPP;
    Real AGP;
    Real MOD;
    Real MOB;
    Real MOX;

initial equation
    GLU = 0.0;
    ENZ = 1e-05;
    ENG = 0.0;
    TP1 = 0.0005;
    ADP = 0.0001;
    GLP = 0.0;
    ETZ = 1e-05;
    ETG = 0.0;
    GPP = 0.0;
    GAP = 0.0;
    DHA = 0.0;
    DPN = 0.0001;
    DPH = 0.0001;
    PID = 0.004;
    DGA = 0.0;
    PGA = 0.0;
    PYR = 0.001;
    LAC = 0.001;
    DIN = 3e-05;
    DIH = 3e-05;
    XI = 2e-05;
    XSI = 2e-05;
    OXY = 0.0005;
    XSP = 2e-05;
    TP2 = 0.0005;
    DBP = 0.0;
    PUE = 2e-06;
    PPP = 1e-06;
    AGP = 0.0;
    MOD = 5e-05;
    MOB = 0.0;
    MOX = 0.0;

equation
    GLU_0 = GLU / 0.003;
    ENZ_0 = ENZ / 1.02e-5;
    ENG_0 = ENG / 1.02e-5;
    TP1_0 = TP1 / 0.0015;
    ADP_0 = ADP / 0.001;
    GLP_0 = GLP / 0.001;
    ETZ_0 = ETZ / 1e-5;
    ETG_0 = ETG / 1e-5;
    GPP_0 = GPP / 0.001;
    GAP_0 = GAP / 0.0002;
    DHA_0 = DHA / 0.0013;
    DPN_0 = DPN / 0.00025;
    DPH_0 = DPH / 0.0002;
    PID_0 = PID / 0.005;
    DGA_0 = DGA / 0.0002;
    PGA_0 = PGA / 0.0002;
    PYR_0 = PYR / 0.002;
    LAC_0 = LAC / 0.0012;
    DIN_0 = DIN / 7e-5;
    DIH_0 = DIH / 7e-5;
    XI_0 = XI / 6e-5;
    XSI_0 = XSI / 6e-5;
    OXY_0 = OXY / 0.0005;
    XSP_0 = XSP / 6e-5;
    TP2_0 = TP2 / 0.0015;
    DBP_0 = DBP / 0.025;
    PUE_0 = PUE / 3.06e-6;
    PPP_0 = PPP / 3.06;
    AGP_0 = AGP / 0.0013;
    MOD_0 = MOD / 5e-5;
    MOB_0 = MOB / 0.0001;
    MOX_0 = MOX / 5e-5;
    der(GLU) =  - (cell * 1e-6 * k_0 * GLU * ENZ);
    der(ENZ) = (cell * 1e-6 * k_1 * ENG * TP1) - (cell * 1e-6 * k_0 * GLU * ENZ);
    der(ENG) = (cell * 1e-6 * k_0 * GLU * ENZ) - (cell * 1e-6 * k_1 * ENG * TP1);
    der(TP1) = (cell * 1e-6 * k_10 * DGA * ADP) + (cell * 1e-6 * k_11 * PGA * ADP) + (cell * 1e-6 * k_19 * TP2 * DBP) - (cell * 1e-6 * k_1 * ENG * TP1) - (cell * 1e-6 * k_3 * ETG * TP1) - (cell * 1e-6 * k_20 * TP1 * PUE);
    der(ADP) = (cell * 1e-6 * k_1 * ENG * TP1) + (cell * 1e-6 * k_3 * ETG * TP1) + (cell * 1e-6 * k_21 * PPP) - (cell * 1e-6 * k_10 * DGA * ADP) - (cell * 1e-6 * k_11 * PGA * ADP) - (cell * 1e-6 * k_17 * XSP * ADP);
    der(GLP) = (cell * 1e-6 * k_1 * ENG * TP1) - (cell * 1e-6 * k_2 * GLP * ETZ);
    der(ETZ) = (cell * 1e-6 * k_3 * ETG * TP1) - (cell * 1e-6 * k_2 * GLP * ETZ);
    der(ETG) = (cell * 1e-6 * k_2 * GLP * ETZ) - (cell * 1e-6 * k_3 * ETG * TP1);
    der(GPP) = (cell * 1e-6 * k_3 * ETG * TP1) - (cell * 1e-6 * k_4 * GPP);
    der(GAP) = (cell * 1e-6 * k_4 * GPP) - (cell * 1e-6 * k_7 * GAP * MOD);
    der(DHA) = (cell * 1e-6 * k_4 * GPP) + (cell * 1e-6 * k_6 * AGP * DPN) - (cell * 1e-6 * k_5 * DHA * DPH);
    der(DPN) = (cell * 1e-6 * k_5 * DHA * DPH) + (cell * 1e-6 * k_12 * PYR * DPH) - (cell * 1e-6 * k_6 * AGP * DPN) - (cell * 1e-6 * k_9 * MOX * DPN) - (cell * 1e-6 * k_13 * LAC * DPN);
    der(DPH) = (cell * 1e-6 * k_6 * AGP * DPN) + (cell * 1e-6 * k_7 * GAP * MOD) + (cell * 1e-6 * k_13 * LAC * DPN) - (cell * 1e-6 * k_5 * DHA * DPH) - (cell * 1e-6 * k_12 * PYR * DPH);
    der(PID) = (cell * 1e-6 * k_21 * PPP) - (cell * 1e-6 * k_8 * MOB * PID) - (cell * 1e-6 * k_16 * XSI * PID);
    der(DGA) = (cell * 1e-6 * k_8 * MOB * PID) - (cell * 1e-6 * k_10 * DGA * ADP);
    der(PGA) = (cell * 1e-6 * k_10 * DGA * ADP) - (cell * 1e-6 * k_11 * PGA * ADP);
    der(PYR) = (cell * 1e-6 * k_11 * PGA * ADP) + (cell * 1e-6 * k_13 * LAC * DPN) - (cell * 1e-6 * k_12 * PYR * DPH) - (cell * 1e-6 * k_14 * PYR * DIN);
    der(LAC) = (cell * 1e-6 * k_12 * PYR * DPH) - (cell * 1e-6 * k_13 * LAC * DPN);
    der(DIN) = (cell * 1e-6 * k_15 * DIH * XI * OXY) - (4.0 * cell * 1e-6 * k_14 * PYR * DIN);
    der(DIH) = (4.0 * cell * 1e-6 * k_14 * PYR * DIN) - (cell * 1e-6 * k_15 * DIH * XI * OXY);
    der(XI) = (cell * 1e-6 * k_17 * XSP * ADP) + (cell * 1e-6 * k_18 * XSI * DBP) - (3.0 * cell * 1e-6 * k_15 * DIH * XI * OXY);
    der(XSI) = (3.0 * cell * 1e-6 * k_15 * DIH * XI * OXY) - (cell * 1e-6 * k_16 * XSI * PID) - (cell * 1e-6 * k_18 * XSI * DBP);
    der(OXY) =  - (cell * 1e-6 * k_15 * DIH * XI * OXY);
    der(XSP) = (cell * 1e-6 * k_16 * XSI * PID) - (cell * 1e-6 * k_17 * XSP * ADP);
    der(TP2) = (cell * 1e-6 * k_17 * XSP * ADP) - (cell * 1e-6 * k_19 * TP2 * DBP);
    der(DBP) = 0.0;
    der(PUE) = (cell * 1e-6 * k_21 * PPP) - (cell * 1e-6 * k_20 * TP1 * PUE);
    der(PPP) = (cell * 1e-6 * k_20 * TP1 * PUE) - (cell * 1e-6 * k_21 * PPP);
    der(AGP) = (cell * 1e-6 * k_5 * DHA * DPH) - (cell * 1e-6 * k_6 * AGP * DPN);
    der(MOD) = (cell * 1e-6 * k_9 * MOX * DPN) - (cell * 1e-6 * k_7 * GAP * MOD);
    der(MOB) = (cell * 1e-6 * k_7 * GAP * MOD) - (cell * 1e-6 * k_8 * MOB * PID);
    der(MOX) = (cell * 1e-6 * k_8 * MOB * PID) - (cell * 1e-6 * k_9 * MOX * DPN);


    when time >= 64 then
        reinit(GLU,0.003);
    end when;
    when time >= 119 then
        reinit(DBP,0.025);
    end when;

end BIOMD281;
