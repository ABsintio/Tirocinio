within BIOMD223;
class Class_elmt_cell

    input Real elmt_reactant41;
    input Real elmt_reactant47;
    input Real elmt_reactant43;
    input Real elmt_reactant45;
    input Real elmt_reactant197;
    input Real elmt_product211;
    input Real elmt_product214;
    input Real elmt_product213;
    input Real elmt_reactant194;
    input Real elmt_product210;
    input Real elmt_reactant191;
    input Real elmt_product219;
    input Real elmt_product216;
    input Real elmt_product217;
    input Real elmt_reactant50;
    input Real elmt_reactant52;
    input Real elmt_reactant58;
    input Real elmt_reactant54;
    input Real elmt_reactant55;
    input Real elmt_reactant57;
    input Real elmt_product223;
    input Real elmt_product102;
    input Real elmt_product101;
    input Real elmt_product222;
    input Real elmt_product225;
    input Real elmt_product220;
    input Real elmt_product109;
    input Real elmt_product105;
    input Real elmt_product226;
    input Real elmt_product229;
    input Real elmt_product107;
    input Real elmt_product228;
    input Real elmt_reactant20;
    input Real elmt_product12;
    input Real elmt_reactant26;
    input Real elmt_reactant21;
    input Real elmt_reactant23;
    input Real elmt_reactant175;
    input Real elmt_reactant173;
    input Real elmt_reactant18;
    input Real elmt_reactant171;
    input Real elmt_reactant179;
    input Real elmt_reactant177;
    input Real elmt_reactant30;
    input Real elmt_product22;
    input Real elmt_reactant37;
    input Real elmt_reactant39;
    input Real elmt_reactant32;
    input Real elmt_reactant33;
    input Real elmt_reactant35;
    input Real elmt_product201;
    input Real elmt_reactant185;
    input Real elmt_product202;
    input Real elmt_reactant183;
    input Real elmt_reactant29;
    input Real elmt_reactant181;
    input Real elmt_product16;
    input Real elmt_product208;
    input Real elmt_product14;
    input Real elmt_product205;
    input Real elmt_product19;
    input Real elmt_product204;
    input Real elmt_product207;
    input Real elmt_reactant188;
    input Real elmt_product17;
    input Real elmt_reaction_27;
    input Real elmt_reactant154;
    input Real elmt_reaction_28;
    input Real elmt_reactant152;
    input Real elmt_reaction_25;
    input Real elmt_reaction_26;
    input Real elmt_reactant272;
    input Real elmt_reactant150;
    input Real elmt_reactant270;
    input Real elmt_reaction_29;
    input Real elmt_reaction_20;
    input Real elmt_reactant158;
    input Real elmt_reaction_23;
    input Real elmt_reaction_24;
    input Real elmt_reaction_21;
    input Real elmt_reactant156;
    input Real elmt_reaction_22;
    input Real elmt_reaction_3;
    input Real elmt_reactant15;
    input Real elmt_reaction_4;
    input Real elmt_reaction_1;
    input Real elmt_reaction_2;
    input Real elmt_reactant10;
    input Real elmt_reactant11;
    input Real elmt_reactant13;
    input Real elmt_reactant165;
    input Real elmt_reaction_17;
    input Real elmt_reaction_9;
    input Real elmt_reactant163;
    input Real elmt_reactant161;
    input Real elmt_reaction_7;
    input Real elmt_reaction_8;
    input Real elmt_reactant160;
    input Real elmt_reaction_18;
    input Real elmt_reaction_5;
    input Real elmt_reaction_6;
    input Real elmt_reaction_19;
    input Real elmt_reaction_12;
    input Real elmt_reactant169;
    input Real elmt_reaction_13;
    input Real elmt_reaction_10;
    input Real elmt_reactant167;
    input Real elmt_reaction_11;
    input Real elmt_reaction_115;
    input Real elmt_reaction_117;
    input Real elmt_reaction_118;
    input Real elmt_product193;
    input Real elmt_product192;
    input Real elmt_product195;
    input Real elmt_product190;
    input Real elmt_reactant130;
    input Real elmt_reactant251;
    input Real elmt_product196;
    input Real elmt_product199;
    input Real elmt_product198;
    input Real elmt_reaction_111;
    input Real elmt_reactant139;
    input Real elmt_reaction_112;
    input Real elmt_reaction_113;
    input Real elmt_reaction_114;
    input Real elmt_reactant137;
    input Real elmt_reactant258;
    input Real elmt_reactant135;
    input Real elmt_reactant255;
    input Real elmt_reaction_110;
    input Real elmt_reactant133;
    input Real elmt_reactant3;
    input Real elmt_reactant5;
    input Real elmt_reactant8;
    input Real elmt_reactant7;
    input Real elmt_reactant0;
    input Real elmt_reactant264;
    input Real elmt_reactant142;
    input Real elmt_reactant261;
    input Real elmt_reactant140;
    input Real elmt_reactant148;
    input Real elmt_reactant267;
    input Real elmt_reactant146;
    input Real elmt_reactant144;
    input Real elmt_product73;
    input Real elmt_product71;
    input Real elmt_reaction_70;
    input Real elmt_product77;
    input Real elmt_reaction_71;
    input Real elmt_reactant108;
    input Real elmt_product75;
    input Real elmt_product170;
    input Real elmt_product172;
    input Real elmt_reactant110;
    input Real elmt_reactant230;
    input Real elmt_product178;
    input Real elmt_reaction_69;
    input Real elmt_product174;
    input Real elmt_product176;
    input Real elmt_reactant239;
    input Real elmt_reaction_63;
    input Real elmt_reactant117;
    input Real elmt_reaction_64;
    input Real elmt_product69;
    input Real elmt_reactant116;
    input Real elmt_reaction_61;
    input Real elmt_reactant236;
    input Real elmt_reaction_62;
    input Real elmt_reactant114;
    input Real elmt_reaction_67;
    input Real elmt_reaction_68;
    input Real elmt_reactant234;
    input Real elmt_reactant113;
    input Real elmt_reaction_65;
    input Real elmt_reactant111;
    input Real elmt_reaction_66;
    input Real elmt_reaction_108;
    input Real elmt_reaction_109;
    input Real elmt_product83;
    input Real elmt_reaction_104;
    input Real elmt_reaction_105;
    input Real elmt_product88;
    input Real elmt_reaction_60;
    input Real elmt_reaction_106;
    input Real elmt_reaction_107;
    input Real elmt_product86;
    input Real elmt_reactant119;
    input Real elmt_product182;
    input Real elmt_product184;
    input Real elmt_product81;
    input Real elmt_product180;
    input Real elmt_reactant242;
    input Real elmt_reactant120;
    input Real elmt_product189;
    input Real elmt_reaction_58;
    input Real elmt_reaction_59;
    input Real elmt_product186;
    input Real elmt_product187;
    input Real elmt_reaction_52;
    input Real elmt_reaction_100;
    input Real elmt_reactant129;
    input Real elmt_reaction_53;
    input Real elmt_reaction_101;
    input Real elmt_reactant127;
    input Real elmt_reaction_102;
    input Real elmt_reaction_50;
    input Real elmt_reactant248;
    input Real elmt_reaction_51;
    input Real elmt_reaction_103;
    input Real elmt_product79;
    input Real elmt_reaction_56;
    input Real elmt_reactant125;
    input Real elmt_reaction_57;
    input Real elmt_reactant245;
    input Real elmt_reaction_54;
    input Real elmt_reactant122;
    input Real elmt_reaction_55;
    input Real elmt_product96;
    input Real elmt_product93;
    input Real elmt_reactant209;
    input Real elmt_product99;
    input Real elmt_product151;
    input Real elmt_product271;
    input Real elmt_product90;
    input Real elmt_product157;
    input Real elmt_reaction_49;
    input Real elmt_product159;
    input Real elmt_reaction_47;
    input Real elmt_reaction_48;
    input Real elmt_product153;
    input Real elmt_product273;
    input Real elmt_product155;
    input Real elmt_reaction_41;
    input Real elmt_reaction_42;
    input Real elmt_reactant215;
    input Real elmt_reaction_40;
    input Real elmt_reaction_45;
    input Real elmt_reactant212;
    input Real elmt_reaction_46;
    input Real elmt_reaction_43;
    input Real elmt_reaction_44;
    input Real elmt_product9;
    input Real elmt_product6;
    input Real elmt_reactant218;
    input Real elmt_product162;
    input Real elmt_product4;
    input Real elmt_product2;
    input Real elmt_reaction_38;
    input Real elmt_product168;
    input Real elmt_reaction_36;
    input Real elmt_reaction_37;
    input Real elmt_product164;
    input Real elmt_product166;
    input Real elmt_reaction_30;
    input Real elmt_reactant227;
    input Real elmt_reaction_31;
    input Real elmt_reactant106;
    input Real elmt_reactant104;
    input Real elmt_reactant224;
    input Real elmt_reaction_34;
    input Real elmt_reactant103;
    input Real elmt_reaction_35;
    input Real elmt_reactant100;
    input Real elmt_reactant221;
    input Real elmt_reactant84;
    input Real elmt_reactant85;
    input Real elmt_product34;
    input Real elmt_reactant80;
    input Real elmt_reactant82;
    input Real elmt_product31;
    input Real elmt_product250;
    input Real elmt_reactant87;
    input Real elmt_reactant89;
    input Real elmt_product256;
    input Real elmt_product134;
    input Real elmt_product257;
    input Real elmt_product136;
    input Real elmt_product131;
    input Real elmt_product252;
    input Real elmt_product254;
    input Real elmt_product253;
    input Real elmt_product132;
    input Real elmt_product27;
    input Real elmt_product25;
    input Real elmt_product24;
    input Real elmt_product138;
    input Real elmt_product259;
    input Real elmt_product28;
    input Real elmt_reactant94;
    input Real elmt_reactant95;
    input Real elmt_product40;
    input Real elmt_reactant97;
    input Real elmt_product44;
    input Real elmt_reactant91;
    input Real elmt_reactant92;
    input Real elmt_product42;
    input Real elmt_product260;
    input Real elmt_reactant98;
    input Real elmt_product266;
    input Real elmt_product145;
    input Real elmt_product269;
    input Real elmt_product147;
    input Real elmt_product268;
    input Real elmt_product263;
    input Real elmt_product141;
    input Real elmt_product262;
    input Real elmt_product265;
    input Real elmt_product143;
    input Real elmt_reaction_96;
    input Real elmt_product38;
    input Real elmt_reactant206;
    input Real elmt_reaction_97;
    input Real elmt_reaction_94;
    input Real elmt_product36;
    input Real elmt_reaction_95;
    input Real elmt_reactant203;
    input Real elmt_product149;
    input Real elmt_reaction_98;
    input Real elmt_reactant200;
    input Real elmt_reaction_99;
    input Real elmt_reactant61;
    input Real elmt_product51;
    input Real elmt_reactant63;
    input Real elmt_reaction_92;
    input Real elmt_product56;
    input Real elmt_reaction_93;
    input Real elmt_reaction_90;
    input Real elmt_reaction_91;
    input Real elmt_reactant60;
    input Real elmt_product53;
    input Real elmt_reactant65;
    input Real elmt_reactant68;
    input Real elmt_product233;
    input Real elmt_product112;
    input Real elmt_product115;
    input Real elmt_product235;
    input Real elmt_product232;
    input Real elmt_product231;
    input Real elmt_reaction_85;
    input Real elmt_product48;
    input Real elmt_reaction_83;
    input Real elmt_product46;
    input Real elmt_reaction_84;
    input Real elmt_reaction_89;
    input Real elmt_product238;
    input Real elmt_product237;
    input Real elmt_reaction_88;
    input Real elmt_product118;
    input Real elmt_reactant72;
    input Real elmt_product62;
    input Real elmt_reactant74;
    input Real elmt_reaction_81;
    input Real elmt_product67;
    input Real elmt_product66;
    input Real elmt_reaction_82;
    input Real elmt_reactant70;
    input Real elmt_reaction_80;
    input Real elmt_product64;
    input Real elmt_reactant76;
    input Real elmt_reactant78;
    input Real elmt_product124;
    input Real elmt_product123;
    input Real elmt_product244;
    input Real elmt_product126;
    input Real elmt_product247;
    input Real elmt_product246;
    input Real elmt_product241;
    input Real elmt_product240;
    input Real elmt_product243;
    input Real elmt_product121;
    input Real elmt_reaction_74;
    input Real elmt_reaction_75;
    input Real elmt_product59;
    input Real elmt_reaction_72;
    input Real elmt_reaction_73;
    input Real elmt_product128;
    input Real elmt_product249;
    input Real elmt_reaction_78;
    input Real elmt_reaction_79;
    input Real elmt_reaction_76;
    input Real elmt_reaction_77;

    Real elmt_cell(unit = "") "cell";
 annotation(Documentation(info="<annotation>
	<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:bqmodel=\"http://biomodels.net/model-qualifiers/\" xmlns:bqbiol=\"http://biomodels.net/biology-qualifiers/\">
	
	</rdf:RDF>
	</annotation>"));
    Real elmt_mGABp_SHP2_conc(unit = "");
    Real elmt_mGABp_SHP2_amount(unit = "");
    Real elmt_mGABp_SHP2(unit = "") "";
    Real elmt_mIRSp_GS_conc(unit = "");
    Real elmt_mIRSp_GS_amount(unit = "");
    Real elmt_mIRSp_GS(unit = "") "";
    Real elmt_Mek_conc(unit = "");
    Real elmt_Mek_amount(unit = "");
    Real elmt_Mek(unit = "") "";
    Real elmt_mGABp_pSHP2_conc(unit = "");
    Real elmt_mGABp_pSHP2_amount(unit = "");
    Real elmt_mGABp_pSHP2(unit = "") "";
    Real elmt_iPX_conc(unit = "");
    Real elmt_iPX_amount(unit = "");
    Real elmt_iPX(unit = "") "";
    Real elmt_Erk_conc(unit = "");
    Real elmt_Erk_amount(unit = "");
    Real elmt_Erk(unit = "") "";
    Real elmt_mGABp_conc(unit = "");
    Real elmt_mGABp_amount(unit = "");
    Real elmt_mGABp(unit = "") "";
    Real elmt_GABp_conc(unit = "");
    Real elmt_GABp_amount(unit = "");
    Real elmt_GABp(unit = "") "";
    Real elmt_Rp_pShc_GS_conc(unit = "");
    Real elmt_Rp_pShc_GS_amount(unit = "");
    Real elmt_Rp_pShc_GS(unit = "") "";
    Real elmt_IRp_IRS_conc(unit = "");
    Real elmt_IRp_IRS_amount(unit = "");
    Real elmt_IRp_IRS(unit = "") "";
    Real elmt_PDK1_conc(unit = "");
    Real elmt_PDK1_amount(unit = "");
    Real elmt_PDK1(unit = "") "";
    Real elmt_IRL_conc(unit = "");
    Real elmt_IRL_amount(unit = "");
    Real elmt_IRL(unit = "") "";
    Real elmt_GABp_GS_conc(unit = "");
    Real elmt_GABp_GS_amount(unit = "");
    Real elmt_GABp_GS(unit = "") "";
    Real elmt_imIRS_conc(unit = "");
    Real elmt_imIRS_amount(unit = "");
    Real elmt_imIRS(unit = "") "";
    Real elmt_GABp_PI3K_conc(unit = "");
    Real elmt_GABp_PI3K_amount(unit = "");
    Real elmt_GABp_PI3K(unit = "") "";
    Real elmt_PI3K_conc(unit = "");
    Real elmt_PI3K_amount(unit = "");
    Real elmt_PI3K(unit = "") "";
    Real elmt_Rp_pShc_conc(unit = "");
    Real elmt_Rp_pShc_amount(unit = "");
    Real elmt_Rp_pShc(unit = "") "";
    Real elmt_IRS_conc(unit = "");
    Real elmt_IRS_amount(unit = "");
    Real elmt_IRS(unit = "") "";
    Real elmt_R_conc(unit = "");
    Real elmt_R_amount(unit = "");
    Real elmt_R(unit = "") "";
    Real elmt_mGABp_pSHP2_GS_conc(unit = "");
    Real elmt_mGABp_pSHP2_GS_amount(unit = "");
    Real elmt_mGABp_pSHP2_GS(unit = "") "";
    Real elmt_IRSp_conc(unit = "");
    Real elmt_IRSp_amount(unit = "");
    Real elmt_IRSp(unit = "") "";
    Real elmt_imGABp_conc(unit = "");
    Real elmt_imGABp_amount(unit = "");
    Real elmt_imGABp(unit = "") "";
    Real elmt_Rp_GS_conc(unit = "");
    Real elmt_Rp_GS_amount(unit = "");
    Real elmt_Rp_GS(unit = "") "";
 annotation(Documentation(info="<annotation>
	<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:bqmodel=\"http://biomodels.net/model-qualifiers/\" xmlns:bqbiol=\"http://biomodels.net/biology-qualifiers/\">
	
	</rdf:RDF>
	</annotation>"));
    Real elmt_GABp_RasGAP_conc(unit = "");
    Real elmt_GABp_RasGAP_amount(unit = "");
    Real elmt_GABp_RasGAP(unit = "") "";
    Real elmt_mIRSp_conc(unit = "");
    Real elmt_mIRSp_amount(unit = "");
    Real elmt_mIRSp(unit = "") "";
    Real elmt_IRi_conc(unit = "");
    Real elmt_IRi_amount(unit = "");
    Real elmt_IRi(unit = "") "";
    Real elmt_IRSp_SHP2_conc(unit = "");
    Real elmt_IRSp_SHP2_amount(unit = "");
    Real elmt_IRSp_SHP2(unit = "") "";
    Real elmt_mIRS_conc(unit = "");
    Real elmt_mIRS_amount(unit = "");
    Real elmt_mIRS(unit = "") "";
    Real elmt_amTOR_conc(unit = "");
    Real elmt_amTOR_amount(unit = "");
    Real elmt_amTOR(unit = "") "";
    Real elmt_phosphorylated_Akt_conc(unit = "");
    Real elmt_phosphorylated_Akt_amount(unit = "");
    Real elmt_phosphorylated_Akt(unit = "") "";
    Real elmt_IR_conc(unit = "");
    Real elmt_IR_amount(unit = "");
    Real elmt_IR(unit = "") "";
    Real elmt_iSrc_conc(unit = "");
    Real elmt_iSrc_amount(unit = "");
    Real elmt_iSrc(unit = "") "";
    Real elmt_IRp_conc(unit = "");
    Real elmt_IRp_amount(unit = "");
    Real elmt_IRp(unit = "") "";
    Real elmt_imGAB_conc(unit = "");
    Real elmt_imGAB_amount(unit = "");
    Real elmt_imGAB(unit = "") "";
    Real elmt_aSrc_conc(unit = "");
    Real elmt_aSrc_amount(unit = "");
    Real elmt_aSrc(unit = "") "";
    Real elmt_mIRSp_PI3K_conc(unit = "");
    Real elmt_mIRSp_PI3K_amount(unit = "");
    Real elmt_mIRSp_PI3K(unit = "") "";
    Real elmt_IRp_PI3K_conc(unit = "");
    Real elmt_IRp_PI3K_amount(unit = "");
    Real elmt_IRp_PI3K(unit = "") "";
    Real elmt_pErk_conc(unit = "");
    Real elmt_pErk_amount(unit = "");
    Real elmt_pErk(unit = "") "";
    Real elmt_GABp_pSHP2_conc(unit = "");
    Real elmt_GABp_pSHP2_amount(unit = "");
    Real elmt_GABp_pSHP2(unit = "") "";
    Real elmt_Akt_conc(unit = "");
    Real elmt_Akt_amount(unit = "");
    Real elmt_Akt(unit = "") "";
    Real elmt_Raf_conc(unit = "");
    Real elmt_Raf_amount(unit = "");
    Real elmt_Raf(unit = "") "";
    Real elmt_mGABp_PI3K_conc(unit = "");
    Real elmt_mGABp_PI3K_amount(unit = "");
    Real elmt_mGABp_PI3K(unit = "") "";
    Real elmt_ppMek_conc(unit = "");
    Real elmt_ppMek_amount(unit = "");
    Real elmt_ppMek(unit = "") "";
    Real elmt_tRas_PI3K_conc(unit = "");
    Real elmt_tRas_PI3K_amount(unit = "");
    Real elmt_tRas_PI3K(unit = "") "";
    Real elmt_pShc_conc(unit = "");
    Real elmt_pShc_amount(unit = "");
    Real elmt_pShc(unit = "") "";
    Real elmt_RasGAP_conc(unit = "");
    Real elmt_RasGAP_amount(unit = "");
    Real elmt_RasGAP(unit = "") "";
    Real elmt_IRp_RasGAP_conc(unit = "");
    Real elmt_IRp_RasGAP_amount(unit = "");
    Real elmt_IRp_RasGAP(unit = "") "";
    Real elmt_mGAB_conc(unit = "");
    Real elmt_mGAB_amount(unit = "");
    Real elmt_mGAB(unit = "") "";
    Real elmt_tRas_conc(unit = "");
    Real elmt_tRas_amount(unit = "");
    Real elmt_tRas(unit = "") "";
    Real elmt_aaRaf_conc(unit = "");
    Real elmt_aaRaf_amount(unit = "");
    Real elmt_aaRaf(unit = "") "";
    Real elmt_ppErk_conc(unit = "");
    Real elmt_ppErk_amount(unit = "");
    Real elmt_ppErk(unit = "") "";
    Real elmt_dRas_conc(unit = "");
    Real elmt_dRas_amount(unit = "");
    Real elmt_dRas(unit = "") "";
    Real elmt_pShc_GS_conc(unit = "");
    Real elmt_pShc_GS_amount(unit = "");
    Real elmt_pShc_GS(unit = "") "";
    Real elmt_SHP2_conc(unit = "");
    Real elmt_SHP2_amount(unit = "");
    Real elmt_SHP2(unit = "") "";
    Real elmt_RE_conc(unit = "");
    Real elmt_RE_amount(unit = "");
    Real elmt_RE(unit = "") "";
 annotation(Documentation(info="<annotation>
	<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:bqmodel=\"http://biomodels.net/model-qualifiers/\" xmlns:bqbiol=\"http://biomodels.net/biology-qualifiers/\">
	
	</rdf:RDF>
	</annotation>"));
    Real elmt_GABp_SHP2_conc(unit = "");
    Real elmt_GABp_SHP2_amount(unit = "");
    Real elmt_GABp_SHP2(unit = "") "";
    Real elmt_Shc_conc(unit = "");
    Real elmt_Shc_amount(unit = "");
    Real elmt_Shc(unit = "") "";
    Real elmt_mTOR_conc(unit = "");
    Real elmt_mTOR_amount(unit = "");
    Real elmt_mTOR(unit = "") "";
    Real elmt_Null_conc(unit = "");
    Real elmt_Null_amount(unit = "");
    Real elmt_Null(unit = "") "";
    Real elmt_mIRSp_SHP2_conc(unit = "");
    Real elmt_mIRSp_SHP2_amount(unit = "");
    Real elmt_mIRSp_SHP2(unit = "") "";
    Real elmt_iGS_conc(unit = "");
    Real elmt_iGS_amount(unit = "");
    Real elmt_iGS(unit = "") "";
    Real elmt_bRasGAP_conc(unit = "");
    Real elmt_bRasGAP_amount(unit = "");
    Real elmt_bRasGAP(unit = "") "";
    Real elmt_Rp_PI3K_conc(unit = "");
    Real elmt_Rp_PI3K_amount(unit = "");
    Real elmt_Rp_PI3K(unit = "") "";
    Real elmt_Rp_RasGAP_conc(unit = "");
    Real elmt_Rp_RasGAP_amount(unit = "");
    Real elmt_Rp_RasGAP(unit = "") "";
    Real elmt_aRaf_conc(unit = "");
    Real elmt_aRaf_amount(unit = "");
    Real elmt_aRaf(unit = "") "";
    Real elmt_GS_conc(unit = "");
    Real elmt_GS_amount(unit = "");
    Real elmt_GS(unit = "") "";
    Real elmt_Rp_Shc_conc(unit = "");
    Real elmt_Rp_Shc_amount(unit = "");
    Real elmt_Rp_Shc(unit = "") "";
 annotation(Documentation(info="<annotation>
	<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:bqmodel=\"http://biomodels.net/model-qualifiers/\" xmlns:bqbiol=\"http://biomodels.net/biology-qualifiers/\">
	
	</rdf:RDF>
	</annotation>"));
    Real elmt_GABp_pSHP2_GS_conc(unit = "");
    Real elmt_GABp_pSHP2_GS_amount(unit = "");
    Real elmt_GABp_pSHP2_GS(unit = "") "";
    Real elmt_mGABp_GS_conc(unit = "");
    Real elmt_mGABp_GS_amount(unit = "");
    Real elmt_mGABp_GS(unit = "") "";
    Real elmt_mGABp_RasGAP_conc(unit = "");
    Real elmt_mGABp_RasGAP_amount(unit = "");
    Real elmt_mGABp_RasGAP(unit = "") "";
    Real elmt_pAkt_conc(unit = "");
    Real elmt_pAkt_amount(unit = "");
    Real elmt_pAkt(unit = "") "";
    Real elmt_IRSp_PI3K_conc(unit = "");
    Real elmt_IRSp_PI3K_amount(unit = "");
    Real elmt_IRSp_PI3K(unit = "") "";
    Real elmt_IRp_IRSp_conc(unit = "");
    Real elmt_IRp_IRSp_amount(unit = "");
    Real elmt_IRp_IRSp(unit = "") "";
    Real elmt_GAB_conc(unit = "");
    Real elmt_GAB_amount(unit = "");
    Real elmt_GAB(unit = "") "";
    Real elmt_PKA_conc(unit = "");
    Real elmt_PKA_amount(unit = "");
    Real elmt_PKA(unit = "") "";
    Real elmt_Rd_conc(unit = "");
    Real elmt_Rd_amount(unit = "");
    Real elmt_Rd(unit = "") "";
 annotation(Documentation(info="<annotation>
	<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:bqmodel=\"http://biomodels.net/model-qualifiers/\" xmlns:bqbiol=\"http://biomodels.net/biology-qualifiers/\">
	
	</rdf:RDF>
	</annotation>"));
    Real elmt_PIP3_conc(unit = "");
    Real elmt_PIP3_amount(unit = "");
    Real elmt_PIP3(unit = "") "";
    Real elmt_IRSp_GS_conc(unit = "");
    Real elmt_IRSp_GS_amount(unit = "");
    Real elmt_IRSp_GS(unit = "") "";
    Real elmt_Rp_conc(unit = "");
    Real elmt_Rp_amount(unit = "");
    Real elmt_Rp(unit = "") "";
 annotation(Documentation(info="<annotation>
	<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:bqmodel=\"http://biomodels.net/model-qualifiers/\" xmlns:bqbiol=\"http://biomodels.net/biology-qualifiers/\">
	
	</rdf:RDF>
	</annotation>"));
    Real elmt_mPDK1_conc(unit = "");
    Real elmt_mPDK1_amount(unit = "");
    Real elmt_mPDK1(unit = "") "";
    Real elmt_aPX_GS_conc(unit = "");
    Real elmt_aPX_GS_amount(unit = "");
    Real elmt_aPX_GS(unit = "") "";
    Real elmt_Ri_conc(unit = "");
    Real elmt_Ri_amount(unit = "");
    Real elmt_Ri(unit = "") "";
    Real elmt_ppAkt_conc(unit = "");
    Real elmt_ppAkt_amount(unit = "");
    Real elmt_ppAkt(unit = "") "";
    Real elmt_aPX_conc(unit = "");
    Real elmt_aPX_amount(unit = "");
    Real elmt_aPX(unit = "") "";

    initial equation
        elmt_cell = 1.0;
        elmt_mGABp_SHP2_conc = 0.0;
        elmt_mIRSp_GS_conc = 0.0;
        elmt_Mek_conc = 200.0;
        elmt_mGABp_pSHP2_conc = 0.0;
        elmt_iPX_conc = 200.0;
        elmt_Erk_conc = 400.0;
        elmt_mGABp_conc = 0.0;
        elmt_GABp_conc = 0.0;
        elmt_Rp_pShc_GS_conc = 0.0;
        elmt_IRp_IRS_conc = 0.0;
        elmt_PDK1_conc = 100.0;
        elmt_IRL_conc = 0.0;
        elmt_GABp_GS_conc = 0.0;
        elmt_imIRS_conc = 0.0;
        elmt_GABp_PI3K_conc = 0.0;
        elmt_PI3K_conc = 200.0;
        elmt_Rp_pShc_conc = 0.0;
        elmt_IRS_conc = 300.0;
        elmt_R_conc = 100.0;
        elmt_mGABp_pSHP2_GS_conc = 0.0;
        elmt_IRSp_conc = 0.0;
        elmt_imGABp_conc = 0.0;
        elmt_Rp_GS_conc = 0.0;
        elmt_GABp_RasGAP_conc = 0.0;
        elmt_mIRSp_conc = 0.0;
        elmt_IRi_conc = 0.0;
        elmt_IRSp_SHP2_conc = 0.0;
        elmt_mIRS_conc = 0.0;
        elmt_amTOR_conc = 0.0;
        elmt_IR_conc = 150.0;
        elmt_iSrc_conc = 518.0;
        elmt_IRp_conc = 0.0;
        elmt_imGAB_conc = 0.0;
        elmt_aSrc_conc = 0.0;
        elmt_mIRSp_PI3K_conc = 0.0;
        elmt_IRp_PI3K_conc = 0.0;
        elmt_pErk_conc = 0.0;
        elmt_GABp_pSHP2_conc = 0.0;
        elmt_Akt_conc = 100.0;
        elmt_Raf_conc = 100.0;
        elmt_mGABp_PI3K_conc = 0.0;
        elmt_ppMek_conc = 0.0;
        elmt_tRas_PI3K_conc = 0.0;
        elmt_pShc_conc = 0.0;
        elmt_RasGAP_conc = 50.0;
        elmt_IRp_RasGAP_conc = 0.0;
        elmt_mGAB_conc = 0.0;
        elmt_tRas_conc = 0.0;
        elmt_aaRaf_conc = 0.0;
        elmt_ppErk_conc = 0.0;
        elmt_dRas_conc = 150.0;
        elmt_pShc_GS_conc = 0.0;
        elmt_SHP2_conc = 300.0;
        elmt_RE_conc = 0.0;
        elmt_GABp_SHP2_conc = 0.0;
        elmt_Shc_conc = 270.0;
        elmt_mTOR_conc = 100.0;
        elmt_Null_conc = 0.0;
        elmt_mIRSp_SHP2_conc = 0.0;
        elmt_iGS_conc = 0.0;
        elmt_bRasGAP_conc = 1.0E-5;
        elmt_Rp_PI3K_conc = 0.0;
        elmt_Rp_RasGAP_conc = 0.0;
        elmt_aRaf_conc = 0.0;
        elmt_GS_conc = 200.0;
        elmt_Rp_Shc_conc = 0.0;
        elmt_GABp_pSHP2_GS_conc = 0.0;
        elmt_mGABp_GS_conc = 0.0;
        elmt_mGABp_RasGAP_conc = 0.0;
        elmt_pAkt_conc = 0.0;
        elmt_IRSp_PI3K_conc = 0.0;
        elmt_IRp_IRSp_conc = 0.0;
        elmt_GAB_conc = 225.0;
        elmt_PKA_conc = 100.0;
        elmt_Rd_conc = 0.0;
        elmt_PIP3_conc = 0.0;
        elmt_IRSp_GS_conc = 0.0;
        elmt_Rp_conc = 0.0;
        elmt_mPDK1_conc = 0.0;
        elmt_aPX_GS_conc = 0.0;
        elmt_Ri_conc = 0.0;
        elmt_ppAkt_conc = 0.0;
        elmt_aPX_conc = 0.0;


    equation
        assert(elmt_cell >= 0, "Compartment size became negative. Make sure this is a valid bahaviour.");
        der(elmt_cell) = 0;
        elmt_mGABp_SHP2 = elmt_mGABp_SHP2_conc;
        elmt_mIRSp_GS = elmt_mIRSp_GS_conc;
        elmt_Mek = elmt_Mek_conc;
        elmt_mGABp_pSHP2 = elmt_mGABp_pSHP2_conc;
        elmt_iPX = elmt_iPX_conc;
        elmt_Erk = elmt_Erk_conc;
        elmt_mGABp = elmt_mGABp_conc;
        elmt_GABp = elmt_GABp_conc;
        elmt_Rp_pShc_GS = elmt_Rp_pShc_GS_conc;
        elmt_IRp_IRS = elmt_IRp_IRS_conc;
        elmt_PDK1 = elmt_PDK1_conc;
        elmt_IRL = elmt_IRL_conc;
        elmt_GABp_GS = elmt_GABp_GS_conc;
        elmt_imIRS = elmt_imIRS_conc;
        elmt_GABp_PI3K = elmt_GABp_PI3K_conc;
        elmt_PI3K = elmt_PI3K_conc;
        elmt_Rp_pShc = elmt_Rp_pShc_conc;
        elmt_IRS = elmt_IRS_conc;
        elmt_R = elmt_R_conc;
        elmt_mGABp_pSHP2_GS = elmt_mGABp_pSHP2_GS_conc;
        elmt_IRSp = elmt_IRSp_conc;
        elmt_imGABp = elmt_imGABp_conc;
        elmt_Rp_GS = elmt_Rp_GS_conc;
        elmt_GABp_RasGAP = elmt_GABp_RasGAP_conc;
        elmt_mIRSp = elmt_mIRSp_conc;
        elmt_IRi = elmt_IRi_conc;
        elmt_IRSp_SHP2 = elmt_IRSp_SHP2_conc;
        elmt_mIRS = elmt_mIRS_conc;
        elmt_amTOR = elmt_amTOR_conc;
        elmt_phosphorylated_Akt = elmt_phosphorylated_Akt_conc;
        elmt_IR = elmt_IR_conc;
        elmt_iSrc = elmt_iSrc_conc;
        elmt_IRp = elmt_IRp_conc;
        elmt_imGAB = elmt_imGAB_conc;
        elmt_aSrc = elmt_aSrc_conc;
        elmt_mIRSp_PI3K = elmt_mIRSp_PI3K_conc;
        elmt_IRp_PI3K = elmt_IRp_PI3K_conc;
        elmt_pErk = elmt_pErk_conc;
        elmt_GABp_pSHP2 = elmt_GABp_pSHP2_conc;
        elmt_Akt = elmt_Akt_conc;
        elmt_Raf = elmt_Raf_conc;
        elmt_mGABp_PI3K = elmt_mGABp_PI3K_conc;
        elmt_ppMek = elmt_ppMek_conc;
        elmt_tRas_PI3K = elmt_tRas_PI3K_conc;
        elmt_pShc = elmt_pShc_conc;
        elmt_RasGAP = elmt_RasGAP_conc;
        elmt_IRp_RasGAP = elmt_IRp_RasGAP_conc;
        elmt_mGAB = elmt_mGAB_conc;
        elmt_tRas = elmt_tRas_conc;
        elmt_aaRaf = elmt_aaRaf_conc;
        elmt_ppErk = elmt_ppErk_conc;
        elmt_dRas = elmt_dRas_conc;
        elmt_pShc_GS = elmt_pShc_GS_conc;
        elmt_SHP2 = elmt_SHP2_conc;
        elmt_RE = elmt_RE_conc;
        elmt_GABp_SHP2 = elmt_GABp_SHP2_conc;
        elmt_Shc = elmt_Shc_conc;
        elmt_mTOR = elmt_mTOR_conc;
        elmt_Null = elmt_Null_conc;
        elmt_mIRSp_SHP2 = elmt_mIRSp_SHP2_conc;
        elmt_iGS = elmt_iGS_conc;
        elmt_bRasGAP = elmt_bRasGAP_conc;
        elmt_Rp_PI3K = elmt_Rp_PI3K_conc;
        elmt_Rp_RasGAP = elmt_Rp_RasGAP_conc;
        elmt_aRaf = elmt_aRaf_conc;
        elmt_GS = elmt_GS_conc;
        elmt_Rp_Shc = elmt_Rp_Shc_conc;
        elmt_GABp_pSHP2_GS = elmt_GABp_pSHP2_GS_conc;
        elmt_mGABp_GS = elmt_mGABp_GS_conc;
        elmt_mGABp_RasGAP = elmt_mGABp_RasGAP_conc;
        elmt_pAkt = elmt_pAkt_conc;
        elmt_IRSp_PI3K = elmt_IRSp_PI3K_conc;
        elmt_IRp_IRSp = elmt_IRp_IRSp_conc;
        elmt_GAB = elmt_GAB_conc;
        elmt_PKA = elmt_PKA_conc;
        elmt_Rd = elmt_Rd_conc;
        elmt_PIP3 = elmt_PIP3_conc;
        elmt_IRSp_GS = elmt_IRSp_GS_conc;
        elmt_Rp = elmt_Rp_conc;
        elmt_mPDK1 = elmt_mPDK1_conc;
        elmt_aPX_GS = elmt_aPX_GS_conc;
        elmt_Ri = elmt_Ri_conc;
        elmt_ppAkt = elmt_ppAkt_conc;
        elmt_aPX = elmt_aPX_conc;
        der(elmt_iPX_amount) = 0;
        elmt_phosphorylated_Akt_amount = (elmt_pAkt + elmt_ppAkt) * elmt_cell;
        der(elmt_bRasGAP_amount) = 0;
        der(elmt_PKA_amount) = 0;
        der(elmt_aPX_GS_amount) = 0;
        der(elmt_aPX_amount) = 0;
        der(elmt_mGABp_SHP2_amount) = ((elmt_reaction_58 * elmt_product128) + (- (elmt_reaction_56 * elmt_reactant122)) + (- (elmt_reaction_57 * elmt_reactant125)) + (elmt_reaction_55 * elmt_product121) + (- (elmt_reaction_96 * elmt_reactant209)));
        der(elmt_mIRSp_GS_amount) = ((elmt_reaction_45 * elmt_product93) + (- (elmt_reaction_90 * elmt_reactant191)));
        der(elmt_Mek_amount) = ((elmt_reaction_69 * elmt_product151) + (- (elmt_reaction_68 * elmt_reactant148)));
        der(elmt_mGABp_pSHP2_amount) = ((- (elmt_reaction_58 * elmt_reactant127)) + (- (elmt_reaction_59 * elmt_reactant130)) + (- (elmt_reaction_102 * elmt_reactant227)) + (elmt_reaction_57 * elmt_product126) + (- (elmt_reaction_97 * elmt_reactant212)));
        der(elmt_Erk_amount) = ((- (elmt_reaction_70 * elmt_reactant152)) + (elmt_reaction_73 * elmt_product159));
        der(elmt_mGABp_amount) = ((- (elmt_reaction_52 * elmt_reactant111)) + (- (elmt_reaction_53 * elmt_reactant114)) + (elmt_reaction_50 * elmt_product107) + (- (elmt_reaction_51 * elmt_reactant108)) + (- (elmt_reaction_54 * elmt_reactant117)) + (- (elmt_reaction_55 * elmt_reactant120)) + (- (elmt_reaction_92 * elmt_reactant197)) + (- (elmt_reaction_117 * elmt_reactant270)));
        der(elmt_GABp_amount) = ((- (elmt_reaction_104 * elmt_reactant234)) + (elmt_reaction_92 * elmt_product199));
        der(elmt_Rp_pShc_GS_amount) = ((- (elmt_reaction_21 * elmt_reactant43)) + (elmt_reaction_9 * elmt_product22) + (- (elmt_reaction_10 * elmt_reactant23)));
        der(elmt_IRp_IRS_amount) = ((- (elmt_reaction_37 * elmt_reactant76)) + (elmt_reaction_28 * elmt_product62) + (- (elmt_reaction_29 * elmt_reactant63)));
        der(elmt_PDK1_amount) = (- (elmt_reaction_74 * elmt_reactant161));
        der(elmt_IRL_amount) = ((- (elmt_reaction_25 * elmt_reactant52)) + (elmt_reaction_24 * elmt_product51) + (elmt_reaction_85 * elmt_product184));
        der(elmt_GABp_GS_amount) = ((- (elmt_reaction_106 * elmt_reactant239)) + (elmt_reaction_94 * elmt_product205));
        der(elmt_imIRS_amount) = (elmt_reaction_81 * elmt_product176);
        der(elmt_GABp_PI3K_amount) = ((- (elmt_reaction_105 * elmt_reactant236)) + (elmt_reaction_93 * elmt_product202));
        der(elmt_PI3K_amount) = ((- (elmt_reaction_64 * elmt_reactant139)) + (elmt_reaction_105 * elmt_product237) + (- (elmt_reaction_53 * elmt_reactant113)) + (- (elmt_reaction_46 * elmt_reactant94)) + (elmt_reaction_35 * elmt_product73) + (- (elmt_reaction_26 * elmt_reactant54)) + (elmt_reaction_22 * elmt_product46) + (- (elmt_reaction_12 * elmt_reactant30)) + (elmt_reaction_99 * elmt_product219));
        der(elmt_Rp_pShc_amount) = ((- (elmt_reaction_20 * elmt_reactant41)) + (- (elmt_reaction_9 * elmt_reactant21)) + (- (elmt_reaction_7 * elmt_reactant15)) + (elmt_reaction_6 * elmt_product14));
        der(elmt_IRS_amount) = ((elmt_reaction_100 * elmt_product223) + (elmt_reaction_101 * elmt_product225) + (- (elmt_reaction_42 * elmt_reactant84)) + (elmt_reaction_37 * elmt_product77) + (elmt_reaction_31 * elmt_product69) + (- (elmt_reaction_28 * elmt_reactant61)) + (elmt_reaction_99 * elmt_product220));
        der(elmt_R_amount) = (- (elmt_reaction_1 * elmt_reactant0));
        der(elmt_mGABp_pSHP2_GS_amount) = ((elmt_reaction_59 * elmt_product131) + (- (elmt_reaction_103 * elmt_reactant230)) + (- (elmt_reaction_98 * elmt_reactant215)));
        der(elmt_IRSp_amount) = ((elmt_reaction_38 * elmt_product79) + (elmt_reaction_30 * elmt_product67) + (- (elmt_reaction_31 * elmt_reactant68)) + (elmt_reaction_88 * elmt_product186));
        der(elmt_imGABp_amount) = ((elmt_reaction_117 * elmt_product271) + (- (elmt_reaction_118 * elmt_reactant272)));
        der(elmt_Rp_GS_amount) = ((elmt_reaction_4 * elmt_product9) + (- (elmt_reaction_18 * elmt_reactant37)));
        der(elmt_GABp_RasGAP_amount) = ((- (elmt_reaction_107 * elmt_reactant242)) + (elmt_reaction_95 * elmt_product208));
        der(elmt_mIRSp_amount) = ((- (elmt_reaction_47 * elmt_reactant97)) + (- (elmt_reaction_45 * elmt_reactant92)) + (- (elmt_reaction_46 * elmt_reactant95)) + (elmt_reaction_43 * elmt_product88) + (- (elmt_reaction_44 * elmt_reactant89)) + (- (elmt_reaction_88 * elmt_reactant185)));
        der(elmt_IRi_amount) = ((- (elmt_reaction_85 * elmt_reactant183)) + (elmt_reaction_84 * elmt_product182));
        der(elmt_IRSp_SHP2_amount) = ((- (elmt_reaction_101 * elmt_reactant224)) + (elmt_reaction_91 * elmt_product196));
        der(elmt_mIRS_amount) = ((elmt_reaction_48 * elmt_product101) + (elmt_reaction_42 * elmt_product86) + (- (elmt_reaction_43 * elmt_reactant87)) + (elmt_reaction_44 * elmt_product90) + (- (elmt_reaction_81 * elmt_reactant175)));
        der(elmt_amTOR_amount) = (elmt_reaction_77 * elmt_product168);
        der(elmt_IR_amount) = (- (elmt_reaction_24 * elmt_reactant50));
        der(elmt_iSrc_amount) = ((elmt_reaction_41 * elmt_product83) + (- (elmt_reaction_40 * elmt_reactant80)));
        der(elmt_IRp_amount) = ((elmt_reaction_30 * elmt_product66) + (- (elmt_reaction_34 * elmt_reactant70)) + (- (elmt_reaction_27 * elmt_reactant58)) + (- (elmt_reaction_28 * elmt_reactant60)) + (elmt_reaction_25 * elmt_product53) + (- (elmt_reaction_26 * elmt_reactant55)) + (elmt_reaction_115 * elmt_product269) + (elmt_reaction_113 * elmt_product263) + (- (elmt_reaction_84 * elmt_reactant181)));
        der(elmt_imGAB_amount) = ((elmt_reaction_118 * elmt_product273) + (elmt_reaction_80 * elmt_product174));
        der(elmt_aSrc_amount) = ((- (elmt_reaction_41 * elmt_reactant82)) + (elmt_reaction_40 * elmt_product81));
        der(elmt_mIRSp_PI3K_amount) = ((elmt_reaction_46 * elmt_product96) + (- (elmt_reaction_89 * elmt_reactant188)));
        der(elmt_IRp_PI3K_amount) = ((- (elmt_reaction_35 * elmt_reactant72)) + (elmt_reaction_26 * elmt_product56));
        der(elmt_pErk_amount) = ((elmt_reaction_70 * elmt_product153) + (- (elmt_reaction_71 * elmt_reactant154)) + (elmt_reaction_72 * elmt_product157) + (- (elmt_reaction_73 * elmt_reactant158)));
        der(elmt_GABp_pSHP2_amount) = ((- (elmt_reaction_109 * elmt_reactant248)) + (elmt_reaction_97 * elmt_product214));
        der(elmt_Akt_amount) = ((- (elmt_reaction_75 * elmt_reactant163)) + (elmt_reaction_76 * elmt_product166));
        der(elmt_Raf_amount) = ((elmt_reaction_67 * elmt_product147) + (- (elmt_reaction_65 * elmt_reactant142)));
        der(elmt_mGABp_PI3K_amount) = ((elmt_reaction_53 * elmt_product115) + (- (elmt_reaction_93 * elmt_reactant200)));
        der(elmt_ppMek_amount) = ((- (elmt_reaction_69 * elmt_reactant150)) + (elmt_reaction_68 * elmt_product149));
        der(elmt_tRas_PI3K_amount) = (elmt_reaction_64 * elmt_product141);
        der(elmt_pShc_amount) = ((elmt_reaction_20 * elmt_product42) + (elmt_reaction_7 * elmt_product17) + (- (elmt_reaction_8 * elmt_reactant18)) + (elmt_reaction_11 * elmt_product28));
        der(elmt_RasGAP_amount) = ((elmt_reaction_107 * elmt_product243) + (- (elmt_reaction_54 * elmt_reactant116)) + (elmt_reaction_36 * elmt_product75) + (- (elmt_reaction_27 * elmt_reactant57)) + (elmt_reaction_23 * elmt_product48) + (- (elmt_reaction_13 * elmt_reactant33)) + (elmt_reaction_115 * elmt_product268) + (elmt_reaction_111 * elmt_product256) + (elmt_reaction_112 * elmt_product260) + (elmt_reaction_113 * elmt_product262) + (elmt_reaction_114 * elmt_product266));
        der(elmt_IRp_RasGAP_amount) = ((- (elmt_reaction_36 * elmt_reactant74)) + (elmt_reaction_27 * elmt_product59) + (- (elmt_reaction_115 * elmt_reactant267)) + (- (elmt_reaction_113 * elmt_reactant261)));
        der(elmt_mGAB_amount) = ((- (elmt_reaction_50 * elmt_reactant106)) + (elmt_reaction_102 * elmt_product229) + (elmt_reaction_51 * elmt_product109) + (elmt_reaction_103 * elmt_product233) + (elmt_reaction_56 * elmt_product124) + (elmt_reaction_49 * elmt_product105) + (elmt_reaction_111 * elmt_product257) + (- (elmt_reaction_80 * elmt_reactant173)));
        der(elmt_tRas_amount) = ((- (elmt_reaction_63 * elmt_reactant137)) + (- (elmt_reaction_64 * elmt_reactant140)) + (elmt_reaction_62 * elmt_product136));
        der(elmt_aaRaf_amount) = ((- (elmt_reaction_67 * elmt_reactant146)) + (elmt_reaction_66 * elmt_product145));
        der(elmt_ppErk_amount) = ((elmt_reaction_71 * elmt_product155) + (- (elmt_reaction_72 * elmt_reactant156)));
        der(elmt_dRas_amount) = ((elmt_reaction_63 * elmt_product138) + (- (elmt_reaction_62 * elmt_reactant135)));
        der(elmt_pShc_GS_amount) = ((elmt_reaction_21 * elmt_product44) + (elmt_reaction_10 * elmt_product25) + (- (elmt_reaction_11 * elmt_reactant26)));
        der(elmt_SHP2_amount) = ((elmt_reaction_108 * elmt_product246) + (elmt_reaction_109 * elmt_product249) + (elmt_reaction_101 * elmt_product226) + (elmt_reaction_102 * elmt_product228) + (elmt_reaction_103 * elmt_product232) + (elmt_reaction_56 * elmt_product123) + (- (elmt_reaction_55 * elmt_reactant119)) + (- (elmt_reaction_47 * elmt_reactant98)) + (elmt_reaction_48 * elmt_product102) + (elmt_reaction_110 * elmt_product253));
        der(elmt_RE_amount) = ((elmt_reaction_1 * elmt_product2) + (- (elmt_reaction_2 * elmt_reactant3)));
        der(elmt_GABp_SHP2_amount) = ((- (elmt_reaction_108 * elmt_reactant245)) + (elmt_reaction_96 * elmt_product211));
        der(elmt_Shc_amount) = ((elmt_reaction_8 * elmt_product19) + (- (elmt_reaction_5 * elmt_reactant11)) + (elmt_reaction_19 * elmt_product40));
        der(elmt_mTOR_amount) = (- (elmt_reaction_77 * elmt_reactant167));
        der(elmt_Null_amount) = ((elmt_reaction_61 * elmt_product134) + (elmt_reaction_34 * elmt_product71) + (elmt_reaction_17 * elmt_product36));
        der(elmt_mIRSp_SHP2_amount) = ((elmt_reaction_47 * elmt_product99) + (- (elmt_reaction_48 * elmt_reactant100)) + (- (elmt_reaction_91 * elmt_reactant194)));
        der(elmt_iGS_amount) = (elmt_reaction_79 * elmt_product172);
        der(elmt_Rp_PI3K_amount) = ((- (elmt_reaction_22 * elmt_reactant45)) + (elmt_reaction_12 * elmt_product31));
        der(elmt_Rp_RasGAP_amount) = ((- (elmt_reaction_23 * elmt_reactant47)) + (elmt_reaction_13 * elmt_product34) + (- (elmt_reaction_112 * elmt_reactant258)) + (- (elmt_reaction_114 * elmt_reactant264)));
        der(elmt_aRaf_amount) = ((elmt_reaction_65 * elmt_product143) + (- (elmt_reaction_66 * elmt_reactant144)));
        der(elmt_GS_amount) = ((elmt_reaction_106 * elmt_product240) + (- (elmt_reaction_59 * elmt_reactant129)) + (- (elmt_reaction_52 * elmt_reactant110)) + (elmt_reaction_100 * elmt_product222) + (elmt_reaction_103 * elmt_product231) + (- (elmt_reaction_45 * elmt_reactant91)) + (- (elmt_reaction_4 * elmt_reactant8)) + (- (elmt_reaction_9 * elmt_reactant20)) + (elmt_reaction_18 * elmt_product38) + (elmt_reaction_11 * elmt_product27) + (elmt_reaction_110 * elmt_product252) + (- (elmt_reaction_79 * elmt_reactant171)));
        der(elmt_Rp_Shc_amount) = ((elmt_reaction_5 * elmt_product12) + (- (elmt_reaction_6 * elmt_reactant13)) + (- (elmt_reaction_19 * elmt_reactant39)));
        der(elmt_GABp_pSHP2_GS_amount) = ((elmt_reaction_98 * elmt_product217) + (- (elmt_reaction_110 * elmt_reactant251)));
        der(elmt_mGABp_GS_amount) = ((elmt_reaction_52 * elmt_product112) + (- (elmt_reaction_94 * elmt_reactant203)));
        der(elmt_mGABp_RasGAP_amount) = ((elmt_reaction_54 * elmt_product118) + (- (elmt_reaction_95 * elmt_reactant206)) + (- (elmt_reaction_111 * elmt_reactant255)));
        der(elmt_pAkt_amount) = ((elmt_reaction_75 * elmt_product164) + (- (elmt_reaction_78 * elmt_reactant169)) + (- (elmt_reaction_76 * elmt_reactant165)));
        der(elmt_IRSp_PI3K_amount) = ((- (elmt_reaction_99 * elmt_reactant218)) + (elmt_reaction_89 * elmt_product190));
        der(elmt_IRp_IRSp_amount) = ((- (elmt_reaction_38 * elmt_reactant78)) + (- (elmt_reaction_30 * elmt_reactant65)) + (elmt_reaction_29 * elmt_product64));
        der(elmt_GAB_amount) = ((elmt_reaction_108 * elmt_product247) + (elmt_reaction_109 * elmt_product250) + (elmt_reaction_104 * elmt_product235) + (elmt_reaction_105 * elmt_product238) + (elmt_reaction_106 * elmt_product241) + (elmt_reaction_107 * elmt_product244) + (- (elmt_reaction_49 * elmt_reactant103)) + (elmt_reaction_110 * elmt_product254));
        der(elmt_Rd_amount) = ((- (elmt_reaction_3 * elmt_reactant5)) + (elmt_reaction_2 * elmt_product4) + (elmt_reaction_83 * elmt_product180));
        der(elmt_PIP3_amount) = ((- (elmt_reaction_61 * elmt_reactant133)) + (elmt_reaction_60 * elmt_product132) + (- (elmt_reaction_49 * elmt_reactant104)) + (- (elmt_reaction_42 * elmt_reactant85)) + (elmt_reaction_96 * elmt_product210) + (elmt_reaction_97 * elmt_product213) + (elmt_reaction_94 * elmt_product204) + (elmt_reaction_95 * elmt_product207) + (elmt_reaction_98 * elmt_product216) + (elmt_reaction_92 * elmt_product198) + (elmt_reaction_93 * elmt_product201) + (elmt_reaction_90 * elmt_product192) + (elmt_reaction_91 * elmt_product195) + (elmt_reaction_89 * elmt_product189) + (elmt_reaction_88 * elmt_product187) + (- (elmt_reaction_74 * elmt_reactant160)));
        der(elmt_IRSp_GS_amount) = ((- (elmt_reaction_100 * elmt_reactant221)) + (elmt_reaction_90 * elmt_product193));
        der(elmt_Rp_amount) = ((elmt_reaction_3 * elmt_product6) + (- (elmt_reaction_4 * elmt_reactant7)) + (- (elmt_reaction_17 * elmt_reactant35)) + (elmt_reaction_7 * elmt_product16) + (- (elmt_reaction_5 * elmt_reactant10)) + (- (elmt_reaction_12 * elmt_reactant29)) + (- (elmt_reaction_13 * elmt_reactant32)) + (elmt_reaction_10 * elmt_product24) + (elmt_reaction_112 * elmt_product259) + (elmt_reaction_114 * elmt_product265) + (- (elmt_reaction_82 * elmt_reactant177)));
        der(elmt_mPDK1_amount) = (elmt_reaction_74 * elmt_product162);
        der(elmt_Ri_amount) = ((- (elmt_reaction_83 * elmt_reactant179)) + (elmt_reaction_82 * elmt_product178));
        der(elmt_ppAkt_amount) = (elmt_reaction_78 * elmt_product170);

    algorithm
        elmt_mGABp_SHP2_conc := elmt_mGABp_SHP2_amount / elmt_cell;
        elmt_mIRSp_GS_conc := elmt_mIRSp_GS_amount / elmt_cell;
        elmt_Mek_conc := elmt_Mek_amount / elmt_cell;
        elmt_mGABp_pSHP2_conc := elmt_mGABp_pSHP2_amount / elmt_cell;
        elmt_iPX_conc := elmt_iPX_amount / elmt_cell;
        elmt_Erk_conc := elmt_Erk_amount / elmt_cell;
        elmt_mGABp_conc := elmt_mGABp_amount / elmt_cell;
        elmt_GABp_conc := elmt_GABp_amount / elmt_cell;
        elmt_Rp_pShc_GS_conc := elmt_Rp_pShc_GS_amount / elmt_cell;
        elmt_IRp_IRS_conc := elmt_IRp_IRS_amount / elmt_cell;
        elmt_PDK1_conc := elmt_PDK1_amount / elmt_cell;
        elmt_IRL_conc := elmt_IRL_amount / elmt_cell;
        elmt_GABp_GS_conc := elmt_GABp_GS_amount / elmt_cell;
        elmt_imIRS_conc := elmt_imIRS_amount / elmt_cell;
        elmt_GABp_PI3K_conc := elmt_GABp_PI3K_amount / elmt_cell;
        elmt_PI3K_conc := elmt_PI3K_amount / elmt_cell;
        elmt_Rp_pShc_conc := elmt_Rp_pShc_amount / elmt_cell;
        elmt_IRS_conc := elmt_IRS_amount / elmt_cell;
        elmt_R_conc := elmt_R_amount / elmt_cell;
        elmt_mGABp_pSHP2_GS_conc := elmt_mGABp_pSHP2_GS_amount / elmt_cell;
        elmt_IRSp_conc := elmt_IRSp_amount / elmt_cell;
        elmt_imGABp_conc := elmt_imGABp_amount / elmt_cell;
        elmt_Rp_GS_conc := elmt_Rp_GS_amount / elmt_cell;
        elmt_GABp_RasGAP_conc := elmt_GABp_RasGAP_amount / elmt_cell;
        elmt_mIRSp_conc := elmt_mIRSp_amount / elmt_cell;
        elmt_IRi_conc := elmt_IRi_amount / elmt_cell;
        elmt_IRSp_SHP2_conc := elmt_IRSp_SHP2_amount / elmt_cell;
        elmt_mIRS_conc := elmt_mIRS_amount / elmt_cell;
        elmt_amTOR_conc := elmt_amTOR_amount / elmt_cell;
        elmt_phosphorylated_Akt_conc := elmt_phosphorylated_Akt_amount / elmt_cell;
        elmt_IR_conc := elmt_IR_amount / elmt_cell;
        elmt_iSrc_conc := elmt_iSrc_amount / elmt_cell;
        elmt_IRp_conc := elmt_IRp_amount / elmt_cell;
        elmt_imGAB_conc := elmt_imGAB_amount / elmt_cell;
        elmt_aSrc_conc := elmt_aSrc_amount / elmt_cell;
        elmt_mIRSp_PI3K_conc := elmt_mIRSp_PI3K_amount / elmt_cell;
        elmt_IRp_PI3K_conc := elmt_IRp_PI3K_amount / elmt_cell;
        elmt_pErk_conc := elmt_pErk_amount / elmt_cell;
        elmt_GABp_pSHP2_conc := elmt_GABp_pSHP2_amount / elmt_cell;
        elmt_Akt_conc := elmt_Akt_amount / elmt_cell;
        elmt_Raf_conc := elmt_Raf_amount / elmt_cell;
        elmt_mGABp_PI3K_conc := elmt_mGABp_PI3K_amount / elmt_cell;
        elmt_ppMek_conc := elmt_ppMek_amount / elmt_cell;
        elmt_tRas_PI3K_conc := elmt_tRas_PI3K_amount / elmt_cell;
        elmt_pShc_conc := elmt_pShc_amount / elmt_cell;
        elmt_RasGAP_conc := elmt_RasGAP_amount / elmt_cell;
        elmt_IRp_RasGAP_conc := elmt_IRp_RasGAP_amount / elmt_cell;
        elmt_mGAB_conc := elmt_mGAB_amount / elmt_cell;
        elmt_tRas_conc := elmt_tRas_amount / elmt_cell;
        elmt_aaRaf_conc := elmt_aaRaf_amount / elmt_cell;
        elmt_ppErk_conc := elmt_ppErk_amount / elmt_cell;
        elmt_dRas_conc := elmt_dRas_amount / elmt_cell;
        elmt_pShc_GS_conc := elmt_pShc_GS_amount / elmt_cell;
        elmt_SHP2_conc := elmt_SHP2_amount / elmt_cell;
        elmt_RE_conc := elmt_RE_amount / elmt_cell;
        elmt_GABp_SHP2_conc := elmt_GABp_SHP2_amount / elmt_cell;
        elmt_Shc_conc := elmt_Shc_amount / elmt_cell;
        elmt_mTOR_conc := elmt_mTOR_amount / elmt_cell;
        elmt_Null_conc := elmt_Null_amount / elmt_cell;
        elmt_mIRSp_SHP2_conc := elmt_mIRSp_SHP2_amount / elmt_cell;
        elmt_iGS_conc := elmt_iGS_amount / elmt_cell;
        elmt_bRasGAP_conc := elmt_bRasGAP_amount / elmt_cell;
        elmt_Rp_PI3K_conc := elmt_Rp_PI3K_amount / elmt_cell;
        elmt_Rp_RasGAP_conc := elmt_Rp_RasGAP_amount / elmt_cell;
        elmt_aRaf_conc := elmt_aRaf_amount / elmt_cell;
        elmt_GS_conc := elmt_GS_amount / elmt_cell;
        elmt_Rp_Shc_conc := elmt_Rp_Shc_amount / elmt_cell;
        elmt_GABp_pSHP2_GS_conc := elmt_GABp_pSHP2_GS_amount / elmt_cell;
        elmt_mGABp_GS_conc := elmt_mGABp_GS_amount / elmt_cell;
        elmt_mGABp_RasGAP_conc := elmt_mGABp_RasGAP_amount / elmt_cell;
        elmt_pAkt_conc := elmt_pAkt_amount / elmt_cell;
        elmt_IRSp_PI3K_conc := elmt_IRSp_PI3K_amount / elmt_cell;
        elmt_IRp_IRSp_conc := elmt_IRp_IRSp_amount / elmt_cell;
        elmt_GAB_conc := elmt_GAB_amount / elmt_cell;
        elmt_PKA_conc := elmt_PKA_amount / elmt_cell;
        elmt_Rd_conc := elmt_Rd_amount / elmt_cell;
        elmt_PIP3_conc := elmt_PIP3_amount / elmt_cell;
        elmt_IRSp_GS_conc := elmt_IRSp_GS_amount / elmt_cell;
        elmt_Rp_conc := elmt_Rp_amount / elmt_cell;
        elmt_mPDK1_conc := elmt_mPDK1_amount / elmt_cell;
        elmt_aPX_GS_conc := elmt_aPX_GS_amount / elmt_cell;
        elmt_Ri_conc := elmt_Ri_amount / elmt_cell;
        elmt_ppAkt_conc := elmt_ppAkt_amount / elmt_cell;
        elmt_aPX_conc := elmt_aPX_amount / elmt_cell;
end Class_elmt_cell;
