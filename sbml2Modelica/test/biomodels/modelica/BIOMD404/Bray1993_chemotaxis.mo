within BIOMD404;
model Bray1993_chemotaxis "Bray1993_chemotaxis" annotation(Documentation(info="<annotation>
      <rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:bqmodel=\"http://biomodels.net/model-qualifiers/\" xmlns:vCard=\"http://www.w3.org/2001/vcard-rdf/3.0#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns:bqbiol=\"http://biomodels.net/biology-qualifiers/\">
	
      </rdf:RDF>
    </annotation>"));

    Parameters Params;
    Reactions Reacs;
    Class_elmt_cell elmt_cell;
    Class_elmt_event_2 elmt_event_2;
    Class_elmt_event_1 elmt_event_1;

    function prioritize_between_2
        input Real[2] prios;
        input Real[2] values;
        input Boolean[2] trigs;
        output Real value;
        protected Real min_prio;
        algorithm
            value := 0;
            min_prio := Constants.INFINITY;
            for i in 1:2 loop
                if trigs[i] and prios[i] < min_prio then
                    value := values[i];
                    min_prio := prios[i];
                end if;
            end for;
    end prioritize_between_2;
    equation
        Params.elmt_MYpYpYpYp = elmt_cell.elmt_MYpYpYpYp;
        Params.elmt_M = elmt_cell.elmt_M;
        Params.elmt_MYp = elmt_cell.elmt_MYp;
        Params.elmt_MYpYp = elmt_cell.elmt_MYpYp;
        Params.elmt_species_1 = elmt_cell.elmt_species_1;
        Params.elmt_MYpYpYp = elmt_cell.elmt_MYpYpYp;
        Reacs.elmt_TW = elmt_cell.elmt_TW;
        Reacs.elmt_MYpYp = elmt_cell.elmt_MYpYp;
        Reacs.elmt_Tasp_A = elmt_cell.elmt_Tasp_A;
        Reacs.elmt_asp = elmt_cell.elmt_asp;
        Reacs.elmt_Tasp_WA = elmt_cell.elmt_Tasp_WA;
        Reacs.elmt_Tni_W = elmt_cell.elmt_Tni_W;
        Reacs.elmt_WA = elmt_cell.elmt_WA;
        Reacs.elmt_cell = elmt_cell.elmt_cell;
        Reacs.elmt_MYp = elmt_cell.elmt_MYp;
        Reacs.elmt_Y = elmt_cell.elmt_Y;
        Reacs.elmt_Z = elmt_cell.elmt_Z;
        Reacs.elmt_W = elmt_cell.elmt_W;
        Reacs.elmt_Tni = elmt_cell.elmt_Tni;
        Reacs.elmt_ni = elmt_cell.elmt_ni;
        Reacs.elmt_Tni_A = elmt_cell.elmt_Tni_A;
        Reacs.elmt_parameter_2 = Params.elmt_parameter_2;
        Reacs.elmt_alpha = Params.elmt_alpha;
        Reacs.elmt_T = elmt_cell.elmt_T;
        Reacs.elmt_MYpYpYp = elmt_cell.elmt_MYpYpYp;
        Reacs.elmt_Yp = elmt_cell.elmt_Yp;
        Reacs.elmt_MYpYpYpYp = elmt_cell.elmt_MYpYpYpYp;
        Reacs.elmt_Tasp = elmt_cell.elmt_Tasp;
        Reacs.elmt_M = elmt_cell.elmt_M;
        Reacs.elmt_Tni_WA = elmt_cell.elmt_Tni_WA;
        Reacs.elmt_kappa = Params.elmt_kappa;
        Reacs.elmt_Tasp_W = elmt_cell.elmt_Tasp_W;
        Reacs.elmt_TA = elmt_cell.elmt_TA;
        Reacs.elmt_Bp = elmt_cell.elmt_Bp;
        Reacs.elmt_TWA = elmt_cell.elmt_TWA;
        Reacs.elmt_A = elmt_cell.elmt_A;
        Reacs.elmt_B = elmt_cell.elmt_B;
        Reacs.elmt_ka = Params.elmt_ka;
        Reacs.elmt_Ap = elmt_cell.elmt_Ap;
        elmt_cell.elmt_reactant40 = Reacs.elmt_reactant40;
        elmt_cell.elmt_product72 = Reacs.elmt_product72;
        elmt_cell.elmt_reactant41 = Reacs.elmt_reactant41;
        elmt_cell.elmt_product78 = Reacs.elmt_product78;
        elmt_cell.elmt_product75 = Reacs.elmt_product75;
        elmt_cell.elmt_reactant47 = Reacs.elmt_reactant47;
        elmt_cell.elmt_reactant49 = Reacs.elmt_reactant49;
        elmt_cell.elmt_reactant43 = Reacs.elmt_reactant43;
        elmt_cell.elmt_reactant44 = Reacs.elmt_reactant44;
        elmt_cell.elmt_reactant46 = Reacs.elmt_reactant46;
        elmt_cell.elmt_product69 = Reacs.elmt_product69;
        elmt_cell.elmt_reactant50 = Reacs.elmt_reactant50;
        elmt_cell.elmt_product84 = Reacs.elmt_product84;
        elmt_cell.elmt_reactant52 = Reacs.elmt_reactant52;
        elmt_cell.elmt_reactant53 = Reacs.elmt_reactant53;
        elmt_cell.elmt_product87 = Reacs.elmt_product87;
        elmt_cell.elmt_reactant58 = Reacs.elmt_reactant58;
        elmt_cell.elmt_reactant59 = Reacs.elmt_reactant59;
        elmt_cell.elmt_product81 = Reacs.elmt_product81;
        elmt_cell.elmt_reactant55 = Reacs.elmt_reactant55;
        elmt_cell.elmt_reactant56 = Reacs.elmt_reactant56;
        elmt_cell.elmt_product102 = Reacs.elmt_product102;
        elmt_cell.elmt_motor_r4 = Reacs.elmt_motor_r4;
        elmt_cell.elmt_phosphorylation_r10 = Reacs.elmt_phosphorylation_r10;
        elmt_cell.elmt_motor_r3 = Reacs.elmt_motor_r3;
        elmt_cell.elmt_motor_r2 = Reacs.elmt_motor_r2;
        elmt_cell.elmt_motor_r1 = Reacs.elmt_motor_r1;
        elmt_cell.elmt_product96 = Reacs.elmt_product96;
        elmt_cell.elmt_product93 = Reacs.elmt_product93;
        elmt_cell.elmt_product12 = Reacs.elmt_product12;
        elmt_cell.elmt_product99 = Reacs.elmt_product99;
        elmt_cell.elmt_reactant26 = Reacs.elmt_reactant26;
        elmt_cell.elmt_reactant28 = Reacs.elmt_reactant28;
        elmt_cell.elmt_reactant22 = Reacs.elmt_reactant22;
        elmt_cell.elmt_product90 = Reacs.elmt_product90;
        elmt_cell.elmt_reactant23 = Reacs.elmt_reactant23;
        elmt_cell.elmt_reactant18 = Reacs.elmt_reactant18;
        elmt_cell.elmt_reactant19 = Reacs.elmt_reactant19;
        elmt_cell.elmt_product9 = Reacs.elmt_product9;
        elmt_cell.elmt_regulatory_r9 = Reacs.elmt_regulatory_r9;
        elmt_cell.elmt_regulatory_r8 = Reacs.elmt_regulatory_r8;
        elmt_cell.elmt_product8 = Reacs.elmt_product8;
        elmt_cell.elmt_reactant31 = Reacs.elmt_reactant31;
        elmt_cell.elmt_regulatory_r5 = Reacs.elmt_regulatory_r5;
        elmt_cell.elmt_regulatory_r4 = Reacs.elmt_regulatory_r4;
        elmt_cell.elmt_product21 = Reacs.elmt_product21;
        elmt_cell.elmt_regulatory_r7 = Reacs.elmt_regulatory_r7;
        elmt_cell.elmt_regulatory_r6 = Reacs.elmt_regulatory_r6;
        elmt_cell.elmt_product20 = Reacs.elmt_product20;
        elmt_cell.elmt_regulatory_r1 = Reacs.elmt_regulatory_r1;
        elmt_cell.elmt_product1 = Reacs.elmt_product1;
        elmt_cell.elmt_reactant37 = Reacs.elmt_reactant37;
        elmt_cell.elmt_regulatory_r3 = Reacs.elmt_regulatory_r3;
        elmt_cell.elmt_reactant38 = Reacs.elmt_reactant38;
        elmt_cell.elmt_regulatory_r2 = Reacs.elmt_regulatory_r2;
        elmt_cell.elmt_product5 = Reacs.elmt_product5;
        elmt_cell.elmt_reactant34 = Reacs.elmt_reactant34;
        elmt_cell.elmt_product3 = Reacs.elmt_product3;
        elmt_cell.elmt_reactant35 = Reacs.elmt_reactant35;
        elmt_cell.elmt_product15 = Reacs.elmt_product15;
        elmt_cell.elmt_product13 = Reacs.elmt_product13;
        elmt_cell.elmt_product17 = Reacs.elmt_product17;
        elmt_cell.elmt_reactant100 = Reacs.elmt_reactant100;
        elmt_cell.elmt_reactant83 = Reacs.elmt_reactant83;
        elmt_cell.elmt_product30 = Reacs.elmt_product30;
        elmt_cell.elmt_reactant85 = Reacs.elmt_reactant85;
        elmt_cell.elmt_reactant86 = Reacs.elmt_reactant86;
        elmt_cell.elmt_reactant80 = Reacs.elmt_reactant80;
        elmt_cell.elmt_product33 = Reacs.elmt_product33;
        elmt_cell.elmt_reactant82 = Reacs.elmt_reactant82;
        elmt_cell.elmt_regulatory_r12 = Reacs.elmt_regulatory_r12;
        elmt_cell.elmt_regulatory_r11 = Reacs.elmt_regulatory_r11;
        elmt_cell.elmt_regulatory_r14 = Reacs.elmt_regulatory_r14;
        elmt_cell.elmt_regulatory_r13 = Reacs.elmt_regulatory_r13;
        elmt_cell.elmt_reactant88 = Reacs.elmt_reactant88;
        elmt_cell.elmt_regulatory_r10 = Reacs.elmt_regulatory_r10;
        elmt_cell.elmt_reactant89 = Reacs.elmt_reactant89;
        elmt_cell.elmt_product27 = Reacs.elmt_product27;
        elmt_cell.elmt_product25 = Reacs.elmt_product25;
        elmt_cell.elmt_product24 = Reacs.elmt_product24;
        elmt_cell.elmt_reactant94 = Reacs.elmt_reactant94;
        elmt_cell.elmt_reactant97 = Reacs.elmt_reactant97;
        elmt_cell.elmt_product45 = Reacs.elmt_product45;
        elmt_cell.elmt_reactant91 = Reacs.elmt_reactant91;
        elmt_cell.elmt_reactant92 = Reacs.elmt_reactant92;
        elmt_cell.elmt_product42 = Reacs.elmt_product42;
        elmt_cell.elmt_reaction_3 = Reacs.elmt_reaction_3;
        elmt_cell.elmt_reactant14 = Reacs.elmt_reactant14;
        elmt_cell.elmt_reaction_1 = Reacs.elmt_reaction_1;
        elmt_cell.elmt_reactant16 = Reacs.elmt_reactant16;
        elmt_cell.elmt_reaction_2 = Reacs.elmt_reaction_2;
        elmt_cell.elmt_reactant10 = Reacs.elmt_reactant10;
        elmt_cell.elmt_reactant11 = Reacs.elmt_reactant11;
        elmt_cell.elmt_product36 = Reacs.elmt_product36;
        elmt_cell.elmt_product39 = Reacs.elmt_product39;
        elmt_cell.elmt_reactant61 = Reacs.elmt_reactant61;
        elmt_cell.elmt_phosphorylation_r5 = Reacs.elmt_phosphorylation_r5;
        elmt_cell.elmt_phosphorylation_r6 = Reacs.elmt_phosphorylation_r6;
        elmt_cell.elmt_reactant62 = Reacs.elmt_reactant62;
        elmt_cell.elmt_product51 = Reacs.elmt_product51;
        elmt_cell.elmt_phosphorylation_r7 = Reacs.elmt_phosphorylation_r7;
        elmt_cell.elmt_phosphorylation_r8 = Reacs.elmt_phosphorylation_r8;
        elmt_cell.elmt_reactant64 = Reacs.elmt_reactant64;
        elmt_cell.elmt_phosphorylation_r9 = Reacs.elmt_phosphorylation_r9;
        elmt_cell.elmt_product54 = Reacs.elmt_product54;
        elmt_cell.elmt_reactant65 = Reacs.elmt_reactant65;
        elmt_cell.elmt_phosphorylation_r1 = Reacs.elmt_phosphorylation_r1;
        elmt_cell.elmt_phosphorylation_r2 = Reacs.elmt_phosphorylation_r2;
        elmt_cell.elmt_reactant67 = Reacs.elmt_reactant67;
        elmt_cell.elmt_phosphorylation_r3 = Reacs.elmt_phosphorylation_r3;
        elmt_cell.elmt_phosphorylation_r4 = Reacs.elmt_phosphorylation_r4;
        elmt_cell.elmt_reactant68 = Reacs.elmt_reactant68;
        elmt_cell.elmt_product48 = Reacs.elmt_product48;
        elmt_cell.elmt_product63 = Reacs.elmt_product63;
        elmt_cell.elmt_reactant2 = Reacs.elmt_reactant2;
        elmt_cell.elmt_reactant73 = Reacs.elmt_reactant73;
        elmt_cell.elmt_reactant4 = Reacs.elmt_reactant4;
        elmt_cell.elmt_reactant74 = Reacs.elmt_reactant74;
        elmt_cell.elmt_product60 = Reacs.elmt_product60;
        elmt_cell.elmt_reactant6 = Reacs.elmt_reactant6;
        elmt_cell.elmt_product66 = Reacs.elmt_product66;
        elmt_cell.elmt_reactant70 = Reacs.elmt_reactant70;
        elmt_cell.elmt_reactant7 = Reacs.elmt_reactant7;
        elmt_cell.elmt_reactant71 = Reacs.elmt_reactant71;
        elmt_cell.elmt_reactant76 = Reacs.elmt_reactant76;
        elmt_cell.elmt_reactant77 = Reacs.elmt_reactant77;
        elmt_cell.elmt_reactant0 = Reacs.elmt_reactant0;
        elmt_cell.elmt_reactant79 = Reacs.elmt_reactant79;
        elmt_cell.elmt_regulatory_r16 = Reacs.elmt_regulatory_r16;
        elmt_cell.elmt_regulatory_r15 = Reacs.elmt_regulatory_r15;
        elmt_cell.elmt_regulatory_r18 = Reacs.elmt_regulatory_r18;
        elmt_cell.elmt_regulatory_r17 = Reacs.elmt_regulatory_r17;
        elmt_cell.elmt_product57 = Reacs.elmt_product57;
        elmt_cell.elmt_event_2 = elmt_event_2.trigger;
        elmt_cell.elmt_event_1 = elmt_event_1.trigger;
        elmt_event_1.elmt_parameter_1 = Params.elmt_parameter_1;

        elmt_cell.assign_elmt_asp = prioritize_between_2({Constants.NEGATIVE_INFINITY, Constants.NEGATIVE_INFINITY}, {elmt_event_2.value_elmt_asp, elmt_event_1.value_elmt_asp}, {edge(elmt_event_2.trigger), edge(elmt_event_1.trigger)});
end Bray1993_chemotaxis;
