within BIOMD265;
model Conradie2010_RPControl_CellCycle "Conradie2010_RPControl_CellCycle" annotation(Documentation(info="<annotation>
	<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:vCard=\"http://www.w3.org/2001/vcard-rdf/3.0#\" xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns:bqmodel=\"http://biomodels.net/model-qualifiers/\" xmlns:bqbiol=\"http://biomodels.net/biology-qualifiers/\">
	
	</rdf:RDF>
	</annotation>"));

    Parameters Params;
    Reactions Reacs;
    Class_elmt_cell elmt_cell;
    Class_elmt_r31Ifpart1 elmt_r31Ifpart1;
    Class_elmt_divisionEvent elmt_divisionEvent;
    Class_elmt_r31Ifpart2 elmt_r31Ifpart2;
    Class_elmt_checkEvent elmt_checkEvent;

    function prioritize_between_2
        input Real[2] prios;
        input Real[2] values;
        input Boolean[2] trigs;
        output Real value;
        protected Real min_prio;
        algorithm
            value := 0;
            min_prio := Constants.INFINITY;
            for i in 1:2 loop
                if trigs[i] and prios[i] < min_prio then
                    value := values[i];
                    min_prio := prios[i];
                end if;
            end for;
    end prioritize_between_2;
    equation
        Params.elmt_P27 = elmt_cell.elmt_P27;
        Params.elmt_CD = elmt_cell.elmt_CD;
        Params.elmt_CYCB = elmt_cell.elmt_CYCB;
        Params.elmt_CE = elmt_cell.elmt_CE;
        Params.elmt_CDc20 = elmt_cell.elmt_CDc20;
        Params.elmt_CYCA = elmt_cell.elmt_CYCA;
        Params.elmt_CDh1 = elmt_cell.elmt_CDh1;
        Params.elmt_CA = elmt_cell.elmt_CA;
        Params.elmt_CYCD = elmt_cell.elmt_CYCD;
        Params.elmt_CYCE = elmt_cell.elmt_CYCE;
        Params.elmt_r31Ifpart1 = elmt_r31Ifpart1.trigger;
        Params.elmt_divisionEvent = elmt_divisionEvent.trigger;
        Params.elmt_r31Ifpart2 = elmt_r31Ifpart2.trigger;
        Params.elmt_checkEvent = elmt_checkEvent.trigger;
        Reacs.elmt_K25R = Params.elmt_K25R;
        Reacs.elmt_IEP = elmt_cell.elmt_IEP;
        Reacs.elmt_PP1T = Params.elmt_PP1T;
        Reacs.elmt_DRG = elmt_cell.elmt_DRG;
        Reacs.elmt_ERG = elmt_cell.elmt_ERG;
        Reacs.elmt_LA = Params.elmt_LA;
        Reacs.elmt_LB = Params.elmt_LB;
        Reacs.elmt_var1 = elmt_cell.elmt_var1;
        Reacs.elmt_MASS = elmt_cell.elmt_MASS;
        Reacs.elmt_var3 = elmt_cell.elmt_var3;
        Reacs.elmt_var2 = elmt_cell.elmt_var2;
        Reacs.elmt_var5 = elmt_cell.elmt_var5;
        Reacs.elmt_CDc20 = elmt_cell.elmt_CDc20;
        Reacs.elmt_CDc20T = elmt_cell.elmt_CDc20T;
        Reacs.elmt_var4 = elmt_cell.elmt_var4;
        Reacs.elmt_K26 = Params.elmt_K26;
        Reacs.elmt_PP1A = Params.elmt_PP1A;
        Reacs.elmt_K25 = Params.elmt_K25;
        Reacs.elmt_LE = Params.elmt_LE;
        Reacs.elmt_K22 = Params.elmt_K22;
        Reacs.elmt_K23 = Params.elmt_K23;
        Reacs.elmt_K20 = Params.elmt_K20;
        Reacs.elmt_LD = Params.elmt_LD;
        Reacs.elmt_PPX = elmt_cell.elmt_PPX;
        Reacs.elmt_GM = elmt_cell.elmt_GM;
        Reacs.elmt_K26R = Params.elmt_K26R;
        Reacs.elmt_P27 = elmt_cell.elmt_P27;
        Reacs.elmt_CD = elmt_cell.elmt_CD;
        Reacs.elmt_V8 = Params.elmt_V8;
        Reacs.elmt_CE = elmt_cell.elmt_CE;
        Reacs.elmt_V6 = Params.elmt_V6;
        Reacs.elmt_CDh1 = elmt_cell.elmt_CDh1;
        Reacs.elmt_var6 = elmt_cell.elmt_var6;
        Reacs.elmt_eps = Params.elmt_eps;
        Reacs.elmt_K30 = Params.elmt_K30;
        Reacs.elmt_K23a = Params.elmt_K23a;
        Reacs.elmt_CYCB = elmt_cell.elmt_CYCB;
        Reacs.elmt_CYCA = elmt_cell.elmt_CYCA;
        Reacs.elmt_V4 = Params.elmt_V4;
        Reacs.elmt_CA = elmt_cell.elmt_CA;
        Reacs.elmt_CYCD = elmt_cell.elmt_CYCD;
        Reacs.elmt_CYCE = elmt_cell.elmt_CYCE;
        Reacs.elmt_V2 = Params.elmt_V2;
        Reacs.elmt_r31switch = Params.elmt_r31switch;
        Reacs.elmt_K12 = Params.elmt_K12;
        Reacs.elmt_K10 = Params.elmt_K10;
        elmt_cell.elmt_product74 = Reacs.elmt_product74;
        elmt_cell.elmt_reactant41 = Reacs.elmt_reactant41;
        elmt_cell.elmt_product72 = Reacs.elmt_product72;
        elmt_cell.elmt_reactant42 = Reacs.elmt_reactant42;
        elmt_cell.elmt_product77 = Reacs.elmt_product77;
        elmt_cell.elmt_reactant49 = Reacs.elmt_reactant49;
        elmt_cell.elmt_product70 = Reacs.elmt_product70;
        elmt_cell.elmt_reactant44 = Reacs.elmt_reactant44;
        elmt_cell.elmt_reactant45 = Reacs.elmt_reactant45;
        elmt_cell.elmt_reactant46 = Reacs.elmt_reactant46;
        elmt_cell.elmt_product69 = Reacs.elmt_product69;
        elmt_cell.elmt_product85 = Reacs.elmt_product85;
        elmt_cell.elmt_product83 = Reacs.elmt_product83;
        elmt_cell.elmt_reactant53 = Reacs.elmt_reactant53;
        elmt_cell.elmt_product87 = Reacs.elmt_product87;
        elmt_cell.elmt_product80 = Reacs.elmt_product80;
        elmt_cell.elmt_product79 = Reacs.elmt_product79;
        elmt_cell.elmt_reactant20 = Reacs.elmt_reactant20;
        elmt_cell.elmt_product10 = Reacs.elmt_product10;
        elmt_cell.elmt_reactant26 = Reacs.elmt_reactant26;
        elmt_cell.elmt_reactant28 = Reacs.elmt_reactant28;
        elmt_cell.elmt_reactant23 = Reacs.elmt_reactant23;
        elmt_cell.elmt_reactant18 = Reacs.elmt_reactant18;
        elmt_cell.elmt_v13 = Reacs.elmt_v13;
        elmt_cell.elmt_v12 = Reacs.elmt_v12;
        elmt_cell.elmt_v11 = Reacs.elmt_v11;
        elmt_cell.elmt_product7 = Reacs.elmt_product7;
        elmt_cell.elmt_reactant30 = Reacs.elmt_reactant30;
        elmt_cell.elmt_v10 = Reacs.elmt_v10;
        elmt_cell.elmt_product22 = Reacs.elmt_product22;
        elmt_cell.elmt_product21 = Reacs.elmt_product21;
        elmt_cell.elmt_reactant36 = Reacs.elmt_reactant36;
        elmt_cell.elmt_reactant38 = Reacs.elmt_reactant38;
        elmt_cell.elmt_v19 = Reacs.elmt_v19;
        elmt_cell.elmt_reactant39 = Reacs.elmt_reactant39;
        elmt_cell.elmt_v18 = Reacs.elmt_v18;
        elmt_cell.elmt_v17 = Reacs.elmt_v17;
        elmt_cell.elmt_reactant32 = Reacs.elmt_reactant32;
        elmt_cell.elmt_v16 = Reacs.elmt_v16;
        elmt_cell.elmt_product3 = Reacs.elmt_product3;
        elmt_cell.elmt_v15 = Reacs.elmt_v15;
        elmt_cell.elmt_reactant34 = Reacs.elmt_reactant34;
        elmt_cell.elmt_v14 = Reacs.elmt_v14;
        elmt_cell.elmt_reactant29 = Reacs.elmt_reactant29;
        elmt_cell.elmt_product16 = Reacs.elmt_product16;
        elmt_cell.elmt_product15 = Reacs.elmt_product15;
        elmt_cell.elmt_product13 = Reacs.elmt_product13;
        elmt_cell.elmt_product19 = Reacs.elmt_product19;
        elmt_cell.elmt_v24 = Reacs.elmt_v24;
        elmt_cell.elmt_v23 = Reacs.elmt_v23;
        elmt_cell.elmt_reactant84 = Reacs.elmt_reactant84;
        elmt_cell.elmt_v22 = Reacs.elmt_v22;
        elmt_cell.elmt_v9 = Reacs.elmt_v9;
        elmt_cell.elmt_v21 = Reacs.elmt_v21;
        elmt_cell.elmt_reactant86 = Reacs.elmt_reactant86;
        elmt_cell.elmt_v7 = Reacs.elmt_v7;
        elmt_cell.elmt_v20 = Reacs.elmt_v20;
        elmt_cell.elmt_v8 = Reacs.elmt_v8;
        elmt_cell.elmt_product33 = Reacs.elmt_product33;
        elmt_cell.elmt_v5 = Reacs.elmt_v5;
        elmt_cell.elmt_reactant81 = Reacs.elmt_reactant81;
        elmt_cell.elmt_v6 = Reacs.elmt_v6;
        elmt_cell.elmt_reactant82 = Reacs.elmt_reactant82;
        elmt_cell.elmt_product31 = Reacs.elmt_product31;
        elmt_cell.elmt_v29 = Reacs.elmt_v29;
        elmt_cell.elmt_v28 = Reacs.elmt_v28;
        elmt_cell.elmt_v27 = Reacs.elmt_v27;
        elmt_cell.elmt_v26 = Reacs.elmt_v26;
        elmt_cell.elmt_v25 = Reacs.elmt_v25;
        elmt_cell.elmt_v3 = Reacs.elmt_v3;
        elmt_cell.elmt_product27 = Reacs.elmt_product27;
        elmt_cell.elmt_reactant9 = Reacs.elmt_reactant9;
        elmt_cell.elmt_v4 = Reacs.elmt_v4;
        elmt_cell.elmt_product25 = Reacs.elmt_product25;
        elmt_cell.elmt_v1 = Reacs.elmt_v1;
        elmt_cell.elmt_v2 = Reacs.elmt_v2;
        elmt_cell.elmt_product24 = Reacs.elmt_product24;
        elmt_cell.elmt_v35 = Reacs.elmt_v35;
        elmt_cell.elmt_product40 = Reacs.elmt_product40;
        elmt_cell.elmt_v34 = Reacs.elmt_v34;
        elmt_cell.elmt_v33 = Reacs.elmt_v33;
        elmt_cell.elmt_v32 = Reacs.elmt_v32;
        elmt_cell.elmt_v31 = Reacs.elmt_v31;
        elmt_cell.elmt_v30 = Reacs.elmt_v30;
        elmt_cell.elmt_product43 = Reacs.elmt_product43;
        elmt_cell.elmt_reactant14 = Reacs.elmt_reactant14;
        elmt_cell.elmt_reactant17 = Reacs.elmt_reactant17;
        elmt_cell.elmt_v39 = Reacs.elmt_v39;
        elmt_cell.elmt_reactant11 = Reacs.elmt_reactant11;
        elmt_cell.elmt_v38 = Reacs.elmt_v38;
        elmt_cell.elmt_v37 = Reacs.elmt_v37;
        elmt_cell.elmt_reactant12 = Reacs.elmt_reactant12;
        elmt_cell.elmt_v36 = Reacs.elmt_v36;
        elmt_cell.elmt_product37 = Reacs.elmt_product37;
        elmt_cell.elmt_product35 = Reacs.elmt_product35;
        elmt_cell.elmt_product52 = Reacs.elmt_product52;
        elmt_cell.elmt_v46 = Reacs.elmt_v46;
        elmt_cell.elmt_product51 = Reacs.elmt_product51;
        elmt_cell.elmt_v45 = Reacs.elmt_v45;
        elmt_cell.elmt_product50 = Reacs.elmt_product50;
        elmt_cell.elmt_v44 = Reacs.elmt_v44;
        elmt_cell.elmt_v43 = Reacs.elmt_v43;
        elmt_cell.elmt_reactant64 = Reacs.elmt_reactant64;
        elmt_cell.elmt_v42 = Reacs.elmt_v42;
        elmt_cell.elmt_product56 = Reacs.elmt_product56;
        elmt_cell.elmt_v41 = Reacs.elmt_v41;
        elmt_cell.elmt_product55 = Reacs.elmt_product55;
        elmt_cell.elmt_v40 = Reacs.elmt_v40;
        elmt_cell.elmt_product54 = Reacs.elmt_product54;
        elmt_cell.elmt_v49 = Reacs.elmt_v49;
        elmt_cell.elmt_reactant66 = Reacs.elmt_reactant66;
        elmt_cell.elmt_v48 = Reacs.elmt_v48;
        elmt_cell.elmt_v47 = Reacs.elmt_v47;
        elmt_cell.elmt_reactant68 = Reacs.elmt_reactant68;
        elmt_cell.elmt_product48 = Reacs.elmt_product48;
        elmt_cell.elmt_product47 = Reacs.elmt_product47;
        elmt_cell.elmt_reactant2 = Reacs.elmt_reactant2;
        elmt_cell.elmt_product63 = Reacs.elmt_product63;
        elmt_cell.elmt_reactant1 = Reacs.elmt_reactant1;
        elmt_cell.elmt_product62 = Reacs.elmt_product62;
        elmt_cell.elmt_reactant73 = Reacs.elmt_reactant73;
        elmt_cell.elmt_product61 = Reacs.elmt_product61;
        elmt_cell.elmt_reactant4 = Reacs.elmt_reactant4;
        elmt_cell.elmt_reactant75 = Reacs.elmt_reactant75;
        elmt_cell.elmt_product60 = Reacs.elmt_product60;
        elmt_cell.elmt_reactant6 = Reacs.elmt_reactant6;
        elmt_cell.elmt_product67 = Reacs.elmt_product67;
        elmt_cell.elmt_v52 = Reacs.elmt_v52;
        elmt_cell.elmt_reactant5 = Reacs.elmt_reactant5;
        elmt_cell.elmt_v51 = Reacs.elmt_v51;
        elmt_cell.elmt_product65 = Reacs.elmt_product65;
        elmt_cell.elmt_reactant8 = Reacs.elmt_reactant8;
        elmt_cell.elmt_v50 = Reacs.elmt_v50;
        elmt_cell.elmt_reactant71 = Reacs.elmt_reactant71;
        elmt_cell.elmt_reactant76 = Reacs.elmt_reactant76;
        elmt_cell.elmt_reactant78 = Reacs.elmt_reactant78;
        elmt_cell.elmt_reactant0 = Reacs.elmt_reactant0;
        elmt_cell.elmt_product59 = Reacs.elmt_product59;
        elmt_cell.elmt_product58 = Reacs.elmt_product58;
        elmt_cell.elmt_product57 = Reacs.elmt_product57;
        elmt_cell.elmt_divisionEvent = elmt_divisionEvent.trigger;
        elmt_r31Ifpart1.elmt_var1 = elmt_cell.elmt_var1;
        elmt_r31Ifpart1.elmt_var5 = elmt_cell.elmt_var5;
        elmt_r31Ifpart1.elmt_var4 = elmt_cell.elmt_var4;
        elmt_r31Ifpart1.elmt_var6 = elmt_cell.elmt_var6;
        elmt_r31Ifpart2.elmt_var1 = elmt_cell.elmt_var1;
        elmt_r31Ifpart2.elmt_var5 = elmt_cell.elmt_var5;
        elmt_r31Ifpart2.elmt_var4 = elmt_cell.elmt_var4;
        elmt_r31Ifpart2.elmt_var6 = elmt_cell.elmt_var6;
        elmt_divisionEvent.elmt_GM = elmt_cell.elmt_GM;
        elmt_divisionEvent.elmt_MASS = elmt_cell.elmt_MASS;
        elmt_divisionEvent.elmt_CDh1 = elmt_cell.elmt_CDh1;
        elmt_divisionEvent.elmt_Flag = Params.elmt_Flag;
        elmt_checkEvent.elmt_CDh1 = elmt_cell.elmt_CDh1;
        elmt_checkEvent.elmt_Flag = Params.elmt_Flag;

        elmt_cell.assign_elmt_GM = elmt_divisionEvent.value_elmt_GM;
        elmt_cell.assign_elmt_MASS = elmt_divisionEvent.value_elmt_MASS;
        Params.assign_elmt_Flag = prioritize_between_2({Constants.NEGATIVE_INFINITY, Constants.NEGATIVE_INFINITY}, {elmt_divisionEvent.value_elmt_Flag, elmt_checkEvent.value_elmt_Flag}, {edge(elmt_divisionEvent.trigger), edge(elmt_checkEvent.trigger)});
        Params.assign_elmt_r31switch = prioritize_between_2({Constants.NEGATIVE_INFINITY, Constants.NEGATIVE_INFINITY}, {elmt_r31Ifpart1.value_elmt_r31switch, elmt_r31Ifpart2.value_elmt_r31switch}, {edge(elmt_r31Ifpart1.trigger), edge(elmt_r31Ifpart2.trigger)});
end Conradie2010_RPControl_CellCycle;
