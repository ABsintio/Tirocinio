within BIOMD594;
class Class_elmt_cell

    input Real elmt_reactant40;
    input Real elmt_reactant42;
    input Real elmt_reactant48;
    input Real elmt_reactant44;
    input Real elmt_reactant46;
    input Real elmt_PYMax;
    input Real elmt_reactant50;
    input Real elmt_reactant52;
    input Real elmt_reactant58;
    input Real elmt_reactant54;
    input Real elmt_reactant56;
    input Real elmt_reactant20;
    input Real elmt_reactant26;
    input Real elmt_reactant28;
    input Real elmt_reactant22;
    input Real elmt_reactant24;
    input Real elmt_reactant18;
    input Real elmt_reactant30;
    input Real elmt_reactant36;
    input Real elmt_reactant38;
    input Real elmt_reactant32;
    input Real elmt_reactant34;
    input Real elmt_UbMax;
    input Real elmt_CblFactor;
    input Real elmt_reactant14;
    input Real elmt_reactant16;
    input Real elmt_reactant10;
    input Real elmt_reactant12;
    input Real elmt_product193;
    input Real elmt_product192;
    input Real elmt_product195;
    input Real elmt_product190;
    input Real elmt_product197;
    input Real elmt_product199;
    input Real elmt_reactant2;
    input Real elmt_reactant4;
    input Real elmt_reactant6;
    input Real elmt_reactant8;
    input Real elmt_reactant0;
    input Real elmt_product9;
    input Real elmt_product7;
    input Real elmt_product1;
    input Real elmt_product5;
    input Real elmt_product3;
    input Real elmt_reactant84;
    input Real elmt_reactant86;
    input Real elmt_reactant80;
    input Real elmt_reactant82;
    input Real elmt_reactant88;
    input Real elmt_reactant89;
    input Real elmt_reactant94;
    input Real elmt_reactant95;
    input Real elmt_reactant97;
    input Real elmt_reactant91;
    input Real elmt_reactant62;
    input Real elmt_reactant64;
    input Real elmt_reactant60;
    input Real elmt_reactant66;
    input Real elmt_reactant68;
    input Real elmt_reactant72;
    input Real elmt_reactant74;
    input Real elmt_reactant70;
    input Real elmt_reactant76;
    input Real elmt_reactant78;
    input Real elmt_r7;
    input Real elmt_r8;
    input Real elmt_r5;
    input Real elmt_r6;
    input Real elmt_r69;
    input Real elmt_r3;
    input Real elmt_r68;
    input Real elmt_r67;
    input Real elmt_r4;
    input Real elmt_r1;
    input Real elmt_r66;
    input Real elmt_r2;
    input Real elmt_r65;
    input Real elmt_r110;
    input Real elmt_r9;
    input Real elmt_r118;
    input Real elmt_reactant198;
    input Real elmt_product212;
    input Real elmt_r117;
    input Real elmt_r116;
    input Real elmt_reactant196;
    input Real elmt_product213;
    input Real elmt_r115;
    input Real elmt_reactant194;
    input Real elmt_r114;
    input Real elmt_r113;
    input Real elmt_r112;
    input Real elmt_product210;
    input Real elmt_reactant191;
    input Real elmt_r111;
    input Real elmt_r75;
    input Real elmt_product219;
    input Real elmt_r74;
    input Real elmt_r73;
    input Real elmt_r72;
    input Real elmt_r71;
    input Real elmt_product216;
    input Real elmt_r70;
    input Real elmt_product218;
    input Real elmt_r119;
    input Real elmt_r79;
    input Real elmt_r78;
    input Real elmt_r77;
    input Real elmt_r76;
    input Real elmt_product102;
    input Real elmt_r107;
    input Real elmt_r106;
    input Real elmt_product222;
    input Real elmt_r105;
    input Real elmt_product104;
    input Real elmt_product225;
    input Real elmt_product224;
    input Real elmt_r104;
    input Real elmt_r103;
    input Real elmt_r102;
    input Real elmt_r101;
    input Real elmt_r100;
    input Real elmt_r86;
    input Real elmt_r85;
    input Real elmt_r84;
    input Real elmt_r83;
    input Real elmt_r82;
    input Real elmt_r81;
    input Real elmt_product105;
    input Real elmt_product108;
    input Real elmt_r80;
    input Real elmt_r109;
    input Real elmt_r108;
    input Real elmt_product228;
    input Real elmt_r89;
    input Real elmt_product11;
    input Real elmt_r88;
    input Real elmt_r87;
    input Real elmt_reactant176;
    input Real elmt_reactant296;
    input Real elmt_reactant174;
    input Real elmt_reactant294;
    input Real elmt_reactant172;
    input Real elmt_reactant292;
    input Real elmt_reactant290;
    input Real elmt_r97;
    input Real elmt_r96;
    input Real elmt_r95;
    input Real elmt_r94;
    input Real elmt_r93;
    input Real elmt_r92;
    input Real elmt_reactant179;
    input Real elmt_r91;
    input Real elmt_reactant299;
    input Real elmt_r90;
    input Real elmt_reactant177;
    input Real elmt_reactant298;
    input Real elmt_product23;
    input Real elmt_r99;
    input Real elmt_product21;
    input Real elmt_r98;
    input Real elmt_product201;
    input Real elmt_reactant185;
    input Real elmt_reactant183;
    input Real elmt_reactant182;
    input Real elmt_product15;
    input Real elmt_product13;
    input Real elmt_product19;
    input Real elmt_product204;
    input Real elmt_reactant189;
    input Real elmt_product207;
    input Real elmt_product17;
    input Real elmt_reactant188;
    input Real elmt_product206;
    input Real elmt_r28;
    input Real elmt_r27;
    input Real elmt_r26;
    input Real elmt_r25;
    input Real elmt_r24;
    input Real elmt_r23;
    input Real elmt_r22;
    input Real elmt_r21;
    input Real elmt_r29;
    input Real elmt_reactant275;
    input Real elmt_reactant154;
    input Real elmt_reactant273;
    input Real elmt_reactant151;
    input Real elmt_reactant272;
    input Real elmt_reactant270;
    input Real elmt_r31;
    input Real elmt_r30;
    input Real elmt_reactant279;
    input Real elmt_reactant157;
    input Real elmt_reactant278;
    input Real elmt_reactant155;
    input Real elmt_r39;
    input Real elmt_r38;
    input Real elmt_r37;
    input Real elmt_r36;
    input Real elmt_r35;
    input Real elmt_r34;
    input Real elmt_r33;
    input Real elmt_r32;
    input Real elmt_product300;
    input Real elmt_reactant285;
    input Real elmt_reactant284;
    input Real elmt_reactant163;
    input Real elmt_product302;
    input Real elmt_reactant161;
    input Real elmt_reactant160;
    input Real elmt_reactant281;
    input Real elmt_r42;
    input Real elmt_r41;
    input Real elmt_r40;
    input Real elmt_reactant169;
    input Real elmt_product303;
    input Real elmt_reactant167;
    input Real elmt_reactant287;
    input Real elmt_reactant166;
    input Real elmt_r49;
    input Real elmt_r48;
    input Real elmt_r47;
    input Real elmt_r46;
    input Real elmt_r45;
    input Real elmt_r44;
    input Real elmt_r43;
    input Real elmt_reactant253;
    input Real elmt_reactant131;
    input Real elmt_reactant130;
    input Real elmt_reactant251;
    input Real elmt_reactant250;
    input Real elmt_r53;
    input Real elmt_reactant139;
    input Real elmt_r52;
    input Real elmt_r51;
    input Real elmt_reactant259;
    input Real elmt_r50;
    input Real elmt_reactant137;
    input Real elmt_reactant136;
    input Real elmt_reactant257;
    input Real elmt_reactant256;
    input Real elmt_reactant133;
    input Real elmt_r59;
    input Real elmt_r58;
    input Real elmt_r57;
    input Real elmt_r56;
    input Real elmt_r55;
    input Real elmt_r54;
    input Real elmt_r120;
    input Real elmt_reactant143;
    input Real elmt_reactant263;
    input Real elmt_reactant142;
    input Real elmt_reactant262;
    input Real elmt_r64;
    input Real elmt_r63;
    input Real elmt_r62;
    input Real elmt_reactant149;
    input Real elmt_r61;
    input Real elmt_reactant148;
    input Real elmt_reactant268;
    input Real elmt_r60;
    input Real elmt_reactant145;
    input Real elmt_reactant265;
    input Real elmt_product73;
    input Real elmt_product71;
    input Real elmt_product77;
    input Real elmt_reactant109;
    input Real elmt_product75;
    input Real elmt_reactant229;
    input Real elmt_product171;
    input Real elmt_product291;
    input Real elmt_product170;
    input Real elmt_product173;
    input Real elmt_product293;
    input Real elmt_product178;
    input Real elmt_product175;
    input Real elmt_product295;
    input Real elmt_product297;
    input Real elmt_reactant118;
    input Real elmt_reactant239;
    input Real elmt_reactant238;
    input Real elmt_product69;
    input Real elmt_reactant115;
    input Real elmt_reactant235;
    input Real elmt_reactant113;
    input Real elmt_reactant233;
    input Real elmt_reactant112;
    input Real elmt_reactant232;
    input Real elmt_product85;
    input Real elmt_product83;
    input Real elmt_product87;
    input Real elmt_reactant119;
    input Real elmt_product181;
    input Real elmt_product184;
    input Real elmt_product81;
    input Real elmt_product180;
    input Real elmt_reactant121;
    input Real elmt_reactant241;
    input Real elmt_product186;
    input Real elmt_product187;
    input Real elmt_reactant127;
    input Real elmt_reactant247;
    input Real elmt_product79;
    input Real elmt_reactant125;
    input Real elmt_reactant124;
    input Real elmt_reactant245;
    input Real elmt_reactant244;
    input Real elmt_product96;
    input Real elmt_product93;
    input Real elmt_reactant209;
    input Real elmt_product99;
    input Real elmt_product98;
    input Real elmt_reactant208;
    input Real elmt_product271;
    input Real elmt_product150;
    input Real elmt_product92;
    input Real elmt_product90;
    input Real elmt_product156;
    input Real elmt_product277;
    input Real elmt_product159;
    input Real elmt_product158;
    input Real elmt_product274;
    input Real elmt_product153;
    input Real elmt_product152;
    input Real elmt_product276;
    input Real elmt_reactant217;
    input Real elmt_reactant215;
    input Real elmt_reactant214;
    input Real elmt_reactant211;
    input Real elmt_r17;
    input Real elmt_r16;
    input Real elmt_r15;
    input Real elmt_r14;
    input Real elmt_r13;
    input Real elmt_r12;
    input Real elmt_r11;
    input Real elmt_r10;
    input Real elmt_product280;
    input Real elmt_product283;
    input Real elmt_product162;
    input Real elmt_product282;
    input Real elmt_r19;
    input Real elmt_r18;
    input Real elmt_product289;
    input Real elmt_reactant220;
    input Real elmt_product168;
    input Real elmt_product288;
    input Real elmt_product164;
    input Real elmt_product286;
    input Real elmt_product165;
    input Real elmt_r20;
    input Real elmt_reactant107;
    input Real elmt_reactant227;
    input Real elmt_reactant106;
    input Real elmt_reactant226;
    input Real elmt_reactant103;
    input Real elmt_reactant223;
    input Real elmt_reactant101;
    input Real elmt_reactant100;
    input Real elmt_reactant221;
    input Real elmt_product33;
    input Real elmt_product31;
    input Real elmt_product135;
    input Real elmt_product134;
    input Real elmt_product255;
    input Real elmt_product258;
    input Real elmt_product252;
    input Real elmt_product254;
    input Real elmt_product132;
    input Real elmt_product27;
    input Real elmt_product25;
    input Real elmt_product138;
    input Real elmt_product29;
    input Real elmt_product41;
    input Real elmt_product45;
    input Real elmt_product43;
    input Real elmt_product140;
    input Real elmt_product261;
    input Real elmt_product260;
    input Real elmt_product267;
    input Real elmt_product146;
    input Real elmt_product266;
    input Real elmt_product269;
    input Real elmt_product147;
    input Real elmt_product141;
    input Real elmt_product144;
    input Real elmt_product264;
    input Real elmt_product37;
    input Real elmt_reactant205;
    input Real elmt_reactant203;
    input Real elmt_product35;
    input Real elmt_reactant202;
    input Real elmt_reactant200;
    input Real elmt_product39;
    input Real elmt_product51;
    input Real elmt_product55;
    input Real elmt_product53;
    input Real elmt_product234;
    input Real elmt_product236;
    input Real elmt_product114;
    input Real elmt_product230;
    input Real elmt_product111;
    input Real elmt_product231;
    input Real elmt_product110;
    input Real elmt_product49;
    input Real elmt_product47;
    input Real elmt_product117;
    input Real elmt_product237;
    input Real elmt_product116;
    input Real elmt_product63;
    input Real elmt_product61;
    input Real elmt_product67;
    input Real elmt_product65;
    input Real elmt_product123;
    input Real elmt_product126;
    input Real elmt_product246;
    input Real elmt_product120;
    input Real elmt_product240;
    input Real elmt_product122;
    input Real elmt_product243;
    input Real elmt_product242;
    input Real elmt_product59;
    input Real elmt_product57;
    input Real elmt_product128;
    input Real elmt_product249;
    input Real elmt_reactant301;
    input Real elmt_product248;
    input Real elmt_product129;

    Real elmt_cell(unit = "") "cell";
    Real elmt_TyrNorm_conc(unit = "");
    Real elmt_TyrNorm_amount(unit = "");
    Real elmt_TyrNorm(unit = "") "TyrNorm";
    Real elmt_EGFR_00UU_conc(unit = "");
    Real elmt_EGFR_00UU_amount(unit = "");
    Real elmt_EGFR_00UU(unit = "") "EGFR_00UU";
 annotation(Documentation(info="<annotation>
	<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:bqbiol=\"http://biomodels.net/biology-qualifiers/\">
	
	</rdf:RDF>
	</annotation>"));
    Real elmt_EGFR_01UU_conc(unit = "");
    Real elmt_EGFR_01UU_amount(unit = "");
    Real elmt_EGFR_01UU(unit = "") "EGFR_01UU";
    Real elmt_EGFR_02UU_conc(unit = "");
    Real elmt_EGFR_02UU_amount(unit = "");
    Real elmt_EGFR_02UU(unit = "") "EGFR_02UU";
    Real elmt_EGFR_11LU_conc(unit = "");
    Real elmt_EGFR_11LU_amount(unit = "");
    Real elmt_EGFR_11LU(unit = "") "EGFR_11LU";
    Real elmt_EGFR_10LU_conc(unit = "");
    Real elmt_EGFR_10LU_amount(unit = "");
    Real elmt_EGFR_10LU(unit = "") "EGFR_10LU";
    Real elmt_EGFR_12LU_conc(unit = "");
    Real elmt_EGFR_12LU_amount(unit = "");
    Real elmt_EGFR_12LU(unit = "") "EGFR_12LU";
    Real elmt_EGFR_11UL_conc(unit = "");
    Real elmt_EGFR_11UL_amount(unit = "");
    Real elmt_EGFR_11UL(unit = "") "EGFR_11UL";
    Real elmt_EGFR_12UG_conc(unit = "");
    Real elmt_EGFR_12UG_amount(unit = "");
    Real elmt_EGFR_12UG(unit = "") "EGFR_12UG";
    Real elmt_EGFR_11UG_conc(unit = "");
    Real elmt_EGFR_11UG_amount(unit = "");
    Real elmt_EGFR_11UG(unit = "") "EGFR_11UG";
    Real elmt_Cbl_conc(unit = "");
    Real elmt_Cbl_amount(unit = "");
    Real elmt_Cbl(unit = "") "Cbl";
 annotation(Documentation(info="<annotation>
	<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:bqbiol=\"http://biomodels.net/biology-qualifiers/\">
	
	</rdf:RDF>
	</annotation>"));
    Real elmt_EGFR_10UU_conc(unit = "");
    Real elmt_EGFR_10UU_amount(unit = "");
    Real elmt_EGFR_10UU(unit = "") "EGFR_10UU";
    Real elmt_EGFR_12UL_conc(unit = "");
    Real elmt_EGFR_12UL_amount(unit = "");
    Real elmt_EGFR_12UL(unit = "") "EGFR_12UL";
    Real elmt_EGFR_12CG_conc(unit = "");
    Real elmt_EGFR_12CG_amount(unit = "");
    Real elmt_EGFR_12CG(unit = "") "EGFR_12CG";
    Real elmt_EGFR_11CG_conc(unit = "");
    Real elmt_EGFR_11CG_amount(unit = "");
    Real elmt_EGFR_11CG(unit = "") "EGFR_11CG";
    Real elmt_CG_conc(unit = "");
    Real elmt_CG_amount(unit = "");
    Real elmt_CG(unit = "") "CG";
 annotation(Documentation(info="<annotation>
	<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:bqbiol=\"http://biomodels.net/biology-qualifiers/\">
	
	</rdf:RDF>
	</annotation>"));
    Real elmt_EGFR_12UU_conc(unit = "");
    Real elmt_EGFR_12UU_amount(unit = "");
    Real elmt_EGFR_12UU(unit = "") "EGFR_12UU";
    Real elmt_EGFR_12CC_conc(unit = "");
    Real elmt_EGFR_12CC_amount(unit = "");
    Real elmt_EGFR_12CC(unit = "") "EGFR_12CC";
    Real elmt_EGFR_11UU_conc(unit = "");
    Real elmt_EGFR_11UU_amount(unit = "");
    Real elmt_EGFR_11UU(unit = "") "EGFR_11UU";
    Real elmt_EGFR_11CC_conc(unit = "");
    Real elmt_EGFR_11CC_amount(unit = "");
    Real elmt_EGFR_11CC(unit = "") "EGFR_11CC";
    Real elmt_Ub_conc(unit = "");
    Real elmt_Ub_amount(unit = "");
    Real elmt_Ub(unit = "") "Ub";
    Real elmt_EGFR_02UG_conc(unit = "");
    Real elmt_EGFR_02UG_amount(unit = "");
    Real elmt_EGFR_02UG(unit = "") "EGFR_02UG";
    Real elmt_EGFR_10CU_conc(unit = "");
    Real elmt_EGFR_10CU_amount(unit = "");
    Real elmt_EGFR_10CU(unit = "") "EGFR_10CU";
    Real elmt_EGFR_12CU_conc(unit = "");
    Real elmt_EGFR_12CU_amount(unit = "");
    Real elmt_EGFR_12CU(unit = "") "EGFR_12CU";
    Real elmt_EGFR_01UG_conc(unit = "");
    Real elmt_EGFR_01UG_amount(unit = "");
    Real elmt_EGFR_01UG(unit = "") "EGFR_01UG";
    Real elmt_EGFR_11CU_conc(unit = "");
    Real elmt_EGFR_11CU_amount(unit = "");
    Real elmt_EGFR_11CU(unit = "") "EGFR_11CU";
    Real elmt_Grb2_conc(unit = "");
    Real elmt_Grb2_amount(unit = "");
    Real elmt_Grb2(unit = "") "Grb2";
 annotation(Documentation(info="<annotation>
	<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:bqmodel=\"http://biomodels.net/model-qualifiers/\">
	
	</rdf:RDF>
	</annotation>"));
    Real elmt_EGFR_12LG_conc(unit = "");
    Real elmt_EGFR_12LG_amount(unit = "");
    Real elmt_EGFR_12LG(unit = "") "EGFR_12LG";
    Real elmt_Tyr_conc(unit = "");
    Real elmt_Tyr_amount(unit = "");
    Real elmt_Tyr(unit = "") "Tyr";
    Real elmt_EGFR_01UL_conc(unit = "");
    Real elmt_EGFR_01UL_amount(unit = "");
    Real elmt_EGFR_01UL(unit = "") "EGFR_01UL";
    Real elmt_UbNorm_conc(unit = "");
    Real elmt_UbNorm_amount(unit = "");
    Real elmt_UbNorm(unit = "") "UbNorm";
    Real elmt_EGFR_02UL_conc(unit = "");
    Real elmt_EGFR_02UL_amount(unit = "");
    Real elmt_EGFR_02UL(unit = "") "EGFR_02UL";
    Real elmt_EGFR_11LG_conc(unit = "");
    Real elmt_EGFR_11LG_amount(unit = "");
    Real elmt_EGFR_11LG(unit = "") "EGFR_11LG";

    initial equation
        elmt_cell = 1.0;
        elmt_EGFR_00UU_conc = 0.833;
        elmt_EGFR_01UU_conc = 0.0;
        elmt_EGFR_02UU_conc = 0.0;
        elmt_EGFR_11LU_conc = 0.0;
        elmt_EGFR_10LU_conc = 0.0;
        elmt_EGFR_12LU_conc = 0.0;
        elmt_EGFR_11UL_conc = 0.0;
        elmt_EGFR_12UG_conc = 0.0;
        elmt_EGFR_11UG_conc = 0.0;
        elmt_Cbl_conc = 2.80975332814237E-5;
        elmt_EGFR_10UU_conc = 0.0;
        elmt_EGFR_12UL_conc = 0.0;
        elmt_EGFR_12CG_conc = 0.0;
        elmt_EGFR_11CG_conc = 0.0;
        elmt_CG_conc = 0.0146119024667186;
        elmt_EGFR_12UU_conc = 0.0;
        elmt_EGFR_12CC_conc = 0.0;
        elmt_EGFR_11UU_conc = 0.0;
        elmt_EGFR_11CC_conc = 0.0;
        elmt_EGFR_02UG_conc = 0.0;
        elmt_EGFR_10CU_conc = 0.0;
        elmt_EGFR_12CU_conc = 0.0;
        elmt_EGFR_01UG_conc = 0.0;
        elmt_EGFR_11CU_conc = 0.0;
        elmt_Grb2_conc = 3.30538809753328;
        elmt_EGFR_12LG_conc = 0.0;
        elmt_EGFR_01UL_conc = 0.0;
        elmt_EGFR_02UL_conc = 0.0;
        elmt_EGFR_11LG_conc = 0.0;


    equation
        assert(elmt_cell >= 0, "Compartment size became negative. Make sure this is a valid bahaviour.");
        der(elmt_cell) = 0;
        elmt_TyrNorm = elmt_TyrNorm_conc;
        elmt_EGFR_00UU = elmt_EGFR_00UU_conc;
        elmt_EGFR_01UU = elmt_EGFR_01UU_conc;
        elmt_EGFR_02UU = elmt_EGFR_02UU_conc;
        elmt_EGFR_11LU = elmt_EGFR_11LU_conc;
        elmt_EGFR_10LU = elmt_EGFR_10LU_conc;
        elmt_EGFR_12LU = elmt_EGFR_12LU_conc;
        elmt_EGFR_11UL = elmt_EGFR_11UL_conc;
        elmt_EGFR_12UG = elmt_EGFR_12UG_conc;
        elmt_EGFR_11UG = elmt_EGFR_11UG_conc;
        elmt_Cbl = elmt_Cbl_conc;
        elmt_EGFR_10UU = elmt_EGFR_10UU_conc;
        elmt_EGFR_12UL = elmt_EGFR_12UL_conc;
        elmt_EGFR_12CG = elmt_EGFR_12CG_conc;
        elmt_EGFR_11CG = elmt_EGFR_11CG_conc;
        elmt_CG = elmt_CG_conc;
        elmt_EGFR_12UU = elmt_EGFR_12UU_conc;
        elmt_EGFR_12CC = elmt_EGFR_12CC_conc;
        elmt_EGFR_11UU = elmt_EGFR_11UU_conc;
        elmt_EGFR_11CC = elmt_EGFR_11CC_conc;
        elmt_Ub = elmt_Ub_conc;
        elmt_EGFR_02UG = elmt_EGFR_02UG_conc;
        elmt_EGFR_10CU = elmt_EGFR_10CU_conc;
        elmt_EGFR_12CU = elmt_EGFR_12CU_conc;
        elmt_EGFR_01UG = elmt_EGFR_01UG_conc;
        elmt_EGFR_11CU = elmt_EGFR_11CU_conc;
        elmt_Grb2 = elmt_Grb2_conc;
        elmt_EGFR_12LG = elmt_EGFR_12LG_conc;
        elmt_Tyr = elmt_Tyr_conc;
        elmt_EGFR_01UL = elmt_EGFR_01UL_conc;
        elmt_UbNorm = elmt_UbNorm_conc;
        elmt_EGFR_02UL = elmt_EGFR_02UL_conc;
        elmt_EGFR_11LG = elmt_EGFR_11LG_conc;
        elmt_TyrNorm_amount = (elmt_Tyr / elmt_PYMax) * elmt_cell;
        elmt_Ub_amount = (elmt_EGFR_11CC + elmt_EGFR_12CC + elmt_EGFR_10CU + elmt_EGFR_11CU + elmt_EGFR_12CU + elmt_EGFR_10LU + elmt_EGFR_11LU + elmt_EGFR_12LU + elmt_EGFR_11CG + elmt_EGFR_12CG + elmt_EGFR_11LG + elmt_EGFR_12LG) * elmt_cell;
        elmt_Tyr_amount = (elmt_EGFR_10UU + elmt_EGFR_10CU + elmt_EGFR_10LU + (1.0 * (elmt_EGFR_01UU + elmt_EGFR_01UG + elmt_EGFR_01UL)) + (2.0 * (elmt_EGFR_11UU + elmt_EGFR_11CU + elmt_EGFR_11LU + elmt_EGFR_11UG + elmt_EGFR_11UL + elmt_EGFR_11CG + elmt_EGFR_11CC + elmt_EGFR_11LG)) + (2.0 * (elmt_EGFR_02UU + elmt_EGFR_02UG + elmt_EGFR_02UL)) + (3.0 * (elmt_EGFR_12UU + elmt_EGFR_12CU + elmt_EGFR_12LU + elmt_EGFR_12UG + elmt_EGFR_12UL + elmt_EGFR_12CG + elmt_EGFR_12CC + elmt_EGFR_12LG))) * elmt_cell;
        elmt_UbNorm_amount = (elmt_Ub / (elmt_UbMax * elmt_CblFactor)) * elmt_cell;
        der(elmt_EGFR_00UU_amount) = ((elmt_r1 * elmt_product1) + (elmt_r2 * elmt_product3) + (- (elmt_r24 * elmt_reactant46)) + (- (elmt_r23 * elmt_reactant44)));
        der(elmt_EGFR_01UU_amount) = ((elmt_r3 * elmt_product5) + (- (elmt_r2 * elmt_reactant2)) + (elmt_r9 * elmt_product17) + (- (elmt_r28 * elmt_reactant54)) + (elmt_r24 * elmt_product47) + (- (elmt_r29 * elmt_reactant56)) + (- (elmt_r53 * elmt_reactant113)) + (elmt_r56 * elmt_product123) + (- (elmt_r55 * elmt_reactant119)) + (elmt_r54 * elmt_product117));
        der(elmt_EGFR_02UU_amount) = ((- (elmt_r9 * elmt_reactant16)) + (- (elmt_r89 * elmt_reactant215)) + (elmt_r88 * elmt_product213) + (- (elmt_r87 * elmt_reactant209)) + (elmt_r90 * elmt_product219) + (elmt_r12 * elmt_product23) + (elmt_r29 * elmt_product57) + (- (elmt_r42 * elmt_reactant82)));
        der(elmt_EGFR_11LU_amount) = ((- (elmt_r6 * elmt_reactant10)) + (- (elmt_r68 * elmt_reactant157)) + (elmt_r67 * elmt_product156) + (elmt_r74 * elmt_product175) + (- (elmt_r73 * elmt_reactant172)) + (elmt_r72 * elmt_product171) + (- (elmt_r71 * elmt_reactant167)) + (elmt_r15 * elmt_product29) + (elmt_r27 * elmt_product53) + (- (elmt_r36 * elmt_reactant70)) + (- (elmt_r62 * elmt_reactant139)) + (elmt_r61 * elmt_product138));
        der(elmt_EGFR_10LU_amount) = ((elmt_r6 * elmt_product11) + (- (elmt_r27 * elmt_reactant52)) + (elmt_r49 * elmt_product102) + (- (elmt_r52 * elmt_reactant109)) + (elmt_r51 * elmt_product108) + (- (elmt_r50 * elmt_reactant103)));
        der(elmt_EGFR_12LU_amount) = ((- (elmt_r107 * elmt_reactant268)) + (elmt_r106 * elmt_product267) + (- (elmt_r105 * elmt_reactant263)) + (- (elmt_r102 * elmt_reactant253)) + (elmt_r101 * elmt_product252) + (elmt_r108 * elmt_product271) + (- (elmt_r96 * elmt_reactant235)) + (elmt_r95 * elmt_product234) + (- (elmt_r15 * elmt_reactant28)) + (elmt_r36 * elmt_product71));
        der(elmt_EGFR_11UL_amount) = ((- (elmt_r8 * elmt_reactant14)) + (- (elmt_r66 * elmt_reactant151)) + (elmt_r65 * elmt_product150) + (elmt_r79 * elmt_product190) + (elmt_r82 * elmt_product197) + (- (elmt_r81 * elmt_reactant194)) + (- (elmt_r80 * elmt_reactant191)) + (elmt_r19 * elmt_product37) + (- (elmt_r38 * elmt_reactant74)) + (elmt_r32 * elmt_product63));
        der(elmt_EGFR_12UG_amount) = ((elmt_r110 * elmt_product277) + (elmt_r114 * elmt_product289) + (- (elmt_r113 * elmt_reactant285)) + (elmt_r112 * elmt_product283) + (- (elmt_r111 * elmt_reactant279)) + (- (elmt_r109 * elmt_reactant273)) + (elmt_r97 * elmt_product240) + (- (elmt_r17 * elmt_reactant32)) + (- (elmt_r16 * elmt_reactant30)) + (- (elmt_r98 * elmt_reactant241)) + (elmt_r37 * elmt_product73) + (elmt_r43 * elmt_product85));
        der(elmt_EGFR_11UG_amount) = ((- (elmt_r7 * elmt_reactant12)) + (- (elmt_r75 * elmt_reactant177)) + (- (elmt_r79 * elmt_reactant189)) + (elmt_r78 * elmt_product187) + (- (elmt_r77 * elmt_reactant183)) + (elmt_r76 * elmt_product181) + (elmt_r80 * elmt_product193) + (elmt_r17 * elmt_product33) + (elmt_r30 * elmt_product59) + (- (elmt_r37 * elmt_reactant72)) + (- (elmt_r64 * elmt_reactant145)) + (elmt_r63 * elmt_product144));
        der(elmt_Cbl_amount) = ((elmt_r110 * elmt_product276) + (elmt_r114 * elmt_product288) + (- (elmt_r113 * elmt_reactant284)) + (- (elmt_r75 * elmt_reactant176)) + (- (elmt_r79 * elmt_reactant188)) + (elmt_r76 * elmt_product180) + (elmt_r80 * elmt_product192) + (- (elmt_r109 * elmt_reactant272)) + (elmt_r94 * elmt_product230) + (- (elmt_r93 * elmt_reactant226)) + (elmt_r92 * elmt_product224) + (- (elmt_r91 * elmt_reactant220)) + (elmt_r48 * elmt_product98) + (- (elmt_r47 * elmt_reactant94)) + (elmt_r46 * elmt_product92) + (- (elmt_r45 * elmt_reactant88)) + (- (elmt_r59 * elmt_reactant130)) + (elmt_r58 * elmt_product128) + (- (elmt_r57 * elmt_reactant124)) + (elmt_r60 * elmt_product134));
        der(elmt_EGFR_10UU_amount) = ((elmt_r4 * elmt_product7) + (- (elmt_r1 * elmt_reactant0)) + (- (elmt_r25 * elmt_reactant48)) + (elmt_r23 * elmt_product45) + (- (elmt_r49 * elmt_reactant101)) + (elmt_r48 * elmt_product99) + (- (elmt_r47 * elmt_reactant95)) + (elmt_r50 * elmt_product105));
        der(elmt_EGFR_12UL_amount) = ((elmt_r116 * elmt_product293) + (- (elmt_r115 * elmt_reactant290)) + (- (elmt_r114 * elmt_reactant287)) + (elmt_r113 * elmt_product286) + (- (elmt_r100 * elmt_reactant247)) + (elmt_r99 * elmt_product246) + (- (elmt_r19 * elmt_reactant36)) + (- (elmt_r18 * elmt_reactant34)) + (elmt_r38 * elmt_product75) + (elmt_r44 * elmt_product87));
        der(elmt_EGFR_12CG_amount) = ((- (elmt_r110 * elmt_reactant275)) + (elmt_r118 * elmt_product297) + (- (elmt_r117 * elmt_reactant294)) + (- (elmt_r119 * elmt_reactant299)) + (- (elmt_r104 * elmt_reactant259)) + (elmt_r103 * elmt_product258) + (elmt_r109 * elmt_product274) + (- (elmt_r20 * elmt_reactant38)) + (elmt_r39 * elmt_product77) + (elmt_r120 * elmt_product303));
        der(elmt_EGFR_11CG_amount) = ((elmt_r69 * elmt_product162) + (elmt_r75 * elmt_product178) + (- (elmt_r70 * elmt_reactant163)) + (- (elmt_r76 * elmt_reactant179)) + (elmt_r86 * elmt_product207) + (- (elmt_r85 * elmt_reactant203)) + (elmt_r84 * elmt_product201) + (- (elmt_r83 * elmt_reactant198)) + (elmt_r20 * elmt_product39) + (- (elmt_r39 * elmt_reactant76)));
        der(elmt_CG_amount) = ((elmt_r66 * elmt_product152) + (- (elmt_r65 * elmt_reactant148)) + (elmt_r112 * elmt_product282) + (- (elmt_r111 * elmt_reactant278)) + (elmt_r78 * elmt_product186) + (- (elmt_r77 * elmt_reactant182)) + (elmt_r100 * elmt_product248) + (- (elmt_r89 * elmt_reactant214)) + (elmt_r96 * elmt_product236) + (- (elmt_r95 * elmt_reactant232)) + (elmt_r90 * elmt_product218) + (- (elmt_r99 * elmt_reactant244)) + (- (elmt_r49 * elmt_reactant100)) + (- (elmt_r46 * elmt_reactant91)) + (elmt_r45 * elmt_product90) + (elmt_r50 * elmt_product104) + (elmt_r56 * elmt_product122) + (- (elmt_r55 * elmt_reactant118)) + (elmt_r62 * elmt_product140) + (- (elmt_r61 * elmt_reactant136)));
        der(elmt_EGFR_12UU_amount) = ((elmt_r100 * elmt_product249) + (- (elmt_r97 * elmt_reactant239)) + (elmt_r96 * elmt_product237) + (- (elmt_r95 * elmt_reactant233)) + (elmt_r94 * elmt_product231) + (- (elmt_r93 * elmt_reactant227)) + (- (elmt_r13 * elmt_reactant24)) + (- (elmt_r12 * elmt_reactant22)) + (- (elmt_r99 * elmt_reactant245)) + (elmt_r98 * elmt_product243) + (elmt_r34 * elmt_product67) + (elmt_r42 * elmt_product83));
        der(elmt_EGFR_12CC_amount) = ((- (elmt_r118 * elmt_reactant296)) + (elmt_r117 * elmt_product295) + (- (elmt_r116 * elmt_reactant292)) + (elmt_r115 * elmt_product291) + (elmt_r107 * elmt_product269) + (- (elmt_r108 * elmt_reactant270)) + (- (elmt_r21 * elmt_reactant40)) + (elmt_r40 * elmt_product79));
        der(elmt_EGFR_11UU_amount) = ((- (elmt_r3 * elmt_reactant4)) + (- (elmt_r4 * elmt_reactant6)) + (elmt_r66 * elmt_product153) + (- (elmt_r65 * elmt_reactant149)) + (elmt_r13 * elmt_product25) + (elmt_r28 * elmt_product55) + (elmt_r25 * elmt_product49) + (- (elmt_r34 * elmt_reactant66)) + (- (elmt_r59 * elmt_reactant131)) + (elmt_r64 * elmt_product147) + (- (elmt_r63 * elmt_reactant143)) + (elmt_r62 * elmt_product141) + (- (elmt_r61 * elmt_reactant137)) + (elmt_r60 * elmt_product135));
        der(elmt_EGFR_11CC_amount) = ((- (elmt_r74 * elmt_reactant174)) + (elmt_r73 * elmt_product173) + (- (elmt_r84 * elmt_reactant200)) + (elmt_r83 * elmt_product199) + (- (elmt_r82 * elmt_reactant196)) + (elmt_r81 * elmt_product195) + (elmt_r21 * elmt_product41) + (- (elmt_r40 * elmt_reactant78)));
        der(elmt_EGFR_02UG_amount) = ((- (elmt_r88 * elmt_reactant211)) + (elmt_r87 * elmt_product210) + (elmt_r92 * elmt_product225) + (- (elmt_r91 * elmt_reactant221)) + (elmt_r16 * elmt_product31) + (- (elmt_r10 * elmt_reactant18)) + (elmt_r31 * elmt_product61) + (- (elmt_r43 * elmt_reactant84)));
        der(elmt_EGFR_10CU_amount) = ((elmt_r5 * elmt_product9) + (- (elmt_r26 * elmt_reactant50)) + (- (elmt_r48 * elmt_reactant97)) + (elmt_r47 * elmt_product96) + (elmt_r52 * elmt_product111) + (- (elmt_r51 * elmt_reactant107)));
        der(elmt_EGFR_12CU_amount) = ((elmt_r104 * elmt_product261) + (- (elmt_r103 * elmt_reactant257)) + (elmt_r102 * elmt_product255) + (- (elmt_r101 * elmt_reactant251)) + (- (elmt_r94 * elmt_reactant229)) + (elmt_r93 * elmt_product228) + (- (elmt_r14 * elmt_reactant26)) + (elmt_r35 * elmt_product69));
        der(elmt_EGFR_01UG_amount) = ((elmt_r7 * elmt_product13) + (elmt_r10 * elmt_product19) + (- (elmt_r31 * elmt_reactant60)) + (- (elmt_r30 * elmt_reactant58)) + (elmt_r53 * elmt_product114) + (elmt_r58 * elmt_product129) + (- (elmt_r57 * elmt_reactant125)) + (- (elmt_r54 * elmt_reactant115)));
        der(elmt_EGFR_11CU_amount) = ((- (elmt_r5 * elmt_reactant8)) + (- (elmt_r69 * elmt_reactant161)) + (elmt_r68 * elmt_product159) + (- (elmt_r67 * elmt_reactant155)) + (elmt_r70 * elmt_product165) + (elmt_r14 * elmt_product27) + (elmt_r26 * elmt_product51) + (- (elmt_r35 * elmt_reactant68)) + (elmt_r59 * elmt_product132) + (- (elmt_r60 * elmt_reactant133)));
        der(elmt_Grb2_amount) = ((- (elmt_r69 * elmt_reactant160)) + (elmt_r68 * elmt_product158) + (- (elmt_r67 * elmt_reactant154)) + (elmt_r72 * elmt_product170) + (- (elmt_r71 * elmt_reactant166)) + (elmt_r70 * elmt_product164) + (- (elmt_r119 * elmt_reactant298)) + (elmt_r106 * elmt_product266) + (- (elmt_r105 * elmt_reactant262)) + (elmt_r104 * elmt_product260) + (- (elmt_r103 * elmt_reactant256)) + (elmt_r102 * elmt_product254) + (- (elmt_r101 * elmt_reactant250)) + (elmt_r86 * elmt_product206) + (- (elmt_r85 * elmt_reactant202)) + (elmt_r88 * elmt_product212) + (- (elmt_r87 * elmt_reactant208)) + (- (elmt_r97 * elmt_reactant238)) + (elmt_r98 * elmt_product242) + (elmt_r46 * elmt_product93) + (- (elmt_r45 * elmt_reactant89)) + (- (elmt_r53 * elmt_reactant112)) + (elmt_r52 * elmt_product110) + (- (elmt_r51 * elmt_reactant106)) + (elmt_r54 * elmt_product116) + (elmt_r120 * elmt_product302) + (elmt_r64 * elmt_product146) + (- (elmt_r63 * elmt_reactant142)));
        der(elmt_EGFR_12LG_amount) = ((- (elmt_r112 * elmt_reactant281)) + (elmt_r111 * elmt_product280) + (elmt_r119 * elmt_product300) + (- (elmt_r106 * elmt_reactant265)) + (elmt_r105 * elmt_product264) + (- (elmt_r22 * elmt_reactant42)) + (elmt_r41 * elmt_product81) + (- (elmt_r120 * elmt_reactant301)));
        der(elmt_EGFR_01UL_amount) = ((elmt_r8 * elmt_product15) + (elmt_r11 * elmt_product21) + (- (elmt_r33 * elmt_reactant64)) + (- (elmt_r32 * elmt_reactant62)) + (- (elmt_r58 * elmt_reactant127)) + (elmt_r57 * elmt_product126) + (- (elmt_r56 * elmt_reactant121)) + (elmt_r55 * elmt_product120));
        der(elmt_EGFR_02UL_amount) = ((elmt_r89 * elmt_product216) + (- (elmt_r92 * elmt_reactant223)) + (elmt_r91 * elmt_product222) + (- (elmt_r90 * elmt_reactant217)) + (- (elmt_r11 * elmt_reactant20)) + (elmt_r18 * elmt_product35) + (elmt_r33 * elmt_product65) + (- (elmt_r44 * elmt_reactant86)));
        der(elmt_EGFR_11LG_amount) = ((- (elmt_r72 * elmt_reactant169)) + (elmt_r71 * elmt_product168) + (- (elmt_r78 * elmt_reactant185)) + (elmt_r77 * elmt_product184) + (- (elmt_r86 * elmt_reactant205)) + (elmt_r85 * elmt_product204) + (elmt_r22 * elmt_product43) + (- (elmt_r41 * elmt_reactant80)));

    algorithm
        elmt_TyrNorm_conc := elmt_TyrNorm_amount / elmt_cell;
        elmt_EGFR_00UU_conc := elmt_EGFR_00UU_amount / elmt_cell;
        elmt_EGFR_01UU_conc := elmt_EGFR_01UU_amount / elmt_cell;
        elmt_EGFR_02UU_conc := elmt_EGFR_02UU_amount / elmt_cell;
        elmt_EGFR_11LU_conc := elmt_EGFR_11LU_amount / elmt_cell;
        elmt_EGFR_10LU_conc := elmt_EGFR_10LU_amount / elmt_cell;
        elmt_EGFR_12LU_conc := elmt_EGFR_12LU_amount / elmt_cell;
        elmt_EGFR_11UL_conc := elmt_EGFR_11UL_amount / elmt_cell;
        elmt_EGFR_12UG_conc := elmt_EGFR_12UG_amount / elmt_cell;
        elmt_EGFR_11UG_conc := elmt_EGFR_11UG_amount / elmt_cell;
        elmt_Cbl_conc := elmt_Cbl_amount / elmt_cell;
        elmt_EGFR_10UU_conc := elmt_EGFR_10UU_amount / elmt_cell;
        elmt_EGFR_12UL_conc := elmt_EGFR_12UL_amount / elmt_cell;
        elmt_EGFR_12CG_conc := elmt_EGFR_12CG_amount / elmt_cell;
        elmt_EGFR_11CG_conc := elmt_EGFR_11CG_amount / elmt_cell;
        elmt_CG_conc := elmt_CG_amount / elmt_cell;
        elmt_EGFR_12UU_conc := elmt_EGFR_12UU_amount / elmt_cell;
        elmt_EGFR_12CC_conc := elmt_EGFR_12CC_amount / elmt_cell;
        elmt_EGFR_11UU_conc := elmt_EGFR_11UU_amount / elmt_cell;
        elmt_EGFR_11CC_conc := elmt_EGFR_11CC_amount / elmt_cell;
        elmt_Ub_conc := elmt_Ub_amount / elmt_cell;
        elmt_EGFR_02UG_conc := elmt_EGFR_02UG_amount / elmt_cell;
        elmt_EGFR_10CU_conc := elmt_EGFR_10CU_amount / elmt_cell;
        elmt_EGFR_12CU_conc := elmt_EGFR_12CU_amount / elmt_cell;
        elmt_EGFR_01UG_conc := elmt_EGFR_01UG_amount / elmt_cell;
        elmt_EGFR_11CU_conc := elmt_EGFR_11CU_amount / elmt_cell;
        elmt_Grb2_conc := elmt_Grb2_amount / elmt_cell;
        elmt_EGFR_12LG_conc := elmt_EGFR_12LG_amount / elmt_cell;
        elmt_Tyr_conc := elmt_Tyr_amount / elmt_cell;
        elmt_EGFR_01UL_conc := elmt_EGFR_01UL_amount / elmt_cell;
        elmt_UbNorm_conc := elmt_UbNorm_amount / elmt_cell;
        elmt_EGFR_02UL_conc := elmt_EGFR_02UL_amount / elmt_cell;
        elmt_EGFR_11LG_conc := elmt_EGFR_11LG_amount / elmt_cell;
end Class_elmt_cell;
