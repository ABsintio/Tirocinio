----- PARSING FILE: Class.elmt_cell.mo -----


assert(elmt_cell > =  0, "Compartment size became negative. Make sure this is a valid bahaviour.")
der(elmt_cell) =  0
elmt_M =  elmt_M_conc
elmt_CT =  elmt_CT_conc
elmt_C2 =  elmt_C2_conc
elmt_Y =  elmt_Y_conc
elmt_EmptySet =  elmt_EmptySet_conc
elmt_CP =  elmt_CP_conc
elmt_pM =  elmt_pM_conc
elmt_YT =  elmt_YT_conc
elmt_YP =  elmt_YP_conc
elmt_CT_amount =  (elmt_C2 + elmt_CP + elmt_M + elmt_pM) * elmt_cell
der(elmt_EmptySet_amount) =  0
elmt_YT_amount =  (elmt_Y + elmt_YP + elmt_M + elmt_pM) * elmt_cell
der(elmt_M_amount) =  ((elmt_Reaction9 * elmt_product19) + (- (elmt_Reaction5 * elmt_reactant10)) + (- (elmt_Reaction1 * elmt_reactant0)))
der(elmt_C2_amount) =  ((elmt_Reaction3 * elmt_product6) + (- (elmt_Reaction2 * elmt_reactant3)) + (elmt_Reaction1 * elmt_product1))
der(elmt_Y_amount) =  ((- (elmt_Reaction7 * elmt_reactant14)) + (elmt_Reaction6 * elmt_product13) + (- (elmt_Reaction4 * elmt_reactant8)))
der(elmt_CP_amount) =  ((- (elmt_Reaction4 * elmt_reactant7)) + (- (elmt_Reaction3 * elmt_reactant5)) + (elmt_Reaction2 * elmt_product4))
der(elmt_pM_amount) =  ((- (elmt_Reaction9 * elmt_reactant18)) + (elmt_Reaction5 * elmt_product11) + (elmt_Reaction4 * elmt_product9))
der(elmt_YP_amount) =  ((- (elmt_Reaction8 * elmt_reactant16)) + (elmt_Reaction1 * elmt_product2))

----- BUILDING ODE SYSTEM -----


Init ODE(
	F[0] =  0, "Compartment size became negative. Make sure this is a valid bahaviour.")
	F[1] =  0
	F[2] =  elmt_M_conc
	F[3] =  elmt_CT_conc
	F[4] =  elmt_C2_conc
	F[5] =  elmt_Y_conc
	F[6] =  elmt_EmptySet_conc
	F[7] =  elmt_CP_conc
	F[8] =  elmt_pM_conc
	F[9] =  elmt_YT_conc
	F[10] =  elmt_YP_conc
	F[11] =  (elmt_C2 + elmt_CP + elmt_M + elmt_pM) * elmt_cell
	F[12] =  0
	F[13] =  (elmt_Y + elmt_YP + elmt_M + elmt_pM) * elmt_cell
	F[14] =  ((elmt_Reaction9 * elmt_product19) + (- (elmt_Reaction5 * elmt_reactant10)) + (- (elmt_Reaction1 * elmt_reactant0)))
	F[15] =  ((elmt_Reaction3 * elmt_product6) + (- (elmt_Reaction2 * elmt_reactant3)) + (elmt_Reaction1 * elmt_product1))
	F[16] =  ((- (elmt_Reaction7 * elmt_reactant14)) + (elmt_Reaction6 * elmt_product13) + (- (elmt_Reaction4 * elmt_reactant8)))
	F[17] =  ((- (elmt_Reaction4 * elmt_reactant7)) + (- (elmt_Reaction3 * elmt_reactant5)) + (elmt_Reaction2 * elmt_product4))
	F[18] =  ((- (elmt_Reaction9 * elmt_reactant18)) + (elmt_Reaction5 * elmt_product11) + (elmt_Reaction4 * elmt_product9))
	F[19] =  ((- (elmt_Reaction8 * elmt_reactant16)) + (elmt_Reaction1 * elmt_product2))
)


                                                     
template<class Precision> __forceinline__ __device__ void PerThread_OdeFunction(    
    int tid, int NT, \                                                              
    Precision*    F, Precision*    X, Precision     T, \                            
    Precision* cPAR, Precision* sPAR, int*      sPARi, Precision* ACC, int*A ACCi   
) {                                                                                 
	F[0] =  0, "Compartment size became negative. Make sure this is a valid bahaviour.")
	F[1] =  0
	F[2] =  elmt_M_conc
	F[3] =  elmt_CT_conc
	F[4] =  elmt_C2_conc
	F[5] =  elmt_Y_conc
	F[6] =  elmt_EmptySet_conc
	F[7] =  elmt_CP_conc
	F[8] =  elmt_pM_conc
	F[9] =  elmt_YT_conc
	F[10] =  elmt_YP_conc
	F[11] =  (elmt_C2 + elmt_CP + elmt_M + elmt_pM) * elmt_cell
	F[12] =  0
	F[13] =  (elmt_Y + elmt_YP + elmt_M + elmt_pM) * elmt_cell
	F[14] =  ((elmt_Reaction9 * elmt_product19) + (- (elmt_Reaction5 * elmt_reactant10)) + (- (elmt_Reaction1 * elmt_reactant0)))
	F[15] =  ((elmt_Reaction3 * elmt_product6) + (- (elmt_Reaction2 * elmt_reactant3)) + (elmt_Reaction1 * elmt_product1))
	F[16] =  ((- (elmt_Reaction7 * elmt_reactant14)) + (elmt_Reaction6 * elmt_product13) + (- (elmt_Reaction4 * elmt_reactant8)))
	F[17] =  ((- (elmt_Reaction4 * elmt_reactant7)) + (- (elmt_Reaction3 * elmt_reactant5)) + (elmt_Reaction2 * elmt_product4))
	F[18] =  ((- (elmt_Reaction9 * elmt_reactant18)) + (elmt_Reaction5 * elmt_product11) + (elmt_Reaction4 * elmt_product9))
	F[19] =  ((- (elmt_Reaction8 * elmt_reactant16)) + (elmt_Reaction1 * elmt_product2))
                                                                                  
}                                                                                   


----- PARSING FILE: Reactions.mo -----


elmt_Reaction9 =  (elmt_cell * elmt_pM * (elmt_Reaction9_elmt_k4prime + (elmt_Reaction9_elmt_k4 * Functions.pow((elmt_M / elmt_CT), 2.0))))
elmt_Reaction8 =  (elmt_cell * elmt_Reaction8_elmt_k7 * elmt_YP)
elmt_Reaction7 =  (elmt_cell * elmt_Reaction7_elmt_k2 * elmt_Y)
elmt_Reaction6 =  (elmt_cell * elmt_Reaction6_elmt_k1aa)
elmt_Reaction5 =  (elmt_cell * elmt_Reaction5_elmt_k5notP * elmt_M)
elmt_Reaction4 =  (elmt_cell * elmt_CP * elmt_Reaction4_elmt_k3 * elmt_Y)
elmt_Reaction3 =  (elmt_cell * elmt_CP * elmt_Reaction3_elmt_k9)
elmt_Reaction2 =  (elmt_cell * elmt_C2 * elmt_Reaction2_elmt_k8notP)
elmt_Reaction1 =  (elmt_cell * elmt_Reaction1_elmt_k6 * elmt_M)
der(elmt_product9) =  0
der(elmt_product6) =  0
der(elmt_reactant3) =  0
der(elmt_product11) =  0
der(elmt_reactant5) =  0
der(elmt_reactant8) =  0
der(elmt_reactant7) =  0
der(elmt_reactant14) =  0
der(elmt_product1) =  0
der(elmt_reactant16) =  0
der(elmt_reactant10) =  0
der(elmt_product4) =  0
der(elmt_reactant12) =  0
der(elmt_reactant0) =  0
der(elmt_product2) =  0
der(elmt_reactant18) =  0
der(elmt_product15) =  0
der(elmt_product13) =  0
der(elmt_product19) =  0
der(elmt_product17) =  0
