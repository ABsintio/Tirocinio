"Semplificazioni":
- Supponiamo di avere solo equazioni del tipo der(x) = <expression>
- Supponiamo di non avere blocchi multiline di If...Then...Else, ma solo del tipo 
  f(x) = If <condition> then <statement1> else <statement2>
- Supponiamo di avere blocchi When semplici iniziando dal piÃ¹ semplice 
  when sample(...) then
    ...
  end when;
- No array, solo variabili Real, Boolean, Integer
- No Loop.
- User-defined function solo con un singolo output e algoritmo con solo assegnamenti


MAPPING VariableCategory |-> MPGOS type
        
        state -------------> X
        derivative --------> F (deve avere lo stesso id di X se hanno lo stesso QualifiedNamePart)
        algebraic ---------> ACC  (Real), ACCi  (Integer)
        ind.Param/Const ---> sPAR (Real), sPARi (Integer)


SINTASSI QUALIFIEDNAME TAG

<exp:QualifiedName>
  <exp:QualifiedNamePart name="..." />
  ...
  [ # Opzionale
    <exp:QualifiedNamePart name="..." >
      <exp:ArraySubscripts>
        <exp:IndexExpression>
          <##targetnamespace:targetnametag> ... </##targetnamespace:targetnametag>
        </exp:IndexExpression>
      </exp:ArraySubscripts>
    </exp:QualifiedNamePart>
  ]
</exp:QualifiedName>


SINTASSI DYNAMICEQUATIONS TAG

<equ:DynamicEquations>
  <equ:Equation>
    [<exp:Der>] # Opzionale
      <exp:Identifier><exp:QualifiedNamePart ... > ... </exp:QualifiedNamePart>
    [</exp:Der>]
    <exp:targetnametag> ... </exp:targetnametag>
  </equ:Equation>
</equ:DynamicEquations>


SINTASSI FUNCTION CALL

<exp:FunctionCall>
  <exp:Name>
    <exp:QualifiedNamePart name="..." />
    ...
    <exp:QualifiedNamePart name="..." />
  </exp:Name>
  <exp:Arguments>
    (<##targetname:targetnametag>...</##targetname:targetnametag>) 1 to n
  </exp:Arguments>
</exp:FunctionCall>


SINTASSI SCALARVARIABLE TAG

<ScalarVariable>
  {<Real ... /> | <Integer ... /> | <Boolean ... />} # Sceglie uno dei tre
  <exp:QualifiedName> ... </exp:QualifiedName>
  <VariableCategory> {derivative | algbraic | state | independentParameter | independentConstant} </VariableCategory>
</ScalarVariable>


SINTASSI INITIALEQUATIONS TAG

<equ:InitialEquations>
  <equ:Equation> ... </equ:Equation>
</equ:InitialEquations>


SINTASSI ALGORITHM TAG

<fun:Algorithm>
  (<##targetnamespace:targetnametag> ... </##targetnamespace:targetnametag>) 1 to n
</fun:Algorithm>


SINTASSI FUNCTION TAG

<fun:Function>
  <fun:Name>
    <exp:QualifiedNamePart name="..." />
    ...
    <exp:QualifiedNamePart name="..." />
  </fun:Name>
  <fun:OutputVariable>
    <fun:Name> ... </fun:Name>
  </fun:OutputVariable>
  (<fun:InputVariable>
    <fun:Name> ... </fun:Name>
  </fun:InputVariable>) 1 to m
  <fun:Algorithm>
    (<fun:Assign>
      <exp:Identifier> ... </exp:Identifier>
      <fun:Expression>
        <##targetnamespace:targetnametag> ... </##targetnamespace:targetnametag>
      </fun:Expression>
    </fun:Assign>) 1 to n
  </fun:Algorithm>
</fun:Function>


SINTASSI WHEN TAG

<equ:When>
  <equ:Condition>
    (<exp:Identifer> ... </exp:Identifier>) 1 to n
  </equ:Condition>
  <equ:Equation> ... </equ:Equation>
</equ:When>