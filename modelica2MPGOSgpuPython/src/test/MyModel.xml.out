VARIABLE
$cse1(qN=$cse1, alias=noAlias, iValue=None, id=0, MPGOSname=ACC[0])
myclass.z(qN=myclass.z, alias=noAlias, iValue=None, id=1, MPGOSname=ACC[1])
Params.a(qN=Params.a, alias=noAlias, iValue=None, id=0, MPGOSname=X[0])
Params.b(qN=Params.b, alias=noAlias, iValue=None, id=1, MPGOSname=X[1])
myclass.x(qN=myclass.x, alias=noAlias, iValue=None, id=2, MPGOSname=X[2])
myclass.y(qN=myclass.y, alias=noAlias, iValue=None, id=3, MPGOSname=X[3])
der(Params.a)(qN=Params.a, alias=noAlias, iValue=None, id=0, MPGOSname=F[0])
der(Params.b)(qN=Params.b, alias=noAlias, iValue=None, id=1, MPGOSname=F[1])
der(myclass.x)(qN=myclass.x, alias=noAlias, iValue=None, id=2, MPGOSname=F[2])
der(myclass.y)(qN=myclass.y, alias=noAlias, iValue=None, id=3, MPGOSname=F[3])

INITIAL EQUATIONS
X[3]=2.0
X[2]=1.0
X[1]=0.785
X[0]=0.0246
F[2]=(pow(2.68,X[2]) * (X[0] * X[3]))

FUNCTIONS
Functions.pow(output=('y', 'Real'), inputs=[('x', 'Real'), ('power', 'Real')]) do
	y:=pow(x,power)
done

EQUATIONS
ACC[0]=pow(2.68,X[2])
F[0]=0.0
F[1]=0.0
F[2]=(ACC[0] * (X[0] * X[3]))
F[3]=(X[1] * X[2])

EVENTS


ALGORITHMS
ACC[1]:=$START.myclass.z
ACC[1]:=(X[2] / X[3])
