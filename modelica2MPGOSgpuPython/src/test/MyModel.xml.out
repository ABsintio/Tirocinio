VARIABLE
RealScalarVariable(name=Params.a, variability=continuous, alias=noAlias, categoryType=state, qualifiedName=Params.a, description=None, start=0.0246, fixed=True)
RealScalarVariable(name=Params.b, variability=continuous, alias=noAlias, categoryType=state, qualifiedName=Params.b, description=None, start=0.785, fixed=True)
RealScalarVariable(name=myclass.x, variability=continuous, alias=noAlias, categoryType=state, qualifiedName=myclass.x, description=None, start=1.0, fixed=True)
RealScalarVariable(name=myclass.y, variability=continuous, alias=noAlias, categoryType=state, qualifiedName=myclass.y, description=None, start=2.0, fixed=True)
RealScalarVariable(name=der(Params.a), variability=continuous, alias=noAlias, categoryType=derivative, qualifiedName=Params.a, description=None, start=None, fixed=None)
RealScalarVariable(name=der(Params.b), variability=continuous, alias=noAlias, categoryType=derivative, qualifiedName=Params.b, description=None, start=None, fixed=None)
RealScalarVariable(name=der(myclass.x), variability=continuous, alias=noAlias, categoryType=derivative, qualifiedName=myclass.x, description=None, start=(pow(2.68,myclass.x) * (Params.a * myclass.y)), fixed=True)
RealScalarVariable(name=der(myclass.y), variability=continuous, alias=noAlias, categoryType=derivative, qualifiedName=myclass.y, description=None, start=None, fixed=None)
RealScalarVariable(name=$cse1, variability=continuous, alias=noAlias, categoryType=algebraic, qualifiedName=$cse1, description=None, start=None, fixed=None)
RealScalarVariable(name=myclass.z, variability=continuous, alias=noAlias, categoryType=algebraic, qualifiedName=myclass.z, description=None, start=None, fixed=None)
RealScalarVariable(name=myclass.a, variability=continuous, alias=Params.a, categoryType=algebraic, qualifiedName=myclass.a, description=None, start=None, fixed=None)
RealScalarVariable(name=myclass.b, variability=continuous, alias=Params.b, categoryType=algebraic, qualifiedName=myclass.b, description=None, start=None, fixed=None)

INITIAL EQUATIONS
myclass.y=2.0
myclass.x=1.0
Params.b=0.785
Params.a=0.0246
der(myclass.x)=(pow(2.68,myclass.x) * (Params.a * myclass.y))

FUNCTIONS
Functions.pow(output=('y', 'Real'), inputs=[('x', 'Real'), ('power', 'Real')]) do
	y:=pow(x,power)
done

EQUATIONS
$cse1=pow(2.68,myclass.x)
der(Params.a)=0.0
der(Params.b)=0.0
der(myclass.x)=($cse1 * (Params.a * myclass.y))
der(myclass.y)=(Params.b * myclass.x)

EVENTS


ALGORITHMS
myclass.z:=$START.myclass.z
myclass.z:=(myclass.x / myclass.y)
