template<class Precision> __forceinline__ __device__ void PerThread_OdeFunction(
	int tid, int NT, \
	Precision*    F, Precision*    X, Precision     T, \
	Precision* cPAR, Precision* sPAR, int*      sPARi, Precision* ACC, int* ACCi
) {
	F[0] = ((- (elmt_rPn2 * elmt_reactant14)) + (elmt_rP2n * elmt_product13));
	F[1] = ((elmt_rM * elmt_product1) + (- (elmt_rmRNAd * elmt_reactant16)));
	F[2] = ((elmt_rP01 * elmt_product5) + (- (elmt_rP12 * elmt_reactant8)) + (- (elmt_rP10 * elmt_reactant6)) + (elmt_rP21 * elmt_product11));
	F[3] = ((elmt_rPn2 * elmt_product15) + (elmt_rP12 * elmt_product9) + (- (elmt_rVd * elmt_reactant18)) + (- (elmt_rP21 * elmt_reactant10)) + (- (elmt_rP2n * elmt_reactant12)));
	F[4] = ((- (elmt_rP01 * elmt_reactant4)) + (elmt_rP10 * elmt_product7) + (elmt_rTL * elmt_product3));

}


iEquation{lhs=elmt_default, rhs=1.0E-15}
iEquation{lhs=elmt_EmptySet_conc, rhs=(0.0 / elmt_default)}
iEquation{lhs=elmt_compartment_0000004, rhs=1.0E-15}
iEquation{lhs=elmt_Pn_conc, rhs=0.25}
iEquation{lhs=elmt_CYTOPLASM, rhs=1.0E-15}
iEquation{lhs=elmt_M_conc, rhs=0.1}
iEquation{lhs=elmt_P1_conc, rhs=0.25}
iEquation{lhs=elmt_P2_conc, rhs=0.25}
iEquation{lhs=elmt_P0_conc, rhs=0.25}


Reaction{lhs=elmt_rPn2, rhs=(elmt_rPn2_elmt_k2 * elmt_Pn * elmt_compartment_0000004)}
Reaction{lhs=elmt_rP01, rhs=((elmt_CYTOPLASM * elmt_rP01_elmt_V1 * elmt_P0) / (elmt_rP01_elmt_K1 + elmt_P0))}
Reaction{lhs=elmt_rP12, rhs=((elmt_CYTOPLASM * elmt_rP12_elmt_V3 * elmt_P1) / (elmt_rP12_elmt_K3 + elmt_P1))}
Reaction{lhs=elmt_rVd, rhs=((elmt_CYTOPLASM * elmt_rVd_elmt_Vd * elmt_P2) / (elmt_rVd_elmt_Kd + elmt_P2))}
Reaction{lhs=elmt_rP10, rhs=((elmt_CYTOPLASM * elmt_rP10_elmt_V2 * elmt_P1) / (elmt_rP10_elmt_K2 + elmt_P1))}
Reaction{lhs=elmt_rP21, rhs=((elmt_CYTOPLASM * elmt_rP21_elmt_V4 * elmt_P2) / (elmt_rP21_elmt_K4 + elmt_P2))}
Reaction{lhs=elmt_rM, rhs=((elmt_default * elmt_rM_elmt_Vs * Functions.pow(elmt_rM_elmt_KI, elmt_rM_elmt_n)) / (Functions.pow(elmt_rM_elmt_KI, elmt_rM_elmt_n) + Functions.pow(elmt_Pn, elmt_rM_elmt_n)))}
Reaction{lhs=elmt_rmRNAd, rhs=((elmt_rmRNAd_elmt_Vm * elmt_M * elmt_CYTOPLASM) / (elmt_rmRNAd_elmt_Km + elmt_M))}
Reaction{lhs=elmt_rP2n, rhs=(elmt_rP2n_elmt_k1 * elmt_P2 * elmt_CYTOPLASM)}
Reaction{lhs=elmt_rTL, rhs=(elmt_rTL_elmt_ks * elmt_M * elmt_default)}
Reactant{name=elmt_product9, value=1.0}
Reactant{name=elmt_reactant2, value=1.0}
Reactant{name=elmt_reactant4, value=1.0}
Reactant{name=elmt_product7, value=1.0}
Reactant{name=elmt_reactant6, value=1.0}
Reactant{name=elmt_product11, value=1.0}
Reactant{name=elmt_reactant8, value=1.0}
Reactant{name=elmt_reactant14, value=1.0}
Reactant{name=elmt_product1, value=1.0}
Reactant{name=elmt_reactant16, value=1.0}
Reactant{name=elmt_product5, value=1.0}
Reactant{name=elmt_reactant10, value=1.0}
Reactant{name=elmt_reactant0, value=1.0}
Reactant{name=elmt_reactant12, value=1.0}
Reactant{name=elmt_product3, value=1.0}
Reactant{name=elmt_reactant18, value=1.0}
Reactant{name=elmt_product15, value=1.0}
Reactant{name=elmt_product13, value=1.0}
Reactant{name=elmt_product19, value=1.0}
Reactant{name=elmt_product17, value=1.0}


Parameter{name=elmt_rPn2_elmt_k2, value=1.3}
Parameter{name=elmt_rP01_elmt_K1, value=2.0}
Parameter{name=elmt_rP01_elmt_V1, value=3.2}
Parameter{name=elmt_rP12_elmt_V3, value=5.0}
Parameter{name=elmt_rP12_elmt_K3, value=2.0}
Parameter{name=elmt_rVd_elmt_Vd, value=0.95}
Parameter{name=elmt_rVd_elmt_Kd, value=0.2}
Parameter{name=elmt_rP10_elmt_V2, value=1.58}
Parameter{name=elmt_rP10_elmt_K2, value=2.0}
Parameter{name=elmt_rP21_elmt_V4, value=2.5}
Parameter{name=elmt_rP21_elmt_K4, value=2.0}
Parameter{name=elmt_rM_elmt_n, value=4.0}
Parameter{name=elmt_rM_elmt_Vs, value=0.76}
Parameter{name=elmt_rM_elmt_KI, value=1.0}
Parameter{name=elmt_rmRNAd_elmt_Km, value=0.5}
Parameter{name=elmt_rmRNAd_elmt_Vm, value=0.65}
Parameter{name=elmt_rP2n_elmt_k1, value=1.9}
Parameter{name=elmt_rTL_elmt_ks, value=0.38}
