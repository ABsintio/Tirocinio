within BIOMD257;
class Class_elmt_env

    input Real elmt_product12;
    input Real elmt_reactant26;
    input Real elmt_reactant21;
    input Real elmt_reactant23;
    input Real elmt_reactant19;
    input Real elmt_reactant9;
    input Real elmt_product25;
    input Real elmt_product24;
    input Real elmt_reaction10;
    input Real elmt_reaction11;
    input Real elmt_reaction7;
    input Real elmt_reaction6;
    input Real elmt_product8;
    input Real elmt_reactant1;
    input Real elmt_product7;
    input Real elmt_reaction9;
    input Real elmt_reactant4;
    input Real elmt_reaction8;
    input Real elmt_reaction3;
    input Real elmt_reactant6;
    input Real elmt_reaction2;
    input Real elmt_product22;
    input Real elmt_reaction5;
    input Real elmt_reaction4;
    input Real elmt_reactant14;
    input Real elmt_reactant16;
    input Real elmt_reaction1;
    input Real elmt_product5;
    input Real elmt_reactant10;
    input Real elmt_reactant11;
    input Real elmt_product2;
    input Real elmt_product15;
    input Real elmt_product18;
    input Real elmt_product17;

    Real elmt_env(unit = "") "environment";
    Real elmt_SUSTU_conc(unit = "");
    Real elmt_SUSTU_amount(unit = "");
    Real elmt_SUSTU(unit = "") "";
    Real elmt_STU_conc(unit = "");
    Real elmt_STU_amount(unit = "");
    Real elmt_STU(unit = "") "";
    Real elmt_STUST_conc(unit = "");
    Real elmt_STUST_amount(unit = "");
    Real elmt_STUST(unit = "") "";
    Real elmt_ST_conc(unit = "");
    Real elmt_ST_amount(unit = "");
    Real elmt_ST(unit = "") "";
    Real elmt_STUSU_conc(unit = "");
    Real elmt_STUSU_amount(unit = "");
    Real elmt_STUSU(unit = "") "";
    Real elmt_SU_conc(unit = "");
    Real elmt_SU_amount(unit = "");
    Real elmt_SU(unit = "") "";
    Real elmt_STUS_conc(unit = "");
    Real elmt_STUS_amount(unit = "");
    Real elmt_STUS(unit = "") "";
    Real elmt_U_conc(unit = "");
    Real elmt_U_amount(unit = "");
    Real elmt_U(unit = "") "";
    Real elmt_S_conc(unit = "");
    Real elmt_S_amount(unit = "");
    Real elmt_S(unit = "") "";
    Real elmt_T_conc(unit = "");
    Real elmt_T_amount(unit = "");
    Real elmt_T(unit = "") "";
    Real elmt_SUST_conc(unit = "");
    Real elmt_SUST_amount(unit = "");
    Real elmt_SUST(unit = "") "";

    initial equation
        elmt_env = 1.0;
        elmt_SUSTU_conc = 0.0;
        elmt_STU_conc = 5.0;
        elmt_STUST_conc = 0.0;
        elmt_ST_conc = 0.0;
        elmt_STUSU_conc = 0.0;
        elmt_SU_conc = 0.0;
        elmt_STUS_conc = 0.0;
        elmt_U_conc = 1.0;
        elmt_S_conc = 4.0;
        elmt_T_conc = 2.0;
        elmt_SUST_conc = 0.0;


    equation
        assert(elmt_env >= 0, "Compartment size became negative. Make sure this is a valid bahaviour.");
        der(elmt_env) = 0;
        elmt_SUSTU = elmt_SUSTU_conc;
        elmt_STU = elmt_STU_conc;
        elmt_STUST = elmt_STUST_conc;
        elmt_ST = elmt_ST_conc;
        elmt_STUSU = elmt_STUSU_conc;
        elmt_SU = elmt_SU_conc;
        elmt_STUS = elmt_STUS_conc;
        elmt_U = elmt_U_conc;
        elmt_S = elmt_S_conc;
        elmt_T = elmt_T_conc;
        elmt_SUST = elmt_SUST_conc;
        der(elmt_U_amount) = 0;
        der(elmt_S_amount) = 0;
        der(elmt_T_amount) = 0;
        der(elmt_SUSTU_amount) = ((- (elmt_reaction7 * elmt_reactant16)) + (elmt_reaction6 * elmt_product15));
        der(elmt_STU_amount) = ((elmt_reaction7 * elmt_product17) + (elmt_reaction3 * elmt_product8) + (- (elmt_reaction4 * elmt_reactant9)) + (- (elmt_reaction1 * elmt_reactant1)) + (elmt_reaction10 * elmt_product24));
        der(elmt_STUST_amount) = ((- (elmt_reaction3 * elmt_reactant6)) + (elmt_reaction2 * elmt_product5));
        der(elmt_ST_amount) = ((elmt_reaction3 * elmt_product7) + (- (elmt_reaction5 * elmt_reactant11)) + (- (elmt_reaction11 * elmt_reactant26)));
        der(elmt_STUSU_amount) = ((elmt_reaction9 * elmt_product22) + (- (elmt_reaction10 * elmt_reactant23)));
        der(elmt_SU_amount) = ((elmt_reaction7 * elmt_product18) + (- (elmt_reaction8 * elmt_reactant19)) + (- (elmt_reaction5 * elmt_reactant10)) + (elmt_reaction10 * elmt_product25));
        der(elmt_STUS_amount) = ((- (elmt_reaction9 * elmt_reactant21)) + (- (elmt_reaction2 * elmt_reactant4)) + (elmt_reaction1 * elmt_product2));
        der(elmt_SUST_amount) = ((- (elmt_reaction6 * elmt_reactant14)) + (elmt_reaction5 * elmt_product12));

    algorithm
        elmt_SUSTU_conc := elmt_SUSTU_amount / elmt_env;
        elmt_STU_conc := elmt_STU_amount / elmt_env;
        elmt_STUST_conc := elmt_STUST_amount / elmt_env;
        elmt_ST_conc := elmt_ST_amount / elmt_env;
        elmt_STUSU_conc := elmt_STUSU_amount / elmt_env;
        elmt_SU_conc := elmt_SU_amount / elmt_env;
        elmt_STUS_conc := elmt_STUS_amount / elmt_env;
        elmt_U_conc := elmt_U_amount / elmt_env;
        elmt_S_conc := elmt_S_amount / elmt_env;
        elmt_T_conc := elmt_T_amount / elmt_env;
        elmt_SUST_conc := elmt_SUST_amount / elmt_env;
end Class_elmt_env;
