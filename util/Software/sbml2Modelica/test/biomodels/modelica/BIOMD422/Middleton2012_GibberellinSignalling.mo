within BIOMD422;
model Middleton2012_GibberellinSignalling "Middleton2012_GibberellinSignalling" annotation(Documentation(info="<annotation>
      <rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns:bqmodel=\"http://biomodels.net/model-qualifiers/\" xmlns:vCard=\"http://www.w3.org/2001/vcard-rdf/3.0#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" xmlns:dcterms=\"http://purl.org/dc/terms/\" xmlns:bqbiol=\"http://biomodels.net/biology-qualifiers/\">
	
      </rdf:RDF>
    </annotation>"));

    Parameters Params;
    Reactions Reacs;
    Class_elmt_default elmt_default;
    Class_elmt_AddGA4 elmt_AddGA4;
    Class_elmt_RemoveGA4 elmt_RemoveGA4;

    function prioritize_between_2
        input Real[2] prios;
        input Real[2] values;
        input Boolean[2] trigs;
        output Real value;
        protected Real min_prio;
        algorithm
            value := 0;
            min_prio := Constants.INFINITY;
            for i in 1:2 loop
                if trigs[i] and prios[i] < min_prio then
                    value := values[i];
                    min_prio := prios[i];
                end if;
            end for;
    end prioritize_between_2;
    equation
        Params.elmt_AddGA4 = elmt_AddGA4.trigger;
        Params.elmt_RemoveGA4 = elmt_RemoveGA4.trigger;
        Reacs.elmt_s27 = elmt_default.elmt_s27;
        Reacs.elmt_s26 = elmt_default.elmt_s26;
        Reacs.elmt_s25 = elmt_default.elmt_s25;
        Reacs.elmt_omegaGA12 = Params.elmt_omegaGA12;
        Reacs.elmt_s24 = elmt_default.elmt_s24;
        Reacs.elmt_s23 = elmt_default.elmt_s23;
        Reacs.elmt_s45 = elmt_default.elmt_s45;
        Reacs.elmt_s65 = elmt_default.elmt_s65;
        Reacs.elmt_s42 = elmt_default.elmt_s42;
        Reacs.elmt_s29 = elmt_default.elmt_s29;
        Reacs.elmt_Pmem = Params.elmt_Pmem;
        Reacs.elmt_s28 = elmt_default.elmt_s28;
        Reacs.elmt_muGID = Params.elmt_muGID;
        Reacs.elmt_s30 = elmt_default.elmt_s30;
        Reacs.elmt_s16 = elmt_default.elmt_s16;
        Reacs.elmt_omegaGA4 = Params.elmt_omegaGA4;
        Reacs.elmt_s36 = elmt_default.elmt_s36;
        Reacs.elmt_s2 = elmt_default.elmt_s2;
        Reacs.elmt_muGA20ox = Params.elmt_muGA20ox;
        Reacs.elmt_s32 = elmt_default.elmt_s32;
        Reacs.elmt_s31 = elmt_default.elmt_s31;
        Reacs.elmt_s39 = elmt_default.elmt_s39;
        Reacs.elmt_muDELLA = Params.elmt_muDELLA;
        Reacs.elmt_muGA3ox = Params.elmt_muGA3ox;
        Reacs.elmt_muGA = Params.elmt_muGA;
        Reacs.elmt_s41 = elmt_default.elmt_s41;
        Reacs.elmt_s62 = elmt_default.elmt_s62;
        Reacs.elmt_s40 = elmt_default.elmt_s40;
        Reacs.elmt_s1 = elmt_default.elmt_s1;
        elmt_default.elmt_reactant41 = Reacs.elmt_reactant41;
        elmt_default.elmt_product72 = Reacs.elmt_product72;
        elmt_default.elmt_reactant47 = Reacs.elmt_reactant47;
        elmt_default.elmt_product70 = Reacs.elmt_product70;
        elmt_default.elmt_reactant44 = Reacs.elmt_reactant44;
        elmt_default.elmt_reactant45 = Reacs.elmt_reactant45;
        elmt_default.elmt_product68 = Reacs.elmt_product68;
        elmt_default.elmt_reactant50 = Reacs.elmt_reactant50;
        elmt_default.elmt_reactant53 = Reacs.elmt_reactant53;
        elmt_default.elmt_product89 = Reacs.elmt_product89;
        elmt_default.elmt_reactant55 = Reacs.elmt_reactant55;
        elmt_default.elmt_product94 = Reacs.elmt_product94;
        elmt_default.elmt_reactant20 = Reacs.elmt_reactant20;
        elmt_default.elmt_product11 = Reacs.elmt_product11;
        elmt_default.elmt_product10 = Reacs.elmt_product10;
        elmt_default.elmt_reactant26 = Reacs.elmt_reactant26;
        elmt_default.elmt_reactant27 = Reacs.elmt_reactant27;
        elmt_default.elmt_product92 = Reacs.elmt_product92;
        elmt_default.elmt_product91 = Reacs.elmt_product91;
        elmt_default.elmt_reactant23 = Reacs.elmt_reactant23;
        elmt_default.elmt_reactant18 = Reacs.elmt_reactant18;
        elmt_default.elmt_product8 = Reacs.elmt_product8;
        elmt_default.elmt_product22 = Reacs.elmt_product22;
        elmt_default.elmt_product21 = Reacs.elmt_product21;
        elmt_default.elmt_reactant36 = Reacs.elmt_reactant36;
        elmt_default.elmt_re40 = Reacs.elmt_re40;
        elmt_default.elmt_re41 = Reacs.elmt_re41;
        elmt_default.elmt_re42 = Reacs.elmt_re42;
        elmt_default.elmt_reactant38 = Reacs.elmt_reactant38;
        elmt_default.elmt_re43 = Reacs.elmt_re43;
        elmt_default.elmt_re44 = Reacs.elmt_re44;
        elmt_default.elmt_product5 = Reacs.elmt_product5;
        elmt_default.elmt_reactant32 = Reacs.elmt_reactant32;
        elmt_default.elmt_re45 = Reacs.elmt_re45;
        elmt_default.elmt_product4 = Reacs.elmt_product4;
        elmt_default.elmt_re46 = Reacs.elmt_re46;
        elmt_default.elmt_reactant35 = Reacs.elmt_reactant35;
        elmt_default.elmt_product2 = Reacs.elmt_product2;
        elmt_default.elmt_reactant29 = Reacs.elmt_reactant29;
        elmt_default.elmt_product16 = Reacs.elmt_product16;
        elmt_default.elmt_product14 = Reacs.elmt_product14;
        elmt_default.elmt_product13 = Reacs.elmt_product13;
        elmt_default.elmt_reactant103 = Reacs.elmt_reactant103;
        elmt_default.elmt_product19 = Reacs.elmt_product19;
        elmt_default.elmt_reactant101 = Reacs.elmt_reactant101;
        elmt_default.elmt_product30 = Reacs.elmt_product30;
        elmt_default.elmt_re37 = Reacs.elmt_re37;
        elmt_default.elmt_reactant83 = Reacs.elmt_reactant83;
        elmt_default.elmt_re38 = Reacs.elmt_re38;
        elmt_default.elmt_reactant85 = Reacs.elmt_reactant85;
        elmt_default.elmt_re39 = Reacs.elmt_re39;
        elmt_default.elmt_product34 = Reacs.elmt_product34;
        elmt_default.elmt_product33 = Reacs.elmt_product33;
        elmt_default.elmt_reactant81 = Reacs.elmt_reactant81;
        elmt_default.elmt_product31 = Reacs.elmt_product31;
        elmt_default.elmt_re30 = Reacs.elmt_re30;
        elmt_default.elmt_re31 = Reacs.elmt_re31;
        elmt_default.elmt_re32 = Reacs.elmt_re32;
        elmt_default.elmt_re33 = Reacs.elmt_re33;
        elmt_default.elmt_reactant87 = Reacs.elmt_reactant87;
        elmt_default.elmt_reactant88 = Reacs.elmt_reactant88;
        elmt_default.elmt_re34 = Reacs.elmt_re34;
        elmt_default.elmt_re35 = Reacs.elmt_re35;
        elmt_default.elmt_reactant9 = Reacs.elmt_reactant9;
        elmt_default.elmt_product25 = Reacs.elmt_product25;
        elmt_default.elmt_product24 = Reacs.elmt_product24;
        elmt_default.elmt_product28 = Reacs.elmt_product28;
        elmt_default.elmt_product40 = Reacs.elmt_product40;
        elmt_default.elmt_reactant95 = Reacs.elmt_reactant95;
        elmt_default.elmt_re27 = Reacs.elmt_re27;
        elmt_default.elmt_re28 = Reacs.elmt_re28;
        elmt_default.elmt_reactant97 = Reacs.elmt_reactant97;
        elmt_default.elmt_re29 = Reacs.elmt_re29;
        elmt_default.elmt_reactant90 = Reacs.elmt_reactant90;
        elmt_default.elmt_product43 = Reacs.elmt_product43;
        elmt_default.elmt_product42 = Reacs.elmt_product42;
        elmt_default.elmt_re3 = Reacs.elmt_re3;
        elmt_default.elmt_re2 = Reacs.elmt_re2;
        elmt_default.elmt_re1 = Reacs.elmt_re1;
        elmt_default.elmt_re20 = Reacs.elmt_re20;
        elmt_default.elmt_reactant17 = Reacs.elmt_reactant17;
        elmt_default.elmt_re21 = Reacs.elmt_re21;
        elmt_default.elmt_re22 = Reacs.elmt_re22;
        elmt_default.elmt_reactant99 = Reacs.elmt_reactant99;
        elmt_default.elmt_re23 = Reacs.elmt_re23;
        elmt_default.elmt_reactant12 = Reacs.elmt_reactant12;
        elmt_default.elmt_re24 = Reacs.elmt_re24;
        elmt_default.elmt_re9 = Reacs.elmt_re9;
        elmt_default.elmt_re8 = Reacs.elmt_re8;
        elmt_default.elmt_re7 = Reacs.elmt_re7;
        elmt_default.elmt_re6 = Reacs.elmt_re6;
        elmt_default.elmt_re5 = Reacs.elmt_re5;
        elmt_default.elmt_re4 = Reacs.elmt_re4;
        elmt_default.elmt_product37 = Reacs.elmt_product37;
        elmt_default.elmt_product39 = Reacs.elmt_product39;
        elmt_default.elmt_re15 = Reacs.elmt_re15;
        elmt_default.elmt_product52 = Reacs.elmt_product52;
        elmt_default.elmt_re16 = Reacs.elmt_re16;
        elmt_default.elmt_product51 = Reacs.elmt_product51;
        elmt_default.elmt_re17 = Reacs.elmt_re17;
        elmt_default.elmt_re18 = Reacs.elmt_re18;
        elmt_default.elmt_re19 = Reacs.elmt_re19;
        elmt_default.elmt_product56 = Reacs.elmt_product56;
        elmt_default.elmt_product54 = Reacs.elmt_product54;
        elmt_default.elmt_re10 = Reacs.elmt_re10;
        elmt_default.elmt_re11 = Reacs.elmt_re11;
        elmt_default.elmt_re12 = Reacs.elmt_re12;
        elmt_default.elmt_re13 = Reacs.elmt_re13;
        elmt_default.elmt_re14 = Reacs.elmt_re14;
        elmt_default.elmt_product49 = Reacs.elmt_product49;
        elmt_default.elmt_product48 = Reacs.elmt_product48;
        elmt_default.elmt_product46 = Reacs.elmt_product46;
        elmt_default.elmt_product62 = Reacs.elmt_product62;
        elmt_default.elmt_reactant1 = Reacs.elmt_reactant1;
        elmt_default.elmt_reactant73 = Reacs.elmt_reactant73;
        elmt_default.elmt_product60 = Reacs.elmt_product60;
        elmt_default.elmt_reactant3 = Reacs.elmt_reactant3;
        elmt_default.elmt_reactant75 = Reacs.elmt_reactant75;
        elmt_default.elmt_reactant6 = Reacs.elmt_reactant6;
        elmt_default.elmt_product66 = Reacs.elmt_product66;
        elmt_default.elmt_reactant7 = Reacs.elmt_reactant7;
        elmt_default.elmt_product64 = Reacs.elmt_product64;
        elmt_default.elmt_reactant77 = Reacs.elmt_reactant77;
        elmt_default.elmt_reactant0 = Reacs.elmt_reactant0;
        elmt_default.elmt_reactant79 = Reacs.elmt_reactant79;
        elmt_default.elmt_product58 = Reacs.elmt_product58;
        elmt_RemoveGA4.elmt_tGA4off = Params.elmt_tGA4off;
        elmt_AddGA4.elmt_appliedGA4 = Params.elmt_appliedGA4;
        elmt_AddGA4.elmt_tGA4on = Params.elmt_tGA4on;

        Params.assign_elmt_omegaGA4 = prioritize_between_2({Constants.NEGATIVE_INFINITY, Constants.NEGATIVE_INFINITY}, {elmt_AddGA4.value_elmt_omegaGA4, elmt_RemoveGA4.value_elmt_omegaGA4}, {edge(elmt_AddGA4.trigger), edge(elmt_RemoveGA4.trigger)});
end Middleton2012_GibberellinSignalling;
