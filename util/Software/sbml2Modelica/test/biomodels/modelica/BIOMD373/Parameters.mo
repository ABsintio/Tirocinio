within BIOMD373;
class Parameters

    input Real elmt_n;
    input Real elmt_fbp;
    input Real elmt_g6p;
    input Real elmt_cer;
    input Real elmt_V;
    input Real elmt_adp;
    input Real elmt_c;

    Real elmt_minf(unit = "") "minf";
    Real elmt_Rgk(unit = "") "Rgk";
    Real elmt_r1(unit = "") "r1";
    Real elmt_atot(unit = "") "atot";
    Real elmt_Jmem(unit = "") "Jmem";
    Real elmt_epser(unit = "") "epser";
    Real elmt_weight12(unit = "") "weight12";
    Real elmt_weight13(unit = "") "weight13";
    Real elmt_weight10(unit = "") "weight10";
    Real elmt_weight11(unit = "") "weight11";
    Real elmt_weight16(unit = "") "weight16";
    Real elmt_amp(unit = "") "amp";
    Real elmt_weight14(unit = "") "weight14";
    Real elmt_weight15(unit = "") "weight15";
    Real elmt_Jserca(unit = "") "Jserca";
    Real elmt_bottom16(unit = "") "bottom16";
    Real elmt_bottom15(unit = "") "bottom15";
    Real elmt_bottom14(unit = "") "bottom14";
    Real elmt_k1(unit = "") "k1";
    Real elmt_bottom13(unit = "") "bottom13";
    Real elmt_cat(unit = "") "cat";
    Real elmt_bottom12(unit = "") "bottom12";
    Real elmt_bottom11(unit = "") "bottom11";
    Real elmt_bottom10(unit = "") "bottom10";
    Real elmt_IK(unit = "") "IK";
    Real elmt_f6p(unit = "") "f6p";
    Real elmt_k4(unit = "") "k4";
    Real elmt_k2(unit = "") "k2";
    Real elmt_k3(unit = "") "k3";
    Real elmt_rgpdh(unit = "") "rgpdh";
    Real elmt_gKCa(unit = "") "gKCa";
    Real elmt_bottom8(unit = "") "bottom8";
    Real elmt_bottom9(unit = "") "bottom9";
    Real elmt_bottom6(unit = "") "bottom6";
    Real elmt_bottom7(unit = "") "bottom7";
    Real elmt_bottom4(unit = "") "bottom4";
    Real elmt_bottom5(unit = "") "bottom5";
    Real elmt_bottom2(unit = "") "bottom2";
    Real elmt_bottom3(unit = "") "bottom3";
    Real elmt_lambdaer(unit = "") "lambdaer";
    Real elmt_bottom1(unit = "") "bottom1";
    Real elmt_lambda(unit = "") "lambda";
    Real elmt_gK(unit = "") "gK";
    Real elmt_pfkbas(unit = "") "pfkbas";
    Real elmt_VK(unit = "") "VK";
    Real elmt_vg(unit = "") "vg";
    Real elmt_kpmca(unit = "") "kpmca";
    Real elmt_katpo(unit = "") "katpo";
    Real elmt_rad(unit = "") "rad";
    Real elmt_IKCa(unit = "") "IKCa";
    Real elmt_IKATP(unit = "") "IKATP";
    Real elmt_pleak(unit = "") "pleak";
    Real elmt_gkatpbar(unit = "") "gkatpbar";
    Real elmt_ktd(unit = "") "ktd";
    Real elmt_gCa(unit = "") "gCa";
    Real elmt_Kserca(unit = "") "Kserca";
    Real elmt_y(unit = "") "y";
    Real elmt_ffbp(unit = "") "ffbp";
    Real elmt_bottomo(unit = "") "bottomo";
    Real elmt_kdd(unit = "") "kdd";
    Real elmt_ktt(unit = "") "ktt";
    Real elmt_r(unit = "") "r";
    Real elmt_fbt(unit = "") "fbt";
    Real elmt_pfk(unit = "") "pfk";
    Real elmt_ratio(unit = "") "ratio";
    Real elmt_topa10(unit = "") "topa10";
    Real elmt_topa11(unit = "") "topa11";
    Real elmt_topa12(unit = "") "topa12";
    Real elmt_topa13(unit = "") "topa13";
    Real elmt_Cm(unit = "") "Cm";
    Real elmt_atp4m(unit = "") "atp4m";
    Real elmt_ninf(unit = "") "ninf";
    Real elmt_topa9(unit = "") "topa9";
    Real elmt_topo(unit = "") "topo";
    Real elmt_taua(unit = "") "taua";
    Real elmt_VCa(unit = "") "VCa";
    Real elmt_topa7(unit = "") "topa7";
    Real elmt_sigmaV(unit = "") "sigmaV";
    Real elmt_topa8(unit = "") "topa8";
    Real elmt_topa5(unit = "") "topa5";
    Real elmt_topa6(unit = "") "topa6";
    Real elmt_topa3(unit = "") "topa3";
    Real elmt_topa4(unit = "") "topa4";
    Real elmt_topa1(unit = "") "topa1";
    Real elmt_topa2(unit = "") "topa2";
    Real elmt_weight9(unit = "") "weight9";
    Real elmt_fback(unit = "") "fback";
    Real elmt_weight8(unit = "") "weight8";
    Real elmt_weight7(unit = "") "weight7";
    Real elmt_weight6(unit = "") "weight6";
    Real elmt_weight5(unit = "") "weight5";
    Real elmt_weight4(unit = "") "weight4";
    Real elmt_topa14(unit = "") "topa14";
    Real elmt_weight3(unit = "") "weight3";
    Real elmt_topa15(unit = "") "topa15";
    Real elmt_weight2(unit = "") "weight2";
    Real elmt_topa16(unit = "") "topa16";
    Real elmt_mgadp(unit = "") "mgadp";
    Real elmt_adp3m(unit = "") "adp3m";
    Real elmt_taun(unit = "") "taun";
    Real elmt_Jer(unit = "") "Jer";
    Real elmt_fcyt(unit = "") "fcyt";
    Real elmt_famp(unit = "") "famp";
    Real elmt_ICa(unit = "") "ICa";
    Real elmt_Jleak(unit = "") "Jleak";
    Real elmt_topb(unit = "") "topb";
    Real elmt_fmt(unit = "") "fmt";
    Real elmt_alpha(unit = "") "alpha";
    Real elmt_fer(unit = "") "fer";
    Real elmt_fatp(unit = "") "fatp";
    Real elmt_atp(unit = "") "atp";
    Real elmt_kg(unit = "") "kg";
    Real elmt_kd(unit = "") "kd";


    initial equation
        elmt_Rgk = 0.2;
        elmt_r1 = 0.35;
        elmt_atot = 3000.0;
        elmt_epser = 1.0;
        elmt_k1 = 30.0;
        elmt_cat = 2.0;
        elmt_k4 = 1000.0;
        elmt_k2 = 1.0;
        elmt_k3 = 50000.0;
        elmt_gKCa = 600.0;
        elmt_lambdaer = 1.0;
        elmt_bottom1 = 1.0;
        elmt_lambda = 0.005;
        elmt_gK = 2700.0;
        elmt_pfkbas = 0.06;
        elmt_VK = (-75.0);
        elmt_vg = 2.2;
        elmt_kpmca = 0.2;
        elmt_pleak = 2.0E-4;
        elmt_gkatpbar = 25000.0;
        elmt_ktd = 26.0;
        elmt_gCa = 1000.0;
        elmt_Kserca = 0.4;
        elmt_ffbp = 0.2;
        elmt_kdd = 17.0;
        elmt_ktt = 1.0;
        elmt_r = 1.0;
        elmt_fbt = 20.0;
        elmt_Cm = 5300.0;
        elmt_taua = 300000.0;
        elmt_VCa = 25.0;
        elmt_sigmaV = 31.0;
        elmt_topa1 = 0.0;
        elmt_taun = 20.0;
        elmt_fcyt = 0.01;
        elmt_famp = 0.02;
        elmt_fmt = 20.0;
        elmt_alpha = 4.5E-6;
        elmt_fer = 0.01;
        elmt_fatp = 20.0;
        elmt_kg = 10.0;
        elmt_kd = 0.5;


    equation
        elmt_minf = (1.0 / (1.0 + exp(((- (20.0 + (elmt_V / 1.0))) / 12.0))));
        der(elmt_Rgk) = 0;
        der(elmt_r1) = 0;
        der(elmt_atot) = 0;
        elmt_Jmem = (- ((elmt_alpha * elmt_ICa) + (elmt_kpmca * elmt_c)));
        der(elmt_epser) = 0;
        elmt_weight12 = ((elmt_amp * Functions.pow(elmt_f6p, 2.0) * Functions.pow(elmt_atp, 2.0)) / (elmt_k1 * elmt_k3 * elmt_k4 * elmt_famp * elmt_fmt * elmt_fatp * Functions.pow(1.0, 2.0)));
        elmt_weight13 = ((elmt_amp * elmt_fbp) / (elmt_k1 * elmt_k2));
        elmt_weight10 = ((elmt_amp * Functions.pow(elmt_atp, 2.0)) / (elmt_k1 * elmt_k4 * elmt_fmt * 1.0));
        elmt_weight11 = ((elmt_amp * Functions.pow(elmt_f6p, 2.0)) / (elmt_k1 * elmt_k3 * elmt_famp * 1.0));
        elmt_weight16 = ((elmt_amp * elmt_fbp * Functions.pow(elmt_f6p, 2.0) * Functions.pow(elmt_atp, 2.0)) / (elmt_k1 * elmt_k2 * elmt_k3 * elmt_k4 * elmt_ffbp * elmt_famp * elmt_fbt * elmt_fmt * elmt_fatp * Functions.pow(1.0, 2.0)));
        elmt_amp = ((elmt_adp * elmt_adp) / elmt_atp);
        elmt_weight14 = ((elmt_amp * elmt_fbp * Functions.pow(elmt_atp, 2.0)) / (elmt_k1 * elmt_k2 * elmt_k4 * elmt_fbt * elmt_fmt * 1.0));
        elmt_weight15 = ((elmt_amp * elmt_fbp * Functions.pow(elmt_f6p, 2.0)) / (elmt_k1 * elmt_k2 * elmt_k3 * elmt_ffbp * elmt_famp * 1.0));
        elmt_Jserca = (elmt_Kserca * elmt_c);
        elmt_bottom16 = (elmt_bottom15 + elmt_weight16);
        elmt_bottom15 = (elmt_bottom14 + elmt_weight15);
        elmt_bottom14 = (elmt_bottom13 + elmt_weight14);
        der(elmt_k1) = 0;
        elmt_bottom13 = (elmt_bottom12 + elmt_weight13);
        der(elmt_cat) = 0;
        elmt_bottom12 = (elmt_bottom11 + elmt_weight12);
        elmt_bottom11 = (elmt_bottom10 + elmt_weight11);
        elmt_bottom10 = (elmt_bottom9 + elmt_weight10);
        elmt_IK = (elmt_gK * elmt_n * (elmt_V - elmt_VK));
        elmt_f6p = (0.3 * elmt_g6p);
        der(elmt_k4) = 0;
        der(elmt_k2) = 0;
        der(elmt_k3) = 0;
        elmt_rgpdh = (0.2 * Functions.pow(abs(((elmt_fbp * 1.0) / Functions.pow(1.0, 2.0))), (1.0 / 2.0)));
        der(elmt_gKCa) = 0;
        elmt_bottom8 = (elmt_bottom7 + elmt_weight8);
        elmt_bottom9 = (elmt_bottom8 + elmt_weight9);
        elmt_bottom6 = (elmt_bottom5 + elmt_weight6);
        elmt_bottom7 = (elmt_bottom6 + elmt_weight7);
        elmt_bottom4 = (elmt_bottom3 + elmt_weight4);
        elmt_bottom5 = (elmt_bottom4 + elmt_weight5);
        elmt_bottom2 = (elmt_bottom1 + elmt_weight2);
        elmt_bottom3 = (elmt_bottom2 + elmt_weight3);
        der(elmt_lambdaer) = 0;
        der(elmt_bottom1) = 0;
        der(elmt_lambda) = 0;
        der(elmt_gK) = 0;
        der(elmt_pfkbas) = 0;
        der(elmt_VK) = 0;
        der(elmt_vg) = 0;
        der(elmt_kpmca) = 0;
        elmt_katpo = (elmt_topo / elmt_bottomo);
        elmt_rad = (Functions.pow(abs((Functions.pow((elmt_adp - elmt_atot), 2.0) - (4.0 * Functions.pow(elmt_adp, 2.0)))), (1.0 / 2.0)) / 1.0);
        elmt_IKCa = ((elmt_gKCa / (1.0 + Functions.pow((elmt_kd / elmt_c), 2.0))) * (elmt_V - elmt_VK));
        elmt_IKATP = (elmt_gkatpbar * elmt_katpo * (elmt_V - elmt_VK));
        der(elmt_pleak) = 0;
        der(elmt_gkatpbar) = 0;
        der(elmt_ktd) = 0;
        der(elmt_gCa) = 0;
        der(elmt_Kserca) = 0;
        elmt_y = (elmt_vg * (elmt_rgpdh / (elmt_kg + elmt_rgpdh)));
        der(elmt_ffbp) = 0;
        elmt_bottomo = (Functions.pow((1.0 + (elmt_mgadp / (elmt_kdd * 1.0))), 2.0) * (1.0 + (elmt_adp3m / (elmt_ktd * 1.0)) + (elmt_atp4m / (elmt_ktt * 1.0))));
        der(elmt_kdd) = 0;
        der(elmt_ktt) = 0;
        der(elmt_r) = 0;
        der(elmt_fbt) = 0;
        elmt_pfk = (1.0 * (((elmt_pfkbas * elmt_cat * elmt_topa16) + (elmt_cat * elmt_topb)) / elmt_bottom16));
        elmt_ratio = (elmt_atp / elmt_adp);
        elmt_topa10 = elmt_topa9;
        elmt_topa11 = (elmt_topa10 + elmt_weight11);
        elmt_topa12 = (elmt_topa11 + elmt_weight12);
        elmt_topa13 = elmt_topa12;
        der(elmt_Cm) = 0;
        elmt_atp4m = (0.05 * elmt_atp);
        elmt_ninf = (1.0 / (1.0 + exp(((- (16.0 + (elmt_V / 1.0))) / 5.0))));
        elmt_topa9 = elmt_topa8;
        elmt_topo = ((0.08 * (1.0 + ((2.0 * elmt_mgadp) / (elmt_kdd * 1.0)))) + (0.89 * Functions.pow((elmt_mgadp / (elmt_kdd * 1.0)), 2.0)));
        der(elmt_taua) = 0;
        der(elmt_VCa) = 0;
        elmt_topa7 = (elmt_topa6 + elmt_weight7);
        der(elmt_sigmaV) = 0;
        elmt_topa8 = (elmt_topa7 + elmt_weight8);
        elmt_topa5 = elmt_topa4;
        elmt_topa6 = elmt_topa5;
        elmt_topa3 = (elmt_topa2 + elmt_weight3);
        elmt_topa4 = (elmt_topa3 + elmt_weight4);
        der(elmt_topa1) = 0;
        elmt_topa2 = elmt_topa1;
        elmt_weight9 = (elmt_amp / elmt_k1);
        elmt_fback = (elmt_r + elmt_y);
        elmt_weight8 = ((elmt_fbp * Functions.pow(elmt_f6p, 2.0) * Functions.pow(elmt_atp, 2.0)) / (elmt_k2 * elmt_k3 * elmt_k4 * elmt_ffbp * elmt_fbt * elmt_fatp * Functions.pow(1.0, 2.0)));
        elmt_weight7 = ((elmt_fbp * Functions.pow(elmt_f6p, 2.0)) / (elmt_k2 * elmt_k3 * elmt_ffbp * 1.0));
        elmt_weight6 = ((elmt_fbp * Functions.pow(elmt_atp, 2.0)) / (elmt_k2 * elmt_k4 * elmt_fbt * 1.0));
        elmt_weight5 = (elmt_fbp / elmt_k2);
        elmt_weight4 = (Functions.pow((elmt_f6p * elmt_atp), 2.0) / (elmt_fatp * elmt_k3 * elmt_k4 * Functions.pow(1.0, 2.0)));
        elmt_topa14 = elmt_topa13;
        elmt_weight3 = (Functions.pow(elmt_f6p, 2.0) / (elmt_k3 * 1.0));
        elmt_topa15 = elmt_topa14;
        elmt_weight2 = (Functions.pow(elmt_atp, 2.0) / (elmt_k4 * 1.0));
        elmt_topa16 = (elmt_topa15 + elmt_weight16);
        elmt_mgadp = (0.165 * elmt_adp);
        elmt_adp3m = (0.135 * elmt_adp);
        der(elmt_taun) = 0;
        elmt_Jer = ((elmt_epser * (elmt_Jleak - elmt_Jserca)) / elmt_lambdaer);
        der(elmt_fcyt) = 0;
        der(elmt_famp) = 0;
        elmt_ICa = (elmt_gCa * elmt_minf * (elmt_V - elmt_VCa));
        elmt_Jleak = (elmt_pleak * (elmt_cer - elmt_c));
        elmt_topb = elmt_weight15;
        der(elmt_fmt) = 0;
        der(elmt_alpha) = 0;
        der(elmt_fer) = 0;
        der(elmt_fatp) = 0;
        elmt_atp = (0.5 * ((elmt_atot - elmt_adp) + (elmt_rad * 1.0)));
        der(elmt_kg) = 0;
        der(elmt_kd) = 0;

end Parameters;
